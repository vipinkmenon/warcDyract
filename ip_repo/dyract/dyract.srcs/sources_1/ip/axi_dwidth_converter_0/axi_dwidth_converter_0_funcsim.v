// Copyright 1986-2014 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2014.4 (lin64) Build 1071353 Tue Nov 18 16:47:07 MST 2014
// Date        : Fri Oct 16 09:38:53 2015
// Host        : lappc14.epfl.ch running 64-bit Red Hat Enterprise Linux Server release 7.1 (Maipo)
// Command     : write_verilog -force -mode funcsim
//               /home/asiatici/workspace/xilinx/Middleware/TCRunner_3PR/kernels/ip/dyract/dyract.srcs/sources_1/ip/axi_dwidth_converter_0/axi_dwidth_converter_0_funcsim.v
// Design      : axi_dwidth_converter_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7vx690tffg1761-2
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* X_CORE_INFO = "axi_dwidth_converter_v2_1_top,Vivado 2014.4" *) (* CHECK_LICENSE_TYPE = "axi_dwidth_converter_0,axi_dwidth_converter_v2_1_top,{}" *) (* CORE_GENERATION_INFO = "axi_dwidth_converter_0,axi_dwidth_converter_v2_1_top,{x_ipProduct=Vivado 2014.4,x_ipVendor=xilinx.com,x_ipLibrary=ip,x_ipName=axi_dwidth_converter,x_ipVersion=2.1,x_ipCoreRevision=4,x_ipLanguage=VERILOG,x_ipSimLanguage=MIXED,C_FAMILY=virtex7,C_AXI_PROTOCOL=0,C_S_AXI_ID_WIDTH=1,C_SUPPORTS_ID=0,C_AXI_ADDR_WIDTH=32,C_S_AXI_DATA_WIDTH=256,C_M_AXI_DATA_WIDTH=512,C_AXI_SUPPORTS_WRITE=1,C_AXI_SUPPORTS_READ=1,C_FIFO_MODE=2,C_S_AXI_ACLK_RATIO=1,C_M_AXI_ACLK_RATIO=2,C_AXI_IS_ACLK_ASYNC=1,C_MAX_SPLIT_BEATS=16,C_PACKING_LEVEL=1,C_SYNCHRONIZER_STAGE=3}" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) 
(* NotValidForBitStream *)
module axi_dwidth_converter_0
   (s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awregion,
    s_axi_awqos,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arregion,
    s_axi_arqos,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_aclk,
    m_axi_aresetn,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awregion,
    m_axi_awqos,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_bready,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arregion,
    m_axi_arqos,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_rvalid,
    m_axi_rready);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 SI_CLK CLK" *) input s_axi_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 SI_RST RST" *) input s_axi_aresetn;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awregion;
  input [3:0]s_axi_awqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWVALID" *) input s_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWREADY" *) output s_axi_awready;
  input [255:0]s_axi_wdata;
  input [31:0]s_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WLAST" *) input s_axi_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WVALID" *) input s_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WREADY" *) output s_axi_wready;
  output [1:0]s_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BVALID" *) output s_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BREADY" *) input s_axi_bready;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arregion;
  input [3:0]s_axi_arqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARVALID" *) input s_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARREADY" *) output s_axi_arready;
  output [255:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RLAST" *) output s_axi_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RVALID" *) output s_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RREADY" *) input s_axi_rready;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 MI_CLK CLK" *) input m_axi_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 MI_RST RST" *) input m_axi_aresetn;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awregion;
  output [3:0]m_axi_awqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI AWVALID" *) output m_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI AWREADY" *) input m_axi_awready;
  output [511:0]m_axi_wdata;
  output [63:0]m_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI WLAST" *) output m_axi_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI WVALID" *) output m_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI WREADY" *) input m_axi_wready;
  input [1:0]m_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI BVALID" *) input m_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI BREADY" *) output m_axi_bready;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arregion;
  output [3:0]m_axi_arqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI ARVALID" *) output m_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI ARREADY" *) input m_axi_arready;
  input [511:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI RLAST" *) input m_axi_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI RVALID" *) input m_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI RREADY" *) output m_axi_rready;

  wire m_axi_aclk;
  wire [31:0]m_axi_araddr;
  wire [1:0]m_axi_arburst;
  wire [3:0]m_axi_arcache;
  wire m_axi_aresetn;
  wire [7:0]m_axi_arlen;
  wire [0:0]m_axi_arlock;
  wire [2:0]m_axi_arprot;
  wire [3:0]m_axi_arqos;
  wire m_axi_arready;
  wire [3:0]m_axi_arregion;
  wire [2:0]m_axi_arsize;
  wire m_axi_arvalid;
  wire [31:0]m_axi_awaddr;
  wire [1:0]m_axi_awburst;
  wire [3:0]m_axi_awcache;
  wire [7:0]m_axi_awlen;
  wire [0:0]m_axi_awlock;
  wire [2:0]m_axi_awprot;
  wire [3:0]m_axi_awqos;
  wire m_axi_awready;
  wire [3:0]m_axi_awregion;
  wire [2:0]m_axi_awsize;
  wire m_axi_awvalid;
  wire m_axi_bready;
  wire [1:0]m_axi_bresp;
  wire m_axi_bvalid;
  wire [511:0]m_axi_rdata;
  wire m_axi_rlast;
  wire m_axi_rready;
  wire [1:0]m_axi_rresp;
  wire m_axi_rvalid;
  wire [511:0]m_axi_wdata;
  wire m_axi_wlast;
  wire m_axi_wready;
  wire [63:0]m_axi_wstrb;
  wire m_axi_wvalid;
  wire s_axi_aclk;
  wire [31:0]s_axi_araddr;
  wire [1:0]s_axi_arburst;
  wire [3:0]s_axi_arcache;
  wire s_axi_aresetn;
  wire [7:0]s_axi_arlen;
  wire [0:0]s_axi_arlock;
  wire [2:0]s_axi_arprot;
  wire [3:0]s_axi_arqos;
  wire s_axi_arready;
  wire [3:0]s_axi_arregion;
  wire [2:0]s_axi_arsize;
  wire s_axi_arvalid;
  wire [31:0]s_axi_awaddr;
  wire [1:0]s_axi_awburst;
  wire [3:0]s_axi_awcache;
  wire [7:0]s_axi_awlen;
  wire [0:0]s_axi_awlock;
  wire [2:0]s_axi_awprot;
  wire [3:0]s_axi_awqos;
  wire s_axi_awready;
  wire [3:0]s_axi_awregion;
  wire [2:0]s_axi_awsize;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire [255:0]s_axi_rdata;
  wire s_axi_rlast;
  wire s_axi_rready;
  wire [1:0]s_axi_rresp;
  wire s_axi_rvalid;
  wire [255:0]s_axi_wdata;
  wire s_axi_wlast;
  wire s_axi_wready;
  wire [31:0]s_axi_wstrb;
  wire s_axi_wvalid;
  wire [0:0]NLW_inst_s_axi_bid_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_rid_UNCONNECTED;

(* C_AXI_ADDR_WIDTH = "32" *) 
   (* C_AXI_IS_ACLK_ASYNC = "1" *) 
   (* C_AXI_PROTOCOL = "0" *) 
   (* C_AXI_SUPPORTS_READ = "1" *) 
   (* C_AXI_SUPPORTS_WRITE = "1" *) 
   (* C_FAMILY = "virtex7" *) 
   (* C_FIFO_MODE = "2" *) 
   (* C_MAX_SPLIT_BEATS = "16" *) 
   (* C_M_AXI_ACLK_RATIO = "2" *) 
   (* C_M_AXI_BYTES_LOG = "6" *) 
   (* C_M_AXI_DATA_WIDTH = "512" *) 
   (* C_PACKING_LEVEL = "1" *) 
   (* C_RATIO = "0" *) 
   (* C_RATIO_LOG = "0" *) 
   (* C_SUPPORTS_ID = "0" *) 
   (* C_SYNCHRONIZER_STAGE = "3" *) 
   (* C_S_AXI_ACLK_RATIO = "1" *) 
   (* C_S_AXI_BYTES_LOG = "5" *) 
   (* C_S_AXI_DATA_WIDTH = "256" *) 
   (* C_S_AXI_ID_WIDTH = "1" *) 
   (* DowngradeIPIdentifiedWarnings = "yes" *) 
   (* P_AXI3 = "1" *) 
   (* P_AXI4 = "0" *) 
   (* P_AXILITE = "2" *) 
   (* P_CONVERSION = "2" *) 
   (* P_MAX_SPLIT_BEATS = "16" *) 
   (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWREADY" *) 
   axi_dwidth_converter_0_axi_dwidth_converter_v2_1_top inst
       (.m_axi_aclk(m_axi_aclk),
        .m_axi_araddr(m_axi_araddr),
        .m_axi_arburst(m_axi_arburst),
        .m_axi_arcache(m_axi_arcache),
        .m_axi_aresetn(m_axi_aresetn),
        .m_axi_arlen(m_axi_arlen),
        .m_axi_arlock(m_axi_arlock),
        .m_axi_arprot(m_axi_arprot),
        .m_axi_arqos(m_axi_arqos),
        .m_axi_arready(m_axi_arready),
        .m_axi_arregion(m_axi_arregion),
        .m_axi_arsize(m_axi_arsize),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_awaddr(m_axi_awaddr),
        .m_axi_awburst(m_axi_awburst),
        .m_axi_awcache(m_axi_awcache),
        .m_axi_awlen(m_axi_awlen),
        .m_axi_awlock(m_axi_awlock),
        .m_axi_awprot(m_axi_awprot),
        .m_axi_awqos(m_axi_awqos),
        .m_axi_awready(m_axi_awready),
        .m_axi_awregion(m_axi_awregion),
        .m_axi_awsize(m_axi_awsize),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bready(m_axi_bready),
        .m_axi_bresp(m_axi_bresp),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_rdata(m_axi_rdata),
        .m_axi_rlast(m_axi_rlast),
        .m_axi_rready(m_axi_rready),
        .m_axi_rresp(m_axi_rresp),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axi_wdata(m_axi_wdata),
        .m_axi_wlast(m_axi_wlast),
        .m_axi_wready(m_axi_wready),
        .m_axi_wstrb(m_axi_wstrb),
        .m_axi_wvalid(m_axi_wvalid),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_arburst(s_axi_arburst),
        .s_axi_arcache(s_axi_arcache),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arid(1'b0),
        .s_axi_arlen(s_axi_arlen),
        .s_axi_arlock(s_axi_arlock),
        .s_axi_arprot(s_axi_arprot),
        .s_axi_arqos(s_axi_arqos),
        .s_axi_arready(s_axi_arready),
        .s_axi_arregion(s_axi_arregion),
        .s_axi_arsize(s_axi_arsize),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awburst(s_axi_awburst),
        .s_axi_awcache(s_axi_awcache),
        .s_axi_awid(1'b0),
        .s_axi_awlen(s_axi_awlen),
        .s_axi_awlock(s_axi_awlock),
        .s_axi_awprot(s_axi_awprot),
        .s_axi_awqos(s_axi_awqos),
        .s_axi_awready(s_axi_awready),
        .s_axi_awregion(s_axi_awregion),
        .s_axi_awsize(s_axi_awsize),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bid(NLW_inst_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(s_axi_bresp),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rid(NLW_inst_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(s_axi_rlast),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(s_axi_rresp),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wlast(s_axi_wlast),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(s_axi_wstrb),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* ORIG_REF_NAME = "axi_dwidth_converter_v2_1_a_upsizer" *) 
module axi_dwidth_converter_0_axi_dwidth_converter_v2_1_a_upsizer
   (O1,
    O2,
    O3,
    O4,
    O5,
    O6,
    O7,
    cmd_last_word_ii,
    SR,
    cmd_push_block0,
    I3,
    sr_awvalid,
    I1,
    I2,
    m_axi_awready_i,
    I4,
    wr_cmd_ready,
    cmd_first_word_i,
    Q,
    I5,
    I6,
    CO,
    I7,
    I8,
    I9,
    I10);
  output O1;
  output O2;
  output O3;
  output O4;
  output O5;
  output O6;
  output O7;
  output [0:0]cmd_last_word_ii;
  input [0:0]SR;
  input cmd_push_block0;
  input I3;
  input sr_awvalid;
  input I1;
  input I2;
  input m_axi_awready_i;
  input I4;
  input wr_cmd_ready;
  input [5:0]cmd_first_word_i;
  input [6:0]Q;
  input I5;
  input I6;
  input [0:0]CO;
  input I7;
  input I8;
  input I9;
  input I10;

  wire [0:0]CO;
  wire I1;
  wire I10;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire I6;
  wire I7;
  wire I8;
  wire I9;
  wire [4:0]\NO_CMD_QUEUE.cmd_cnt_reg__0 ;
  wire O1;
  wire O2;
  wire O3;
  wire O4;
  wire O5;
  wire O6;
  wire O7;
  wire [6:0]Q;
  wire [0:0]SR;
  wire [5:0]cmd_first_word_i;
  wire [0:0]cmd_last_word_ii;
  wire cmd_push_block;
  wire cmd_push_block0;
  wire m_axi_awready_i;
  wire \n_0_NO_CMD_QUEUE.cmd_cnt[0]_i_1 ;
  wire \n_0_NO_CMD_QUEUE.cmd_cnt[1]_i_1 ;
  wire \n_0_NO_CMD_QUEUE.cmd_cnt[2]_i_1 ;
  wire \n_0_NO_CMD_QUEUE.cmd_cnt[3]_i_1 ;
  wire \n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_1 ;
  wire \n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_2__0 ;
  wire \n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_3 ;
  wire \n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_4 ;
  wire \n_0_m_payload_i[51]_i_12 ;
  wire \n_0_m_payload_i[51]_i_13 ;
  wire \n_0_m_payload_i[51]_i_18 ;
  wire \n_0_m_payload_i[51]_i_19 ;
  wire \n_0_m_payload_i[51]_i_20 ;
  wire \n_0_m_payload_i[51]_i_21 ;
  wire \n_0_m_payload_i_reg[51]_i_9 ;
  wire \n_1_m_payload_i_reg[51]_i_9 ;
  wire \n_2_m_payload_i_reg[51]_i_6 ;
  wire \n_2_m_payload_i_reg[51]_i_9 ;
  wire \n_3_m_payload_i_reg[51]_i_6 ;
  wire \n_3_m_payload_i_reg[51]_i_9 ;
  wire \n_4_m_payload_i_reg[51]_i_9 ;
  wire \n_5_m_payload_i_reg[51]_i_9 ;
  wire \n_6_m_payload_i_reg[51]_i_6 ;
  wire \n_6_m_payload_i_reg[51]_i_9 ;
  wire \n_7_m_payload_i_reg[51]_i_6 ;
  wire \n_7_m_payload_i_reg[51]_i_9 ;
  wire sr_awvalid;
  wire wr_cmd_ready;
  wire [3:2]\NLW_m_payload_i_reg[51]_i_6_CO_UNCONNECTED ;
  wire [3:3]\NLW_m_payload_i_reg[51]_i_6_O_UNCONNECTED ;

LUT1 #(
    .INIT(2'h1)) 
     \NO_CMD_QUEUE.cmd_cnt[0]_i_1 
       (.I0(\NO_CMD_QUEUE.cmd_cnt_reg__0 [0]),
        .O(\n_0_NO_CMD_QUEUE.cmd_cnt[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair262" *) 
   LUT5 #(
    .INIT(32'hFE0101FE)) 
     \NO_CMD_QUEUE.cmd_cnt[1]_i_1 
       (.I0(cmd_push_block),
        .I1(O2),
        .I2(wr_cmd_ready),
        .I3(\NO_CMD_QUEUE.cmd_cnt_reg__0 [1]),
        .I4(\NO_CMD_QUEUE.cmd_cnt_reg__0 [0]),
        .O(\n_0_NO_CMD_QUEUE.cmd_cnt[1]_i_1 ));
LUT6 #(
    .INIT(64'hA9A9A9A9A9A9A96A)) 
     \NO_CMD_QUEUE.cmd_cnt[2]_i_1 
       (.I0(\NO_CMD_QUEUE.cmd_cnt_reg__0 [2]),
        .I1(\NO_CMD_QUEUE.cmd_cnt_reg__0 [1]),
        .I2(\NO_CMD_QUEUE.cmd_cnt_reg__0 [0]),
        .I3(cmd_push_block),
        .I4(O2),
        .I5(wr_cmd_ready),
        .O(\n_0_NO_CMD_QUEUE.cmd_cnt[2]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair263" *) 
   LUT5 #(
    .INIT(32'hBF40FD02)) 
     \NO_CMD_QUEUE.cmd_cnt[3]_i_1 
       (.I0(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_4 ),
        .I1(\NO_CMD_QUEUE.cmd_cnt_reg__0 [0]),
        .I2(\NO_CMD_QUEUE.cmd_cnt_reg__0 [1]),
        .I3(\NO_CMD_QUEUE.cmd_cnt_reg__0 [3]),
        .I4(\NO_CMD_QUEUE.cmd_cnt_reg__0 [2]),
        .O(\n_0_NO_CMD_QUEUE.cmd_cnt[3]_i_1 ));
LUT5 #(
    .INIT(32'hA8A8A855)) 
     \NO_CMD_QUEUE.cmd_cnt[4]_i_1 
       (.I0(wr_cmd_ready),
        .I1(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_3 ),
        .I2(\NO_CMD_QUEUE.cmd_cnt_reg__0 [4]),
        .I3(cmd_push_block),
        .I4(O2),
        .O(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_1 ));
LUT6 #(
    .INIT(64'h9AAAAAAAAAAAAAA6)) 
     \NO_CMD_QUEUE.cmd_cnt[4]_i_2__0 
       (.I0(\NO_CMD_QUEUE.cmd_cnt_reg__0 [4]),
        .I1(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_4 ),
        .I2(\NO_CMD_QUEUE.cmd_cnt_reg__0 [2]),
        .I3(\NO_CMD_QUEUE.cmd_cnt_reg__0 [3]),
        .I4(\NO_CMD_QUEUE.cmd_cnt_reg__0 [0]),
        .I5(\NO_CMD_QUEUE.cmd_cnt_reg__0 [1]),
        .O(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_2__0 ));
(* SOFT_HLUTNM = "soft_lutpair263" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \NO_CMD_QUEUE.cmd_cnt[4]_i_3 
       (.I0(\NO_CMD_QUEUE.cmd_cnt_reg__0 [1]),
        .I1(\NO_CMD_QUEUE.cmd_cnt_reg__0 [0]),
        .I2(\NO_CMD_QUEUE.cmd_cnt_reg__0 [3]),
        .I3(\NO_CMD_QUEUE.cmd_cnt_reg__0 [2]),
        .O(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair262" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \NO_CMD_QUEUE.cmd_cnt[4]_i_4 
       (.I0(wr_cmd_ready),
        .I1(O2),
        .I2(cmd_push_block),
        .O(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_4 ));
FDRE \NO_CMD_QUEUE.cmd_cnt_reg[0] 
       (.C(I3),
        .CE(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_1 ),
        .D(\n_0_NO_CMD_QUEUE.cmd_cnt[0]_i_1 ),
        .Q(\NO_CMD_QUEUE.cmd_cnt_reg__0 [0]),
        .R(SR));
FDRE \NO_CMD_QUEUE.cmd_cnt_reg[1] 
       (.C(I3),
        .CE(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_1 ),
        .D(\n_0_NO_CMD_QUEUE.cmd_cnt[1]_i_1 ),
        .Q(\NO_CMD_QUEUE.cmd_cnt_reg__0 [1]),
        .R(SR));
FDRE \NO_CMD_QUEUE.cmd_cnt_reg[2] 
       (.C(I3),
        .CE(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_1 ),
        .D(\n_0_NO_CMD_QUEUE.cmd_cnt[2]_i_1 ),
        .Q(\NO_CMD_QUEUE.cmd_cnt_reg__0 [2]),
        .R(SR));
FDRE \NO_CMD_QUEUE.cmd_cnt_reg[3] 
       (.C(I3),
        .CE(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_1 ),
        .D(\n_0_NO_CMD_QUEUE.cmd_cnt[3]_i_1 ),
        .Q(\NO_CMD_QUEUE.cmd_cnt_reg__0 [3]),
        .R(SR));
FDRE \NO_CMD_QUEUE.cmd_cnt_reg[4] 
       (.C(I3),
        .CE(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_1 ),
        .D(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_2__0 ),
        .Q(\NO_CMD_QUEUE.cmd_cnt_reg__0 [4]),
        .R(SR));
LUT6 #(
    .INIT(64'h00800000FFFFFFFF)) 
     S_AXI_WREADY_i_i_3
       (.I0(\NO_CMD_QUEUE.cmd_cnt_reg__0 [3]),
        .I1(\NO_CMD_QUEUE.cmd_cnt_reg__0 [2]),
        .I2(\NO_CMD_QUEUE.cmd_cnt_reg__0 [4]),
        .I3(cmd_push_block),
        .I4(O3),
        .I5(sr_awvalid),
        .O(O2));
LUT6 #(
    .INIT(64'h00000000BFBBBBBB)) 
     S_AXI_WREADY_i_i_4
       (.I0(I1),
        .I1(sr_awvalid),
        .I2(O5),
        .I3(\NO_CMD_QUEUE.cmd_cnt_reg__0 [1]),
        .I4(\NO_CMD_QUEUE.cmd_cnt_reg__0 [0]),
        .I5(I2),
        .O(O4));
FDRE cmd_push_block_reg
       (.C(I3),
        .CE(1'b1),
        .D(cmd_push_block0),
        .Q(cmd_push_block),
        .R(SR));
LUT5 #(
    .INIT(32'hA525A5AA)) 
     \m_payload_i[51]_i_12 
       (.I0(Q[0]),
        .I1(CO),
        .I2(I7),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\n_0_m_payload_i[51]_i_12 ));
LUT4 #(
    .INIT(16'h56AA)) 
     \m_payload_i[51]_i_13 
       (.I0(cmd_first_word_i[4]),
        .I1(Q[4]),
        .I2(Q[5]),
        .I3(I6),
        .O(\n_0_m_payload_i[51]_i_13 ));
LUT4 #(
    .INIT(16'hA9AA)) 
     \m_payload_i[51]_i_18 
       (.I0(cmd_first_word_i[3]),
        .I1(I5),
        .I2(Q[3]),
        .I3(I10),
        .O(\n_0_m_payload_i[51]_i_18 ));
LUT4 #(
    .INIT(16'hA9AA)) 
     \m_payload_i[51]_i_19 
       (.I0(cmd_first_word_i[2]),
        .I1(I5),
        .I2(Q[3]),
        .I3(I9),
        .O(\n_0_m_payload_i[51]_i_19 ));
LUT4 #(
    .INIT(16'hA9AA)) 
     \m_payload_i[51]_i_20 
       (.I0(cmd_first_word_i[1]),
        .I1(I5),
        .I2(Q[3]),
        .I3(I8),
        .O(\n_0_m_payload_i[51]_i_20 ));
LUT6 #(
    .INIT(64'hAAAAAAA9AAAAAAAA)) 
     \m_payload_i[51]_i_21 
       (.I0(cmd_first_word_i[0]),
        .I1(Q[1]),
        .I2(I5),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[6]),
        .O(\n_0_m_payload_i[51]_i_21 ));
CARRY4 \m_payload_i_reg[51]_i_6 
       (.CI(\n_0_m_payload_i_reg[51]_i_9 ),
        .CO({\NLW_m_payload_i_reg[51]_i_6_CO_UNCONNECTED [3:2],\n_2_m_payload_i_reg[51]_i_6 ,\n_3_m_payload_i_reg[51]_i_6 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,cmd_first_word_i[5:4]}),
        .O({\NLW_m_payload_i_reg[51]_i_6_O_UNCONNECTED [3],cmd_last_word_ii,\n_6_m_payload_i_reg[51]_i_6 ,\n_7_m_payload_i_reg[51]_i_6 }),
        .S({1'b0,1'b0,\n_0_m_payload_i[51]_i_12 ,\n_0_m_payload_i[51]_i_13 }));
CARRY4 \m_payload_i_reg[51]_i_9 
       (.CI(1'b0),
        .CO({\n_0_m_payload_i_reg[51]_i_9 ,\n_1_m_payload_i_reg[51]_i_9 ,\n_2_m_payload_i_reg[51]_i_9 ,\n_3_m_payload_i_reg[51]_i_9 }),
        .CYINIT(1'b0),
        .DI(cmd_first_word_i[3:0]),
        .O({\n_4_m_payload_i_reg[51]_i_9 ,\n_5_m_payload_i_reg[51]_i_9 ,\n_6_m_payload_i_reg[51]_i_9 ,\n_7_m_payload_i_reg[51]_i_9 }),
        .S({\n_0_m_payload_i[51]_i_18 ,\n_0_m_payload_i[51]_i_19 ,\n_0_m_payload_i[51]_i_20 ,\n_0_m_payload_i[51]_i_21 }));
LUT6 #(
    .INIT(64'h0800000000000000)) 
     m_valid_i_i_2
       (.I0(\NO_CMD_QUEUE.cmd_cnt_reg__0 [1]),
        .I1(\NO_CMD_QUEUE.cmd_cnt_reg__0 [0]),
        .I2(cmd_push_block),
        .I3(\NO_CMD_QUEUE.cmd_cnt_reg__0 [4]),
        .I4(\NO_CMD_QUEUE.cmd_cnt_reg__0 [2]),
        .I5(\NO_CMD_QUEUE.cmd_cnt_reg__0 [3]),
        .O(O7));
(* SOFT_HLUTNM = "soft_lutpair261" *) 
   LUT5 #(
    .INIT(32'hBF000000)) 
     s_ready_i_i_2
       (.I0(O5),
        .I1(\NO_CMD_QUEUE.cmd_cnt_reg__0 [0]),
        .I2(\NO_CMD_QUEUE.cmd_cnt_reg__0 [1]),
        .I3(m_axi_awready_i),
        .I4(I4),
        .O(O6));
LUT4 #(
    .INIT(16'hFF7F)) 
     \si_burst[1]_i_2 
       (.I0(\NO_CMD_QUEUE.cmd_cnt_reg__0 [3]),
        .I1(\NO_CMD_QUEUE.cmd_cnt_reg__0 [2]),
        .I2(\NO_CMD_QUEUE.cmd_cnt_reg__0 [4]),
        .I3(cmd_push_block),
        .O(O5));
(* SOFT_HLUTNM = "soft_lutpair261" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \si_burst[1]_i_3 
       (.I0(\NO_CMD_QUEUE.cmd_cnt_reg__0 [0]),
        .I1(\NO_CMD_QUEUE.cmd_cnt_reg__0 [1]),
        .O(O3));
LUT6 #(
    .INIT(64'hBFFFFFFFFFFFFFFF)) 
     \si_state[1]_i_3 
       (.I0(cmd_push_block),
        .I1(\NO_CMD_QUEUE.cmd_cnt_reg__0 [4]),
        .I2(\NO_CMD_QUEUE.cmd_cnt_reg__0 [2]),
        .I3(\NO_CMD_QUEUE.cmd_cnt_reg__0 [3]),
        .I4(\NO_CMD_QUEUE.cmd_cnt_reg__0 [1]),
        .I5(\NO_CMD_QUEUE.cmd_cnt_reg__0 [0]),
        .O(O1));
endmodule

(* ORIG_REF_NAME = "axi_dwidth_converter_v2_1_a_upsizer" *) 
module axi_dwidth_converter_0_axi_dwidth_converter_v2_1_a_upsizer__parameterized0
   (O1,
    O2,
    cmd_last_word_ii,
    SR,
    cmd_push_block0,
    I3,
    sr_arvalid,
    m_axi_arready_i,
    I2,
    I11,
    cmd_fix_i,
    Q,
    mi_word_intra_len,
    I1,
    CO,
    I4);
  output O1;
  output O2;
  output [0:0]cmd_last_word_ii;
  input [0:0]SR;
  input cmd_push_block0;
  input I3;
  input sr_arvalid;
  input m_axi_arready_i;
  input I2;
  input [5:0]I11;
  input cmd_fix_i;
  input [7:0]Q;
  input [4:0]mi_word_intra_len;
  input I1;
  input [0:0]CO;
  input I4;

  wire [0:0]CO;
  wire I1;
  wire [5:0]I11;
  wire I2;
  wire I3;
  wire I4;
  wire [4:0]\NO_CMD_QUEUE.cmd_cnt_reg__0 ;
  wire O1;
  wire O2;
  wire [7:0]Q;
  wire [0:0]SR;
  wire cmd_fix_i;
  wire [0:0]cmd_last_word_ii;
  wire cmd_push_block;
  wire cmd_push_block0;
  wire m_axi_arready_i;
  wire [4:0]mi_word_intra_len;
  wire \n_0_NO_CMD_QUEUE.cmd_cnt[0]_i_1__0 ;
  wire \n_0_NO_CMD_QUEUE.cmd_cnt[1]_i_1__0 ;
  wire \n_0_NO_CMD_QUEUE.cmd_cnt[2]_i_1__0 ;
  wire \n_0_NO_CMD_QUEUE.cmd_cnt[3]_i_1__0 ;
  wire \n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_1__0 ;
  wire \n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_2 ;
  wire \n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_3__0 ;
  wire \n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_4__0 ;
  wire n_0_dw_fifogen_ar_i_63;
  wire n_0_dw_fifogen_ar_i_66;
  wire n_0_dw_fifogen_ar_i_67;
  wire n_0_dw_fifogen_ar_i_89;
  wire n_0_dw_fifogen_ar_i_90;
  wire n_0_dw_fifogen_ar_i_91;
  wire n_0_dw_fifogen_ar_i_92;
  wire n_1_dw_fifogen_ar_i_63;
  wire n_2_dw_fifogen_ar_i_35;
  wire n_2_dw_fifogen_ar_i_63;
  wire n_3_dw_fifogen_ar_i_35;
  wire n_3_dw_fifogen_ar_i_63;
  wire n_4_dw_fifogen_ar_i_63;
  wire n_5_dw_fifogen_ar_i_63;
  wire n_6_dw_fifogen_ar_i_35;
  wire n_6_dw_fifogen_ar_i_63;
  wire n_7_dw_fifogen_ar_i_35;
  wire n_7_dw_fifogen_ar_i_63;
  wire sr_arvalid;
  wire [3:2]NLW_dw_fifogen_ar_i_35_CO_UNCONNECTED;
  wire [3:3]NLW_dw_fifogen_ar_i_35_O_UNCONNECTED;

(* SOFT_HLUTNM = "soft_lutpair96" *) 
   LUT1 #(
    .INIT(2'h1)) 
     \NO_CMD_QUEUE.cmd_cnt[0]_i_1__0 
       (.I0(\NO_CMD_QUEUE.cmd_cnt_reg__0 [0]),
        .O(\n_0_NO_CMD_QUEUE.cmd_cnt[0]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair95" *) 
   LUT2 #(
    .INIT(4'h9)) 
     \NO_CMD_QUEUE.cmd_cnt[1]_i_1__0 
       (.I0(\NO_CMD_QUEUE.cmd_cnt_reg__0 [0]),
        .I1(\NO_CMD_QUEUE.cmd_cnt_reg__0 [1]),
        .O(\n_0_NO_CMD_QUEUE.cmd_cnt[1]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair95" *) 
   LUT3 #(
    .INIT(8'hA9)) 
     \NO_CMD_QUEUE.cmd_cnt[2]_i_1__0 
       (.I0(\NO_CMD_QUEUE.cmd_cnt_reg__0 [2]),
        .I1(\NO_CMD_QUEUE.cmd_cnt_reg__0 [1]),
        .I2(\NO_CMD_QUEUE.cmd_cnt_reg__0 [0]),
        .O(\n_0_NO_CMD_QUEUE.cmd_cnt[2]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair93" *) 
   LUT4 #(
    .INIT(16'hF0E1)) 
     \NO_CMD_QUEUE.cmd_cnt[3]_i_1__0 
       (.I0(\NO_CMD_QUEUE.cmd_cnt_reg__0 [1]),
        .I1(\NO_CMD_QUEUE.cmd_cnt_reg__0 [0]),
        .I2(\NO_CMD_QUEUE.cmd_cnt_reg__0 [3]),
        .I3(\NO_CMD_QUEUE.cmd_cnt_reg__0 [2]),
        .O(\n_0_NO_CMD_QUEUE.cmd_cnt[3]_i_1__0 ));
LUT6 #(
    .INIT(64'hEEEEEEEEEEEEE0EE)) 
     \NO_CMD_QUEUE.cmd_cnt[4]_i_1__0 
       (.I0(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_3__0 ),
        .I1(cmd_push_block),
        .I2(\NO_CMD_QUEUE.cmd_cnt_reg__0 [4]),
        .I3(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_4__0 ),
        .I4(\NO_CMD_QUEUE.cmd_cnt_reg__0 [2]),
        .I5(\NO_CMD_QUEUE.cmd_cnt_reg__0 [3]),
        .O(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair93" *) 
   LUT5 #(
    .INIT(32'hAAAAAAA9)) 
     \NO_CMD_QUEUE.cmd_cnt[4]_i_2 
       (.I0(\NO_CMD_QUEUE.cmd_cnt_reg__0 [4]),
        .I1(\NO_CMD_QUEUE.cmd_cnt_reg__0 [3]),
        .I2(\NO_CMD_QUEUE.cmd_cnt_reg__0 [2]),
        .I3(\NO_CMD_QUEUE.cmd_cnt_reg__0 [1]),
        .I4(\NO_CMD_QUEUE.cmd_cnt_reg__0 [0]),
        .O(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair94" *) 
   LUT2 #(
    .INIT(4'hB)) 
     \NO_CMD_QUEUE.cmd_cnt[4]_i_3__0 
       (.I0(O1),
        .I1(sr_arvalid),
        .O(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_3__0 ));
(* SOFT_HLUTNM = "soft_lutpair96" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \NO_CMD_QUEUE.cmd_cnt[4]_i_4__0 
       (.I0(\NO_CMD_QUEUE.cmd_cnt_reg__0 [0]),
        .I1(\NO_CMD_QUEUE.cmd_cnt_reg__0 [1]),
        .O(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_4__0 ));
FDRE \NO_CMD_QUEUE.cmd_cnt_reg[0] 
       (.C(I3),
        .CE(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_1__0 ),
        .D(\n_0_NO_CMD_QUEUE.cmd_cnt[0]_i_1__0 ),
        .Q(\NO_CMD_QUEUE.cmd_cnt_reg__0 [0]),
        .R(SR));
FDRE \NO_CMD_QUEUE.cmd_cnt_reg[1] 
       (.C(I3),
        .CE(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_1__0 ),
        .D(\n_0_NO_CMD_QUEUE.cmd_cnt[1]_i_1__0 ),
        .Q(\NO_CMD_QUEUE.cmd_cnt_reg__0 [1]),
        .R(SR));
FDRE \NO_CMD_QUEUE.cmd_cnt_reg[2] 
       (.C(I3),
        .CE(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_1__0 ),
        .D(\n_0_NO_CMD_QUEUE.cmd_cnt[2]_i_1__0 ),
        .Q(\NO_CMD_QUEUE.cmd_cnt_reg__0 [2]),
        .R(SR));
FDRE \NO_CMD_QUEUE.cmd_cnt_reg[3] 
       (.C(I3),
        .CE(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_1__0 ),
        .D(\n_0_NO_CMD_QUEUE.cmd_cnt[3]_i_1__0 ),
        .Q(\NO_CMD_QUEUE.cmd_cnt_reg__0 [3]),
        .R(SR));
FDRE \NO_CMD_QUEUE.cmd_cnt_reg[4] 
       (.C(I3),
        .CE(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_1__0 ),
        .D(\n_0_NO_CMD_QUEUE.cmd_cnt[4]_i_2 ),
        .Q(\NO_CMD_QUEUE.cmd_cnt_reg__0 [4]),
        .R(SR));
FDRE cmd_push_block_reg
       (.C(I3),
        .CE(1'b1),
        .D(cmd_push_block0),
        .Q(cmd_push_block),
        .R(SR));
CARRY4 dw_fifogen_ar_i_35
       (.CI(n_0_dw_fifogen_ar_i_63),
        .CO({NLW_dw_fifogen_ar_i_35_CO_UNCONNECTED[3:2],n_2_dw_fifogen_ar_i_35,n_3_dw_fifogen_ar_i_35}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,I11[5:4]}),
        .O({NLW_dw_fifogen_ar_i_35_O_UNCONNECTED[3],cmd_last_word_ii,n_6_dw_fifogen_ar_i_35,n_7_dw_fifogen_ar_i_35}),
        .S({1'b0,1'b0,n_0_dw_fifogen_ar_i_66,n_0_dw_fifogen_ar_i_67}));
LUT6 #(
    .INIT(64'h0800000000000000)) 
     dw_fifogen_ar_i_47
       (.I0(\NO_CMD_QUEUE.cmd_cnt_reg__0 [1]),
        .I1(\NO_CMD_QUEUE.cmd_cnt_reg__0 [0]),
        .I2(cmd_push_block),
        .I3(\NO_CMD_QUEUE.cmd_cnt_reg__0 [4]),
        .I4(\NO_CMD_QUEUE.cmd_cnt_reg__0 [2]),
        .I5(\NO_CMD_QUEUE.cmd_cnt_reg__0 [3]),
        .O(O1));
CARRY4 dw_fifogen_ar_i_63
       (.CI(1'b0),
        .CO({n_0_dw_fifogen_ar_i_63,n_1_dw_fifogen_ar_i_63,n_2_dw_fifogen_ar_i_63,n_3_dw_fifogen_ar_i_63}),
        .CYINIT(1'b0),
        .DI(I11[3:0]),
        .O({n_4_dw_fifogen_ar_i_63,n_5_dw_fifogen_ar_i_63,n_6_dw_fifogen_ar_i_63,n_7_dw_fifogen_ar_i_63}),
        .S({n_0_dw_fifogen_ar_i_89,n_0_dw_fifogen_ar_i_90,n_0_dw_fifogen_ar_i_91,n_0_dw_fifogen_ar_i_92}));
LUT5 #(
    .INIT(32'h333CCC4C)) 
     dw_fifogen_ar_i_66
       (.I0(CO),
        .I1(Q[1]),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(mi_word_intra_len[4]),
        .O(n_0_dw_fifogen_ar_i_66));
LUT5 #(
    .INIT(32'hAAA55515)) 
     dw_fifogen_ar_i_67
       (.I0(I4),
        .I1(CO),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(mi_word_intra_len[3]),
        .O(n_0_dw_fifogen_ar_i_67));
LUT6 #(
    .INIT(64'hBBBBBB4444440444)) 
     dw_fifogen_ar_i_89
       (.I0(Q[4]),
        .I1(Q[0]),
        .I2(CO),
        .I3(Q[6]),
        .I4(Q[5]),
        .I5(mi_word_intra_len[2]),
        .O(n_0_dw_fifogen_ar_i_89));
LUT5 #(
    .INIT(32'hAAA55515)) 
     dw_fifogen_ar_i_90
       (.I0(I1),
        .I1(CO),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(mi_word_intra_len[1]),
        .O(n_0_dw_fifogen_ar_i_90));
LUT4 #(
    .INIT(16'h56AA)) 
     dw_fifogen_ar_i_91
       (.I0(I11[1]),
        .I1(Q[6]),
        .I2(Q[5]),
        .I3(mi_word_intra_len[0]),
        .O(n_0_dw_fifogen_ar_i_91));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA9AA)) 
     dw_fifogen_ar_i_92
       (.I0(I11[0]),
        .I1(cmd_fix_i),
        .I2(Q[2]),
        .I3(Q[7]),
        .I4(Q[3]),
        .I5(Q[4]),
        .O(n_0_dw_fifogen_ar_i_92));
(* SOFT_HLUTNM = "soft_lutpair94" *) 
   LUT3 #(
    .INIT(8'h40)) 
     s_ready_i_i_2__0
       (.I0(O1),
        .I1(m_axi_arready_i),
        .I2(I2),
        .O(O2));
endmodule

(* ORIG_REF_NAME = "axi_dwidth_converter_v2_1_axi_upsizer" *) 
module axi_dwidth_converter_0_axi_dwidth_converter_v2_1_axi_upsizer
   (M_AXI_AWSIZE,
    M_AXI_AWADDR,
    M_AXI_AWLEN,
    O1,
    O2,
    O3,
    s_axi_awready,
    s_axi_arready,
    s_axi_rvalid,
    O4,
    m_axi_wdata,
    M_AXI_AWBURST,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_wstrb,
    m_axi_awvalid,
    s_axi_bresp,
    s_axi_bvalid,
    m_axi_bready,
    m_axi_araddr,
    din,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    s_axi_rdata,
    m_axi_arvalid,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rid,
    I1,
    m_axi_wready,
    m_axi_awready,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_awvalid,
    I2,
    s_axi_arvalid,
    s_axi_rready,
    m_axi_rvalid,
    I3,
    dina,
    I4,
    s_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    D,
    I5,
    m_axi_arready,
    m_axi_rresp,
    m_axi_rlast);
  output [2:0]M_AXI_AWSIZE;
  output [31:0]M_AXI_AWADDR;
  output [7:0]M_AXI_AWLEN;
  output O1;
  output O2;
  output O3;
  output s_axi_awready;
  output s_axi_arready;
  output s_axi_rvalid;
  output O4;
  output [511:0]m_axi_wdata;
  output [1:0]M_AXI_AWBURST;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [63:0]m_axi_wstrb;
  output m_axi_awvalid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  output m_axi_bready;
  output [31:0]m_axi_araddr;
  output [12:0]din;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [255:0]s_axi_rdata;
  output m_axi_arvalid;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_rid;
  input I1;
  input m_axi_wready;
  input m_axi_awready;
  input s_axi_wlast;
  input s_axi_wvalid;
  input s_axi_awvalid;
  input I2;
  input s_axi_arvalid;
  input s_axi_rready;
  input m_axi_rvalid;
  input I3;
  input [287:0]dina;
  input I4;
  input s_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [511:0]m_axi_rdata;
  input [60:0]D;
  input [60:0]I5;
  input m_axi_arready;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;

  wire [60:0]D;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire [60:0]I5;
  wire [31:0]M_AXI_AWADDR;
  wire [1:0]M_AXI_AWBURST;
  wire [7:0]M_AXI_AWLEN;
  wire [2:0]M_AXI_AWSIZE;
  wire O1;
  wire O2;
  wire O3;
  wire O4;
  wire [5:0]cmd_first_word_i;
  wire [5:0]cmd_first_word_i_3;
  wire cmd_fix_i;
  wire cmd_push_block0;
  wire cmd_push_block0_0;
  wire [12:0]din;
  wire [287:0]dina;
  wire [5:0]f_mi_be_last_index_return;
  wire f_si_wrap_word_return;
  wire load_mi_ptr;
  wire load_si_ptr;
  wire [31:0]m_axi_araddr;
  wire [31:0]m_axi_araddr_i;
  wire [1:0]m_axi_arburst_i;
  wire [3:0]m_axi_arcache;
  wire [3:0]m_axi_arcache_i;
  wire [7:0]m_axi_arlen_i;
  wire [0:0]m_axi_arlock;
  wire [0:0]m_axi_arlock_i;
  wire [2:0]m_axi_arprot;
  wire [2:0]m_axi_arprot_i;
  wire [3:0]m_axi_arqos;
  wire [3:0]m_axi_arqos_i;
  wire m_axi_arready;
  wire m_axi_arready_i;
  wire [3:0]m_axi_arregion;
  wire [3:0]m_axi_arregion_i;
  wire [2:1]m_axi_arsize_i;
  wire m_axi_arvalid;
  wire [31:0]m_axi_awaddr_i;
  wire [1:0]m_axi_awburst_i;
  wire [3:0]m_axi_awcache;
  wire [3:0]m_axi_awcache_i;
  wire [7:0]m_axi_awlen_i;
  wire [0:0]m_axi_awlock;
  wire [0:0]m_axi_awlock_i;
  wire [2:0]m_axi_awprot;
  wire [2:0]m_axi_awprot_i;
  wire [3:0]m_axi_awqos;
  wire [3:0]m_axi_awqos_i;
  wire m_axi_awready;
  wire m_axi_awready_i;
  wire [3:0]m_axi_awregion;
  wire [3:0]m_axi_awregion_i;
  wire [0:0]m_axi_awsize_i;
  wire m_axi_awvalid;
  wire m_axi_bready;
  wire [1:0]m_axi_bresp;
  wire m_axi_bvalid;
  wire [511:0]m_axi_rdata;
  wire m_axi_rlast;
  wire [1:0]m_axi_rresp;
  wire m_axi_rvalid;
  wire [511:0]m_axi_wdata;
  wire m_axi_wready;
  wire [63:0]m_axi_wstrb;
  wire m_fifo_rst;
  wire mi_buf_en;
  wire mi_first;
  wire mi_first_d1;
  wire mi_last;
  wire [5:1]mi_word_intra_len;
  wire n_0_M_AXI_AWVALID_i_i_2;
  wire n_0_M_AXI_WVALID_i_i_1;
  wire n_0_S_AXI_WREADY_i_i_2;
  wire \n_0_USE_READ.read_addr_inst ;
  wire \n_0_USE_WRITE.write_addr_inst ;
  wire n_0_mi_first_d1_i_1;
  wire n_0_mi_first_i_1;
  wire n_0_mi_last_d1_i_1;
  wire n_0_mi_last_i_1;
  wire \n_0_si_word[0]_i_1 ;
  wire n_100_si_register_slice_inst;
  wire n_171_si_register_slice_inst;
  wire n_182_si_register_slice_inst;
  wire n_183_si_register_slice_inst;
  wire n_184_si_register_slice_inst;
  wire n_185_si_register_slice_inst;
  wire n_186_si_register_slice_inst;
  wire n_187_si_register_slice_inst;
  wire n_188_si_register_slice_inst;
  wire n_189_si_register_slice_inst;
  wire n_190_si_register_slice_inst;
  wire n_191_si_register_slice_inst;
  wire n_192_si_register_slice_inst;
  wire n_193_si_register_slice_inst;
  wire n_194_si_register_slice_inst;
  wire n_195_si_register_slice_inst;
  wire n_196_si_register_slice_inst;
  wire n_197_si_register_slice_inst;
  wire n_198_si_register_slice_inst;
  wire n_199_si_register_slice_inst;
  wire \n_1_USE_READ.read_addr_inst ;
  wire \n_1_USE_WRITE.write_addr_inst ;
  wire n_200_si_register_slice_inst;
  wire n_201_si_register_slice_inst;
  wire n_202_si_register_slice_inst;
  wire n_203_si_register_slice_inst;
  wire n_204_si_register_slice_inst;
  wire n_205_si_register_slice_inst;
  wire n_206_si_register_slice_inst;
  wire n_207_si_register_slice_inst;
  wire n_208_si_register_slice_inst;
  wire n_209_si_register_slice_inst;
  wire n_210_si_register_slice_inst;
  wire n_211_si_register_slice_inst;
  wire n_212_si_register_slice_inst;
  wire n_213_si_register_slice_inst;
  wire n_214_si_register_slice_inst;
  wire n_215_si_register_slice_inst;
  wire n_216_si_register_slice_inst;
  wire n_217_si_register_slice_inst;
  wire n_218_si_register_slice_inst;
  wire n_219_si_register_slice_inst;
  wire n_220_si_register_slice_inst;
  wire n_221_si_register_slice_inst;
  wire n_222_si_register_slice_inst;
  wire n_223_si_register_slice_inst;
  wire n_224_si_register_slice_inst;
  wire n_225_si_register_slice_inst;
  wire n_226_si_register_slice_inst;
  wire n_227_si_register_slice_inst;
  wire n_229_si_register_slice_inst;
  wire n_230_si_register_slice_inst;
  wire n_231_si_register_slice_inst;
  wire n_232_si_register_slice_inst;
  wire n_233_si_register_slice_inst;
  wire n_234_si_register_slice_inst;
  wire n_235_si_register_slice_inst;
  wire n_236_si_register_slice_inst;
  wire n_237_si_register_slice_inst;
  wire n_238_si_register_slice_inst;
  wire n_239_si_register_slice_inst;
  wire n_240_si_register_slice_inst;
  wire n_241_si_register_slice_inst;
  wire n_242_si_register_slice_inst;
  wire n_243_si_register_slice_inst;
  wire n_244_si_register_slice_inst;
  wire n_245_si_register_slice_inst;
  wire n_246_si_register_slice_inst;
  wire n_247_si_register_slice_inst;
  wire n_248_si_register_slice_inst;
  wire n_249_si_register_slice_inst;
  wire n_250_si_register_slice_inst;
  wire n_251_si_register_slice_inst;
  wire n_252_si_register_slice_inst;
  wire n_253_si_register_slice_inst;
  wire n_254_si_register_slice_inst;
  wire \n_2_USE_WRITE.write_addr_inst ;
  wire \n_3_USE_WRITE.write_addr_inst ;
  wire \n_4_USE_WRITE.write_addr_inst ;
  wire \n_582_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ;
  wire \n_589_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ;
  wire \n_590_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ;
  wire \n_591_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ;
  wire \n_592_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ;
  wire \n_595_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ;
  wire \n_596_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ;
  wire \n_597_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ;
  wire \n_598_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ;
  wire \n_599_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ;
  wire \n_5_USE_WRITE.write_addr_inst ;
  wire \n_600_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ;
  wire \n_601_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ;
  wire \n_6_USE_WRITE.write_addr_inst ;
  wire n_81_si_register_slice_inst;
  wire n_82_si_register_slice_inst;
  wire n_83_si_register_slice_inst;
  wire n_84_si_register_slice_inst;
  wire n_85_si_register_slice_inst;
  wire n_86_si_register_slice_inst;
  wire n_94_si_register_slice_inst;
  wire n_95_si_register_slice_inst;
  wire n_96_si_register_slice_inst;
  wire n_97_si_register_slice_inst;
  wire p_0_in6_in;
  wire p_0_in6_in_1;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire [255:0]s_axi_rdata;
  wire [0:0]s_axi_rid;
  wire s_axi_rlast;
  wire s_axi_rready;
  wire [1:0]s_axi_rresp;
  wire s_axi_rvalid;
  wire s_axi_wlast;
  wire s_axi_wvalid;
  wire s_fifo_rst;
  wire [1:0]si_state;
  wire [14:14]si_wrap_be_next;
  wire sm_aresetn;
  wire [5:0]sr_araddr;
  wire [1:0]sr_arburst;
  wire [1:1]sr_arcache;
  wire [7:0]sr_arlen;
  wire [2:0]sr_arsize;
  wire sr_arvalid;
  wire [8:5]sr_awaddr;
  wire [1:0]sr_awburst;
  wire [1:1]sr_awcache;
  wire [3:0]sr_awlen;
  wire [2:0]sr_awsize;
  wire sr_awvalid;
  wire sub_sized_wrap0;
  wire sub_sized_wrap0_2;
  wire word;
  wire wr_cmd_ready;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_almost_empty_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_almost_full_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_ar_dbiterr_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_ar_overflow_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_ar_prog_empty_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_ar_prog_full_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_ar_sbiterr_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_ar_underflow_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_aw_dbiterr_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_aw_overflow_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_aw_prog_empty_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_aw_prog_full_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_aw_sbiterr_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_aw_underflow_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_b_dbiterr_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_b_overflow_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_b_prog_empty_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_b_prog_full_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_b_sbiterr_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_b_underflow_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_r_dbiterr_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_r_overflow_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_r_prog_empty_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_r_prog_full_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_r_sbiterr_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_r_underflow_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_w_dbiterr_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_w_overflow_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_w_prog_empty_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_w_prog_full_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_w_sbiterr_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_w_underflow_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axis_dbiterr_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axis_overflow_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axis_prog_empty_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axis_prog_full_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axis_sbiterr_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axis_underflow_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_dbiterr_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_empty_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_full_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_arvalid_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awvalid_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_rready_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_wlast_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_wvalid_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axis_tlast_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axis_tvalid_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_overflow_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_prog_empty_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_prog_full_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_rd_rst_busy_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axi_arready_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axi_awready_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axi_rlast_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axi_rvalid_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axi_wready_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axis_tready_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_sbiterr_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_underflow_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_valid_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_wr_ack_UNCONNECTED ;
  wire \NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_wr_rst_busy_UNCONNECTED ;
  wire [4:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_ar_data_count_UNCONNECTED ;
  wire [4:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_ar_rd_data_count_UNCONNECTED ;
  wire [4:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_ar_wr_data_count_UNCONNECTED ;
  wire [4:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_aw_data_count_UNCONNECTED ;
  wire [4:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_aw_rd_data_count_UNCONNECTED ;
  wire [4:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_aw_wr_data_count_UNCONNECTED ;
  wire [5:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_b_data_count_UNCONNECTED ;
  wire [5:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_b_rd_data_count_UNCONNECTED ;
  wire [5:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_b_wr_data_count_UNCONNECTED ;
  wire [10:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_r_data_count_UNCONNECTED ;
  wire [10:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_r_rd_data_count_UNCONNECTED ;
  wire [10:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_r_wr_data_count_UNCONNECTED ;
  wire [10:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_w_data_count_UNCONNECTED ;
  wire [10:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_w_rd_data_count_UNCONNECTED ;
  wire [10:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_w_wr_data_count_UNCONNECTED ;
  wire [10:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axis_data_count_UNCONNECTED ;
  wire [10:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axis_rd_data_count_UNCONNECTED ;
  wire [10:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axis_wr_data_count_UNCONNECTED ;
  wire [9:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_data_count_UNCONNECTED ;
  wire [17:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_dout_UNCONNECTED ;
  wire [31:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_araddr_UNCONNECTED ;
  wire [1:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_arburst_UNCONNECTED ;
  wire [3:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_arcache_UNCONNECTED ;
  wire [0:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_arid_UNCONNECTED ;
  wire [7:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_arlen_UNCONNECTED ;
  wire [1:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_arlock_UNCONNECTED ;
  wire [2:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_arprot_UNCONNECTED ;
  wire [3:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_arqos_UNCONNECTED ;
  wire [3:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_arregion_UNCONNECTED ;
  wire [2:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_arsize_UNCONNECTED ;
  wire [0:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_aruser_UNCONNECTED ;
  wire [31:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awaddr_UNCONNECTED ;
  wire [1:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awburst_UNCONNECTED ;
  wire [3:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awcache_UNCONNECTED ;
  wire [0:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awid_UNCONNECTED ;
  wire [7:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awlen_UNCONNECTED ;
  wire [1:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awlock_UNCONNECTED ;
  wire [2:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awprot_UNCONNECTED ;
  wire [3:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awqos_UNCONNECTED ;
  wire [3:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awregion_UNCONNECTED ;
  wire [2:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awsize_UNCONNECTED ;
  wire [0:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awuser_UNCONNECTED ;
  wire [31:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_wdata_UNCONNECTED ;
  wire [0:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_wid_UNCONNECTED ;
  wire [3:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_wstrb_UNCONNECTED ;
  wire [0:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_wuser_UNCONNECTED ;
  wire [63:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axis_tdata_UNCONNECTED ;
  wire [3:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axis_tdest_UNCONNECTED ;
  wire [7:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axis_tid_UNCONNECTED ;
  wire [3:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axis_tkeep_UNCONNECTED ;
  wire [3:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axis_tstrb_UNCONNECTED ;
  wire [3:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axis_tuser_UNCONNECTED ;
  wire [9:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_rd_data_count_UNCONNECTED ;
  wire [0:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axi_bid_UNCONNECTED ;
  wire [0:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axi_buser_UNCONNECTED ;
  wire [31:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axi_rdata_UNCONNECTED ;
  wire [0:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axi_rid_UNCONNECTED ;
  wire [1:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axi_rresp_UNCONNECTED ;
  wire [0:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axi_ruser_UNCONNECTED ;
  wire [9:0]\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_wr_data_count_UNCONNECTED ;

LUT5 #(
    .INIT(32'h8FEE00AA)) 
     M_AXI_AWVALID_i_i_2
       (.I0(\n_591_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .I1(\n_589_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .I2(m_axi_awready),
        .I3(\n_590_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .I4(m_axi_awvalid),
        .O(n_0_M_AXI_AWVALID_i_i_2));
LUT6 #(
    .INIT(64'h8CCC8CCCCCCC2AAA)) 
     M_AXI_WVALID_i_i_1
       (.I0(\n_590_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .I1(O2),
        .I2(m_axi_wready),
        .I3(O1),
        .I4(\n_591_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .I5(\n_589_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .O(n_0_M_AXI_WVALID_i_i_1));
LUT6 #(
    .INIT(64'h454545FF45454500)) 
     S_AXI_WREADY_i_i_2
       (.I0(\n_1_USE_WRITE.write_addr_inst ),
        .I1(si_state[1]),
        .I2(si_state[0]),
        .I3(\n_3_USE_WRITE.write_addr_inst ),
        .I4(\n_597_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .I5(O3),
        .O(n_0_S_AXI_WREADY_i_i_2));
axi_dwidth_converter_0_axi_dwidth_converter_v2_1_r_upsizer_pktfifo \USE_READ.gen_pktfifo_r_upsizer.pktfifo_read_data_inst 
       (.I1({m_axi_arsize_i,n_182_si_register_slice_inst}),
        .I2(\n_0_USE_READ.read_addr_inst ),
        .I3(I3),
        .I4(I4),
        .I5(I2),
        .I6(I1),
        .O1(s_axi_rvalid),
        .O2(O4),
        .Q({m_axi_arregion_i,m_axi_arqos_i,m_axi_arlock_i,sr_arlen,m_axi_arcache_i[3:2],sr_arcache,m_axi_arcache_i[0],sr_arburst,sr_arsize,m_axi_arprot_i,m_axi_araddr_i[31:6],sr_araddr}),
        .SR(s_fifo_rst),
        .cmd_push_block0(cmd_push_block0),
        .din(din),
        .m_axi_araddr(m_axi_araddr),
        .m_axi_arcache(m_axi_arcache),
        .m_axi_arlock(m_axi_arlock),
        .m_axi_arprot(m_axi_arprot),
        .m_axi_arqos(m_axi_arqos),
        .m_axi_arready(m_axi_arready),
        .m_axi_arready_i(m_axi_arready_i),
        .m_axi_arregion(m_axi_arregion),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_rdata(m_axi_rdata),
        .m_axi_rlast(m_axi_rlast),
        .m_axi_rresp(m_axi_rresp),
        .m_axi_rvalid(m_axi_rvalid),
        .m_fifo_rst(m_fifo_rst),
        .s_axi_araddr(m_axi_araddr_i[5:0]),
        .s_axi_arburst(m_axi_arburst_i),
        .s_axi_arlen(m_axi_arlen_i),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rid(s_axi_rid),
        .s_axi_rlast(s_axi_rlast),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(s_axi_rresp),
        .sr_arvalid(sr_arvalid));
axi_dwidth_converter_0_axi_dwidth_converter_v2_1_a_upsizer__parameterized0 \USE_READ.read_addr_inst 
       (.CO(sub_sized_wrap0),
        .I1(n_171_si_register_slice_inst),
        .I11({cmd_first_word_i[5:4],n_100_si_register_slice_inst,cmd_first_word_i[2:0]}),
        .I2(I2),
        .I3(I3),
        .I4(n_183_si_register_slice_inst),
        .O1(\n_0_USE_READ.read_addr_inst ),
        .O2(\n_1_USE_READ.read_addr_inst ),
        .Q({sr_arlen[0],sr_arburst,sr_arsize,sr_araddr[5],sr_araddr[3]}),
        .SR(s_fifo_rst),
        .cmd_fix_i(cmd_fix_i),
        .cmd_last_word_ii(p_0_in6_in),
        .cmd_push_block0(cmd_push_block0),
        .m_axi_arready_i(m_axi_arready_i),
        .mi_word_intra_len(mi_word_intra_len),
        .sr_arvalid(sr_arvalid));
(* C_ADD_NGC_CONSTRAINT = "0" *) 
   (* C_APPLICATION_TYPE_AXIS = "0" *) 
   (* C_APPLICATION_TYPE_RACH = "0" *) 
   (* C_APPLICATION_TYPE_RDCH = "0" *) 
   (* C_APPLICATION_TYPE_WACH = "0" *) 
   (* C_APPLICATION_TYPE_WDCH = "0" *) 
   (* C_APPLICATION_TYPE_WRCH = "0" *) 
   (* C_AXIS_TDATA_WIDTH = "64" *) 
   (* C_AXIS_TDEST_WIDTH = "4" *) 
   (* C_AXIS_TID_WIDTH = "8" *) 
   (* C_AXIS_TKEEP_WIDTH = "4" *) 
   (* C_AXIS_TSTRB_WIDTH = "4" *) 
   (* C_AXIS_TUSER_WIDTH = "4" *) 
   (* C_AXIS_TYPE = "0" *) 
   (* C_AXI_ADDR_WIDTH = "32" *) 
   (* C_AXI_ARUSER_WIDTH = "1" *) 
   (* C_AXI_AWUSER_WIDTH = "1" *) 
   (* C_AXI_BUSER_WIDTH = "1" *) 
   (* C_AXI_DATA_WIDTH = "32" *) 
   (* C_AXI_ID_WIDTH = "1" *) 
   (* C_AXI_LEN_WIDTH = "8" *) 
   (* C_AXI_LOCK_WIDTH = "2" *) 
   (* C_AXI_RUSER_WIDTH = "1" *) 
   (* C_AXI_TYPE = "1" *) 
   (* C_AXI_WUSER_WIDTH = "1" *) 
   (* C_COMMON_CLOCK = "0" *) 
   (* C_COUNT_TYPE = "0" *) 
   (* C_DATA_COUNT_WIDTH = "10" *) 
   (* C_DEFAULT_VALUE = "BlankString" *) 
   (* C_DIN_WIDTH = "18" *) 
   (* C_DIN_WIDTH_AXIS = "1" *) 
   (* C_DIN_WIDTH_RACH = "63" *) 
   (* C_DIN_WIDTH_RDCH = "36" *) 
   (* C_DIN_WIDTH_WACH = "63" *) 
   (* C_DIN_WIDTH_WDCH = "38" *) 
   (* C_DIN_WIDTH_WRCH = "3" *) 
   (* C_DOUT_RST_VAL = "0" *) 
   (* C_DOUT_WIDTH = "18" *) 
   (* C_ENABLE_RLOCS = "0" *) 
   (* C_ENABLE_RST_SYNC = "1" *) 
   (* C_ERROR_INJECTION_TYPE = "0" *) 
   (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
   (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
   (* C_FAMILY = "virtex7" *) 
   (* C_FULL_FLAGS_RST_VAL = "1" *) 
   (* C_HAS_ALMOST_EMPTY = "0" *) 
   (* C_HAS_ALMOST_FULL = "0" *) 
   (* C_HAS_AXIS_TDATA = "0" *) 
   (* C_HAS_AXIS_TDEST = "0" *) 
   (* C_HAS_AXIS_TID = "0" *) 
   (* C_HAS_AXIS_TKEEP = "0" *) 
   (* C_HAS_AXIS_TLAST = "0" *) 
   (* C_HAS_AXIS_TREADY = "1" *) 
   (* C_HAS_AXIS_TSTRB = "0" *) 
   (* C_HAS_AXIS_TUSER = "0" *) 
   (* C_HAS_AXI_ARUSER = "0" *) 
   (* C_HAS_AXI_AWUSER = "0" *) 
   (* C_HAS_AXI_BUSER = "0" *) 
   (* C_HAS_AXI_ID = "1" *) 
   (* C_HAS_AXI_RD_CHANNEL = "0" *) 
   (* C_HAS_AXI_RUSER = "0" *) 
   (* C_HAS_AXI_WR_CHANNEL = "1" *) 
   (* C_HAS_AXI_WUSER = "0" *) 
   (* C_HAS_BACKUP = "0" *) 
   (* C_HAS_DATA_COUNT = "0" *) 
   (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
   (* C_HAS_DATA_COUNTS_RACH = "0" *) 
   (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
   (* C_HAS_DATA_COUNTS_WACH = "0" *) 
   (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
   (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
   (* C_HAS_INT_CLK = "0" *) 
   (* C_HAS_MASTER_CE = "0" *) 
   (* C_HAS_MEMINIT_FILE = "0" *) 
   (* C_HAS_OVERFLOW = "0" *) 
   (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
   (* C_HAS_PROG_FLAGS_RACH = "0" *) 
   (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
   (* C_HAS_PROG_FLAGS_WACH = "0" *) 
   (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
   (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
   (* C_HAS_RD_DATA_COUNT = "0" *) 
   (* C_HAS_RD_RST = "0" *) 
   (* C_HAS_RST = "1" *) 
   (* C_HAS_SLAVE_CE = "0" *) 
   (* C_HAS_SRST = "0" *) 
   (* C_HAS_UNDERFLOW = "0" *) 
   (* C_HAS_VALID = "0" *) 
   (* C_HAS_WR_ACK = "0" *) 
   (* C_HAS_WR_DATA_COUNT = "0" *) 
   (* C_HAS_WR_RST = "0" *) 
   (* C_IMPLEMENTATION_TYPE = "0" *) 
   (* C_IMPLEMENTATION_TYPE_AXIS = "11" *) 
   (* C_IMPLEMENTATION_TYPE_RACH = "12" *) 
   (* C_IMPLEMENTATION_TYPE_RDCH = "11" *) 
   (* C_IMPLEMENTATION_TYPE_WACH = "12" *) 
   (* C_IMPLEMENTATION_TYPE_WDCH = "11" *) 
   (* C_IMPLEMENTATION_TYPE_WRCH = "12" *) 
   (* C_INIT_WR_PNTR_VAL = "0" *) 
   (* C_INTERFACE_TYPE = "2" *) 
   (* C_MEMORY_TYPE = "1" *) 
   (* C_MIF_FILE_NAME = "BlankString" *) 
   (* C_MSGON_VAL = "1" *) 
   (* C_OPTIMIZATION_MODE = "0" *) 
   (* C_OVERFLOW_LOW = "0" *) 
   (* C_POWER_SAVING_MODE = "0" *) 
   (* C_PRELOAD_LATENCY = "1" *) 
   (* C_PRELOAD_REGS = "0" *) 
   (* C_PRIM_FIFO_TYPE = "4kx4" *) 
   (* C_PRIM_FIFO_TYPE_AXIS = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_RDCH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_WDCH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "2" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1021" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "13" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1021" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "13" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1021" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "29" *) 
   (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "3" *) 
   (* C_PROG_EMPTY_TYPE = "0" *) 
   (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
   (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
   (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
   (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
   (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
   (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL = "1022" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "15" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "15" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "31" *) 
   (* C_PROG_FULL_THRESH_NEGATE_VAL = "1021" *) 
   (* C_PROG_FULL_TYPE = "0" *) 
   (* C_PROG_FULL_TYPE_AXIS = "0" *) 
   (* C_PROG_FULL_TYPE_RACH = "0" *) 
   (* C_PROG_FULL_TYPE_RDCH = "0" *) 
   (* C_PROG_FULL_TYPE_WACH = "0" *) 
   (* C_PROG_FULL_TYPE_WDCH = "0" *) 
   (* C_PROG_FULL_TYPE_WRCH = "0" *) 
   (* C_RACH_TYPE = "0" *) 
   (* C_RDCH_TYPE = "0" *) 
   (* C_RD_DATA_COUNT_WIDTH = "10" *) 
   (* C_RD_DEPTH = "1024" *) 
   (* C_RD_FREQ = "1" *) 
   (* C_RD_PNTR_WIDTH = "10" *) 
   (* C_REG_SLICE_MODE_AXIS = "0" *) 
   (* C_REG_SLICE_MODE_RACH = "0" *) 
   (* C_REG_SLICE_MODE_RDCH = "0" *) 
   (* C_REG_SLICE_MODE_WACH = "0" *) 
   (* C_REG_SLICE_MODE_WDCH = "0" *) 
   (* C_REG_SLICE_MODE_WRCH = "0" *) 
   (* C_SYNCHRONIZER_STAGE = "3" *) 
   (* C_UNDERFLOW_LOW = "0" *) 
   (* C_USE_COMMON_OVERFLOW = "0" *) 
   (* C_USE_COMMON_UNDERFLOW = "0" *) 
   (* C_USE_DEFAULT_SETTINGS = "0" *) 
   (* C_USE_DOUT_RST = "1" *) 
   (* C_USE_ECC = "0" *) 
   (* C_USE_ECC_AXIS = "0" *) 
   (* C_USE_ECC_RACH = "0" *) 
   (* C_USE_ECC_RDCH = "0" *) 
   (* C_USE_ECC_WACH = "0" *) 
   (* C_USE_ECC_WDCH = "0" *) 
   (* C_USE_ECC_WRCH = "0" *) 
   (* C_USE_EMBEDDED_REG = "0" *) 
   (* C_USE_FIFO16_FLAGS = "0" *) 
   (* C_USE_FWFT_DATA_COUNT = "0" *) 
   (* C_USE_PIPELINE_REG = "0" *) 
   (* C_VALID_LOW = "0" *) 
   (* C_WACH_TYPE = "2" *) 
   (* C_WDCH_TYPE = "2" *) 
   (* C_WRCH_TYPE = "0" *) 
   (* C_WR_ACK_LOW = "0" *) 
   (* C_WR_DATA_COUNT_WIDTH = "10" *) 
   (* C_WR_DEPTH = "1024" *) 
   (* C_WR_DEPTH_AXIS = "1024" *) 
   (* C_WR_DEPTH_RACH = "16" *) 
   (* C_WR_DEPTH_RDCH = "1024" *) 
   (* C_WR_DEPTH_WACH = "16" *) 
   (* C_WR_DEPTH_WDCH = "1024" *) 
   (* C_WR_DEPTH_WRCH = "32" *) 
   (* C_WR_FREQ = "1" *) 
   (* C_WR_PNTR_WIDTH = "10" *) 
   (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
   (* C_WR_PNTR_WIDTH_RACH = "4" *) 
   (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
   (* C_WR_PNTR_WIDTH_WACH = "4" *) 
   (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
   (* C_WR_PNTR_WIDTH_WRCH = "5" *) 
   (* C_WR_RESPONSE_LATENCY = "1" *) 
   (* DONT_TOUCH *) 
   axi_dwidth_converter_0_fifo_generator_v12_0__parameterized1 \USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async 
       (.almost_empty(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_almost_full_UNCONNECTED ),
        .axi_ar_data_count(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_ar_data_count_UNCONNECTED [4:0]),
        .axi_ar_dbiterr(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_ar_dbiterr_UNCONNECTED ),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_ar_overflow_UNCONNECTED ),
        .axi_ar_prog_empty(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_ar_prog_empty_UNCONNECTED ),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_ar_prog_full_UNCONNECTED ),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_ar_rd_data_count_UNCONNECTED [4:0]),
        .axi_ar_sbiterr(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_ar_sbiterr_UNCONNECTED ),
        .axi_ar_underflow(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_ar_underflow_UNCONNECTED ),
        .axi_ar_wr_data_count(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_ar_wr_data_count_UNCONNECTED [4:0]),
        .axi_aw_data_count(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_aw_data_count_UNCONNECTED [4:0]),
        .axi_aw_dbiterr(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_aw_dbiterr_UNCONNECTED ),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_aw_overflow_UNCONNECTED ),
        .axi_aw_prog_empty(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_aw_prog_empty_UNCONNECTED ),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_aw_prog_full_UNCONNECTED ),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_aw_rd_data_count_UNCONNECTED [4:0]),
        .axi_aw_sbiterr(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_aw_sbiterr_UNCONNECTED ),
        .axi_aw_underflow(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_aw_underflow_UNCONNECTED ),
        .axi_aw_wr_data_count(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_aw_wr_data_count_UNCONNECTED [4:0]),
        .axi_b_data_count(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_b_data_count_UNCONNECTED [5:0]),
        .axi_b_dbiterr(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_b_dbiterr_UNCONNECTED ),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_b_overflow_UNCONNECTED ),
        .axi_b_prog_empty(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_b_prog_empty_UNCONNECTED ),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_b_prog_full_UNCONNECTED ),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_b_rd_data_count_UNCONNECTED [5:0]),
        .axi_b_sbiterr(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_b_sbiterr_UNCONNECTED ),
        .axi_b_underflow(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_b_underflow_UNCONNECTED ),
        .axi_b_wr_data_count(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_b_wr_data_count_UNCONNECTED [5:0]),
        .axi_r_data_count(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_r_data_count_UNCONNECTED [10:0]),
        .axi_r_dbiterr(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_r_dbiterr_UNCONNECTED ),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_r_overflow_UNCONNECTED ),
        .axi_r_prog_empty(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_r_prog_empty_UNCONNECTED ),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_r_prog_full_UNCONNECTED ),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_r_rd_data_count_UNCONNECTED [10:0]),
        .axi_r_sbiterr(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_r_sbiterr_UNCONNECTED ),
        .axi_r_underflow(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_r_underflow_UNCONNECTED ),
        .axi_r_wr_data_count(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_r_wr_data_count_UNCONNECTED [10:0]),
        .axi_w_data_count(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_w_data_count_UNCONNECTED [10:0]),
        .axi_w_dbiterr(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_w_dbiterr_UNCONNECTED ),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_w_overflow_UNCONNECTED ),
        .axi_w_prog_empty(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_w_prog_empty_UNCONNECTED ),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_w_prog_full_UNCONNECTED ),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_w_rd_data_count_UNCONNECTED [10:0]),
        .axi_w_sbiterr(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_w_sbiterr_UNCONNECTED ),
        .axi_w_underflow(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_w_underflow_UNCONNECTED ),
        .axi_w_wr_data_count(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axi_w_wr_data_count_UNCONNECTED [10:0]),
        .axis_data_count(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axis_data_count_UNCONNECTED [10:0]),
        .axis_dbiterr(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axis_dbiterr_UNCONNECTED ),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axis_overflow_UNCONNECTED ),
        .axis_prog_empty(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axis_prog_empty_UNCONNECTED ),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axis_prog_full_UNCONNECTED ),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axis_rd_data_count_UNCONNECTED [10:0]),
        .axis_sbiterr(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axis_sbiterr_UNCONNECTED ),
        .axis_underflow(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axis_underflow_UNCONNECTED ),
        .axis_wr_data_count(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_axis_wr_data_count_UNCONNECTED [10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_data_count_UNCONNECTED [9:0]),
        .dbiterr(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_dbiterr_UNCONNECTED ),
        .din({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dout(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_dout_UNCONNECTED [17:0]),
        .empty(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_empty_UNCONNECTED ),
        .full(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_full_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(I4),
        .m_aclk_en(1'b0),
        .m_axi_araddr(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_araddr_UNCONNECTED [31:0]),
        .m_axi_arburst(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_arburst_UNCONNECTED [1:0]),
        .m_axi_arcache(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_arcache_UNCONNECTED [3:0]),
        .m_axi_arid(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_arid_UNCONNECTED [0]),
        .m_axi_arlen(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_arlen_UNCONNECTED [7:0]),
        .m_axi_arlock(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_arlock_UNCONNECTED [1:0]),
        .m_axi_arprot(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_arprot_UNCONNECTED [2:0]),
        .m_axi_arqos(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_arqos_UNCONNECTED [3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_arregion_UNCONNECTED [3:0]),
        .m_axi_arsize(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_arsize_UNCONNECTED [2:0]),
        .m_axi_aruser(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_aruser_UNCONNECTED [0]),
        .m_axi_arvalid(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_arvalid_UNCONNECTED ),
        .m_axi_awaddr(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awaddr_UNCONNECTED [31:0]),
        .m_axi_awburst(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awburst_UNCONNECTED [1:0]),
        .m_axi_awcache(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awcache_UNCONNECTED [3:0]),
        .m_axi_awid(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awid_UNCONNECTED [0]),
        .m_axi_awlen(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awlen_UNCONNECTED [7:0]),
        .m_axi_awlock(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awlock_UNCONNECTED [1:0]),
        .m_axi_awprot(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awprot_UNCONNECTED [2:0]),
        .m_axi_awqos(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awqos_UNCONNECTED [3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awregion_UNCONNECTED [3:0]),
        .m_axi_awsize(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awsize_UNCONNECTED [2:0]),
        .m_axi_awuser(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awuser_UNCONNECTED [0]),
        .m_axi_awvalid(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_awvalid_UNCONNECTED ),
        .m_axi_bid(1'b0),
        .m_axi_bready(m_axi_bready),
        .m_axi_bresp(m_axi_bresp),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_rready_UNCONNECTED ),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_wdata_UNCONNECTED [31:0]),
        .m_axi_wid(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_wid_UNCONNECTED [0]),
        .m_axi_wlast(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_wlast_UNCONNECTED ),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_wstrb_UNCONNECTED [3:0]),
        .m_axi_wuser(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_wuser_UNCONNECTED [0]),
        .m_axi_wvalid(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axi_wvalid_UNCONNECTED ),
        .m_axis_tdata(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axis_tdata_UNCONNECTED [63:0]),
        .m_axis_tdest(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axis_tdest_UNCONNECTED [3:0]),
        .m_axis_tid(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axis_tid_UNCONNECTED [7:0]),
        .m_axis_tkeep(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axis_tkeep_UNCONNECTED [3:0]),
        .m_axis_tlast(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axis_tlast_UNCONNECTED ),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axis_tstrb_UNCONNECTED [3:0]),
        .m_axis_tuser(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axis_tuser_UNCONNECTED [3:0]),
        .m_axis_tvalid(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_m_axis_tvalid_UNCONNECTED ),
        .overflow(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_overflow_UNCONNECTED ),
        .prog_empty(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_prog_empty_UNCONNECTED ),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_prog_full_UNCONNECTED ),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(1'b0),
        .rd_data_count(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_rd_data_count_UNCONNECTED [9:0]),
        .rd_en(1'b0),
        .rd_rst(1'b0),
        .rd_rst_busy(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_rd_rst_busy_UNCONNECTED ),
        .rst(1'b0),
        .s_aclk(I3),
        .s_aclk_en(1'b0),
        .s_aresetn(sm_aresetn),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock({1'b0,1'b0}),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axi_arready_UNCONNECTED ),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock({1'b0,1'b0}),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axi_awready_UNCONNECTED ),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axi_bid_UNCONNECTED [0]),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(s_axi_bresp),
        .s_axi_buser(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axi_buser_UNCONNECTED [0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axi_rdata_UNCONNECTED [31:0]),
        .s_axi_rid(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axi_rid_UNCONNECTED [0]),
        .s_axi_rlast(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axi_rlast_UNCONNECTED ),
        .s_axi_rready(1'b0),
        .s_axi_rresp(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axi_rresp_UNCONNECTED [1:0]),
        .s_axi_ruser(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axi_ruser_UNCONNECTED [0]),
        .s_axi_rvalid(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axi_rvalid_UNCONNECTED ),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axi_wready_UNCONNECTED ),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tid({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tkeep({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tlast(1'b0),
        .s_axis_tready(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_s_axis_tready_UNCONNECTED ),
        .s_axis_tstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_sbiterr_UNCONNECTED ),
        .sleep(1'b0),
        .srst(1'b0),
        .underflow(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_underflow_UNCONNECTED ),
        .valid(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_valid_UNCONNECTED ),
        .wr_ack(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_wr_ack_UNCONNECTED ),
        .wr_clk(1'b0),
        .wr_data_count(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_wr_data_count_UNCONNECTED [9:0]),
        .wr_en(1'b0),
        .wr_rst(1'b0),
        .wr_rst_busy(\NLW_USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_wr_rst_busy_UNCONNECTED ));
LUT2 #(
    .INIT(4'h8)) 
     \USE_WRITE.gen_b_clk_conv.gen_b_async_conv.dw_fifogen_b_async_i_1 
       (.I0(I2),
        .I1(I1),
        .O(sm_aresetn));
axi_dwidth_converter_0_axi_dwidth_converter_v2_1_w_upsizer_pktfifo \USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst 
       (.D(M_AXI_AWLEN),
        .I1(n_235_si_register_slice_inst),
        .I10(n_248_si_register_slice_inst),
        .I11(n_239_si_register_slice_inst),
        .I12(n_189_si_register_slice_inst),
        .I13(n_232_si_register_slice_inst),
        .I14(n_231_si_register_slice_inst),
        .I15(n_225_si_register_slice_inst),
        .I16(n_243_si_register_slice_inst),
        .I17(n_224_si_register_slice_inst),
        .I18(n_223_si_register_slice_inst),
        .I19(n_238_si_register_slice_inst),
        .I2(n_227_si_register_slice_inst),
        .I20(n_242_si_register_slice_inst),
        .I21(n_249_si_register_slice_inst),
        .I22(n_237_si_register_slice_inst),
        .I23(n_247_si_register_slice_inst),
        .I24(n_246_si_register_slice_inst),
        .I25(n_84_si_register_slice_inst),
        .I26(n_185_si_register_slice_inst),
        .I27(n_234_si_register_slice_inst),
        .I28(n_86_si_register_slice_inst),
        .I29(n_233_si_register_slice_inst),
        .I3(I3),
        .I30(n_251_si_register_slice_inst),
        .I31(n_250_si_register_slice_inst),
        .I32(n_190_si_register_slice_inst),
        .I33(n_186_si_register_slice_inst),
        .I34(n_0_M_AXI_WVALID_i_i_1),
        .I35(n_0_mi_last_i_1),
        .I36(n_0_mi_last_d1_i_1),
        .I37(n_0_M_AXI_AWVALID_i_i_2),
        .I38(n_0_S_AXI_WREADY_i_i_2),
        .I39(n_0_mi_first_i_1),
        .I4(I4),
        .I40(n_0_mi_first_d1_i_1),
        .I41(\n_0_si_word[0]_i_1 ),
        .I42(I1),
        .I43(\n_2_USE_WRITE.write_addr_inst ),
        .I44(\n_4_USE_WRITE.write_addr_inst ),
        .I45(\n_1_USE_WRITE.write_addr_inst ),
        .I46(n_85_si_register_slice_inst),
        .I47(\n_3_USE_WRITE.write_addr_inst ),
        .I48(\n_0_USE_WRITE.write_addr_inst ),
        .I49(n_252_si_register_slice_inst),
        .I5(n_226_si_register_slice_inst),
        .I50(n_222_si_register_slice_inst),
        .I51(n_221_si_register_slice_inst),
        .I52(n_220_si_register_slice_inst),
        .I53(n_219_si_register_slice_inst),
        .I54(n_218_si_register_slice_inst),
        .I55(n_217_si_register_slice_inst),
        .I56(n_216_si_register_slice_inst),
        .I57(n_215_si_register_slice_inst),
        .I58(n_214_si_register_slice_inst),
        .I59(n_213_si_register_slice_inst),
        .I6(n_241_si_register_slice_inst),
        .I60(n_212_si_register_slice_inst),
        .I61(n_211_si_register_slice_inst),
        .I62(n_210_si_register_slice_inst),
        .I63(n_209_si_register_slice_inst),
        .I64(n_208_si_register_slice_inst),
        .I65(n_207_si_register_slice_inst),
        .I66(n_206_si_register_slice_inst),
        .I67(n_205_si_register_slice_inst),
        .I68(n_204_si_register_slice_inst),
        .I69(n_203_si_register_slice_inst),
        .I7(n_240_si_register_slice_inst),
        .I70(n_202_si_register_slice_inst),
        .I71(n_201_si_register_slice_inst),
        .I72(n_200_si_register_slice_inst),
        .I73(n_199_si_register_slice_inst),
        .I74(n_198_si_register_slice_inst),
        .I75(n_197_si_register_slice_inst),
        .I76(n_196_si_register_slice_inst),
        .I77(n_195_si_register_slice_inst),
        .I78(n_194_si_register_slice_inst),
        .I79(n_193_si_register_slice_inst),
        .I8(n_245_si_register_slice_inst),
        .I80(n_192_si_register_slice_inst),
        .I81(n_191_si_register_slice_inst),
        .I82(n_187_si_register_slice_inst),
        .I83(n_83_si_register_slice_inst),
        .I84(n_82_si_register_slice_inst),
        .I85(n_81_si_register_slice_inst),
        .I86(n_188_si_register_slice_inst),
        .I87(n_229_si_register_slice_inst),
        .I88(n_236_si_register_slice_inst),
        .I89(n_230_si_register_slice_inst),
        .I9(n_244_si_register_slice_inst),
        .I90(I2),
        .I91({f_mi_be_last_index_return,m_axi_awlen_i,m_axi_awburst_i,m_axi_awsize_i,m_axi_awaddr_i[8:0]}),
        .I92(n_96_si_register_slice_inst),
        .M_AXI_AWADDR(M_AXI_AWADDR),
        .O1(M_AXI_AWSIZE),
        .O10(\n_596_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .O11(\n_597_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .O12(\n_598_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .O13(\n_599_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .O14(\n_600_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .O15(\n_601_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .O2(M_AXI_AWBURST),
        .O3(si_wrap_be_next),
        .O4(O2),
        .O5(\n_582_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .O6(O1),
        .O7(O3),
        .O8(\n_592_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .O9(\n_595_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .Q({m_axi_awregion_i,m_axi_awqos_i,m_axi_awlock_i,sr_awlen[3:2],m_axi_awcache_i[3:2],sr_awcache,m_axi_awcache_i[0],sr_awburst,sr_awsize,m_axi_awprot_i,m_axi_awaddr_i[31:9],sr_awaddr[8:6]}),
        .SR(s_fifo_rst),
        .cmd_push_block0(cmd_push_block0_0),
        .dina(dina),
        .f_si_wrap_word_return(f_si_wrap_word_return),
        .load_mi_ptr(load_mi_ptr),
        .load_si_ptr(load_si_ptr),
        .m_axi_awcache(m_axi_awcache),
        .m_axi_awlock(m_axi_awlock),
        .m_axi_awprot(m_axi_awprot),
        .m_axi_awqos(m_axi_awqos),
        .m_axi_awready(m_axi_awready),
        .m_axi_awready_i(m_axi_awready_i),
        .m_axi_awregion(m_axi_awregion),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_wdata(m_axi_wdata),
        .m_axi_wready(m_axi_wready),
        .m_axi_wstrb(m_axi_wstrb),
        .m_fifo_rst(m_fifo_rst),
        .mi_buf_en(mi_buf_en),
        .mi_first(mi_first),
        .mi_first_d1(mi_first_d1),
        .mi_last(mi_last),
        .out({\n_589_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ,\n_590_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ,\n_591_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst }),
        .s_axi_wlast(s_axi_wlast),
        .s_axi_wvalid(s_axi_wvalid),
        .si_state(si_state),
        .sr_awvalid(sr_awvalid),
        .word(word),
        .wr_cmd_ready(wr_cmd_ready));
axi_dwidth_converter_0_axi_dwidth_converter_v2_1_a_upsizer \USE_WRITE.write_addr_inst 
       (.CO(sub_sized_wrap0_2),
        .I1(\n_595_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .I10(n_184_si_register_slice_inst),
        .I2(\n_598_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .I3(I3),
        .I4(I2),
        .I5(n_254_si_register_slice_inst),
        .I6(n_95_si_register_slice_inst),
        .I7(n_94_si_register_slice_inst),
        .I8(n_97_si_register_slice_inst),
        .I9(n_253_si_register_slice_inst),
        .O1(\n_0_USE_WRITE.write_addr_inst ),
        .O2(\n_1_USE_WRITE.write_addr_inst ),
        .O3(\n_2_USE_WRITE.write_addr_inst ),
        .O4(\n_3_USE_WRITE.write_addr_inst ),
        .O5(\n_4_USE_WRITE.write_addr_inst ),
        .O6(\n_5_USE_WRITE.write_addr_inst ),
        .O7(\n_6_USE_WRITE.write_addr_inst ),
        .Q({sr_awlen[0],sr_awburst,sr_awsize,sr_awaddr[5]}),
        .SR(s_fifo_rst),
        .cmd_first_word_i(cmd_first_word_i_3),
        .cmd_last_word_ii(p_0_in6_in_1),
        .cmd_push_block0(cmd_push_block0_0),
        .m_axi_awready_i(m_axi_awready_i),
        .sr_awvalid(sr_awvalid),
        .wr_cmd_ready(wr_cmd_ready));
(* SOFT_HLUTNM = "soft_lutpair318" *) 
   LUT4 #(
    .INIT(16'hFB08)) 
     mi_first_d1_i_1
       (.I0(mi_first),
        .I1(mi_buf_en),
        .I2(load_mi_ptr),
        .I3(mi_first_d1),
        .O(n_0_mi_first_d1_i_1));
(* SOFT_HLUTNM = "soft_lutpair318" *) 
   LUT4 #(
    .INIT(16'hFFE2)) 
     mi_first_i_1
       (.I0(mi_first),
        .I1(mi_buf_en),
        .I2(mi_last),
        .I3(load_mi_ptr),
        .O(n_0_mi_first_i_1));
LUT4 #(
    .INIT(16'hFB08)) 
     mi_last_d1_i_1
       (.I0(mi_last),
        .I1(mi_buf_en),
        .I2(load_mi_ptr),
        .I3(\n_582_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .O(n_0_mi_last_d1_i_1));
LUT6 #(
    .INIT(64'hAAFEAAFFAAFEAA00)) 
     mi_last_i_1
       (.I0(\n_592_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .I1(\n_596_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .I2(\n_601_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .I3(load_mi_ptr),
        .I4(mi_buf_en),
        .I5(mi_last),
        .O(n_0_mi_last_i_1));
axi_dwidth_converter_0_axi_register_slice_v2_1_axi_register_slice si_register_slice_inst
       (.CO(sub_sized_wrap0_2),
        .D(D),
        .I1(\n_6_USE_WRITE.write_addr_inst ),
        .I11({cmd_first_word_i[5:4],n_100_si_register_slice_inst,cmd_first_word_i[2:0]}),
        .I2(I2),
        .I3(I3),
        .I4(\n_5_USE_WRITE.write_addr_inst ),
        .I5(\n_0_USE_READ.read_addr_inst ),
        .I6(\n_1_USE_READ.read_addr_inst ),
        .I7(p_0_in6_in),
        .I8(si_wrap_be_next),
        .I9(I5),
        .I91({f_mi_be_last_index_return,m_axi_awlen_i,m_axi_awburst_i,m_axi_awsize_i,m_axi_awaddr_i[8:0]}),
        .O1(n_81_si_register_slice_inst),
        .O10(n_97_si_register_slice_inst),
        .O11({m_axi_arregion_i,m_axi_arqos_i,m_axi_arlock_i,sr_arlen,m_axi_arcache_i[3:2],sr_arcache,m_axi_arcache_i[0],sr_arburst,sr_arsize,m_axi_arprot_i,m_axi_araddr_i[31:6],sr_araddr}),
        .O12(mi_word_intra_len),
        .O13(sub_sized_wrap0),
        .O14(n_171_si_register_slice_inst),
        .O15({m_axi_arsize_i,n_182_si_register_slice_inst}),
        .O16(n_183_si_register_slice_inst),
        .O17(n_184_si_register_slice_inst),
        .O18(n_185_si_register_slice_inst),
        .O19(n_186_si_register_slice_inst),
        .O2(n_82_si_register_slice_inst),
        .O20(n_187_si_register_slice_inst),
        .O21(n_188_si_register_slice_inst),
        .O22(n_189_si_register_slice_inst),
        .O23(n_190_si_register_slice_inst),
        .O24(n_191_si_register_slice_inst),
        .O25(n_192_si_register_slice_inst),
        .O26(n_193_si_register_slice_inst),
        .O27(n_194_si_register_slice_inst),
        .O28(n_195_si_register_slice_inst),
        .O29(n_196_si_register_slice_inst),
        .O3(n_83_si_register_slice_inst),
        .O30(n_197_si_register_slice_inst),
        .O31(n_198_si_register_slice_inst),
        .O32(n_199_si_register_slice_inst),
        .O33(n_200_si_register_slice_inst),
        .O34(n_201_si_register_slice_inst),
        .O35(n_202_si_register_slice_inst),
        .O36(n_203_si_register_slice_inst),
        .O37(n_204_si_register_slice_inst),
        .O38(n_205_si_register_slice_inst),
        .O39(n_206_si_register_slice_inst),
        .O4(n_84_si_register_slice_inst),
        .O40(n_207_si_register_slice_inst),
        .O41(n_208_si_register_slice_inst),
        .O42(n_209_si_register_slice_inst),
        .O43(n_210_si_register_slice_inst),
        .O44(n_211_si_register_slice_inst),
        .O45(n_212_si_register_slice_inst),
        .O46(n_213_si_register_slice_inst),
        .O47(n_214_si_register_slice_inst),
        .O48(n_215_si_register_slice_inst),
        .O49(n_216_si_register_slice_inst),
        .O5(n_85_si_register_slice_inst),
        .O50(n_217_si_register_slice_inst),
        .O51(n_218_si_register_slice_inst),
        .O52(n_219_si_register_slice_inst),
        .O53(n_220_si_register_slice_inst),
        .O54(n_221_si_register_slice_inst),
        .O55(n_222_si_register_slice_inst),
        .O56(n_223_si_register_slice_inst),
        .O57(n_224_si_register_slice_inst),
        .O58(n_225_si_register_slice_inst),
        .O59(n_226_si_register_slice_inst),
        .O6(n_86_si_register_slice_inst),
        .O60(n_227_si_register_slice_inst),
        .O61(n_229_si_register_slice_inst),
        .O62(n_230_si_register_slice_inst),
        .O63(n_231_si_register_slice_inst),
        .O64(n_232_si_register_slice_inst),
        .O65(n_233_si_register_slice_inst),
        .O66(n_234_si_register_slice_inst),
        .O67(n_235_si_register_slice_inst),
        .O68(n_236_si_register_slice_inst),
        .O69(n_237_si_register_slice_inst),
        .O7(n_94_si_register_slice_inst),
        .O70(n_238_si_register_slice_inst),
        .O71(n_239_si_register_slice_inst),
        .O72(n_240_si_register_slice_inst),
        .O73(n_241_si_register_slice_inst),
        .O74(n_242_si_register_slice_inst),
        .O75(n_243_si_register_slice_inst),
        .O76(n_244_si_register_slice_inst),
        .O77(n_245_si_register_slice_inst),
        .O78(n_246_si_register_slice_inst),
        .O79(n_247_si_register_slice_inst),
        .O8(n_95_si_register_slice_inst),
        .O80(n_248_si_register_slice_inst),
        .O81(n_249_si_register_slice_inst),
        .O82(n_250_si_register_slice_inst),
        .O83(n_251_si_register_slice_inst),
        .O84(n_252_si_register_slice_inst),
        .O85(n_253_si_register_slice_inst),
        .O86(n_254_si_register_slice_inst),
        .O9(n_96_si_register_slice_inst),
        .Q({m_axi_awregion_i,m_axi_awqos_i,m_axi_awlock_i,sr_awlen[3:2],sr_awlen[0],m_axi_awcache_i[3:2],sr_awcache,m_axi_awcache_i[0],sr_awburst,sr_awsize,m_axi_awprot_i,m_axi_awaddr_i[31:9],sr_awaddr}),
        .SR(s_fifo_rst),
        .cmd_first_word_i(cmd_first_word_i_3),
        .cmd_fix_i(cmd_fix_i),
        .cmd_last_word_ii(p_0_in6_in_1),
        .f_si_wrap_word_return(f_si_wrap_word_return),
        .load_si_ptr(load_si_ptr),
        .m_axi_arready_i(m_axi_arready_i),
        .m_axi_awready_i(m_axi_awready_i),
        .s_axi_araddr(m_axi_araddr_i[5:0]),
        .s_axi_arburst(m_axi_arburst_i),
        .s_axi_arlen(m_axi_arlen_i),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .sr_arvalid(sr_arvalid),
        .sr_awvalid(sr_awvalid));
LUT5 #(
    .INIT(32'hACAFACA0)) 
     \si_word[0]_i_1 
       (.I0(sr_awaddr[5]),
        .I1(\n_600_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .I2(load_si_ptr),
        .I3(\n_599_USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst ),
        .I4(word),
        .O(\n_0_si_word[0]_i_1 ));
endmodule

(* ORIG_REF_NAME = "axi_dwidth_converter_v2_1_r_upsizer_pktfifo" *) 
module axi_dwidth_converter_0_axi_dwidth_converter_v2_1_r_upsizer_pktfifo
   (m_axi_araddr,
    din,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    SR,
    s_axi_rdata,
    O1,
    m_axi_arready_i,
    s_axi_rlast,
    s_axi_rid,
    O2,
    cmd_push_block0,
    m_axi_arvalid,
    s_axi_rresp,
    I4,
    I3,
    Q,
    s_axi_araddr,
    s_axi_arlen,
    I1,
    s_axi_arburst,
    m_fifo_rst,
    m_axi_rdata,
    s_axi_rready,
    m_axi_rvalid,
    sr_arvalid,
    I2,
    I5,
    m_axi_arready,
    I6,
    m_axi_rlast,
    m_axi_rresp);
  output [31:0]m_axi_araddr;
  output [12:0]din;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]SR;
  output [255:0]s_axi_rdata;
  output O1;
  output m_axi_arready_i;
  output s_axi_rlast;
  output [0:0]s_axi_rid;
  output O2;
  output cmd_push_block0;
  output m_axi_arvalid;
  output [1:0]s_axi_rresp;
  input I4;
  input I3;
  input [60:0]Q;
  input [5:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]I1;
  input [1:0]s_axi_arburst;
  input m_fifo_rst;
  input [511:0]m_axi_rdata;
  input s_axi_rready;
  input m_axi_rvalid;
  input sr_arvalid;
  input I2;
  input I5;
  input m_axi_arready;
  input I6;
  input m_axi_rlast;
  input [1:0]m_axi_rresp;

  wire [2:0]I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire I6;
  wire O1;
  wire O2;
  wire [60:0]Q;
  wire [0:0]SR;
  wire S_AXI_ARREADY_i0;
  wire [9:0]addr;
  wire [9:0]addr1_in;
  wire ar_fifo_aresetn;
  wire ar_fifo_ready;
  wire ar_fifo_valid;
  wire ar_pop;
  wire [1:0]buf_cnt;
  wire [1:0]burst;
  wire cmd_push_block0;
  wire [12:0]din;
  wire first_rvalid_d1;
  wire large_incr_last2_out;
  wire [7:0]len;
  wire [31:0]m_axi_araddr;
  wire [3:0]m_axi_arcache;
  wire [0:0]m_axi_arlock;
  wire [2:0]m_axi_arprot;
  wire [3:0]m_axi_arqos;
  wire m_axi_arready;
  wire m_axi_arready_i;
  wire [3:0]m_axi_arregion;
  wire m_axi_arvalid;
  wire [511:0]m_axi_rdata;
  wire m_axi_rlast;
  wire [1:0]m_axi_rresp;
  wire m_axi_rvalid;
  wire [1:0]m_buf;
  wire m_cmd_empty;
  wire m_cmd_full;
  wire m_cmd_pop;
  wire m_fifo_rst;
  wire [12:0]m_raddr0;
  wire [12:0]m_raddr_incr;
  wire [15:0]m_rbuf_en;
  wire [3:0]m_rbuf_we;
  wire [3:0]m_wrap_cnt_reg__0;
  wire n_0_M_AXI_ARVALID_i_i_1;
  wire n_0_M_AXI_RREADY_i_i_1;
  wire n_0_S_AXI_ARREADY_i_i_1;
  wire \n_0_buf_cnt[0]_i_1__0 ;
  wire \n_0_buf_cnt[1]_i_1__0 ;
  wire n_0_dw_fifogen_rresp_i_2;
  wire n_0_dw_fifogen_rresp_i_3;
  wire n_0_dw_fifogen_rresp_i_4;
  wire n_0_dw_fifogen_rresp_i_6;
  wire n_0_dw_fifogen_rresp_i_7;
  wire n_0_dw_fifogen_rresp_i_8;
  wire n_0_first_rvalid_d1_i_1;
  wire \n_0_gen_ramb[15].ramb_inst_i_10 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_11 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_12 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_13 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_14 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_15 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_16 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_21 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_22 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_23 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_24 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_25 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_26 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_27 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_28 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_29 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_3 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_30 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_31 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_32 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_33 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_34 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_4 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_5 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_6 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_7 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_8 ;
  wire \n_0_gen_ramb[15].ramb_inst_i_9 ;
  wire n_0_large_incr_last_i_1;
  wire n_0_large_incr_last_i_3;
  wire n_0_large_incr_last_i_4;
  wire n_0_large_incr_last_reg;
  wire \n_0_m_buf[0]_i_1 ;
  wire \n_0_m_buf[1]_i_1 ;
  wire n_0_m_cmd_valid_i_1;
  wire n_0_m_cmd_valid_i_2;
  wire n_0_m_cmd_valid_reg;
  wire \n_0_m_raddr[0]_i_1 ;
  wire \n_0_m_raddr[0]_i_2 ;
  wire \n_0_m_raddr[0]_i_4 ;
  wire \n_0_m_raddr[0]_i_5 ;
  wire \n_0_m_raddr[0]_i_6 ;
  wire \n_0_m_raddr[0]_i_7 ;
  wire \n_0_m_raddr[0]_i_8 ;
  wire \n_0_m_raddr[0]_i_9 ;
  wire \n_0_m_raddr[10]_i_1 ;
  wire \n_0_m_raddr[11]_i_1 ;
  wire \n_0_m_raddr[11]_i_3 ;
  wire \n_0_m_raddr[11]_i_4 ;
  wire \n_0_m_raddr[11]_i_5 ;
  wire \n_0_m_raddr[11]_i_6 ;
  wire \n_0_m_raddr[12]_i_1 ;
  wire \n_0_m_raddr[12]_i_10 ;
  wire \n_0_m_raddr[12]_i_11 ;
  wire \n_0_m_raddr[12]_i_2 ;
  wire \n_0_m_raddr[12]_i_3 ;
  wire \n_0_m_raddr[12]_i_6 ;
  wire \n_0_m_raddr[12]_i_7 ;
  wire \n_0_m_raddr[12]_i_8 ;
  wire \n_0_m_raddr[12]_i_9 ;
  wire \n_0_m_raddr[1]_i_2 ;
  wire \n_0_m_raddr[1]_i_3 ;
  wire \n_0_m_raddr[2]_i_2 ;
  wire \n_0_m_raddr[2]_i_3 ;
  wire \n_0_m_raddr[3]_i_2 ;
  wire \n_0_m_raddr[3]_i_3 ;
  wire \n_0_m_raddr[4]_i_2 ;
  wire \n_0_m_raddr[4]_i_3 ;
  wire \n_0_m_raddr[5]_i_1 ;
  wire \n_0_m_raddr[5]_i_2 ;
  wire \n_0_m_raddr[5]_i_3 ;
  wire \n_0_m_raddr[6]_i_1 ;
  wire \n_0_m_raddr[6]_i_2 ;
  wire \n_0_m_raddr[6]_i_3 ;
  wire \n_0_m_raddr[7]_i_1 ;
  wire \n_0_m_raddr[7]_i_3 ;
  wire \n_0_m_raddr[7]_i_4 ;
  wire \n_0_m_raddr[7]_i_5 ;
  wire \n_0_m_raddr[7]_i_6 ;
  wire \n_0_m_raddr[7]_i_7 ;
  wire \n_0_m_raddr[7]_i_8 ;
  wire \n_0_m_raddr[8]_i_1 ;
  wire \n_0_m_raddr[8]_i_3 ;
  wire \n_0_m_raddr[8]_i_4 ;
  wire \n_0_m_raddr[8]_i_5 ;
  wire \n_0_m_raddr[8]_i_6 ;
  wire \n_0_m_raddr[8]_i_7 ;
  wire \n_0_m_raddr[8]_i_8 ;
  wire \n_0_m_raddr[9]_i_1 ;
  wire \n_0_m_raddr[9]_i_2 ;
  wire \n_0_m_raddr[9]_i_3 ;
  wire \n_0_m_raddr[9]_i_4 ;
  wire \n_0_m_raddr[9]_i_5 ;
  wire \n_0_m_raddr_reg[0]_i_3 ;
  wire \n_0_m_raddr_reg[10] ;
  wire \n_0_m_raddr_reg[11] ;
  wire \n_0_m_raddr_reg[11]_i_2 ;
  wire \n_0_m_raddr_reg[12] ;
  wire \n_0_m_raddr_reg[1]_i_1 ;
  wire \n_0_m_raddr_reg[2]_i_1 ;
  wire \n_0_m_raddr_reg[3]_i_1 ;
  wire \n_0_m_raddr_reg[4]_i_1 ;
  wire \n_0_m_raddr_reg[5] ;
  wire \n_0_m_raddr_reg[6] ;
  wire \n_0_m_raddr_reg[7] ;
  wire \n_0_m_raddr_reg[7]_i_2 ;
  wire \n_0_m_raddr_reg[8] ;
  wire \n_0_m_raddr_reg[8]_i_2 ;
  wire \n_0_m_raddr_reg[9] ;
  wire \n_0_m_rburst_reg[0] ;
  wire \n_0_m_rburst_reg[1] ;
  wire n_0_m_rresp_fifo_stall_i_1;
  wire n_0_m_rresp_fifo_stall_reg;
  wire \n_0_m_rresp_reg[0]_i_1 ;
  wire \n_0_m_rresp_reg[1]_i_1 ;
  wire \n_0_m_rresp_reg_reg[0] ;
  wire \n_0_m_rresp_reg_reg[1] ;
  wire \n_0_m_rsize_reg[0] ;
  wire \n_0_m_rsize_reg[1] ;
  wire \n_0_m_rsize_reg[2] ;
  wire \n_0_m_wrap_addr[1]_i_1 ;
  wire \n_0_m_wrap_addr[2]_i_1 ;
  wire \n_0_m_wrap_addr[3]_i_1 ;
  wire \n_0_m_wrap_addr[4]_i_1 ;
  wire \n_0_m_wrap_addr[4]_i_2 ;
  wire \n_0_m_wrap_addr[5]_i_1 ;
  wire \n_0_m_wrap_addr[5]_i_2 ;
  wire \n_0_m_wrap_addr_reg[1] ;
  wire \n_0_m_wrap_addr_reg[2] ;
  wire \n_0_m_wrap_addr_reg[3] ;
  wire \n_0_m_wrap_addr_reg[4] ;
  wire \n_0_m_wrap_addr_reg[5] ;
  wire \n_0_m_wrap_cnt[0]_i_2 ;
  wire \n_0_m_wrap_cnt[0]_i_3 ;
  wire \n_0_m_wrap_cnt[1]_i_2 ;
  wire \n_0_m_wrap_cnt[1]_i_3 ;
  wire \n_0_m_wrap_cnt[1]_i_4 ;
  wire \n_0_m_wrap_cnt[2]_i_2 ;
  wire \n_0_m_wrap_cnt[2]_i_3 ;
  wire \n_0_m_wrap_cnt[2]_i_4 ;
  wire \n_0_m_wrap_cnt[3]_i_2 ;
  wire \n_0_m_wrap_cnt[3]_i_3 ;
  wire \n_0_m_wrap_cnt[3]_i_4 ;
  wire n_0_rresp_wrap_i_1;
  wire n_0_rresp_wrap_i_2;
  wire n_0_rresp_wrap_i_3;
  wire n_0_rresp_wrap_reg;
  wire \n_0_s_buf[0]_i_1 ;
  wire \n_0_s_buf[1]_i_1 ;
  wire \n_0_s_buf[1]_i_2 ;
  wire n_0_s_cmd_fifo_i_2;
  wire \n_0_s_conv_len[0]_i_1 ;
  wire \n_0_s_conv_len[1]_i_1 ;
  wire \n_0_s_conv_len[2]_i_1 ;
  wire \n_0_s_conv_len[3]_i_1 ;
  wire \n_0_s_conv_len[3]_i_2 ;
  wire \n_0_s_id_d1[0]_i_1 ;
  wire \n_0_s_id_d2[0]_i_1 ;
  wire \n_0_s_raddr[0]_i_1 ;
  wire \n_0_s_raddr[10]_i_1 ;
  wire \n_0_s_raddr[11]_i_1 ;
  wire \n_0_s_raddr[12]_i_1 ;
  wire \n_0_s_raddr[12]_i_3 ;
  wire \n_0_s_raddr[1]_i_1 ;
  wire \n_0_s_raddr[1]_i_2 ;
  wire \n_0_s_raddr[2]_i_1 ;
  wire \n_0_s_raddr[2]_i_2 ;
  wire \n_0_s_raddr[3]_i_1 ;
  wire \n_0_s_raddr[3]_i_3 ;
  wire \n_0_s_raddr[3]_i_4 ;
  wire \n_0_s_raddr[3]_i_5 ;
  wire \n_0_s_raddr[3]_i_6 ;
  wire \n_0_s_raddr[4]_i_1 ;
  wire \n_0_s_raddr[4]_i_2 ;
  wire \n_0_s_raddr[5]_i_1 ;
  wire \n_0_s_raddr[6]_i_1 ;
  wire \n_0_s_raddr[6]_i_2 ;
  wire \n_0_s_raddr[6]_i_3 ;
  wire \n_0_s_raddr[7]_i_1 ;
  wire \n_0_s_raddr[7]_i_2 ;
  wire \n_0_s_raddr[7]_i_4 ;
  wire \n_0_s_raddr[7]_i_5 ;
  wire \n_0_s_raddr[7]_i_6 ;
  wire \n_0_s_raddr[7]_i_7 ;
  wire \n_0_s_raddr[8]_i_1 ;
  wire \n_0_s_raddr[8]_i_10 ;
  wire \n_0_s_raddr[8]_i_2 ;
  wire \n_0_s_raddr[8]_i_3 ;
  wire \n_0_s_raddr[8]_i_4 ;
  wire \n_0_s_raddr[8]_i_6 ;
  wire \n_0_s_raddr[8]_i_7 ;
  wire \n_0_s_raddr[8]_i_8 ;
  wire \n_0_s_raddr[8]_i_9 ;
  wire \n_0_s_raddr[9]_i_1 ;
  wire \n_0_s_raddr_reg[0] ;
  wire \n_0_s_raddr_reg[10] ;
  wire \n_0_s_raddr_reg[11] ;
  wire \n_0_s_raddr_reg[12] ;
  wire \n_0_s_raddr_reg[1] ;
  wire \n_0_s_raddr_reg[2] ;
  wire \n_0_s_raddr_reg[3] ;
  wire \n_0_s_raddr_reg[3]_i_2 ;
  wire \n_0_s_raddr_reg[4] ;
  wire \n_0_s_raddr_reg[5] ;
  wire \n_0_s_raddr_reg[6] ;
  wire \n_0_s_raddr_reg[7] ;
  wire \n_0_s_raddr_reg[7]_i_3 ;
  wire \n_0_s_raddr_reg[8] ;
  wire \n_0_s_raddr_reg[8]_i_5 ;
  wire \n_0_s_raddr_reg[9] ;
  wire \n_0_s_rcnt[0]_i_1 ;
  wire \n_0_s_rcnt[6]_i_2 ;
  wire \n_0_s_rcnt[7]_i_1 ;
  wire \n_0_s_rcnt[7]_i_3 ;
  wire n_0_s_rlast_i_1;
  wire n_0_s_rlast_i_2;
  wire n_0_s_rlast_i_3;
  wire n_0_s_rlast_i_4;
  wire n_0_s_rlast_i_5;
  wire \n_0_s_rresp_d1[0]_i_1 ;
  wire \n_0_s_rresp_d1[1]_i_1 ;
  wire \n_0_s_rresp_d2[0]_i_1 ;
  wire \n_0_s_rresp_d2[1]_i_1 ;
  wire n_0_s_rresp_fifo_stall_i_1;
  wire n_0_s_rresp_fifo_stall_reg;
  wire \n_0_s_rresp_reg[0]_i_1 ;
  wire \n_0_s_rresp_reg[1]_i_1 ;
  wire \n_0_s_rresp_reg[1]_i_2 ;
  wire \n_0_s_rresp_reg[1]_i_3 ;
  wire \n_0_s_rresp_reg[1]_i_4 ;
  wire \n_0_s_rresp_reg[1]_i_5 ;
  wire \n_0_s_rresp_reg[1]_i_6 ;
  wire \n_0_s_rresp_reg[1]_i_7 ;
  wire \n_0_s_rresp_reg_reg[0] ;
  wire \n_0_s_rresp_reg_reg[1] ;
  wire n_0_s_rvalid_i_1;
  wire n_0_s_rvalid_i_2;
  wire n_0_s_rvalid_i_3;
  wire n_0_s_rvalid_reg;
  wire \n_0_s_wrap_addr[1]_i_1 ;
  wire \n_0_s_wrap_addr[2]_i_1 ;
  wire \n_0_s_wrap_addr[3]_i_1 ;
  wire \n_0_s_wrap_addr[4]_i_1 ;
  wire \n_0_s_wrap_addr[4]_i_2 ;
  wire \n_0_s_wrap_addr[5]_i_1 ;
  wire \n_0_s_wrap_addr[5]_i_2 ;
  wire \n_0_s_wrap_addr_reg[1] ;
  wire \n_0_s_wrap_addr_reg[2] ;
  wire \n_0_s_wrap_addr_reg[3] ;
  wire \n_0_s_wrap_addr_reg[4] ;
  wire \n_0_s_wrap_addr_reg[5] ;
  wire \n_0_s_wrap_cnt[0]_i_2 ;
  wire \n_0_s_wrap_cnt[0]_i_3 ;
  wire \n_0_s_wrap_cnt[1]_i_2 ;
  wire \n_0_s_wrap_cnt[1]_i_3 ;
  wire \n_0_s_wrap_cnt[2]_i_2 ;
  wire \n_0_s_wrap_cnt[2]_i_3 ;
  wire \n_0_s_wrap_cnt[3]_i_2 ;
  wire \n_0_s_wrap_cnt[3]_i_3 ;
  wire \n_0_s_wrap_cnt[3]_i_4 ;
  wire \n_0_s_wrap_cnt[3]_i_5 ;
  wire n_14_m_cmd_fifo;
  wire n_15_m_cmd_fifo;
  wire n_16_m_cmd_fifo;
  wire n_18_m_cmd_fifo;
  wire n_19_m_cmd_fifo;
  wire \n_1_m_raddr_reg[0]_i_3 ;
  wire \n_1_m_raddr_reg[11]_i_2 ;
  wire \n_1_m_raddr_reg[12]_i_5 ;
  wire \n_1_m_raddr_reg[7]_i_2 ;
  wire \n_1_m_raddr_reg[8]_i_2 ;
  wire \n_1_s_raddr_reg[3]_i_2 ;
  wire \n_1_s_raddr_reg[7]_i_3 ;
  wire \n_1_s_raddr_reg[8]_i_5 ;
  wire n_20_m_cmd_fifo;
  wire n_21_m_cmd_fifo;
  wire n_22_m_cmd_fifo;
  wire n_29_s_cmd_fifo;
  wire n_2_dw_fifogen_rresp;
  wire \n_2_m_raddr_reg[0]_i_3 ;
  wire \n_2_m_raddr_reg[11]_i_2 ;
  wire \n_2_m_raddr_reg[12]_i_5 ;
  wire \n_2_m_raddr_reg[7]_i_2 ;
  wire \n_2_m_raddr_reg[8]_i_2 ;
  wire \n_2_s_raddr_reg[3]_i_2 ;
  wire \n_2_s_raddr_reg[7]_i_3 ;
  wire \n_2_s_raddr_reg[8]_i_5 ;
  wire n_30_s_cmd_fifo;
  wire n_3_dw_fifogen_rresp;
  wire \n_3_m_raddr_reg[0]_i_3 ;
  wire \n_3_m_raddr_reg[11]_i_2 ;
  wire \n_3_m_raddr_reg[12]_i_5 ;
  wire \n_3_m_raddr_reg[7]_i_2 ;
  wire \n_3_m_raddr_reg[8]_i_2 ;
  wire \n_3_s_raddr_reg[3]_i_2 ;
  wire \n_3_s_raddr_reg[7]_i_3 ;
  wire \n_3_s_raddr_reg[8]_i_5 ;
  wire [3:0]p_0_in;
  wire [7:1]p_0_in__0;
  wire [3:0]p_0_in__1;
  wire rresp_fifo_empty;
  wire rresp_fifo_full;
  wire rresp_fifo_pop;
  wire rresp_fifo_rst;
  wire [5:0]s_axi_araddr;
  wire [1:0]s_axi_arburst;
  wire [7:0]s_axi_arlen;
  wire [255:0]s_axi_rdata;
  wire [0:0]s_axi_rid;
  wire s_axi_rlast;
  wire s_axi_rready;
  wire [1:0]s_axi_rresp;
  wire [1:0]s_buf;
  wire [3:0]s_cmd_conv_len;
  wire [2:0]s_cmd_conv_size;
  wire s_cmd_empty;
  wire s_cmd_full;
  wire s_cmd_id;
  wire s_cmd_pop;
  wire s_cmd_push;
  wire [3:0]s_conv_len;
  wire [2:0]s_conv_size;
  wire s_id_d1;
  wire s_id_reg;
  wire [12:0]s_raddr;
  wire s_rbuf_en;
  wire [7:0]s_rcnt_reg__0;
  wire s_rlast;
  wire s_rlast_d1;
  wire [1:0]s_rresp_d1;
  wire s_rresp_fifo_stall17_out;
  wire [1:0]s_rresp_first;
  wire [2:0]s_rsize;
  wire s_rvalid_d1;
  wire [3:0]s_wrap_cnt_reg__0;
  wire [2:0]size;
  wire sr_arvalid;
  wire NLW_dw_fifogen_ar_almost_empty_UNCONNECTED;
  wire NLW_dw_fifogen_ar_almost_full_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_ar_overflow_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_ar_prog_full_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_ar_underflow_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_aw_overflow_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_aw_prog_full_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_aw_underflow_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_b_dbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_b_overflow_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_b_prog_empty_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_b_prog_full_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_b_sbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_b_underflow_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_r_dbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_r_overflow_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_r_prog_empty_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_r_prog_full_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_r_sbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_r_underflow_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_w_dbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_w_overflow_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_w_prog_empty_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_w_prog_full_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_w_sbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axi_w_underflow_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axis_dbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axis_overflow_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axis_prog_empty_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axis_prog_full_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axis_sbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_ar_axis_underflow_UNCONNECTED;
  wire NLW_dw_fifogen_ar_dbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_ar_empty_UNCONNECTED;
  wire NLW_dw_fifogen_ar_full_UNCONNECTED;
  wire NLW_dw_fifogen_ar_m_axi_awvalid_UNCONNECTED;
  wire NLW_dw_fifogen_ar_m_axi_bready_UNCONNECTED;
  wire NLW_dw_fifogen_ar_m_axi_rready_UNCONNECTED;
  wire NLW_dw_fifogen_ar_m_axi_wlast_UNCONNECTED;
  wire NLW_dw_fifogen_ar_m_axi_wvalid_UNCONNECTED;
  wire NLW_dw_fifogen_ar_m_axis_tlast_UNCONNECTED;
  wire NLW_dw_fifogen_ar_m_axis_tvalid_UNCONNECTED;
  wire NLW_dw_fifogen_ar_overflow_UNCONNECTED;
  wire NLW_dw_fifogen_ar_prog_empty_UNCONNECTED;
  wire NLW_dw_fifogen_ar_prog_full_UNCONNECTED;
  wire NLW_dw_fifogen_ar_rd_rst_busy_UNCONNECTED;
  wire NLW_dw_fifogen_ar_s_axi_awready_UNCONNECTED;
  wire NLW_dw_fifogen_ar_s_axi_bvalid_UNCONNECTED;
  wire NLW_dw_fifogen_ar_s_axi_rlast_UNCONNECTED;
  wire NLW_dw_fifogen_ar_s_axi_rvalid_UNCONNECTED;
  wire NLW_dw_fifogen_ar_s_axi_wready_UNCONNECTED;
  wire NLW_dw_fifogen_ar_s_axis_tready_UNCONNECTED;
  wire NLW_dw_fifogen_ar_sbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_ar_underflow_UNCONNECTED;
  wire NLW_dw_fifogen_ar_valid_UNCONNECTED;
  wire NLW_dw_fifogen_ar_wr_ack_UNCONNECTED;
  wire NLW_dw_fifogen_ar_wr_rst_busy_UNCONNECTED;
  wire [5:0]NLW_dw_fifogen_ar_axi_ar_data_count_UNCONNECTED;
  wire [5:0]NLW_dw_fifogen_ar_axi_ar_rd_data_count_UNCONNECTED;
  wire [5:0]NLW_dw_fifogen_ar_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_dw_fifogen_ar_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_dw_fifogen_ar_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_dw_fifogen_ar_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_dw_fifogen_ar_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_dw_fifogen_ar_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_dw_fifogen_ar_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_ar_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_ar_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_ar_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_ar_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_ar_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_ar_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_ar_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_ar_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_ar_axis_wr_data_count_UNCONNECTED;
  wire [9:0]NLW_dw_fifogen_ar_data_count_UNCONNECTED;
  wire [17:0]NLW_dw_fifogen_ar_dout_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_ar_m_axi_arid_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_ar_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_dw_fifogen_ar_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_dw_fifogen_ar_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_ar_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_ar_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_dw_fifogen_ar_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_ar_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_dw_fifogen_ar_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_ar_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_ar_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_dw_fifogen_ar_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_ar_m_axi_awuser_UNCONNECTED;
  wire [31:0]NLW_dw_fifogen_ar_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_ar_m_axi_wid_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_ar_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_ar_m_axi_wuser_UNCONNECTED;
  wire [63:0]NLW_dw_fifogen_ar_m_axis_tdata_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_ar_m_axis_tdest_UNCONNECTED;
  wire [7:0]NLW_dw_fifogen_ar_m_axis_tid_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_ar_m_axis_tkeep_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_ar_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_ar_m_axis_tuser_UNCONNECTED;
  wire [9:0]NLW_dw_fifogen_ar_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_ar_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_dw_fifogen_ar_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_ar_s_axi_buser_UNCONNECTED;
  wire [31:0]NLW_dw_fifogen_ar_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_ar_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_dw_fifogen_ar_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_ar_s_axi_ruser_UNCONNECTED;
  wire [9:0]NLW_dw_fifogen_ar_wr_data_count_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_almost_empty_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_almost_full_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_ar_overflow_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_ar_prog_full_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_ar_underflow_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_aw_overflow_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_aw_prog_full_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_aw_underflow_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_b_dbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_b_overflow_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_b_prog_empty_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_b_prog_full_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_b_sbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_b_underflow_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_r_dbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_r_overflow_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_r_prog_empty_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_r_prog_full_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_r_sbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_r_underflow_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_w_dbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_w_overflow_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_w_prog_empty_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_w_prog_full_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_w_sbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axi_w_underflow_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axis_dbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axis_overflow_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axis_prog_empty_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axis_prog_full_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axis_sbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_axis_underflow_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_dbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_m_axi_arvalid_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_m_axi_awvalid_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_m_axi_bready_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_m_axi_rready_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_m_axi_wlast_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_m_axi_wvalid_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_m_axis_tlast_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_m_axis_tvalid_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_overflow_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_prog_empty_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_prog_full_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_rd_rst_busy_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_s_axi_arready_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_s_axi_awready_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_s_axi_bvalid_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_s_axi_rlast_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_s_axi_rvalid_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_s_axi_wready_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_s_axis_tready_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_sbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_underflow_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_valid_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_wr_ack_UNCONNECTED;
  wire NLW_dw_fifogen_rresp_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_dw_fifogen_rresp_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_dw_fifogen_rresp_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_dw_fifogen_rresp_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_dw_fifogen_rresp_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_dw_fifogen_rresp_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_dw_fifogen_rresp_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_dw_fifogen_rresp_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_dw_fifogen_rresp_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_dw_fifogen_rresp_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_rresp_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_rresp_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_rresp_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_rresp_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_rresp_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_rresp_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_rresp_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_rresp_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_rresp_axis_wr_data_count_UNCONNECTED;
  wire [8:0]NLW_dw_fifogen_rresp_data_count_UNCONNECTED;
  wire [3:2]NLW_dw_fifogen_rresp_dout_UNCONNECTED;
  wire [31:0]NLW_dw_fifogen_rresp_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_dw_fifogen_rresp_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_rresp_m_axi_arcache_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_rresp_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_dw_fifogen_rresp_m_axi_arlen_UNCONNECTED;
  wire [1:0]NLW_dw_fifogen_rresp_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_dw_fifogen_rresp_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_rresp_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_rresp_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_dw_fifogen_rresp_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_rresp_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_dw_fifogen_rresp_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_dw_fifogen_rresp_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_rresp_m_axi_awcache_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_rresp_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_dw_fifogen_rresp_m_axi_awlen_UNCONNECTED;
  wire [1:0]NLW_dw_fifogen_rresp_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_dw_fifogen_rresp_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_rresp_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_rresp_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_dw_fifogen_rresp_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_rresp_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_dw_fifogen_rresp_m_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_rresp_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_dw_fifogen_rresp_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_rresp_m_axi_wuser_UNCONNECTED;
  wire [63:0]NLW_dw_fifogen_rresp_m_axis_tdata_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_rresp_m_axis_tdest_UNCONNECTED;
  wire [7:0]NLW_dw_fifogen_rresp_m_axis_tid_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_rresp_m_axis_tkeep_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_rresp_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_rresp_m_axis_tuser_UNCONNECTED;
  wire [8:0]NLW_dw_fifogen_rresp_rd_data_count_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_rresp_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_dw_fifogen_rresp_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_rresp_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_dw_fifogen_rresp_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_rresp_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_dw_fifogen_rresp_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_rresp_s_axi_ruser_UNCONNECTED;
  wire [8:0]NLW_dw_fifogen_rresp_wr_data_count_UNCONNECTED;
  wire [15:0]\NLW_gen_ramb[0].ramb_inst_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[0].ramb_inst_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[0].ramb_inst_DOPBDOP_UNCONNECTED ;
  wire [15:0]\NLW_gen_ramb[10].ramb_inst_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[10].ramb_inst_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[10].ramb_inst_DOPBDOP_UNCONNECTED ;
  wire [15:0]\NLW_gen_ramb[11].ramb_inst_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[11].ramb_inst_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[11].ramb_inst_DOPBDOP_UNCONNECTED ;
  wire [15:0]\NLW_gen_ramb[12].ramb_inst_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[12].ramb_inst_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[12].ramb_inst_DOPBDOP_UNCONNECTED ;
  wire [15:0]\NLW_gen_ramb[13].ramb_inst_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[13].ramb_inst_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[13].ramb_inst_DOPBDOP_UNCONNECTED ;
  wire [15:0]\NLW_gen_ramb[14].ramb_inst_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[14].ramb_inst_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[14].ramb_inst_DOPBDOP_UNCONNECTED ;
  wire [15:0]\NLW_gen_ramb[15].ramb_inst_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[15].ramb_inst_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[15].ramb_inst_DOPBDOP_UNCONNECTED ;
  wire [15:0]\NLW_gen_ramb[1].ramb_inst_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[1].ramb_inst_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[1].ramb_inst_DOPBDOP_UNCONNECTED ;
  wire [15:0]\NLW_gen_ramb[2].ramb_inst_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[2].ramb_inst_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[2].ramb_inst_DOPBDOP_UNCONNECTED ;
  wire [15:0]\NLW_gen_ramb[3].ramb_inst_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[3].ramb_inst_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[3].ramb_inst_DOPBDOP_UNCONNECTED ;
  wire [15:0]\NLW_gen_ramb[4].ramb_inst_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[4].ramb_inst_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[4].ramb_inst_DOPBDOP_UNCONNECTED ;
  wire [15:0]\NLW_gen_ramb[5].ramb_inst_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[5].ramb_inst_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[5].ramb_inst_DOPBDOP_UNCONNECTED ;
  wire [15:0]\NLW_gen_ramb[6].ramb_inst_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[6].ramb_inst_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[6].ramb_inst_DOPBDOP_UNCONNECTED ;
  wire [15:0]\NLW_gen_ramb[7].ramb_inst_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[7].ramb_inst_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[7].ramb_inst_DOPBDOP_UNCONNECTED ;
  wire [15:0]\NLW_gen_ramb[8].ramb_inst_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[8].ramb_inst_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[8].ramb_inst_DOPBDOP_UNCONNECTED ;
  wire [15:0]\NLW_gen_ramb[9].ramb_inst_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[9].ramb_inst_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_gen_ramb[9].ramb_inst_DOPBDOP_UNCONNECTED ;
  wire NLW_m_cmd_fifo_almost_empty_UNCONNECTED;
  wire NLW_m_cmd_fifo_almost_full_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_ar_overflow_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_ar_prog_full_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_ar_underflow_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_aw_overflow_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_aw_prog_full_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_aw_underflow_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_b_dbiterr_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_b_overflow_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_b_prog_empty_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_b_prog_full_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_b_sbiterr_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_b_underflow_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_r_dbiterr_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_r_overflow_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_r_prog_empty_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_r_prog_full_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_r_sbiterr_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_r_underflow_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_w_dbiterr_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_w_overflow_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_w_prog_empty_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_w_prog_full_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_w_sbiterr_UNCONNECTED;
  wire NLW_m_cmd_fifo_axi_w_underflow_UNCONNECTED;
  wire NLW_m_cmd_fifo_axis_dbiterr_UNCONNECTED;
  wire NLW_m_cmd_fifo_axis_overflow_UNCONNECTED;
  wire NLW_m_cmd_fifo_axis_prog_empty_UNCONNECTED;
  wire NLW_m_cmd_fifo_axis_prog_full_UNCONNECTED;
  wire NLW_m_cmd_fifo_axis_sbiterr_UNCONNECTED;
  wire NLW_m_cmd_fifo_axis_underflow_UNCONNECTED;
  wire NLW_m_cmd_fifo_dbiterr_UNCONNECTED;
  wire NLW_m_cmd_fifo_m_axi_arvalid_UNCONNECTED;
  wire NLW_m_cmd_fifo_m_axi_awvalid_UNCONNECTED;
  wire NLW_m_cmd_fifo_m_axi_bready_UNCONNECTED;
  wire NLW_m_cmd_fifo_m_axi_rready_UNCONNECTED;
  wire NLW_m_cmd_fifo_m_axi_wlast_UNCONNECTED;
  wire NLW_m_cmd_fifo_m_axi_wvalid_UNCONNECTED;
  wire NLW_m_cmd_fifo_m_axis_tlast_UNCONNECTED;
  wire NLW_m_cmd_fifo_m_axis_tvalid_UNCONNECTED;
  wire NLW_m_cmd_fifo_overflow_UNCONNECTED;
  wire NLW_m_cmd_fifo_prog_empty_UNCONNECTED;
  wire NLW_m_cmd_fifo_prog_full_UNCONNECTED;
  wire NLW_m_cmd_fifo_rd_rst_busy_UNCONNECTED;
  wire NLW_m_cmd_fifo_s_axi_arready_UNCONNECTED;
  wire NLW_m_cmd_fifo_s_axi_awready_UNCONNECTED;
  wire NLW_m_cmd_fifo_s_axi_bvalid_UNCONNECTED;
  wire NLW_m_cmd_fifo_s_axi_rlast_UNCONNECTED;
  wire NLW_m_cmd_fifo_s_axi_rvalid_UNCONNECTED;
  wire NLW_m_cmd_fifo_s_axi_wready_UNCONNECTED;
  wire NLW_m_cmd_fifo_s_axis_tready_UNCONNECTED;
  wire NLW_m_cmd_fifo_sbiterr_UNCONNECTED;
  wire NLW_m_cmd_fifo_underflow_UNCONNECTED;
  wire NLW_m_cmd_fifo_valid_UNCONNECTED;
  wire NLW_m_cmd_fifo_wr_ack_UNCONNECTED;
  wire NLW_m_cmd_fifo_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_m_cmd_fifo_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_m_cmd_fifo_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_m_cmd_fifo_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_m_cmd_fifo_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_m_cmd_fifo_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_m_cmd_fifo_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_m_cmd_fifo_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_m_cmd_fifo_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_m_cmd_fifo_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_m_cmd_fifo_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_m_cmd_fifo_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_m_cmd_fifo_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_m_cmd_fifo_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_m_cmd_fifo_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_m_cmd_fifo_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_m_cmd_fifo_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_m_cmd_fifo_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_m_cmd_fifo_axis_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_m_cmd_fifo_data_count_UNCONNECTED;
  wire [12:5]NLW_m_cmd_fifo_dout_UNCONNECTED;
  wire [31:0]NLW_m_cmd_fifo_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_m_cmd_fifo_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_m_cmd_fifo_m_axi_arcache_UNCONNECTED;
  wire [3:0]NLW_m_cmd_fifo_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_m_cmd_fifo_m_axi_arlen_UNCONNECTED;
  wire [1:0]NLW_m_cmd_fifo_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_m_cmd_fifo_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_m_cmd_fifo_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_m_cmd_fifo_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_m_cmd_fifo_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_m_cmd_fifo_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_m_cmd_fifo_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_m_cmd_fifo_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_m_cmd_fifo_m_axi_awcache_UNCONNECTED;
  wire [3:0]NLW_m_cmd_fifo_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_m_cmd_fifo_m_axi_awlen_UNCONNECTED;
  wire [1:0]NLW_m_cmd_fifo_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_m_cmd_fifo_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_m_cmd_fifo_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_m_cmd_fifo_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_m_cmd_fifo_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_m_cmd_fifo_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_m_cmd_fifo_m_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_m_cmd_fifo_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_m_cmd_fifo_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_m_cmd_fifo_m_axi_wuser_UNCONNECTED;
  wire [63:0]NLW_m_cmd_fifo_m_axis_tdata_UNCONNECTED;
  wire [3:0]NLW_m_cmd_fifo_m_axis_tdest_UNCONNECTED;
  wire [7:0]NLW_m_cmd_fifo_m_axis_tid_UNCONNECTED;
  wire [3:0]NLW_m_cmd_fifo_m_axis_tkeep_UNCONNECTED;
  wire [3:0]NLW_m_cmd_fifo_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_m_cmd_fifo_m_axis_tuser_UNCONNECTED;
  wire [4:0]NLW_m_cmd_fifo_rd_data_count_UNCONNECTED;
  wire [3:0]NLW_m_cmd_fifo_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_m_cmd_fifo_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_m_cmd_fifo_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_m_cmd_fifo_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_m_cmd_fifo_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_m_cmd_fifo_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_m_cmd_fifo_s_axi_ruser_UNCONNECTED;
  wire [4:0]NLW_m_cmd_fifo_wr_data_count_UNCONNECTED;
  wire [3:0]\NLW_m_raddr_reg[12]_i_4_CO_UNCONNECTED ;
  wire [3:1]\NLW_m_raddr_reg[12]_i_4_O_UNCONNECTED ;
  wire [3:3]\NLW_m_raddr_reg[12]_i_5_CO_UNCONNECTED ;
  wire NLW_s_cmd_fifo_almost_empty_UNCONNECTED;
  wire NLW_s_cmd_fifo_almost_full_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_ar_overflow_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_ar_prog_full_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_ar_underflow_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_aw_overflow_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_aw_prog_full_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_aw_underflow_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_b_dbiterr_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_b_overflow_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_b_prog_empty_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_b_prog_full_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_b_sbiterr_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_b_underflow_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_r_dbiterr_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_r_overflow_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_r_prog_empty_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_r_prog_full_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_r_sbiterr_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_r_underflow_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_w_dbiterr_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_w_overflow_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_w_prog_empty_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_w_prog_full_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_w_sbiterr_UNCONNECTED;
  wire NLW_s_cmd_fifo_axi_w_underflow_UNCONNECTED;
  wire NLW_s_cmd_fifo_axis_dbiterr_UNCONNECTED;
  wire NLW_s_cmd_fifo_axis_overflow_UNCONNECTED;
  wire NLW_s_cmd_fifo_axis_prog_empty_UNCONNECTED;
  wire NLW_s_cmd_fifo_axis_prog_full_UNCONNECTED;
  wire NLW_s_cmd_fifo_axis_sbiterr_UNCONNECTED;
  wire NLW_s_cmd_fifo_axis_underflow_UNCONNECTED;
  wire NLW_s_cmd_fifo_dbiterr_UNCONNECTED;
  wire NLW_s_cmd_fifo_m_axi_arvalid_UNCONNECTED;
  wire NLW_s_cmd_fifo_m_axi_awvalid_UNCONNECTED;
  wire NLW_s_cmd_fifo_m_axi_bready_UNCONNECTED;
  wire NLW_s_cmd_fifo_m_axi_rready_UNCONNECTED;
  wire NLW_s_cmd_fifo_m_axi_wlast_UNCONNECTED;
  wire NLW_s_cmd_fifo_m_axi_wvalid_UNCONNECTED;
  wire NLW_s_cmd_fifo_m_axis_tlast_UNCONNECTED;
  wire NLW_s_cmd_fifo_m_axis_tvalid_UNCONNECTED;
  wire NLW_s_cmd_fifo_overflow_UNCONNECTED;
  wire NLW_s_cmd_fifo_prog_empty_UNCONNECTED;
  wire NLW_s_cmd_fifo_prog_full_UNCONNECTED;
  wire NLW_s_cmd_fifo_rd_rst_busy_UNCONNECTED;
  wire NLW_s_cmd_fifo_s_axi_arready_UNCONNECTED;
  wire NLW_s_cmd_fifo_s_axi_awready_UNCONNECTED;
  wire NLW_s_cmd_fifo_s_axi_bvalid_UNCONNECTED;
  wire NLW_s_cmd_fifo_s_axi_rlast_UNCONNECTED;
  wire NLW_s_cmd_fifo_s_axi_rvalid_UNCONNECTED;
  wire NLW_s_cmd_fifo_s_axi_wready_UNCONNECTED;
  wire NLW_s_cmd_fifo_s_axis_tready_UNCONNECTED;
  wire NLW_s_cmd_fifo_sbiterr_UNCONNECTED;
  wire NLW_s_cmd_fifo_underflow_UNCONNECTED;
  wire NLW_s_cmd_fifo_valid_UNCONNECTED;
  wire NLW_s_cmd_fifo_wr_ack_UNCONNECTED;
  wire NLW_s_cmd_fifo_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_s_cmd_fifo_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_s_cmd_fifo_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_s_cmd_fifo_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_s_cmd_fifo_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_s_cmd_fifo_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_s_cmd_fifo_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_s_cmd_fifo_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_s_cmd_fifo_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_s_cmd_fifo_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_s_cmd_fifo_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_s_cmd_fifo_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_s_cmd_fifo_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_s_cmd_fifo_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_s_cmd_fifo_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_s_cmd_fifo_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_s_cmd_fifo_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_s_cmd_fifo_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_s_cmd_fifo_axis_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_s_cmd_fifo_data_count_UNCONNECTED;
  wire [31:0]NLW_s_cmd_fifo_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_s_cmd_fifo_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_s_cmd_fifo_m_axi_arcache_UNCONNECTED;
  wire [3:0]NLW_s_cmd_fifo_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_s_cmd_fifo_m_axi_arlen_UNCONNECTED;
  wire [1:0]NLW_s_cmd_fifo_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_s_cmd_fifo_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_s_cmd_fifo_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_s_cmd_fifo_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_s_cmd_fifo_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_s_cmd_fifo_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_s_cmd_fifo_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_s_cmd_fifo_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_s_cmd_fifo_m_axi_awcache_UNCONNECTED;
  wire [3:0]NLW_s_cmd_fifo_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_s_cmd_fifo_m_axi_awlen_UNCONNECTED;
  wire [1:0]NLW_s_cmd_fifo_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_s_cmd_fifo_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_s_cmd_fifo_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_s_cmd_fifo_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_s_cmd_fifo_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_s_cmd_fifo_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_s_cmd_fifo_m_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_s_cmd_fifo_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_s_cmd_fifo_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_s_cmd_fifo_m_axi_wuser_UNCONNECTED;
  wire [63:0]NLW_s_cmd_fifo_m_axis_tdata_UNCONNECTED;
  wire [3:0]NLW_s_cmd_fifo_m_axis_tdest_UNCONNECTED;
  wire [7:0]NLW_s_cmd_fifo_m_axis_tid_UNCONNECTED;
  wire [3:0]NLW_s_cmd_fifo_m_axis_tkeep_UNCONNECTED;
  wire [3:0]NLW_s_cmd_fifo_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_s_cmd_fifo_m_axis_tuser_UNCONNECTED;
  wire [4:0]NLW_s_cmd_fifo_rd_data_count_UNCONNECTED;
  wire [3:0]NLW_s_cmd_fifo_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_s_cmd_fifo_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_s_cmd_fifo_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_s_cmd_fifo_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_s_cmd_fifo_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_s_cmd_fifo_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_s_cmd_fifo_s_axi_ruser_UNCONNECTED;
  wire [4:0]NLW_s_cmd_fifo_wr_data_count_UNCONNECTED;
  wire [3:0]\NLW_s_raddr_reg[12]_i_2_CO_UNCONNECTED ;
  wire [3:1]\NLW_s_raddr_reg[12]_i_2_O_UNCONNECTED ;

(* SOFT_HLUTNM = "soft_lutpair75" *) 
   LUT5 #(
    .INIT(32'h0040F040)) 
     M_AXI_ARVALID_i_i_1
       (.I0(m_cmd_full),
        .I1(ar_fifo_valid),
        .I2(I6),
        .I3(m_axi_arvalid),
        .I4(m_axi_arready),
        .O(n_0_M_AXI_ARVALID_i_i_1));
FDRE M_AXI_ARVALID_i_reg
       (.C(I4),
        .CE(1'b1),
        .D(n_0_M_AXI_ARVALID_i_i_1),
        .Q(m_axi_arvalid),
        .R(1'b0));
LUT6 #(
    .INIT(64'h13103333F3F0F3F3)) 
     M_AXI_RREADY_i_i_1
       (.I0(m_axi_rlast),
        .I1(rresp_fifo_full),
        .I2(O2),
        .I3(n_0_m_cmd_valid_reg),
        .I4(m_cmd_empty),
        .I5(m_axi_rvalid),
        .O(n_0_M_AXI_RREADY_i_i_1));
FDRE M_AXI_RREADY_i_reg
       (.C(I4),
        .CE(1'b1),
        .D(n_0_M_AXI_RREADY_i_i_1),
        .Q(O2),
        .R(m_fifo_rst));
(* SOFT_HLUTNM = "soft_lutpair68" *) 
   LUT5 #(
    .INIT(32'hF7A20000)) 
     S_AXI_ARREADY_i_i_1
       (.I0(m_axi_arready_i),
        .I1(sr_arvalid),
        .I2(I2),
        .I3(S_AXI_ARREADY_i0),
        .I4(I5),
        .O(n_0_S_AXI_ARREADY_i_i_1));
LUT4 #(
    .INIT(16'h0070)) 
     S_AXI_ARREADY_i_i_2
       (.I0(buf_cnt[0]),
        .I1(buf_cnt[1]),
        .I2(ar_fifo_ready),
        .I3(s_cmd_full),
        .O(S_AXI_ARREADY_i0));
FDRE S_AXI_ARREADY_i_reg
       (.C(I3),
        .CE(1'b1),
        .D(n_0_S_AXI_ARREADY_i_i_1),
        .Q(m_axi_arready_i),
        .R(1'b0));
LUT1 #(
    .INIT(2'h1)) 
     S_AXI_WREADY_i_i_1
       (.I0(I5),
        .O(SR));
LUT6 #(
    .INIT(64'h08F7F70808F70008)) 
     \buf_cnt[0]_i_1__0 
       (.I0(m_axi_arready_i),
        .I1(sr_arvalid),
        .I2(I2),
        .I3(s_cmd_pop),
        .I4(buf_cnt[0]),
        .I5(buf_cnt[1]),
        .O(\n_0_buf_cnt[0]_i_1__0 ));
LUT6 #(
    .INIT(64'hFFF708FF00080000)) 
     \buf_cnt[1]_i_1__0 
       (.I0(m_axi_arready_i),
        .I1(sr_arvalid),
        .I2(I2),
        .I3(s_cmd_pop),
        .I4(buf_cnt[0]),
        .I5(buf_cnt[1]),
        .O(\n_0_buf_cnt[1]_i_1__0 ));
FDRE \buf_cnt_reg[0] 
       (.C(I3),
        .CE(1'b1),
        .D(\n_0_buf_cnt[0]_i_1__0 ),
        .Q(buf_cnt[0]),
        .R(SR));
FDRE \buf_cnt_reg[1] 
       (.C(I3),
        .CE(1'b1),
        .D(\n_0_buf_cnt[1]_i_1__0 ),
        .Q(buf_cnt[1]),
        .R(SR));
LUT3 #(
    .INIT(8'h04)) 
     cmd_push_block_i_1__0
       (.I0(m_axi_arready_i),
        .I1(sr_arvalid),
        .I2(I2),
        .O(cmd_push_block0));
(* C_ADD_NGC_CONSTRAINT = "0" *) 
   (* C_APPLICATION_TYPE_AXIS = "0" *) 
   (* C_APPLICATION_TYPE_RACH = "0" *) 
   (* C_APPLICATION_TYPE_RDCH = "0" *) 
   (* C_APPLICATION_TYPE_WACH = "0" *) 
   (* C_APPLICATION_TYPE_WDCH = "0" *) 
   (* C_APPLICATION_TYPE_WRCH = "0" *) 
   (* C_AXIS_TDATA_WIDTH = "64" *) 
   (* C_AXIS_TDEST_WIDTH = "4" *) 
   (* C_AXIS_TID_WIDTH = "8" *) 
   (* C_AXIS_TKEEP_WIDTH = "4" *) 
   (* C_AXIS_TSTRB_WIDTH = "4" *) 
   (* C_AXIS_TUSER_WIDTH = "4" *) 
   (* C_AXIS_TYPE = "0" *) 
   (* C_AXI_ADDR_WIDTH = "32" *) 
   (* C_AXI_ARUSER_WIDTH = "1" *) 
   (* C_AXI_AWUSER_WIDTH = "1" *) 
   (* C_AXI_BUSER_WIDTH = "1" *) 
   (* C_AXI_DATA_WIDTH = "32" *) 
   (* C_AXI_ID_WIDTH = "1" *) 
   (* C_AXI_LEN_WIDTH = "8" *) 
   (* C_AXI_LOCK_WIDTH = "1" *) 
   (* C_AXI_RUSER_WIDTH = "1" *) 
   (* C_AXI_TYPE = "1" *) 
   (* C_AXI_WUSER_WIDTH = "1" *) 
   (* C_COMMON_CLOCK = "0" *) 
   (* C_COUNT_TYPE = "0" *) 
   (* C_DATA_COUNT_WIDTH = "10" *) 
   (* C_DEFAULT_VALUE = "BlankString" *) 
   (* C_DIN_WIDTH = "18" *) 
   (* C_DIN_WIDTH_AXIS = "1" *) 
   (* C_DIN_WIDTH_RACH = "61" *) 
   (* C_DIN_WIDTH_RDCH = "35" *) 
   (* C_DIN_WIDTH_WACH = "61" *) 
   (* C_DIN_WIDTH_WDCH = "37" *) 
   (* C_DIN_WIDTH_WRCH = "2" *) 
   (* C_DOUT_RST_VAL = "0" *) 
   (* C_DOUT_WIDTH = "18" *) 
   (* C_ENABLE_RLOCS = "0" *) 
   (* C_ENABLE_RST_SYNC = "1" *) 
   (* C_ERROR_INJECTION_TYPE = "0" *) 
   (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
   (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
   (* C_FAMILY = "virtex7" *) 
   (* C_FULL_FLAGS_RST_VAL = "1" *) 
   (* C_HAS_ALMOST_EMPTY = "0" *) 
   (* C_HAS_ALMOST_FULL = "0" *) 
   (* C_HAS_AXIS_TDATA = "0" *) 
   (* C_HAS_AXIS_TDEST = "0" *) 
   (* C_HAS_AXIS_TID = "0" *) 
   (* C_HAS_AXIS_TKEEP = "0" *) 
   (* C_HAS_AXIS_TLAST = "0" *) 
   (* C_HAS_AXIS_TREADY = "1" *) 
   (* C_HAS_AXIS_TSTRB = "0" *) 
   (* C_HAS_AXIS_TUSER = "0" *) 
   (* C_HAS_AXI_ARUSER = "0" *) 
   (* C_HAS_AXI_AWUSER = "0" *) 
   (* C_HAS_AXI_BUSER = "0" *) 
   (* C_HAS_AXI_ID = "0" *) 
   (* C_HAS_AXI_RD_CHANNEL = "1" *) 
   (* C_HAS_AXI_RUSER = "0" *) 
   (* C_HAS_AXI_WR_CHANNEL = "0" *) 
   (* C_HAS_AXI_WUSER = "0" *) 
   (* C_HAS_BACKUP = "0" *) 
   (* C_HAS_DATA_COUNT = "0" *) 
   (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
   (* C_HAS_DATA_COUNTS_RACH = "0" *) 
   (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
   (* C_HAS_DATA_COUNTS_WACH = "0" *) 
   (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
   (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
   (* C_HAS_INT_CLK = "0" *) 
   (* C_HAS_MASTER_CE = "0" *) 
   (* C_HAS_MEMINIT_FILE = "0" *) 
   (* C_HAS_OVERFLOW = "0" *) 
   (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
   (* C_HAS_PROG_FLAGS_RACH = "0" *) 
   (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
   (* C_HAS_PROG_FLAGS_WACH = "0" *) 
   (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
   (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
   (* C_HAS_RD_DATA_COUNT = "0" *) 
   (* C_HAS_RD_RST = "0" *) 
   (* C_HAS_RST = "1" *) 
   (* C_HAS_SLAVE_CE = "0" *) 
   (* C_HAS_SRST = "0" *) 
   (* C_HAS_UNDERFLOW = "0" *) 
   (* C_HAS_VALID = "0" *) 
   (* C_HAS_WR_ACK = "0" *) 
   (* C_HAS_WR_DATA_COUNT = "0" *) 
   (* C_HAS_WR_RST = "0" *) 
   (* C_IMPLEMENTATION_TYPE = "0" *) 
   (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
   (* C_IMPLEMENTATION_TYPE_RACH = "12" *) 
   (* C_IMPLEMENTATION_TYPE_RDCH = "11" *) 
   (* C_IMPLEMENTATION_TYPE_WACH = "12" *) 
   (* C_IMPLEMENTATION_TYPE_WDCH = "11" *) 
   (* C_IMPLEMENTATION_TYPE_WRCH = "12" *) 
   (* C_INIT_WR_PNTR_VAL = "0" *) 
   (* C_INTERFACE_TYPE = "2" *) 
   (* C_MEMORY_TYPE = "1" *) 
   (* C_MIF_FILE_NAME = "BlankString" *) 
   (* C_MSGON_VAL = "1" *) 
   (* C_OPTIMIZATION_MODE = "0" *) 
   (* C_OVERFLOW_LOW = "0" *) 
   (* C_POWER_SAVING_MODE = "0" *) 
   (* C_PRELOAD_LATENCY = "1" *) 
   (* C_PRELOAD_REGS = "0" *) 
   (* C_PRIM_FIFO_TYPE = "4kx4" *) 
   (* C_PRIM_FIFO_TYPE_AXIS = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_RDCH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_WDCH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "2" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "14" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "30" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "14" *) 
   (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "3" *) 
   (* C_PROG_EMPTY_TYPE = "0" *) 
   (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
   (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
   (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
   (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
   (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
   (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL = "1022" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "15" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "31" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "15" *) 
   (* C_PROG_FULL_THRESH_NEGATE_VAL = "1021" *) 
   (* C_PROG_FULL_TYPE = "0" *) 
   (* C_PROG_FULL_TYPE_AXIS = "0" *) 
   (* C_PROG_FULL_TYPE_RACH = "0" *) 
   (* C_PROG_FULL_TYPE_RDCH = "0" *) 
   (* C_PROG_FULL_TYPE_WACH = "0" *) 
   (* C_PROG_FULL_TYPE_WDCH = "0" *) 
   (* C_PROG_FULL_TYPE_WRCH = "0" *) 
   (* C_RACH_TYPE = "0" *) 
   (* C_RDCH_TYPE = "2" *) 
   (* C_RD_DATA_COUNT_WIDTH = "10" *) 
   (* C_RD_DEPTH = "1024" *) 
   (* C_RD_FREQ = "1" *) 
   (* C_RD_PNTR_WIDTH = "10" *) 
   (* C_REG_SLICE_MODE_AXIS = "0" *) 
   (* C_REG_SLICE_MODE_RACH = "0" *) 
   (* C_REG_SLICE_MODE_RDCH = "0" *) 
   (* C_REG_SLICE_MODE_WACH = "0" *) 
   (* C_REG_SLICE_MODE_WDCH = "0" *) 
   (* C_REG_SLICE_MODE_WRCH = "0" *) 
   (* C_SYNCHRONIZER_STAGE = "3" *) 
   (* C_UNDERFLOW_LOW = "0" *) 
   (* C_USE_COMMON_OVERFLOW = "0" *) 
   (* C_USE_COMMON_UNDERFLOW = "0" *) 
   (* C_USE_DEFAULT_SETTINGS = "0" *) 
   (* C_USE_DOUT_RST = "1" *) 
   (* C_USE_ECC = "0" *) 
   (* C_USE_ECC_AXIS = "0" *) 
   (* C_USE_ECC_RACH = "0" *) 
   (* C_USE_ECC_RDCH = "0" *) 
   (* C_USE_ECC_WACH = "0" *) 
   (* C_USE_ECC_WDCH = "0" *) 
   (* C_USE_ECC_WRCH = "0" *) 
   (* C_USE_EMBEDDED_REG = "0" *) 
   (* C_USE_FIFO16_FLAGS = "0" *) 
   (* C_USE_FWFT_DATA_COUNT = "0" *) 
   (* C_USE_PIPELINE_REG = "0" *) 
   (* C_VALID_LOW = "0" *) 
   (* C_WACH_TYPE = "0" *) 
   (* C_WDCH_TYPE = "0" *) 
   (* C_WRCH_TYPE = "0" *) 
   (* C_WR_ACK_LOW = "0" *) 
   (* C_WR_DATA_COUNT_WIDTH = "10" *) 
   (* C_WR_DEPTH = "1024" *) 
   (* C_WR_DEPTH_AXIS = "1024" *) 
   (* C_WR_DEPTH_RACH = "32" *) 
   (* C_WR_DEPTH_RDCH = "1024" *) 
   (* C_WR_DEPTH_WACH = "16" *) 
   (* C_WR_DEPTH_WDCH = "1024" *) 
   (* C_WR_DEPTH_WRCH = "16" *) 
   (* C_WR_FREQ = "1" *) 
   (* C_WR_PNTR_WIDTH = "10" *) 
   (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
   (* C_WR_PNTR_WIDTH_RACH = "5" *) 
   (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
   (* C_WR_PNTR_WIDTH_WACH = "4" *) 
   (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
   (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
   (* C_WR_RESPONSE_LATENCY = "1" *) 
   (* DONT_TOUCH *) 
   axi_dwidth_converter_0_fifo_generator_v12_0__parameterized2 dw_fifogen_ar
       (.almost_empty(NLW_dw_fifogen_ar_almost_empty_UNCONNECTED),
        .almost_full(NLW_dw_fifogen_ar_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_dw_fifogen_ar_axi_ar_data_count_UNCONNECTED[5:0]),
        .axi_ar_dbiterr(NLW_dw_fifogen_ar_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_dw_fifogen_ar_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_dw_fifogen_ar_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_dw_fifogen_ar_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_dw_fifogen_ar_axi_ar_rd_data_count_UNCONNECTED[5:0]),
        .axi_ar_sbiterr(NLW_dw_fifogen_ar_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_dw_fifogen_ar_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_dw_fifogen_ar_axi_ar_wr_data_count_UNCONNECTED[5:0]),
        .axi_aw_data_count(NLW_dw_fifogen_ar_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_dw_fifogen_ar_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_dw_fifogen_ar_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_dw_fifogen_ar_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_dw_fifogen_ar_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_dw_fifogen_ar_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_dw_fifogen_ar_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_dw_fifogen_ar_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_dw_fifogen_ar_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_dw_fifogen_ar_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_dw_fifogen_ar_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_dw_fifogen_ar_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_dw_fifogen_ar_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_dw_fifogen_ar_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_dw_fifogen_ar_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_dw_fifogen_ar_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_dw_fifogen_ar_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_dw_fifogen_ar_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_dw_fifogen_ar_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_dw_fifogen_ar_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_dw_fifogen_ar_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_dw_fifogen_ar_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_dw_fifogen_ar_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_dw_fifogen_ar_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_dw_fifogen_ar_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_dw_fifogen_ar_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_dw_fifogen_ar_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_dw_fifogen_ar_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_dw_fifogen_ar_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_dw_fifogen_ar_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_dw_fifogen_ar_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_dw_fifogen_ar_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_dw_fifogen_ar_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_dw_fifogen_ar_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_dw_fifogen_ar_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_dw_fifogen_ar_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_dw_fifogen_ar_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_dw_fifogen_ar_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_dw_fifogen_ar_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_dw_fifogen_ar_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_dw_fifogen_ar_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_dw_fifogen_ar_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_dw_fifogen_ar_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_dw_fifogen_ar_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_dw_fifogen_ar_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_dw_fifogen_ar_data_count_UNCONNECTED[9:0]),
        .dbiterr(NLW_dw_fifogen_ar_dbiterr_UNCONNECTED),
        .din({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dout(NLW_dw_fifogen_ar_dout_UNCONNECTED[17:0]),
        .empty(NLW_dw_fifogen_ar_empty_UNCONNECTED),
        .full(NLW_dw_fifogen_ar_full_UNCONNECTED),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(I4),
        .m_aclk_en(1'b0),
        .m_axi_araddr(m_axi_araddr),
        .m_axi_arburst(din[1:0]),
        .m_axi_arcache(m_axi_arcache),
        .m_axi_arid(NLW_dw_fifogen_ar_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(din[12:5]),
        .m_axi_arlock(m_axi_arlock),
        .m_axi_arprot(m_axi_arprot),
        .m_axi_arqos(m_axi_arqos),
        .m_axi_arready(ar_pop),
        .m_axi_arregion(m_axi_arregion),
        .m_axi_arsize(din[4:2]),
        .m_axi_aruser(NLW_dw_fifogen_ar_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(ar_fifo_valid),
        .m_axi_awaddr(NLW_dw_fifogen_ar_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_dw_fifogen_ar_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_dw_fifogen_ar_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_dw_fifogen_ar_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_dw_fifogen_ar_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_dw_fifogen_ar_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_dw_fifogen_ar_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_dw_fifogen_ar_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_dw_fifogen_ar_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_dw_fifogen_ar_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_dw_fifogen_ar_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_dw_fifogen_ar_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_dw_fifogen_ar_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_dw_fifogen_ar_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_dw_fifogen_ar_m_axi_wdata_UNCONNECTED[31:0]),
        .m_axi_wid(NLW_dw_fifogen_ar_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_dw_fifogen_ar_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_dw_fifogen_ar_m_axi_wstrb_UNCONNECTED[3:0]),
        .m_axi_wuser(NLW_dw_fifogen_ar_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_dw_fifogen_ar_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_dw_fifogen_ar_m_axis_tdata_UNCONNECTED[63:0]),
        .m_axis_tdest(NLW_dw_fifogen_ar_m_axis_tdest_UNCONNECTED[3:0]),
        .m_axis_tid(NLW_dw_fifogen_ar_m_axis_tid_UNCONNECTED[7:0]),
        .m_axis_tkeep(NLW_dw_fifogen_ar_m_axis_tkeep_UNCONNECTED[3:0]),
        .m_axis_tlast(NLW_dw_fifogen_ar_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_dw_fifogen_ar_m_axis_tstrb_UNCONNECTED[3:0]),
        .m_axis_tuser(NLW_dw_fifogen_ar_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_dw_fifogen_ar_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_dw_fifogen_ar_overflow_UNCONNECTED),
        .prog_empty(NLW_dw_fifogen_ar_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_dw_fifogen_ar_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(1'b0),
        .rd_data_count(NLW_dw_fifogen_ar_rd_data_count_UNCONNECTED[9:0]),
        .rd_en(1'b0),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_dw_fifogen_ar_rd_rst_busy_UNCONNECTED),
        .rst(1'b0),
        .s_aclk(I3),
        .s_aclk_en(1'b0),
        .s_aresetn(ar_fifo_aresetn),
        .s_axi_araddr({Q[31:6],s_axi_araddr}),
        .s_axi_arburst(s_axi_arburst),
        .s_axi_arcache(Q[43:40]),
        .s_axi_arid(1'b0),
        .s_axi_arlen(s_axi_arlen),
        .s_axi_arlock(Q[52]),
        .s_axi_arprot(Q[34:32]),
        .s_axi_arqos(Q[56:53]),
        .s_axi_arready(ar_fifo_ready),
        .s_axi_arregion(Q[60:57]),
        .s_axi_arsize(I1),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(s_cmd_push),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_dw_fifogen_ar_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_dw_fifogen_ar_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_dw_fifogen_ar_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_dw_fifogen_ar_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_dw_fifogen_ar_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_dw_fifogen_ar_s_axi_rdata_UNCONNECTED[31:0]),
        .s_axi_rid(NLW_dw_fifogen_ar_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_dw_fifogen_ar_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_dw_fifogen_ar_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_dw_fifogen_ar_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_dw_fifogen_ar_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_dw_fifogen_ar_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tid({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tkeep({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_dw_fifogen_ar_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_dw_fifogen_ar_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(1'b0),
        .underflow(NLW_dw_fifogen_ar_underflow_UNCONNECTED),
        .valid(NLW_dw_fifogen_ar_valid_UNCONNECTED),
        .wr_ack(NLW_dw_fifogen_ar_wr_ack_UNCONNECTED),
        .wr_clk(1'b0),
        .wr_data_count(NLW_dw_fifogen_ar_wr_data_count_UNCONNECTED[9:0]),
        .wr_en(1'b0),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_dw_fifogen_ar_wr_rst_busy_UNCONNECTED));
(* SOFT_HLUTNM = "soft_lutpair88" *) 
   LUT2 #(
    .INIT(4'h8)) 
     dw_fifogen_ar_i_1
       (.I0(I5),
        .I1(I6),
        .O(ar_fifo_aresetn));
(* SOFT_HLUTNM = "soft_lutpair68" *) 
   LUT3 #(
    .INIT(8'h08)) 
     dw_fifogen_ar_i_21
       (.I0(m_axi_arready_i),
        .I1(sr_arvalid),
        .I2(I2),
        .O(s_cmd_push));
(* SOFT_HLUTNM = "soft_lutpair75" *) 
   LUT2 #(
    .INIT(4'h8)) 
     dw_fifogen_ar_i_22
       (.I0(m_axi_arvalid),
        .I1(m_axi_arready),
        .O(ar_pop));
(* C_ADD_NGC_CONSTRAINT = "0" *) 
   (* C_APPLICATION_TYPE_AXIS = "0" *) 
   (* C_APPLICATION_TYPE_RACH = "0" *) 
   (* C_APPLICATION_TYPE_RDCH = "0" *) 
   (* C_APPLICATION_TYPE_WACH = "0" *) 
   (* C_APPLICATION_TYPE_WDCH = "0" *) 
   (* C_APPLICATION_TYPE_WRCH = "0" *) 
   (* C_AXIS_TDATA_WIDTH = "64" *) 
   (* C_AXIS_TDEST_WIDTH = "4" *) 
   (* C_AXIS_TID_WIDTH = "8" *) 
   (* C_AXIS_TKEEP_WIDTH = "4" *) 
   (* C_AXIS_TSTRB_WIDTH = "4" *) 
   (* C_AXIS_TUSER_WIDTH = "4" *) 
   (* C_AXIS_TYPE = "0" *) 
   (* C_AXI_ADDR_WIDTH = "32" *) 
   (* C_AXI_ARUSER_WIDTH = "1" *) 
   (* C_AXI_AWUSER_WIDTH = "1" *) 
   (* C_AXI_BUSER_WIDTH = "1" *) 
   (* C_AXI_DATA_WIDTH = "64" *) 
   (* C_AXI_ID_WIDTH = "4" *) 
   (* C_AXI_LEN_WIDTH = "8" *) 
   (* C_AXI_LOCK_WIDTH = "2" *) 
   (* C_AXI_RUSER_WIDTH = "1" *) 
   (* C_AXI_TYPE = "0" *) 
   (* C_AXI_WUSER_WIDTH = "1" *) 
   (* C_COMMON_CLOCK = "0" *) 
   (* C_COUNT_TYPE = "0" *) 
   (* C_DATA_COUNT_WIDTH = "9" *) 
   (* C_DEFAULT_VALUE = "BlankString" *) 
   (* C_DIN_WIDTH = "4" *) 
   (* C_DIN_WIDTH_AXIS = "1" *) 
   (* C_DIN_WIDTH_RACH = "32" *) 
   (* C_DIN_WIDTH_RDCH = "64" *) 
   (* C_DIN_WIDTH_WACH = "32" *) 
   (* C_DIN_WIDTH_WDCH = "64" *) 
   (* C_DIN_WIDTH_WRCH = "2" *) 
   (* C_DOUT_RST_VAL = "0" *) 
   (* C_DOUT_WIDTH = "4" *) 
   (* C_ENABLE_RLOCS = "0" *) 
   (* C_ENABLE_RST_SYNC = "1" *) 
   (* C_ERROR_INJECTION_TYPE = "0" *) 
   (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
   (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
   (* C_FAMILY = "virtex7" *) 
   (* C_FULL_FLAGS_RST_VAL = "0" *) 
   (* C_HAS_ALMOST_EMPTY = "0" *) 
   (* C_HAS_ALMOST_FULL = "0" *) 
   (* C_HAS_AXIS_TDATA = "0" *) 
   (* C_HAS_AXIS_TDEST = "0" *) 
   (* C_HAS_AXIS_TID = "0" *) 
   (* C_HAS_AXIS_TKEEP = "0" *) 
   (* C_HAS_AXIS_TLAST = "0" *) 
   (* C_HAS_AXIS_TREADY = "1" *) 
   (* C_HAS_AXIS_TSTRB = "0" *) 
   (* C_HAS_AXIS_TUSER = "0" *) 
   (* C_HAS_AXI_ARUSER = "0" *) 
   (* C_HAS_AXI_AWUSER = "0" *) 
   (* C_HAS_AXI_BUSER = "0" *) 
   (* C_HAS_AXI_ID = "0" *) 
   (* C_HAS_AXI_RD_CHANNEL = "0" *) 
   (* C_HAS_AXI_RUSER = "0" *) 
   (* C_HAS_AXI_WR_CHANNEL = "0" *) 
   (* C_HAS_AXI_WUSER = "0" *) 
   (* C_HAS_BACKUP = "0" *) 
   (* C_HAS_DATA_COUNT = "0" *) 
   (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
   (* C_HAS_DATA_COUNTS_RACH = "0" *) 
   (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
   (* C_HAS_DATA_COUNTS_WACH = "0" *) 
   (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
   (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
   (* C_HAS_INT_CLK = "0" *) 
   (* C_HAS_MASTER_CE = "0" *) 
   (* C_HAS_MEMINIT_FILE = "0" *) 
   (* C_HAS_OVERFLOW = "0" *) 
   (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
   (* C_HAS_PROG_FLAGS_RACH = "0" *) 
   (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
   (* C_HAS_PROG_FLAGS_WACH = "0" *) 
   (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
   (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
   (* C_HAS_RD_DATA_COUNT = "0" *) 
   (* C_HAS_RD_RST = "0" *) 
   (* C_HAS_RST = "1" *) 
   (* C_HAS_SLAVE_CE = "0" *) 
   (* C_HAS_SRST = "0" *) 
   (* C_HAS_UNDERFLOW = "0" *) 
   (* C_HAS_VALID = "0" *) 
   (* C_HAS_WR_ACK = "0" *) 
   (* C_HAS_WR_DATA_COUNT = "0" *) 
   (* C_HAS_WR_RST = "0" *) 
   (* C_IMPLEMENTATION_TYPE = "2" *) 
   (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
   (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
   (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
   (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
   (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
   (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
   (* C_INIT_WR_PNTR_VAL = "0" *) 
   (* C_INTERFACE_TYPE = "0" *) 
   (* C_MEMORY_TYPE = "2" *) 
   (* C_MIF_FILE_NAME = "BlankString" *) 
   (* C_MSGON_VAL = "1" *) 
   (* C_OPTIMIZATION_MODE = "0" *) 
   (* C_OVERFLOW_LOW = "0" *) 
   (* C_POWER_SAVING_MODE = "0" *) 
   (* C_PRELOAD_LATENCY = "0" *) 
   (* C_PRELOAD_REGS = "1" *) 
   (* C_PRIM_FIFO_TYPE = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_AXIS = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_RDCH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_WDCH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
   (* C_PROG_EMPTY_TYPE = "0" *) 
   (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
   (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
   (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
   (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
   (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
   (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL = "31" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
   (* C_PROG_FULL_THRESH_NEGATE_VAL = "30" *) 
   (* C_PROG_FULL_TYPE = "0" *) 
   (* C_PROG_FULL_TYPE_AXIS = "0" *) 
   (* C_PROG_FULL_TYPE_RACH = "0" *) 
   (* C_PROG_FULL_TYPE_RDCH = "0" *) 
   (* C_PROG_FULL_TYPE_WACH = "0" *) 
   (* C_PROG_FULL_TYPE_WDCH = "0" *) 
   (* C_PROG_FULL_TYPE_WRCH = "0" *) 
   (* C_RACH_TYPE = "0" *) 
   (* C_RDCH_TYPE = "0" *) 
   (* C_RD_DATA_COUNT_WIDTH = "9" *) 
   (* C_RD_DEPTH = "512" *) 
   (* C_RD_FREQ = "1" *) 
   (* C_RD_PNTR_WIDTH = "9" *) 
   (* C_REG_SLICE_MODE_AXIS = "0" *) 
   (* C_REG_SLICE_MODE_RACH = "0" *) 
   (* C_REG_SLICE_MODE_RDCH = "0" *) 
   (* C_REG_SLICE_MODE_WACH = "0" *) 
   (* C_REG_SLICE_MODE_WDCH = "0" *) 
   (* C_REG_SLICE_MODE_WRCH = "0" *) 
   (* C_SYNCHRONIZER_STAGE = "3" *) 
   (* C_UNDERFLOW_LOW = "0" *) 
   (* C_USE_COMMON_OVERFLOW = "0" *) 
   (* C_USE_COMMON_UNDERFLOW = "0" *) 
   (* C_USE_DEFAULT_SETTINGS = "0" *) 
   (* C_USE_DOUT_RST = "0" *) 
   (* C_USE_ECC = "0" *) 
   (* C_USE_ECC_AXIS = "0" *) 
   (* C_USE_ECC_RACH = "0" *) 
   (* C_USE_ECC_RDCH = "0" *) 
   (* C_USE_ECC_WACH = "0" *) 
   (* C_USE_ECC_WDCH = "0" *) 
   (* C_USE_ECC_WRCH = "0" *) 
   (* C_USE_EMBEDDED_REG = "0" *) 
   (* C_USE_FIFO16_FLAGS = "0" *) 
   (* C_USE_FWFT_DATA_COUNT = "1" *) 
   (* C_USE_PIPELINE_REG = "0" *) 
   (* C_VALID_LOW = "0" *) 
   (* C_WACH_TYPE = "0" *) 
   (* C_WDCH_TYPE = "0" *) 
   (* C_WRCH_TYPE = "0" *) 
   (* C_WR_ACK_LOW = "0" *) 
   (* C_WR_DATA_COUNT_WIDTH = "9" *) 
   (* C_WR_DEPTH = "512" *) 
   (* C_WR_DEPTH_AXIS = "1024" *) 
   (* C_WR_DEPTH_RACH = "16" *) 
   (* C_WR_DEPTH_RDCH = "1024" *) 
   (* C_WR_DEPTH_WACH = "16" *) 
   (* C_WR_DEPTH_WDCH = "1024" *) 
   (* C_WR_DEPTH_WRCH = "16" *) 
   (* C_WR_FREQ = "1" *) 
   (* C_WR_PNTR_WIDTH = "9" *) 
   (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
   (* C_WR_PNTR_WIDTH_RACH = "4" *) 
   (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
   (* C_WR_PNTR_WIDTH_WACH = "4" *) 
   (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
   (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
   (* C_WR_RESPONSE_LATENCY = "1" *) 
   (* DONT_TOUCH *) 
   axi_dwidth_converter_0_fifo_generator_v12_0__parameterized5 dw_fifogen_rresp
       (.almost_empty(NLW_dw_fifogen_rresp_almost_empty_UNCONNECTED),
        .almost_full(NLW_dw_fifogen_rresp_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_dw_fifogen_rresp_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_dw_fifogen_rresp_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_dw_fifogen_rresp_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_dw_fifogen_rresp_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_dw_fifogen_rresp_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_dw_fifogen_rresp_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_dw_fifogen_rresp_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_dw_fifogen_rresp_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_dw_fifogen_rresp_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_dw_fifogen_rresp_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_dw_fifogen_rresp_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_dw_fifogen_rresp_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_dw_fifogen_rresp_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_dw_fifogen_rresp_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_dw_fifogen_rresp_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_dw_fifogen_rresp_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_dw_fifogen_rresp_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_dw_fifogen_rresp_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_dw_fifogen_rresp_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_dw_fifogen_rresp_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_dw_fifogen_rresp_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_dw_fifogen_rresp_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_dw_fifogen_rresp_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_dw_fifogen_rresp_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_dw_fifogen_rresp_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_dw_fifogen_rresp_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_dw_fifogen_rresp_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_dw_fifogen_rresp_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_dw_fifogen_rresp_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_dw_fifogen_rresp_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_dw_fifogen_rresp_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_dw_fifogen_rresp_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_dw_fifogen_rresp_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_dw_fifogen_rresp_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_dw_fifogen_rresp_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_dw_fifogen_rresp_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_dw_fifogen_rresp_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_dw_fifogen_rresp_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_dw_fifogen_rresp_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_dw_fifogen_rresp_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_dw_fifogen_rresp_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_dw_fifogen_rresp_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_dw_fifogen_rresp_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_dw_fifogen_rresp_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_dw_fifogen_rresp_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_dw_fifogen_rresp_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_dw_fifogen_rresp_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_dw_fifogen_rresp_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_dw_fifogen_rresp_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_dw_fifogen_rresp_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_dw_fifogen_rresp_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_dw_fifogen_rresp_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_dw_fifogen_rresp_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_dw_fifogen_rresp_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_dw_fifogen_rresp_data_count_UNCONNECTED[8:0]),
        .dbiterr(NLW_dw_fifogen_rresp_dbiterr_UNCONNECTED),
        .din({1'b0,1'b0,n_0_dw_fifogen_rresp_i_2,n_0_dw_fifogen_rresp_i_3}),
        .dout({NLW_dw_fifogen_rresp_dout_UNCONNECTED[3:2],n_2_dw_fifogen_rresp,n_3_dw_fifogen_rresp}),
        .empty(rresp_fifo_empty),
        .full(rresp_fifo_full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_dw_fifogen_rresp_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_dw_fifogen_rresp_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_dw_fifogen_rresp_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_dw_fifogen_rresp_m_axi_arid_UNCONNECTED[3:0]),
        .m_axi_arlen(NLW_dw_fifogen_rresp_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_dw_fifogen_rresp_m_axi_arlock_UNCONNECTED[1:0]),
        .m_axi_arprot(NLW_dw_fifogen_rresp_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_dw_fifogen_rresp_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_dw_fifogen_rresp_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_dw_fifogen_rresp_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_dw_fifogen_rresp_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_dw_fifogen_rresp_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_dw_fifogen_rresp_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_dw_fifogen_rresp_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_dw_fifogen_rresp_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_dw_fifogen_rresp_m_axi_awid_UNCONNECTED[3:0]),
        .m_axi_awlen(NLW_dw_fifogen_rresp_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_dw_fifogen_rresp_m_axi_awlock_UNCONNECTED[1:0]),
        .m_axi_awprot(NLW_dw_fifogen_rresp_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_dw_fifogen_rresp_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_dw_fifogen_rresp_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_dw_fifogen_rresp_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_dw_fifogen_rresp_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_dw_fifogen_rresp_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid({1'b0,1'b0,1'b0,1'b0}),
        .m_axi_bready(NLW_dw_fifogen_rresp_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid({1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_dw_fifogen_rresp_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_dw_fifogen_rresp_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_dw_fifogen_rresp_m_axi_wid_UNCONNECTED[3:0]),
        .m_axi_wlast(NLW_dw_fifogen_rresp_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_dw_fifogen_rresp_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_dw_fifogen_rresp_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_dw_fifogen_rresp_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_dw_fifogen_rresp_m_axis_tdata_UNCONNECTED[63:0]),
        .m_axis_tdest(NLW_dw_fifogen_rresp_m_axis_tdest_UNCONNECTED[3:0]),
        .m_axis_tid(NLW_dw_fifogen_rresp_m_axis_tid_UNCONNECTED[7:0]),
        .m_axis_tkeep(NLW_dw_fifogen_rresp_m_axis_tkeep_UNCONNECTED[3:0]),
        .m_axis_tlast(NLW_dw_fifogen_rresp_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_dw_fifogen_rresp_m_axis_tstrb_UNCONNECTED[3:0]),
        .m_axis_tuser(NLW_dw_fifogen_rresp_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_dw_fifogen_rresp_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_dw_fifogen_rresp_overflow_UNCONNECTED),
        .prog_empty(NLW_dw_fifogen_rresp_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_dw_fifogen_rresp_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(I3),
        .rd_data_count(NLW_dw_fifogen_rresp_rd_data_count_UNCONNECTED[8:0]),
        .rd_en(rresp_fifo_pop),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_dw_fifogen_rresp_rd_rst_busy_UNCONNECTED),
        .rst(rresp_fifo_rst),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock({1'b0,1'b0}),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_dw_fifogen_rresp_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock({1'b0,1'b0}),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_dw_fifogen_rresp_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_dw_fifogen_rresp_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_dw_fifogen_rresp_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_dw_fifogen_rresp_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_dw_fifogen_rresp_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_dw_fifogen_rresp_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_dw_fifogen_rresp_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_dw_fifogen_rresp_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_dw_fifogen_rresp_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_dw_fifogen_rresp_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_dw_fifogen_rresp_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_dw_fifogen_rresp_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tid({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tkeep({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_dw_fifogen_rresp_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_dw_fifogen_rresp_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(1'b0),
        .underflow(NLW_dw_fifogen_rresp_underflow_UNCONNECTED),
        .valid(NLW_dw_fifogen_rresp_valid_UNCONNECTED),
        .wr_ack(NLW_dw_fifogen_rresp_wr_ack_UNCONNECTED),
        .wr_clk(I4),
        .wr_data_count(NLW_dw_fifogen_rresp_wr_data_count_UNCONNECTED[8:0]),
        .wr_en(n_0_dw_fifogen_rresp_i_4),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_dw_fifogen_rresp_wr_rst_busy_UNCONNECTED));
(* SOFT_HLUTNM = "soft_lutpair88" *) 
   LUT2 #(
    .INIT(4'h7)) 
     dw_fifogen_rresp_i_1
       (.I0(I6),
        .I1(I5),
        .O(rresp_fifo_rst));
LUT3 #(
    .INIT(8'hB8)) 
     dw_fifogen_rresp_i_2
       (.I0(\n_0_m_rresp_reg_reg[1] ),
        .I1(n_0_m_rresp_fifo_stall_reg),
        .I2(m_axi_rresp[1]),
        .O(n_0_dw_fifogen_rresp_i_2));
LUT3 #(
    .INIT(8'hB8)) 
     dw_fifogen_rresp_i_3
       (.I0(\n_0_m_rresp_reg_reg[0] ),
        .I1(n_0_m_rresp_fifo_stall_reg),
        .I2(m_axi_rresp[0]),
        .O(n_0_dw_fifogen_rresp_i_3));
(* SOFT_HLUTNM = "soft_lutpair66" *) 
   LUT4 #(
    .INIT(16'h5540)) 
     dw_fifogen_rresp_i_4
       (.I0(rresp_fifo_full),
        .I1(O2),
        .I2(m_axi_rvalid),
        .I3(n_0_m_rresp_fifo_stall_reg),
        .O(n_0_dw_fifogen_rresp_i_4));
LUT1 #(
    .INIT(2'h1)) 
     dw_fifogen_rresp_i_5
       (.I0(n_0_dw_fifogen_rresp_i_6),
        .O(rresp_fifo_pop));
LUT5 #(
    .INIT(32'hAABFAAAE)) 
     dw_fifogen_rresp_i_6
       (.I0(n_0_dw_fifogen_rresp_i_7),
        .I1(\n_0_s_raddr[8]_i_3 ),
        .I2(n_0_dw_fifogen_rresp_i_8),
        .I3(n_0_s_rresp_fifo_stall_reg),
        .I4(s_cmd_empty),
        .O(n_0_dw_fifogen_rresp_i_6));
(* SOFT_HLUTNM = "soft_lutpair81" *) 
   LUT4 #(
    .INIT(16'hAEAA)) 
     dw_fifogen_rresp_i_7
       (.I0(rresp_fifo_empty),
        .I1(O1),
        .I2(s_axi_rready),
        .I3(n_0_s_rvalid_reg),
        .O(n_0_dw_fifogen_rresp_i_7));
LUT2 #(
    .INIT(4'h1)) 
     dw_fifogen_rresp_i_8
       (.I0(n_0_rresp_wrap_reg),
        .I1(\n_0_s_rresp_reg[1]_i_5 ),
        .O(n_0_dw_fifogen_rresp_i_8));
LUT4 #(
    .INIT(16'hFF8A)) 
     first_rvalid_d1_i_1
       (.I0(n_0_s_rvalid_reg),
        .I1(s_axi_rready),
        .I2(O1),
        .I3(first_rvalid_d1),
        .O(n_0_first_rvalid_d1_i_1));
FDRE first_rvalid_d1_reg
       (.C(I3),
        .CE(1'b1),
        .D(n_0_first_rvalid_d1_i_1),
        .Q(first_rvalid_d1),
        .R(SR));
(* box_type = "PRIMITIVE" *) 
   RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
     \gen_ramb[0].ramb_inst 
       (.ADDRARDADDR({s_buf,\n_0_gen_ramb[15].ramb_inst_i_3 ,\n_0_gen_ramb[15].ramb_inst_i_4 ,\n_0_gen_ramb[15].ramb_inst_i_5 ,\n_0_gen_ramb[15].ramb_inst_i_6 ,\n_0_gen_ramb[15].ramb_inst_i_7 ,\n_0_gen_ramb[15].ramb_inst_i_8 ,\n_0_gen_ramb[15].ramb_inst_i_9 ,\n_0_s_raddr_reg[5] ,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({m_buf,\n_0_gen_ramb[15].ramb_inst_i_10 ,\n_0_gen_ramb[15].ramb_inst_i_11 ,\n_0_gen_ramb[15].ramb_inst_i_12 ,\n_0_gen_ramb[15].ramb_inst_i_13 ,\n_0_gen_ramb[15].ramb_inst_i_14 ,\n_0_gen_ramb[15].ramb_inst_i_15 ,\n_0_gen_ramb[15].ramb_inst_i_16 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(I3),
        .CLKBWRCLK(I4),
        .DIADI({m_axi_rdata[240],m_axi_rdata[224],m_axi_rdata[208],m_axi_rdata[192],m_axi_rdata[176],m_axi_rdata[160],m_axi_rdata[144],m_axi_rdata[128],m_axi_rdata[112],m_axi_rdata[96],m_axi_rdata[80],m_axi_rdata[64],m_axi_rdata[48],m_axi_rdata[32],m_axi_rdata[16],m_axi_rdata[0]}),
        .DIBDI({m_axi_rdata[496],m_axi_rdata[480],m_axi_rdata[464],m_axi_rdata[448],m_axi_rdata[432],m_axi_rdata[416],m_axi_rdata[400],m_axi_rdata[384],m_axi_rdata[368],m_axi_rdata[352],m_axi_rdata[336],m_axi_rdata[320],m_axi_rdata[304],m_axi_rdata[288],m_axi_rdata[272],m_axi_rdata[256]}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO({s_axi_rdata[240],s_axi_rdata[224],s_axi_rdata[208],s_axi_rdata[192],s_axi_rdata[176],s_axi_rdata[160],s_axi_rdata[144],s_axi_rdata[128],s_axi_rdata[112],s_axi_rdata[96],s_axi_rdata[80],s_axi_rdata[64],s_axi_rdata[48],s_axi_rdata[32],s_axi_rdata[16],s_axi_rdata[0]}),
        .DOBDO(\NLW_gen_ramb[0].ramb_inst_DOBDO_UNCONNECTED [15:0]),
        .DOPADOP(\NLW_gen_ramb[0].ramb_inst_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_gen_ramb[0].ramb_inst_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(s_rbuf_en),
        .ENBWREN(m_rbuf_en[0]),
        .REGCEAREGCE(s_rbuf_en),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE(m_rbuf_we));
LUT6 #(
    .INIT(64'h8888888088888888)) 
     \gen_ramb[0].ramb_inst_i_1 
       (.I0(m_axi_rvalid),
        .I1(O2),
        .I2(\n_0_m_rsize_reg[0] ),
        .I3(\n_0_m_rsize_reg[1] ),
        .I4(\n_0_m_rsize_reg[2] ),
        .I5(m_raddr0[0]),
        .O(m_rbuf_en[0]));
(* box_type = "PRIMITIVE" *) 
   RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
     \gen_ramb[10].ramb_inst 
       (.ADDRARDADDR({s_buf,\n_0_gen_ramb[15].ramb_inst_i_3 ,\n_0_gen_ramb[15].ramb_inst_i_4 ,\n_0_gen_ramb[15].ramb_inst_i_5 ,\n_0_gen_ramb[15].ramb_inst_i_6 ,\n_0_gen_ramb[15].ramb_inst_i_7 ,\n_0_gen_ramb[15].ramb_inst_i_8 ,\n_0_gen_ramb[15].ramb_inst_i_9 ,\n_0_s_raddr_reg[5] ,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({m_buf,\n_0_gen_ramb[15].ramb_inst_i_10 ,\n_0_gen_ramb[15].ramb_inst_i_11 ,\n_0_gen_ramb[15].ramb_inst_i_12 ,\n_0_gen_ramb[15].ramb_inst_i_13 ,\n_0_gen_ramb[15].ramb_inst_i_14 ,\n_0_gen_ramb[15].ramb_inst_i_15 ,\n_0_gen_ramb[15].ramb_inst_i_16 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(I3),
        .CLKBWRCLK(I4),
        .DIADI({m_axi_rdata[250],m_axi_rdata[234],m_axi_rdata[218],m_axi_rdata[202],m_axi_rdata[186],m_axi_rdata[170],m_axi_rdata[154],m_axi_rdata[138],m_axi_rdata[122],m_axi_rdata[106],m_axi_rdata[90],m_axi_rdata[74],m_axi_rdata[58],m_axi_rdata[42],m_axi_rdata[26],m_axi_rdata[10]}),
        .DIBDI({m_axi_rdata[506],m_axi_rdata[490],m_axi_rdata[474],m_axi_rdata[458],m_axi_rdata[442],m_axi_rdata[426],m_axi_rdata[410],m_axi_rdata[394],m_axi_rdata[378],m_axi_rdata[362],m_axi_rdata[346],m_axi_rdata[330],m_axi_rdata[314],m_axi_rdata[298],m_axi_rdata[282],m_axi_rdata[266]}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO({s_axi_rdata[250],s_axi_rdata[234],s_axi_rdata[218],s_axi_rdata[202],s_axi_rdata[186],s_axi_rdata[170],s_axi_rdata[154],s_axi_rdata[138],s_axi_rdata[122],s_axi_rdata[106],s_axi_rdata[90],s_axi_rdata[74],s_axi_rdata[58],s_axi_rdata[42],s_axi_rdata[26],s_axi_rdata[10]}),
        .DOBDO(\NLW_gen_ramb[10].ramb_inst_DOBDO_UNCONNECTED [15:0]),
        .DOPADOP(\NLW_gen_ramb[10].ramb_inst_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_gen_ramb[10].ramb_inst_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(s_rbuf_en),
        .ENBWREN(m_rbuf_en[10]),
        .REGCEAREGCE(s_rbuf_en),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE(m_rbuf_we));
LUT6 #(
    .INIT(64'h8888888888888880)) 
     \gen_ramb[10].ramb_inst_i_1 
       (.I0(m_axi_rvalid),
        .I1(O2),
        .I2(m_raddr0[0]),
        .I3(\n_0_m_rsize_reg[0] ),
        .I4(\n_0_m_rsize_reg[1] ),
        .I5(\n_0_m_rsize_reg[2] ),
        .O(m_rbuf_en[10]));
(* box_type = "PRIMITIVE" *) 
   RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
     \gen_ramb[11].ramb_inst 
       (.ADDRARDADDR({s_buf,\n_0_gen_ramb[15].ramb_inst_i_3 ,\n_0_gen_ramb[15].ramb_inst_i_4 ,\n_0_gen_ramb[15].ramb_inst_i_5 ,\n_0_gen_ramb[15].ramb_inst_i_6 ,\n_0_gen_ramb[15].ramb_inst_i_7 ,\n_0_gen_ramb[15].ramb_inst_i_8 ,\n_0_gen_ramb[15].ramb_inst_i_9 ,\n_0_s_raddr_reg[5] ,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({m_buf,\n_0_gen_ramb[15].ramb_inst_i_10 ,\n_0_gen_ramb[15].ramb_inst_i_11 ,\n_0_gen_ramb[15].ramb_inst_i_12 ,\n_0_gen_ramb[15].ramb_inst_i_13 ,\n_0_gen_ramb[15].ramb_inst_i_14 ,\n_0_gen_ramb[15].ramb_inst_i_15 ,\n_0_gen_ramb[15].ramb_inst_i_16 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(I3),
        .CLKBWRCLK(I4),
        .DIADI({m_axi_rdata[251],m_axi_rdata[235],m_axi_rdata[219],m_axi_rdata[203],m_axi_rdata[187],m_axi_rdata[171],m_axi_rdata[155],m_axi_rdata[139],m_axi_rdata[123],m_axi_rdata[107],m_axi_rdata[91],m_axi_rdata[75],m_axi_rdata[59],m_axi_rdata[43],m_axi_rdata[27],m_axi_rdata[11]}),
        .DIBDI({m_axi_rdata[507],m_axi_rdata[491],m_axi_rdata[475],m_axi_rdata[459],m_axi_rdata[443],m_axi_rdata[427],m_axi_rdata[411],m_axi_rdata[395],m_axi_rdata[379],m_axi_rdata[363],m_axi_rdata[347],m_axi_rdata[331],m_axi_rdata[315],m_axi_rdata[299],m_axi_rdata[283],m_axi_rdata[267]}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO({s_axi_rdata[251],s_axi_rdata[235],s_axi_rdata[219],s_axi_rdata[203],s_axi_rdata[187],s_axi_rdata[171],s_axi_rdata[155],s_axi_rdata[139],s_axi_rdata[123],s_axi_rdata[107],s_axi_rdata[91],s_axi_rdata[75],s_axi_rdata[59],s_axi_rdata[43],s_axi_rdata[27],s_axi_rdata[11]}),
        .DOBDO(\NLW_gen_ramb[11].ramb_inst_DOBDO_UNCONNECTED [15:0]),
        .DOPADOP(\NLW_gen_ramb[11].ramb_inst_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_gen_ramb[11].ramb_inst_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(s_rbuf_en),
        .ENBWREN(m_rbuf_en[11]),
        .REGCEAREGCE(s_rbuf_en),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE(m_rbuf_we));
LUT6 #(
    .INIT(64'h8888888888888880)) 
     \gen_ramb[11].ramb_inst_i_1 
       (.I0(m_axi_rvalid),
        .I1(O2),
        .I2(m_raddr0[0]),
        .I3(\n_0_m_rsize_reg[0] ),
        .I4(\n_0_m_rsize_reg[1] ),
        .I5(\n_0_m_rsize_reg[2] ),
        .O(m_rbuf_en[11]));
(* box_type = "PRIMITIVE" *) 
   RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
     \gen_ramb[12].ramb_inst 
       (.ADDRARDADDR({s_buf,\n_0_gen_ramb[15].ramb_inst_i_3 ,\n_0_gen_ramb[15].ramb_inst_i_4 ,\n_0_gen_ramb[15].ramb_inst_i_5 ,\n_0_gen_ramb[15].ramb_inst_i_6 ,\n_0_gen_ramb[15].ramb_inst_i_7 ,\n_0_gen_ramb[15].ramb_inst_i_8 ,\n_0_gen_ramb[15].ramb_inst_i_9 ,\n_0_s_raddr_reg[5] ,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({m_buf,\n_0_gen_ramb[15].ramb_inst_i_10 ,\n_0_gen_ramb[15].ramb_inst_i_11 ,\n_0_gen_ramb[15].ramb_inst_i_12 ,\n_0_gen_ramb[15].ramb_inst_i_13 ,\n_0_gen_ramb[15].ramb_inst_i_14 ,\n_0_gen_ramb[15].ramb_inst_i_15 ,\n_0_gen_ramb[15].ramb_inst_i_16 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(I3),
        .CLKBWRCLK(I4),
        .DIADI({m_axi_rdata[252],m_axi_rdata[236],m_axi_rdata[220],m_axi_rdata[204],m_axi_rdata[188],m_axi_rdata[172],m_axi_rdata[156],m_axi_rdata[140],m_axi_rdata[124],m_axi_rdata[108],m_axi_rdata[92],m_axi_rdata[76],m_axi_rdata[60],m_axi_rdata[44],m_axi_rdata[28],m_axi_rdata[12]}),
        .DIBDI({m_axi_rdata[508],m_axi_rdata[492],m_axi_rdata[476],m_axi_rdata[460],m_axi_rdata[444],m_axi_rdata[428],m_axi_rdata[412],m_axi_rdata[396],m_axi_rdata[380],m_axi_rdata[364],m_axi_rdata[348],m_axi_rdata[332],m_axi_rdata[316],m_axi_rdata[300],m_axi_rdata[284],m_axi_rdata[268]}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO({s_axi_rdata[252],s_axi_rdata[236],s_axi_rdata[220],s_axi_rdata[204],s_axi_rdata[188],s_axi_rdata[172],s_axi_rdata[156],s_axi_rdata[140],s_axi_rdata[124],s_axi_rdata[108],s_axi_rdata[92],s_axi_rdata[76],s_axi_rdata[60],s_axi_rdata[44],s_axi_rdata[28],s_axi_rdata[12]}),
        .DOBDO(\NLW_gen_ramb[12].ramb_inst_DOBDO_UNCONNECTED [15:0]),
        .DOPADOP(\NLW_gen_ramb[12].ramb_inst_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_gen_ramb[12].ramb_inst_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(s_rbuf_en),
        .ENBWREN(m_rbuf_en[12]),
        .REGCEAREGCE(s_rbuf_en),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE(m_rbuf_we));
LUT6 #(
    .INIT(64'h8888888888888880)) 
     \gen_ramb[12].ramb_inst_i_1 
       (.I0(m_axi_rvalid),
        .I1(O2),
        .I2(m_raddr0[0]),
        .I3(\n_0_m_rsize_reg[0] ),
        .I4(\n_0_m_rsize_reg[1] ),
        .I5(\n_0_m_rsize_reg[2] ),
        .O(m_rbuf_en[12]));
(* box_type = "PRIMITIVE" *) 
   RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
     \gen_ramb[13].ramb_inst 
       (.ADDRARDADDR({s_buf,\n_0_gen_ramb[15].ramb_inst_i_3 ,\n_0_gen_ramb[15].ramb_inst_i_4 ,\n_0_gen_ramb[15].ramb_inst_i_5 ,\n_0_gen_ramb[15].ramb_inst_i_6 ,\n_0_gen_ramb[15].ramb_inst_i_7 ,\n_0_gen_ramb[15].ramb_inst_i_8 ,\n_0_gen_ramb[15].ramb_inst_i_9 ,\n_0_s_raddr_reg[5] ,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({m_buf,\n_0_gen_ramb[15].ramb_inst_i_10 ,\n_0_gen_ramb[15].ramb_inst_i_11 ,\n_0_gen_ramb[15].ramb_inst_i_12 ,\n_0_gen_ramb[15].ramb_inst_i_13 ,\n_0_gen_ramb[15].ramb_inst_i_14 ,\n_0_gen_ramb[15].ramb_inst_i_15 ,\n_0_gen_ramb[15].ramb_inst_i_16 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(I3),
        .CLKBWRCLK(I4),
        .DIADI({m_axi_rdata[253],m_axi_rdata[237],m_axi_rdata[221],m_axi_rdata[205],m_axi_rdata[189],m_axi_rdata[173],m_axi_rdata[157],m_axi_rdata[141],m_axi_rdata[125],m_axi_rdata[109],m_axi_rdata[93],m_axi_rdata[77],m_axi_rdata[61],m_axi_rdata[45],m_axi_rdata[29],m_axi_rdata[13]}),
        .DIBDI({m_axi_rdata[509],m_axi_rdata[493],m_axi_rdata[477],m_axi_rdata[461],m_axi_rdata[445],m_axi_rdata[429],m_axi_rdata[413],m_axi_rdata[397],m_axi_rdata[381],m_axi_rdata[365],m_axi_rdata[349],m_axi_rdata[333],m_axi_rdata[317],m_axi_rdata[301],m_axi_rdata[285],m_axi_rdata[269]}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO({s_axi_rdata[253],s_axi_rdata[237],s_axi_rdata[221],s_axi_rdata[205],s_axi_rdata[189],s_axi_rdata[173],s_axi_rdata[157],s_axi_rdata[141],s_axi_rdata[125],s_axi_rdata[109],s_axi_rdata[93],s_axi_rdata[77],s_axi_rdata[61],s_axi_rdata[45],s_axi_rdata[29],s_axi_rdata[13]}),
        .DOBDO(\NLW_gen_ramb[13].ramb_inst_DOBDO_UNCONNECTED [15:0]),
        .DOPADOP(\NLW_gen_ramb[13].ramb_inst_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_gen_ramb[13].ramb_inst_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(s_rbuf_en),
        .ENBWREN(m_rbuf_en[13]),
        .REGCEAREGCE(s_rbuf_en),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE(m_rbuf_we));
LUT6 #(
    .INIT(64'h8888888888888880)) 
     \gen_ramb[13].ramb_inst_i_1 
       (.I0(m_axi_rvalid),
        .I1(O2),
        .I2(m_raddr0[0]),
        .I3(\n_0_m_rsize_reg[0] ),
        .I4(\n_0_m_rsize_reg[1] ),
        .I5(\n_0_m_rsize_reg[2] ),
        .O(m_rbuf_en[13]));
(* box_type = "PRIMITIVE" *) 
   RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
     \gen_ramb[14].ramb_inst 
       (.ADDRARDADDR({s_buf,\n_0_gen_ramb[15].ramb_inst_i_3 ,\n_0_gen_ramb[15].ramb_inst_i_4 ,\n_0_gen_ramb[15].ramb_inst_i_5 ,\n_0_gen_ramb[15].ramb_inst_i_6 ,\n_0_gen_ramb[15].ramb_inst_i_7 ,\n_0_gen_ramb[15].ramb_inst_i_8 ,\n_0_gen_ramb[15].ramb_inst_i_9 ,\n_0_s_raddr_reg[5] ,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({m_buf,\n_0_gen_ramb[15].ramb_inst_i_10 ,\n_0_gen_ramb[15].ramb_inst_i_11 ,\n_0_gen_ramb[15].ramb_inst_i_12 ,\n_0_gen_ramb[15].ramb_inst_i_13 ,\n_0_gen_ramb[15].ramb_inst_i_14 ,\n_0_gen_ramb[15].ramb_inst_i_15 ,\n_0_gen_ramb[15].ramb_inst_i_16 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(I3),
        .CLKBWRCLK(I4),
        .DIADI({m_axi_rdata[254],m_axi_rdata[238],m_axi_rdata[222],m_axi_rdata[206],m_axi_rdata[190],m_axi_rdata[174],m_axi_rdata[158],m_axi_rdata[142],m_axi_rdata[126],m_axi_rdata[110],m_axi_rdata[94],m_axi_rdata[78],m_axi_rdata[62],m_axi_rdata[46],m_axi_rdata[30],m_axi_rdata[14]}),
        .DIBDI({m_axi_rdata[510],m_axi_rdata[494],m_axi_rdata[478],m_axi_rdata[462],m_axi_rdata[446],m_axi_rdata[430],m_axi_rdata[414],m_axi_rdata[398],m_axi_rdata[382],m_axi_rdata[366],m_axi_rdata[350],m_axi_rdata[334],m_axi_rdata[318],m_axi_rdata[302],m_axi_rdata[286],m_axi_rdata[270]}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO({s_axi_rdata[254],s_axi_rdata[238],s_axi_rdata[222],s_axi_rdata[206],s_axi_rdata[190],s_axi_rdata[174],s_axi_rdata[158],s_axi_rdata[142],s_axi_rdata[126],s_axi_rdata[110],s_axi_rdata[94],s_axi_rdata[78],s_axi_rdata[62],s_axi_rdata[46],s_axi_rdata[30],s_axi_rdata[14]}),
        .DOBDO(\NLW_gen_ramb[14].ramb_inst_DOBDO_UNCONNECTED [15:0]),
        .DOPADOP(\NLW_gen_ramb[14].ramb_inst_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_gen_ramb[14].ramb_inst_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(s_rbuf_en),
        .ENBWREN(m_rbuf_en[14]),
        .REGCEAREGCE(s_rbuf_en),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE(m_rbuf_we));
LUT6 #(
    .INIT(64'h8888888888888880)) 
     \gen_ramb[14].ramb_inst_i_1 
       (.I0(m_axi_rvalid),
        .I1(O2),
        .I2(m_raddr0[0]),
        .I3(\n_0_m_rsize_reg[0] ),
        .I4(\n_0_m_rsize_reg[1] ),
        .I5(\n_0_m_rsize_reg[2] ),
        .O(m_rbuf_en[14]));
(* box_type = "PRIMITIVE" *) 
   RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
     \gen_ramb[15].ramb_inst 
       (.ADDRARDADDR({s_buf,\n_0_gen_ramb[15].ramb_inst_i_3 ,\n_0_gen_ramb[15].ramb_inst_i_4 ,\n_0_gen_ramb[15].ramb_inst_i_5 ,\n_0_gen_ramb[15].ramb_inst_i_6 ,\n_0_gen_ramb[15].ramb_inst_i_7 ,\n_0_gen_ramb[15].ramb_inst_i_8 ,\n_0_gen_ramb[15].ramb_inst_i_9 ,\n_0_s_raddr_reg[5] ,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({m_buf,\n_0_gen_ramb[15].ramb_inst_i_10 ,\n_0_gen_ramb[15].ramb_inst_i_11 ,\n_0_gen_ramb[15].ramb_inst_i_12 ,\n_0_gen_ramb[15].ramb_inst_i_13 ,\n_0_gen_ramb[15].ramb_inst_i_14 ,\n_0_gen_ramb[15].ramb_inst_i_15 ,\n_0_gen_ramb[15].ramb_inst_i_16 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(I3),
        .CLKBWRCLK(I4),
        .DIADI({m_axi_rdata[255],m_axi_rdata[239],m_axi_rdata[223],m_axi_rdata[207],m_axi_rdata[191],m_axi_rdata[175],m_axi_rdata[159],m_axi_rdata[143],m_axi_rdata[127],m_axi_rdata[111],m_axi_rdata[95],m_axi_rdata[79],m_axi_rdata[63],m_axi_rdata[47],m_axi_rdata[31],m_axi_rdata[15]}),
        .DIBDI({m_axi_rdata[511],m_axi_rdata[495],m_axi_rdata[479],m_axi_rdata[463],m_axi_rdata[447],m_axi_rdata[431],m_axi_rdata[415],m_axi_rdata[399],m_axi_rdata[383],m_axi_rdata[367],m_axi_rdata[351],m_axi_rdata[335],m_axi_rdata[319],m_axi_rdata[303],m_axi_rdata[287],m_axi_rdata[271]}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO({s_axi_rdata[255],s_axi_rdata[239],s_axi_rdata[223],s_axi_rdata[207],s_axi_rdata[191],s_axi_rdata[175],s_axi_rdata[159],s_axi_rdata[143],s_axi_rdata[127],s_axi_rdata[111],s_axi_rdata[95],s_axi_rdata[79],s_axi_rdata[63],s_axi_rdata[47],s_axi_rdata[31],s_axi_rdata[15]}),
        .DOBDO(\NLW_gen_ramb[15].ramb_inst_DOBDO_UNCONNECTED [15:0]),
        .DOPADOP(\NLW_gen_ramb[15].ramb_inst_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_gen_ramb[15].ramb_inst_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(s_rbuf_en),
        .ENBWREN(m_rbuf_en[15]),
        .REGCEAREGCE(s_rbuf_en),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE(m_rbuf_we));
LUT2 #(
    .INIT(4'hB)) 
     \gen_ramb[15].ramb_inst_i_1 
       (.I0(s_axi_rready),
        .I1(O1),
        .O(s_rbuf_en));
LUT5 #(
    .INIT(32'hBBBA888A)) 
     \gen_ramb[15].ramb_inst_i_10 
       (.I0(\n_0_m_raddr_reg[12] ),
        .I1(\n_0_m_rsize_reg[2] ),
        .I2(\n_0_m_rburst_reg[1] ),
        .I3(\n_0_m_rburst_reg[0] ),
        .I4(\n_0_gen_ramb[15].ramb_inst_i_28 ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_10 ));
LUT5 #(
    .INIT(32'hBBBA888A)) 
     \gen_ramb[15].ramb_inst_i_11 
       (.I0(\n_0_m_raddr_reg[11] ),
        .I1(\n_0_m_rsize_reg[2] ),
        .I2(\n_0_m_rburst_reg[1] ),
        .I3(\n_0_m_rburst_reg[0] ),
        .I4(\n_0_gen_ramb[15].ramb_inst_i_29 ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_11 ));
LUT5 #(
    .INIT(32'hBBBA888A)) 
     \gen_ramb[15].ramb_inst_i_12 
       (.I0(\n_0_m_raddr_reg[10] ),
        .I1(\n_0_m_rsize_reg[2] ),
        .I2(\n_0_m_rburst_reg[1] ),
        .I3(\n_0_m_rburst_reg[0] ),
        .I4(\n_0_gen_ramb[15].ramb_inst_i_30 ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_12 ));
LUT5 #(
    .INIT(32'hBBBA888A)) 
     \gen_ramb[15].ramb_inst_i_13 
       (.I0(\n_0_m_raddr_reg[9] ),
        .I1(\n_0_m_rsize_reg[2] ),
        .I2(\n_0_m_rburst_reg[1] ),
        .I3(\n_0_m_rburst_reg[0] ),
        .I4(\n_0_gen_ramb[15].ramb_inst_i_31 ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_13 ));
LUT5 #(
    .INIT(32'hBBBA888A)) 
     \gen_ramb[15].ramb_inst_i_14 
       (.I0(\n_0_m_raddr_reg[8] ),
        .I1(\n_0_m_rsize_reg[2] ),
        .I2(\n_0_m_rburst_reg[1] ),
        .I3(\n_0_m_rburst_reg[0] ),
        .I4(\n_0_gen_ramb[15].ramb_inst_i_32 ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_14 ));
LUT5 #(
    .INIT(32'hBBBA888A)) 
     \gen_ramb[15].ramb_inst_i_15 
       (.I0(\n_0_m_raddr_reg[7] ),
        .I1(\n_0_m_rsize_reg[2] ),
        .I2(\n_0_m_rburst_reg[1] ),
        .I3(\n_0_m_rburst_reg[0] ),
        .I4(\n_0_gen_ramb[15].ramb_inst_i_33 ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_15 ));
LUT5 #(
    .INIT(32'hBBBA888A)) 
     \gen_ramb[15].ramb_inst_i_16 
       (.I0(\n_0_m_raddr_reg[6] ),
        .I1(\n_0_m_rsize_reg[2] ),
        .I2(\n_0_m_rburst_reg[1] ),
        .I3(\n_0_m_rburst_reg[0] ),
        .I4(\n_0_gen_ramb[15].ramb_inst_i_34 ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_16 ));
LUT6 #(
    .INIT(64'h00000000BAAA3080)) 
     \gen_ramb[15].ramb_inst_i_17 
       (.I0(\n_0_m_raddr_reg[5] ),
        .I1(\n_0_m_rsize_reg[0] ),
        .I2(\n_0_m_rsize_reg[2] ),
        .I3(\n_0_m_rsize_reg[1] ),
        .I4(m_raddr0[4]),
        .I5(n_0_large_incr_last_reg),
        .O(m_rbuf_we[3]));
LUT6 #(
    .INIT(64'h000000003080BAAA)) 
     \gen_ramb[15].ramb_inst_i_18 
       (.I0(\n_0_m_raddr_reg[5] ),
        .I1(\n_0_m_rsize_reg[0] ),
        .I2(\n_0_m_rsize_reg[2] ),
        .I3(\n_0_m_rsize_reg[1] ),
        .I4(m_raddr0[4]),
        .I5(n_0_large_incr_last_reg),
        .O(m_rbuf_we[2]));
LUT5 #(
    .INIT(32'h4544F444)) 
     \gen_ramb[15].ramb_inst_i_19 
       (.I0(\n_0_m_raddr_reg[5] ),
        .I1(m_raddr0[4]),
        .I2(\n_0_m_rsize_reg[1] ),
        .I3(\n_0_m_rsize_reg[2] ),
        .I4(\n_0_m_rsize_reg[0] ),
        .O(m_rbuf_we[1]));
LUT6 #(
    .INIT(64'h8888888888888880)) 
     \gen_ramb[15].ramb_inst_i_2 
       (.I0(m_axi_rvalid),
        .I1(O2),
        .I2(m_raddr0[0]),
        .I3(\n_0_m_rsize_reg[0] ),
        .I4(\n_0_m_rsize_reg[1] ),
        .I5(\n_0_m_rsize_reg[2] ),
        .O(m_rbuf_en[15]));
LUT5 #(
    .INIT(32'h1511F111)) 
     \gen_ramb[15].ramb_inst_i_20 
       (.I0(\n_0_m_raddr_reg[5] ),
        .I1(m_raddr0[4]),
        .I2(\n_0_m_rsize_reg[1] ),
        .I3(\n_0_m_rsize_reg[2] ),
        .I4(\n_0_m_rsize_reg[0] ),
        .O(m_rbuf_we[0]));
LUT5 #(
    .INIT(32'hB8FFB800)) 
     \gen_ramb[15].ramb_inst_i_21 
       (.I0(\n_0_s_raddr_reg[11] ),
        .I1(s_conv_size[0]),
        .I2(\n_0_s_raddr_reg[10] ),
        .I3(s_conv_size[1]),
        .I4(\n_0_s_raddr_reg[9] ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_21 ));
LUT5 #(
    .INIT(32'hB8FFB800)) 
     \gen_ramb[15].ramb_inst_i_22 
       (.I0(\n_0_s_raddr_reg[10] ),
        .I1(s_conv_size[0]),
        .I2(\n_0_s_raddr_reg[9] ),
        .I3(s_conv_size[1]),
        .I4(\n_0_s_raddr_reg[8] ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_22 ));
LUT5 #(
    .INIT(32'hB8FFB800)) 
     \gen_ramb[15].ramb_inst_i_23 
       (.I0(\n_0_s_raddr_reg[9] ),
        .I1(s_conv_size[0]),
        .I2(\n_0_s_raddr_reg[8] ),
        .I3(s_conv_size[1]),
        .I4(\n_0_s_raddr_reg[7] ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_23 ));
LUT5 #(
    .INIT(32'hB8FFB800)) 
     \gen_ramb[15].ramb_inst_i_24 
       (.I0(\n_0_s_raddr_reg[8] ),
        .I1(s_conv_size[0]),
        .I2(\n_0_s_raddr_reg[7] ),
        .I3(s_conv_size[1]),
        .I4(\n_0_s_raddr_reg[6] ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_24 ));
LUT5 #(
    .INIT(32'hB8FFB800)) 
     \gen_ramb[15].ramb_inst_i_25 
       (.I0(\n_0_s_raddr_reg[7] ),
        .I1(s_conv_size[0]),
        .I2(\n_0_s_raddr_reg[6] ),
        .I3(s_conv_size[1]),
        .I4(\n_0_s_raddr_reg[3] ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_25 ));
LUT5 #(
    .INIT(32'hB8FFB800)) 
     \gen_ramb[15].ramb_inst_i_26 
       (.I0(\n_0_s_raddr_reg[6] ),
        .I1(s_conv_size[0]),
        .I2(\n_0_s_raddr_reg[3] ),
        .I3(s_conv_size[1]),
        .I4(\n_0_s_raddr_reg[2] ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_26 ));
LUT5 #(
    .INIT(32'hB8FFB800)) 
     \gen_ramb[15].ramb_inst_i_27 
       (.I0(\n_0_s_raddr_reg[3] ),
        .I1(s_conv_size[0]),
        .I2(\n_0_s_raddr_reg[2] ),
        .I3(s_conv_size[1]),
        .I4(\n_0_s_raddr_reg[1] ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_27 ));
LUT5 #(
    .INIT(32'hB8FFB800)) 
     \gen_ramb[15].ramb_inst_i_28 
       (.I0(\n_0_m_raddr_reg[11] ),
        .I1(\n_0_m_rsize_reg[0] ),
        .I2(\n_0_m_raddr_reg[10] ),
        .I3(\n_0_m_rsize_reg[1] ),
        .I4(\n_0_m_raddr_reg[9] ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_28 ));
LUT5 #(
    .INIT(32'hB8FFB800)) 
     \gen_ramb[15].ramb_inst_i_29 
       (.I0(\n_0_m_raddr_reg[10] ),
        .I1(\n_0_m_rsize_reg[0] ),
        .I2(\n_0_m_raddr_reg[9] ),
        .I3(\n_0_m_rsize_reg[1] ),
        .I4(\n_0_m_raddr_reg[8] ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_29 ));
LUT5 #(
    .INIT(32'hBBBA888A)) 
     \gen_ramb[15].ramb_inst_i_3 
       (.I0(\n_0_s_raddr_reg[12] ),
        .I1(s_conv_size[2]),
        .I2(burst[1]),
        .I3(burst[0]),
        .I4(\n_0_gen_ramb[15].ramb_inst_i_21 ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_3 ));
LUT5 #(
    .INIT(32'hB8FFB800)) 
     \gen_ramb[15].ramb_inst_i_30 
       (.I0(\n_0_m_raddr_reg[9] ),
        .I1(\n_0_m_rsize_reg[0] ),
        .I2(\n_0_m_raddr_reg[8] ),
        .I3(\n_0_m_rsize_reg[1] ),
        .I4(\n_0_m_raddr_reg[7] ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_30 ));
LUT5 #(
    .INIT(32'hB8FFB800)) 
     \gen_ramb[15].ramb_inst_i_31 
       (.I0(\n_0_m_raddr_reg[8] ),
        .I1(\n_0_m_rsize_reg[0] ),
        .I2(\n_0_m_raddr_reg[7] ),
        .I3(\n_0_m_rsize_reg[1] ),
        .I4(\n_0_m_raddr_reg[6] ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_31 ));
LUT5 #(
    .INIT(32'hB8FFB800)) 
     \gen_ramb[15].ramb_inst_i_32 
       (.I0(\n_0_m_raddr_reg[7] ),
        .I1(\n_0_m_rsize_reg[0] ),
        .I2(\n_0_m_raddr_reg[6] ),
        .I3(\n_0_m_rsize_reg[1] ),
        .I4(m_raddr0[3]),
        .O(\n_0_gen_ramb[15].ramb_inst_i_32 ));
LUT5 #(
    .INIT(32'hB8FFB800)) 
     \gen_ramb[15].ramb_inst_i_33 
       (.I0(\n_0_m_raddr_reg[6] ),
        .I1(\n_0_m_rsize_reg[0] ),
        .I2(m_raddr0[3]),
        .I3(\n_0_m_rsize_reg[1] ),
        .I4(m_raddr0[2]),
        .O(\n_0_gen_ramb[15].ramb_inst_i_33 ));
LUT5 #(
    .INIT(32'hB8FFB800)) 
     \gen_ramb[15].ramb_inst_i_34 
       (.I0(m_raddr0[3]),
        .I1(\n_0_m_rsize_reg[0] ),
        .I2(m_raddr0[2]),
        .I3(\n_0_m_rsize_reg[1] ),
        .I4(m_raddr0[1]),
        .O(\n_0_gen_ramb[15].ramb_inst_i_34 ));
LUT5 #(
    .INIT(32'hBBBA888A)) 
     \gen_ramb[15].ramb_inst_i_4 
       (.I0(\n_0_s_raddr_reg[11] ),
        .I1(s_conv_size[2]),
        .I2(burst[1]),
        .I3(burst[0]),
        .I4(\n_0_gen_ramb[15].ramb_inst_i_22 ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_4 ));
LUT5 #(
    .INIT(32'hBBBA888A)) 
     \gen_ramb[15].ramb_inst_i_5 
       (.I0(\n_0_s_raddr_reg[10] ),
        .I1(s_conv_size[2]),
        .I2(burst[1]),
        .I3(burst[0]),
        .I4(\n_0_gen_ramb[15].ramb_inst_i_23 ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_5 ));
LUT5 #(
    .INIT(32'hBBBA888A)) 
     \gen_ramb[15].ramb_inst_i_6 
       (.I0(\n_0_s_raddr_reg[9] ),
        .I1(s_conv_size[2]),
        .I2(burst[1]),
        .I3(burst[0]),
        .I4(\n_0_gen_ramb[15].ramb_inst_i_24 ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_6 ));
LUT5 #(
    .INIT(32'hBBBA888A)) 
     \gen_ramb[15].ramb_inst_i_7 
       (.I0(\n_0_s_raddr_reg[8] ),
        .I1(s_conv_size[2]),
        .I2(burst[1]),
        .I3(burst[0]),
        .I4(\n_0_gen_ramb[15].ramb_inst_i_25 ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_7 ));
LUT5 #(
    .INIT(32'hBBBA888A)) 
     \gen_ramb[15].ramb_inst_i_8 
       (.I0(\n_0_s_raddr_reg[7] ),
        .I1(s_conv_size[2]),
        .I2(burst[1]),
        .I3(burst[0]),
        .I4(\n_0_gen_ramb[15].ramb_inst_i_26 ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_8 ));
LUT5 #(
    .INIT(32'hBBBA888A)) 
     \gen_ramb[15].ramb_inst_i_9 
       (.I0(\n_0_s_raddr_reg[6] ),
        .I1(s_conv_size[2]),
        .I2(burst[1]),
        .I3(burst[0]),
        .I4(\n_0_gen_ramb[15].ramb_inst_i_27 ),
        .O(\n_0_gen_ramb[15].ramb_inst_i_9 ));
(* box_type = "PRIMITIVE" *) 
   RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
     \gen_ramb[1].ramb_inst 
       (.ADDRARDADDR({s_buf,\n_0_gen_ramb[15].ramb_inst_i_3 ,\n_0_gen_ramb[15].ramb_inst_i_4 ,\n_0_gen_ramb[15].ramb_inst_i_5 ,\n_0_gen_ramb[15].ramb_inst_i_6 ,\n_0_gen_ramb[15].ramb_inst_i_7 ,\n_0_gen_ramb[15].ramb_inst_i_8 ,\n_0_gen_ramb[15].ramb_inst_i_9 ,\n_0_s_raddr_reg[5] ,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({m_buf,\n_0_gen_ramb[15].ramb_inst_i_10 ,\n_0_gen_ramb[15].ramb_inst_i_11 ,\n_0_gen_ramb[15].ramb_inst_i_12 ,\n_0_gen_ramb[15].ramb_inst_i_13 ,\n_0_gen_ramb[15].ramb_inst_i_14 ,\n_0_gen_ramb[15].ramb_inst_i_15 ,\n_0_gen_ramb[15].ramb_inst_i_16 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(I3),
        .CLKBWRCLK(I4),
        .DIADI({m_axi_rdata[241],m_axi_rdata[225],m_axi_rdata[209],m_axi_rdata[193],m_axi_rdata[177],m_axi_rdata[161],m_axi_rdata[145],m_axi_rdata[129],m_axi_rdata[113],m_axi_rdata[97],m_axi_rdata[81],m_axi_rdata[65],m_axi_rdata[49],m_axi_rdata[33],m_axi_rdata[17],m_axi_rdata[1]}),
        .DIBDI({m_axi_rdata[497],m_axi_rdata[481],m_axi_rdata[465],m_axi_rdata[449],m_axi_rdata[433],m_axi_rdata[417],m_axi_rdata[401],m_axi_rdata[385],m_axi_rdata[369],m_axi_rdata[353],m_axi_rdata[337],m_axi_rdata[321],m_axi_rdata[305],m_axi_rdata[289],m_axi_rdata[273],m_axi_rdata[257]}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO({s_axi_rdata[241],s_axi_rdata[225],s_axi_rdata[209],s_axi_rdata[193],s_axi_rdata[177],s_axi_rdata[161],s_axi_rdata[145],s_axi_rdata[129],s_axi_rdata[113],s_axi_rdata[97],s_axi_rdata[81],s_axi_rdata[65],s_axi_rdata[49],s_axi_rdata[33],s_axi_rdata[17],s_axi_rdata[1]}),
        .DOBDO(\NLW_gen_ramb[1].ramb_inst_DOBDO_UNCONNECTED [15:0]),
        .DOPADOP(\NLW_gen_ramb[1].ramb_inst_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_gen_ramb[1].ramb_inst_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(s_rbuf_en),
        .ENBWREN(m_rbuf_en[1]),
        .REGCEAREGCE(s_rbuf_en),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE(m_rbuf_we));
LUT6 #(
    .INIT(64'h8888888088888888)) 
     \gen_ramb[1].ramb_inst_i_1 
       (.I0(m_axi_rvalid),
        .I1(O2),
        .I2(\n_0_m_rsize_reg[0] ),
        .I3(\n_0_m_rsize_reg[1] ),
        .I4(\n_0_m_rsize_reg[2] ),
        .I5(m_raddr0[0]),
        .O(m_rbuf_en[1]));
(* box_type = "PRIMITIVE" *) 
   RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
     \gen_ramb[2].ramb_inst 
       (.ADDRARDADDR({s_buf,\n_0_gen_ramb[15].ramb_inst_i_3 ,\n_0_gen_ramb[15].ramb_inst_i_4 ,\n_0_gen_ramb[15].ramb_inst_i_5 ,\n_0_gen_ramb[15].ramb_inst_i_6 ,\n_0_gen_ramb[15].ramb_inst_i_7 ,\n_0_gen_ramb[15].ramb_inst_i_8 ,\n_0_gen_ramb[15].ramb_inst_i_9 ,\n_0_s_raddr_reg[5] ,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({m_buf,\n_0_gen_ramb[15].ramb_inst_i_10 ,\n_0_gen_ramb[15].ramb_inst_i_11 ,\n_0_gen_ramb[15].ramb_inst_i_12 ,\n_0_gen_ramb[15].ramb_inst_i_13 ,\n_0_gen_ramb[15].ramb_inst_i_14 ,\n_0_gen_ramb[15].ramb_inst_i_15 ,\n_0_gen_ramb[15].ramb_inst_i_16 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(I3),
        .CLKBWRCLK(I4),
        .DIADI({m_axi_rdata[242],m_axi_rdata[226],m_axi_rdata[210],m_axi_rdata[194],m_axi_rdata[178],m_axi_rdata[162],m_axi_rdata[146],m_axi_rdata[130],m_axi_rdata[114],m_axi_rdata[98],m_axi_rdata[82],m_axi_rdata[66],m_axi_rdata[50],m_axi_rdata[34],m_axi_rdata[18],m_axi_rdata[2]}),
        .DIBDI({m_axi_rdata[498],m_axi_rdata[482],m_axi_rdata[466],m_axi_rdata[450],m_axi_rdata[434],m_axi_rdata[418],m_axi_rdata[402],m_axi_rdata[386],m_axi_rdata[370],m_axi_rdata[354],m_axi_rdata[338],m_axi_rdata[322],m_axi_rdata[306],m_axi_rdata[290],m_axi_rdata[274],m_axi_rdata[258]}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO({s_axi_rdata[242],s_axi_rdata[226],s_axi_rdata[210],s_axi_rdata[194],s_axi_rdata[178],s_axi_rdata[162],s_axi_rdata[146],s_axi_rdata[130],s_axi_rdata[114],s_axi_rdata[98],s_axi_rdata[82],s_axi_rdata[66],s_axi_rdata[50],s_axi_rdata[34],s_axi_rdata[18],s_axi_rdata[2]}),
        .DOBDO(\NLW_gen_ramb[2].ramb_inst_DOBDO_UNCONNECTED [15:0]),
        .DOPADOP(\NLW_gen_ramb[2].ramb_inst_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_gen_ramb[2].ramb_inst_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(s_rbuf_en),
        .ENBWREN(m_rbuf_en[2]),
        .REGCEAREGCE(s_rbuf_en),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE(m_rbuf_we));
LUT6 #(
    .INIT(64'h8888888088888888)) 
     \gen_ramb[2].ramb_inst_i_1 
       (.I0(m_axi_rvalid),
        .I1(O2),
        .I2(\n_0_m_rsize_reg[0] ),
        .I3(\n_0_m_rsize_reg[1] ),
        .I4(\n_0_m_rsize_reg[2] ),
        .I5(m_raddr0[0]),
        .O(m_rbuf_en[2]));
(* box_type = "PRIMITIVE" *) 
   RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
     \gen_ramb[3].ramb_inst 
       (.ADDRARDADDR({s_buf,\n_0_gen_ramb[15].ramb_inst_i_3 ,\n_0_gen_ramb[15].ramb_inst_i_4 ,\n_0_gen_ramb[15].ramb_inst_i_5 ,\n_0_gen_ramb[15].ramb_inst_i_6 ,\n_0_gen_ramb[15].ramb_inst_i_7 ,\n_0_gen_ramb[15].ramb_inst_i_8 ,\n_0_gen_ramb[15].ramb_inst_i_9 ,\n_0_s_raddr_reg[5] ,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({m_buf,\n_0_gen_ramb[15].ramb_inst_i_10 ,\n_0_gen_ramb[15].ramb_inst_i_11 ,\n_0_gen_ramb[15].ramb_inst_i_12 ,\n_0_gen_ramb[15].ramb_inst_i_13 ,\n_0_gen_ramb[15].ramb_inst_i_14 ,\n_0_gen_ramb[15].ramb_inst_i_15 ,\n_0_gen_ramb[15].ramb_inst_i_16 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(I3),
        .CLKBWRCLK(I4),
        .DIADI({m_axi_rdata[243],m_axi_rdata[227],m_axi_rdata[211],m_axi_rdata[195],m_axi_rdata[179],m_axi_rdata[163],m_axi_rdata[147],m_axi_rdata[131],m_axi_rdata[115],m_axi_rdata[99],m_axi_rdata[83],m_axi_rdata[67],m_axi_rdata[51],m_axi_rdata[35],m_axi_rdata[19],m_axi_rdata[3]}),
        .DIBDI({m_axi_rdata[499],m_axi_rdata[483],m_axi_rdata[467],m_axi_rdata[451],m_axi_rdata[435],m_axi_rdata[419],m_axi_rdata[403],m_axi_rdata[387],m_axi_rdata[371],m_axi_rdata[355],m_axi_rdata[339],m_axi_rdata[323],m_axi_rdata[307],m_axi_rdata[291],m_axi_rdata[275],m_axi_rdata[259]}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO({s_axi_rdata[243],s_axi_rdata[227],s_axi_rdata[211],s_axi_rdata[195],s_axi_rdata[179],s_axi_rdata[163],s_axi_rdata[147],s_axi_rdata[131],s_axi_rdata[115],s_axi_rdata[99],s_axi_rdata[83],s_axi_rdata[67],s_axi_rdata[51],s_axi_rdata[35],s_axi_rdata[19],s_axi_rdata[3]}),
        .DOBDO(\NLW_gen_ramb[3].ramb_inst_DOBDO_UNCONNECTED [15:0]),
        .DOPADOP(\NLW_gen_ramb[3].ramb_inst_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_gen_ramb[3].ramb_inst_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(s_rbuf_en),
        .ENBWREN(m_rbuf_en[3]),
        .REGCEAREGCE(s_rbuf_en),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE(m_rbuf_we));
LUT6 #(
    .INIT(64'h8888888088888888)) 
     \gen_ramb[3].ramb_inst_i_1 
       (.I0(m_axi_rvalid),
        .I1(O2),
        .I2(\n_0_m_rsize_reg[0] ),
        .I3(\n_0_m_rsize_reg[1] ),
        .I4(\n_0_m_rsize_reg[2] ),
        .I5(m_raddr0[0]),
        .O(m_rbuf_en[3]));
(* box_type = "PRIMITIVE" *) 
   RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
     \gen_ramb[4].ramb_inst 
       (.ADDRARDADDR({s_buf,\n_0_gen_ramb[15].ramb_inst_i_3 ,\n_0_gen_ramb[15].ramb_inst_i_4 ,\n_0_gen_ramb[15].ramb_inst_i_5 ,\n_0_gen_ramb[15].ramb_inst_i_6 ,\n_0_gen_ramb[15].ramb_inst_i_7 ,\n_0_gen_ramb[15].ramb_inst_i_8 ,\n_0_gen_ramb[15].ramb_inst_i_9 ,\n_0_s_raddr_reg[5] ,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({m_buf,\n_0_gen_ramb[15].ramb_inst_i_10 ,\n_0_gen_ramb[15].ramb_inst_i_11 ,\n_0_gen_ramb[15].ramb_inst_i_12 ,\n_0_gen_ramb[15].ramb_inst_i_13 ,\n_0_gen_ramb[15].ramb_inst_i_14 ,\n_0_gen_ramb[15].ramb_inst_i_15 ,\n_0_gen_ramb[15].ramb_inst_i_16 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(I3),
        .CLKBWRCLK(I4),
        .DIADI({m_axi_rdata[244],m_axi_rdata[228],m_axi_rdata[212],m_axi_rdata[196],m_axi_rdata[180],m_axi_rdata[164],m_axi_rdata[148],m_axi_rdata[132],m_axi_rdata[116],m_axi_rdata[100],m_axi_rdata[84],m_axi_rdata[68],m_axi_rdata[52],m_axi_rdata[36],m_axi_rdata[20],m_axi_rdata[4]}),
        .DIBDI({m_axi_rdata[500],m_axi_rdata[484],m_axi_rdata[468],m_axi_rdata[452],m_axi_rdata[436],m_axi_rdata[420],m_axi_rdata[404],m_axi_rdata[388],m_axi_rdata[372],m_axi_rdata[356],m_axi_rdata[340],m_axi_rdata[324],m_axi_rdata[308],m_axi_rdata[292],m_axi_rdata[276],m_axi_rdata[260]}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO({s_axi_rdata[244],s_axi_rdata[228],s_axi_rdata[212],s_axi_rdata[196],s_axi_rdata[180],s_axi_rdata[164],s_axi_rdata[148],s_axi_rdata[132],s_axi_rdata[116],s_axi_rdata[100],s_axi_rdata[84],s_axi_rdata[68],s_axi_rdata[52],s_axi_rdata[36],s_axi_rdata[20],s_axi_rdata[4]}),
        .DOBDO(\NLW_gen_ramb[4].ramb_inst_DOBDO_UNCONNECTED [15:0]),
        .DOPADOP(\NLW_gen_ramb[4].ramb_inst_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_gen_ramb[4].ramb_inst_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(s_rbuf_en),
        .ENBWREN(m_rbuf_en[4]),
        .REGCEAREGCE(s_rbuf_en),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE(m_rbuf_we));
LUT6 #(
    .INIT(64'h8888888088888888)) 
     \gen_ramb[4].ramb_inst_i_1 
       (.I0(m_axi_rvalid),
        .I1(O2),
        .I2(\n_0_m_rsize_reg[0] ),
        .I3(\n_0_m_rsize_reg[1] ),
        .I4(\n_0_m_rsize_reg[2] ),
        .I5(m_raddr0[0]),
        .O(m_rbuf_en[4]));
(* box_type = "PRIMITIVE" *) 
   RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
     \gen_ramb[5].ramb_inst 
       (.ADDRARDADDR({s_buf,\n_0_gen_ramb[15].ramb_inst_i_3 ,\n_0_gen_ramb[15].ramb_inst_i_4 ,\n_0_gen_ramb[15].ramb_inst_i_5 ,\n_0_gen_ramb[15].ramb_inst_i_6 ,\n_0_gen_ramb[15].ramb_inst_i_7 ,\n_0_gen_ramb[15].ramb_inst_i_8 ,\n_0_gen_ramb[15].ramb_inst_i_9 ,\n_0_s_raddr_reg[5] ,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({m_buf,\n_0_gen_ramb[15].ramb_inst_i_10 ,\n_0_gen_ramb[15].ramb_inst_i_11 ,\n_0_gen_ramb[15].ramb_inst_i_12 ,\n_0_gen_ramb[15].ramb_inst_i_13 ,\n_0_gen_ramb[15].ramb_inst_i_14 ,\n_0_gen_ramb[15].ramb_inst_i_15 ,\n_0_gen_ramb[15].ramb_inst_i_16 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(I3),
        .CLKBWRCLK(I4),
        .DIADI({m_axi_rdata[245],m_axi_rdata[229],m_axi_rdata[213],m_axi_rdata[197],m_axi_rdata[181],m_axi_rdata[165],m_axi_rdata[149],m_axi_rdata[133],m_axi_rdata[117],m_axi_rdata[101],m_axi_rdata[85],m_axi_rdata[69],m_axi_rdata[53],m_axi_rdata[37],m_axi_rdata[21],m_axi_rdata[5]}),
        .DIBDI({m_axi_rdata[501],m_axi_rdata[485],m_axi_rdata[469],m_axi_rdata[453],m_axi_rdata[437],m_axi_rdata[421],m_axi_rdata[405],m_axi_rdata[389],m_axi_rdata[373],m_axi_rdata[357],m_axi_rdata[341],m_axi_rdata[325],m_axi_rdata[309],m_axi_rdata[293],m_axi_rdata[277],m_axi_rdata[261]}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO({s_axi_rdata[245],s_axi_rdata[229],s_axi_rdata[213],s_axi_rdata[197],s_axi_rdata[181],s_axi_rdata[165],s_axi_rdata[149],s_axi_rdata[133],s_axi_rdata[117],s_axi_rdata[101],s_axi_rdata[85],s_axi_rdata[69],s_axi_rdata[53],s_axi_rdata[37],s_axi_rdata[21],s_axi_rdata[5]}),
        .DOBDO(\NLW_gen_ramb[5].ramb_inst_DOBDO_UNCONNECTED [15:0]),
        .DOPADOP(\NLW_gen_ramb[5].ramb_inst_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_gen_ramb[5].ramb_inst_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(s_rbuf_en),
        .ENBWREN(m_rbuf_en[5]),
        .REGCEAREGCE(s_rbuf_en),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE(m_rbuf_we));
LUT6 #(
    .INIT(64'h8888888088888888)) 
     \gen_ramb[5].ramb_inst_i_1 
       (.I0(m_axi_rvalid),
        .I1(O2),
        .I2(\n_0_m_rsize_reg[0] ),
        .I3(\n_0_m_rsize_reg[1] ),
        .I4(\n_0_m_rsize_reg[2] ),
        .I5(m_raddr0[0]),
        .O(m_rbuf_en[5]));
(* box_type = "PRIMITIVE" *) 
   RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
     \gen_ramb[6].ramb_inst 
       (.ADDRARDADDR({s_buf,\n_0_gen_ramb[15].ramb_inst_i_3 ,\n_0_gen_ramb[15].ramb_inst_i_4 ,\n_0_gen_ramb[15].ramb_inst_i_5 ,\n_0_gen_ramb[15].ramb_inst_i_6 ,\n_0_gen_ramb[15].ramb_inst_i_7 ,\n_0_gen_ramb[15].ramb_inst_i_8 ,\n_0_gen_ramb[15].ramb_inst_i_9 ,\n_0_s_raddr_reg[5] ,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({m_buf,\n_0_gen_ramb[15].ramb_inst_i_10 ,\n_0_gen_ramb[15].ramb_inst_i_11 ,\n_0_gen_ramb[15].ramb_inst_i_12 ,\n_0_gen_ramb[15].ramb_inst_i_13 ,\n_0_gen_ramb[15].ramb_inst_i_14 ,\n_0_gen_ramb[15].ramb_inst_i_15 ,\n_0_gen_ramb[15].ramb_inst_i_16 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(I3),
        .CLKBWRCLK(I4),
        .DIADI({m_axi_rdata[246],m_axi_rdata[230],m_axi_rdata[214],m_axi_rdata[198],m_axi_rdata[182],m_axi_rdata[166],m_axi_rdata[150],m_axi_rdata[134],m_axi_rdata[118],m_axi_rdata[102],m_axi_rdata[86],m_axi_rdata[70],m_axi_rdata[54],m_axi_rdata[38],m_axi_rdata[22],m_axi_rdata[6]}),
        .DIBDI({m_axi_rdata[502],m_axi_rdata[486],m_axi_rdata[470],m_axi_rdata[454],m_axi_rdata[438],m_axi_rdata[422],m_axi_rdata[406],m_axi_rdata[390],m_axi_rdata[374],m_axi_rdata[358],m_axi_rdata[342],m_axi_rdata[326],m_axi_rdata[310],m_axi_rdata[294],m_axi_rdata[278],m_axi_rdata[262]}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO({s_axi_rdata[246],s_axi_rdata[230],s_axi_rdata[214],s_axi_rdata[198],s_axi_rdata[182],s_axi_rdata[166],s_axi_rdata[150],s_axi_rdata[134],s_axi_rdata[118],s_axi_rdata[102],s_axi_rdata[86],s_axi_rdata[70],s_axi_rdata[54],s_axi_rdata[38],s_axi_rdata[22],s_axi_rdata[6]}),
        .DOBDO(\NLW_gen_ramb[6].ramb_inst_DOBDO_UNCONNECTED [15:0]),
        .DOPADOP(\NLW_gen_ramb[6].ramb_inst_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_gen_ramb[6].ramb_inst_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(s_rbuf_en),
        .ENBWREN(m_rbuf_en[6]),
        .REGCEAREGCE(s_rbuf_en),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE(m_rbuf_we));
LUT6 #(
    .INIT(64'h8888888088888888)) 
     \gen_ramb[6].ramb_inst_i_1 
       (.I0(m_axi_rvalid),
        .I1(O2),
        .I2(\n_0_m_rsize_reg[0] ),
        .I3(\n_0_m_rsize_reg[1] ),
        .I4(\n_0_m_rsize_reg[2] ),
        .I5(m_raddr0[0]),
        .O(m_rbuf_en[6]));
(* box_type = "PRIMITIVE" *) 
   RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
     \gen_ramb[7].ramb_inst 
       (.ADDRARDADDR({s_buf,\n_0_gen_ramb[15].ramb_inst_i_3 ,\n_0_gen_ramb[15].ramb_inst_i_4 ,\n_0_gen_ramb[15].ramb_inst_i_5 ,\n_0_gen_ramb[15].ramb_inst_i_6 ,\n_0_gen_ramb[15].ramb_inst_i_7 ,\n_0_gen_ramb[15].ramb_inst_i_8 ,\n_0_gen_ramb[15].ramb_inst_i_9 ,\n_0_s_raddr_reg[5] ,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({m_buf,\n_0_gen_ramb[15].ramb_inst_i_10 ,\n_0_gen_ramb[15].ramb_inst_i_11 ,\n_0_gen_ramb[15].ramb_inst_i_12 ,\n_0_gen_ramb[15].ramb_inst_i_13 ,\n_0_gen_ramb[15].ramb_inst_i_14 ,\n_0_gen_ramb[15].ramb_inst_i_15 ,\n_0_gen_ramb[15].ramb_inst_i_16 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(I3),
        .CLKBWRCLK(I4),
        .DIADI({m_axi_rdata[247],m_axi_rdata[231],m_axi_rdata[215],m_axi_rdata[199],m_axi_rdata[183],m_axi_rdata[167],m_axi_rdata[151],m_axi_rdata[135],m_axi_rdata[119],m_axi_rdata[103],m_axi_rdata[87],m_axi_rdata[71],m_axi_rdata[55],m_axi_rdata[39],m_axi_rdata[23],m_axi_rdata[7]}),
        .DIBDI({m_axi_rdata[503],m_axi_rdata[487],m_axi_rdata[471],m_axi_rdata[455],m_axi_rdata[439],m_axi_rdata[423],m_axi_rdata[407],m_axi_rdata[391],m_axi_rdata[375],m_axi_rdata[359],m_axi_rdata[343],m_axi_rdata[327],m_axi_rdata[311],m_axi_rdata[295],m_axi_rdata[279],m_axi_rdata[263]}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO({s_axi_rdata[247],s_axi_rdata[231],s_axi_rdata[215],s_axi_rdata[199],s_axi_rdata[183],s_axi_rdata[167],s_axi_rdata[151],s_axi_rdata[135],s_axi_rdata[119],s_axi_rdata[103],s_axi_rdata[87],s_axi_rdata[71],s_axi_rdata[55],s_axi_rdata[39],s_axi_rdata[23],s_axi_rdata[7]}),
        .DOBDO(\NLW_gen_ramb[7].ramb_inst_DOBDO_UNCONNECTED [15:0]),
        .DOPADOP(\NLW_gen_ramb[7].ramb_inst_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_gen_ramb[7].ramb_inst_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(s_rbuf_en),
        .ENBWREN(m_rbuf_en[7]),
        .REGCEAREGCE(s_rbuf_en),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE(m_rbuf_we));
LUT6 #(
    .INIT(64'h8888888088888888)) 
     \gen_ramb[7].ramb_inst_i_1 
       (.I0(m_axi_rvalid),
        .I1(O2),
        .I2(\n_0_m_rsize_reg[0] ),
        .I3(\n_0_m_rsize_reg[1] ),
        .I4(\n_0_m_rsize_reg[2] ),
        .I5(m_raddr0[0]),
        .O(m_rbuf_en[7]));
(* box_type = "PRIMITIVE" *) 
   RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
     \gen_ramb[8].ramb_inst 
       (.ADDRARDADDR({s_buf,\n_0_gen_ramb[15].ramb_inst_i_3 ,\n_0_gen_ramb[15].ramb_inst_i_4 ,\n_0_gen_ramb[15].ramb_inst_i_5 ,\n_0_gen_ramb[15].ramb_inst_i_6 ,\n_0_gen_ramb[15].ramb_inst_i_7 ,\n_0_gen_ramb[15].ramb_inst_i_8 ,\n_0_gen_ramb[15].ramb_inst_i_9 ,\n_0_s_raddr_reg[5] ,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({m_buf,\n_0_gen_ramb[15].ramb_inst_i_10 ,\n_0_gen_ramb[15].ramb_inst_i_11 ,\n_0_gen_ramb[15].ramb_inst_i_12 ,\n_0_gen_ramb[15].ramb_inst_i_13 ,\n_0_gen_ramb[15].ramb_inst_i_14 ,\n_0_gen_ramb[15].ramb_inst_i_15 ,\n_0_gen_ramb[15].ramb_inst_i_16 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(I3),
        .CLKBWRCLK(I4),
        .DIADI({m_axi_rdata[248],m_axi_rdata[232],m_axi_rdata[216],m_axi_rdata[200],m_axi_rdata[184],m_axi_rdata[168],m_axi_rdata[152],m_axi_rdata[136],m_axi_rdata[120],m_axi_rdata[104],m_axi_rdata[88],m_axi_rdata[72],m_axi_rdata[56],m_axi_rdata[40],m_axi_rdata[24],m_axi_rdata[8]}),
        .DIBDI({m_axi_rdata[504],m_axi_rdata[488],m_axi_rdata[472],m_axi_rdata[456],m_axi_rdata[440],m_axi_rdata[424],m_axi_rdata[408],m_axi_rdata[392],m_axi_rdata[376],m_axi_rdata[360],m_axi_rdata[344],m_axi_rdata[328],m_axi_rdata[312],m_axi_rdata[296],m_axi_rdata[280],m_axi_rdata[264]}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO({s_axi_rdata[248],s_axi_rdata[232],s_axi_rdata[216],s_axi_rdata[200],s_axi_rdata[184],s_axi_rdata[168],s_axi_rdata[152],s_axi_rdata[136],s_axi_rdata[120],s_axi_rdata[104],s_axi_rdata[88],s_axi_rdata[72],s_axi_rdata[56],s_axi_rdata[40],s_axi_rdata[24],s_axi_rdata[8]}),
        .DOBDO(\NLW_gen_ramb[8].ramb_inst_DOBDO_UNCONNECTED [15:0]),
        .DOPADOP(\NLW_gen_ramb[8].ramb_inst_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_gen_ramb[8].ramb_inst_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(s_rbuf_en),
        .ENBWREN(m_rbuf_en[8]),
        .REGCEAREGCE(s_rbuf_en),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE(m_rbuf_we));
LUT6 #(
    .INIT(64'h8888888888888880)) 
     \gen_ramb[8].ramb_inst_i_1 
       (.I0(m_axi_rvalid),
        .I1(O2),
        .I2(m_raddr0[0]),
        .I3(\n_0_m_rsize_reg[0] ),
        .I4(\n_0_m_rsize_reg[1] ),
        .I5(\n_0_m_rsize_reg[2] ),
        .O(m_rbuf_en[8]));
(* box_type = "PRIMITIVE" *) 
   RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("PERFORMANCE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("NONE"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
     \gen_ramb[9].ramb_inst 
       (.ADDRARDADDR({s_buf,\n_0_gen_ramb[15].ramb_inst_i_3 ,\n_0_gen_ramb[15].ramb_inst_i_4 ,\n_0_gen_ramb[15].ramb_inst_i_5 ,\n_0_gen_ramb[15].ramb_inst_i_6 ,\n_0_gen_ramb[15].ramb_inst_i_7 ,\n_0_gen_ramb[15].ramb_inst_i_8 ,\n_0_gen_ramb[15].ramb_inst_i_9 ,\n_0_s_raddr_reg[5] ,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({m_buf,\n_0_gen_ramb[15].ramb_inst_i_10 ,\n_0_gen_ramb[15].ramb_inst_i_11 ,\n_0_gen_ramb[15].ramb_inst_i_12 ,\n_0_gen_ramb[15].ramb_inst_i_13 ,\n_0_gen_ramb[15].ramb_inst_i_14 ,\n_0_gen_ramb[15].ramb_inst_i_15 ,\n_0_gen_ramb[15].ramb_inst_i_16 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(I3),
        .CLKBWRCLK(I4),
        .DIADI({m_axi_rdata[249],m_axi_rdata[233],m_axi_rdata[217],m_axi_rdata[201],m_axi_rdata[185],m_axi_rdata[169],m_axi_rdata[153],m_axi_rdata[137],m_axi_rdata[121],m_axi_rdata[105],m_axi_rdata[89],m_axi_rdata[73],m_axi_rdata[57],m_axi_rdata[41],m_axi_rdata[25],m_axi_rdata[9]}),
        .DIBDI({m_axi_rdata[505],m_axi_rdata[489],m_axi_rdata[473],m_axi_rdata[457],m_axi_rdata[441],m_axi_rdata[425],m_axi_rdata[409],m_axi_rdata[393],m_axi_rdata[377],m_axi_rdata[361],m_axi_rdata[345],m_axi_rdata[329],m_axi_rdata[313],m_axi_rdata[297],m_axi_rdata[281],m_axi_rdata[265]}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO({s_axi_rdata[249],s_axi_rdata[233],s_axi_rdata[217],s_axi_rdata[201],s_axi_rdata[185],s_axi_rdata[169],s_axi_rdata[153],s_axi_rdata[137],s_axi_rdata[121],s_axi_rdata[105],s_axi_rdata[89],s_axi_rdata[73],s_axi_rdata[57],s_axi_rdata[41],s_axi_rdata[25],s_axi_rdata[9]}),
        .DOBDO(\NLW_gen_ramb[9].ramb_inst_DOBDO_UNCONNECTED [15:0]),
        .DOPADOP(\NLW_gen_ramb[9].ramb_inst_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_gen_ramb[9].ramb_inst_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(s_rbuf_en),
        .ENBWREN(m_rbuf_en[9]),
        .REGCEAREGCE(s_rbuf_en),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE(m_rbuf_we));
LUT6 #(
    .INIT(64'h8888888888888880)) 
     \gen_ramb[9].ramb_inst_i_1 
       (.I0(m_axi_rvalid),
        .I1(O2),
        .I2(m_raddr0[0]),
        .I3(\n_0_m_rsize_reg[0] ),
        .I4(\n_0_m_rsize_reg[1] ),
        .I5(\n_0_m_rsize_reg[2] ),
        .O(m_rbuf_en[9]));
LUT3 #(
    .INIT(8'hE0)) 
     large_incr_last_i_1
       (.I0(n_0_large_incr_last_reg),
        .I1(large_incr_last2_out),
        .I2(\n_0_m_raddr[5]_i_2 ),
        .O(n_0_large_incr_last_i_1));
LUT6 #(
    .INIT(64'h0002000000000000)) 
     large_incr_last_i_2
       (.I0(n_0_large_incr_last_i_3),
        .I1(\n_0_m_raddr[0]_i_4 ),
        .I2(m_raddr_incr[0]),
        .I3(\n_0_m_raddr[0]_i_2 ),
        .I4(\n_0_m_raddr[12]_i_6 ),
        .I5(n_0_large_incr_last_i_4),
        .O(large_incr_last2_out));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     large_incr_last_i_3
       (.I0(m_raddr_incr[11]),
        .I1(m_raddr_incr[12]),
        .I2(m_raddr_incr[8]),
        .I3(m_raddr_incr[4]),
        .I4(m_raddr_incr[10]),
        .I5(m_raddr_incr[9]),
        .O(n_0_large_incr_last_i_3));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     large_incr_last_i_4
       (.I0(m_raddr_incr[7]),
        .I1(m_raddr_incr[6]),
        .I2(m_raddr_incr[2]),
        .I3(m_raddr_incr[1]),
        .I4(m_raddr_incr[5]),
        .I5(m_raddr_incr[3]),
        .O(n_0_large_incr_last_i_4));
FDRE large_incr_last_reg
       (.C(I4),
        .CE(1'b1),
        .D(n_0_large_incr_last_i_1),
        .Q(n_0_large_incr_last_reg),
        .R(1'b0));
(* SOFT_HLUTNM = "soft_lutpair92" *) 
   LUT1 #(
    .INIT(2'h1)) 
     \m_buf[0]_i_1 
       (.I0(m_buf[0]),
        .O(\n_0_m_buf[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair92" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \m_buf[1]_i_1 
       (.I0(m_buf[0]),
        .I1(m_buf[1]),
        .O(\n_0_m_buf[1]_i_1 ));
FDRE \m_buf_reg[0] 
       (.C(I4),
        .CE(m_cmd_pop),
        .D(\n_0_m_buf[0]_i_1 ),
        .Q(m_buf[0]),
        .R(m_fifo_rst));
FDRE \m_buf_reg[1] 
       (.C(I4),
        .CE(m_cmd_pop),
        .D(\n_0_m_buf[1]_i_1 ),
        .Q(m_buf[1]),
        .R(m_fifo_rst));
(* C_ADD_NGC_CONSTRAINT = "0" *) 
   (* C_APPLICATION_TYPE_AXIS = "0" *) 
   (* C_APPLICATION_TYPE_RACH = "0" *) 
   (* C_APPLICATION_TYPE_RDCH = "0" *) 
   (* C_APPLICATION_TYPE_WACH = "0" *) 
   (* C_APPLICATION_TYPE_WDCH = "0" *) 
   (* C_APPLICATION_TYPE_WRCH = "0" *) 
   (* C_AXIS_TDATA_WIDTH = "64" *) 
   (* C_AXIS_TDEST_WIDTH = "4" *) 
   (* C_AXIS_TID_WIDTH = "8" *) 
   (* C_AXIS_TKEEP_WIDTH = "4" *) 
   (* C_AXIS_TSTRB_WIDTH = "4" *) 
   (* C_AXIS_TUSER_WIDTH = "4" *) 
   (* C_AXIS_TYPE = "0" *) 
   (* C_AXI_ADDR_WIDTH = "32" *) 
   (* C_AXI_ARUSER_WIDTH = "1" *) 
   (* C_AXI_AWUSER_WIDTH = "1" *) 
   (* C_AXI_BUSER_WIDTH = "1" *) 
   (* C_AXI_DATA_WIDTH = "64" *) 
   (* C_AXI_ID_WIDTH = "4" *) 
   (* C_AXI_LEN_WIDTH = "8" *) 
   (* C_AXI_LOCK_WIDTH = "2" *) 
   (* C_AXI_RUSER_WIDTH = "1" *) 
   (* C_AXI_TYPE = "0" *) 
   (* C_AXI_WUSER_WIDTH = "1" *) 
   (* C_COMMON_CLOCK = "1" *) 
   (* C_COUNT_TYPE = "0" *) 
   (* C_DATA_COUNT_WIDTH = "5" *) 
   (* C_DEFAULT_VALUE = "BlankString" *) 
   (* C_DIN_WIDTH = "23" *) 
   (* C_DIN_WIDTH_AXIS = "1" *) 
   (* C_DIN_WIDTH_RACH = "32" *) 
   (* C_DIN_WIDTH_RDCH = "64" *) 
   (* C_DIN_WIDTH_WACH = "32" *) 
   (* C_DIN_WIDTH_WDCH = "64" *) 
   (* C_DIN_WIDTH_WRCH = "2" *) 
   (* C_DOUT_RST_VAL = "0" *) 
   (* C_DOUT_WIDTH = "23" *) 
   (* C_ENABLE_RLOCS = "0" *) 
   (* C_ENABLE_RST_SYNC = "1" *) 
   (* C_ERROR_INJECTION_TYPE = "0" *) 
   (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
   (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
   (* C_FAMILY = "virtex7" *) 
   (* C_FULL_FLAGS_RST_VAL = "0" *) 
   (* C_HAS_ALMOST_EMPTY = "0" *) 
   (* C_HAS_ALMOST_FULL = "0" *) 
   (* C_HAS_AXIS_TDATA = "0" *) 
   (* C_HAS_AXIS_TDEST = "0" *) 
   (* C_HAS_AXIS_TID = "0" *) 
   (* C_HAS_AXIS_TKEEP = "0" *) 
   (* C_HAS_AXIS_TLAST = "0" *) 
   (* C_HAS_AXIS_TREADY = "1" *) 
   (* C_HAS_AXIS_TSTRB = "0" *) 
   (* C_HAS_AXIS_TUSER = "0" *) 
   (* C_HAS_AXI_ARUSER = "0" *) 
   (* C_HAS_AXI_AWUSER = "0" *) 
   (* C_HAS_AXI_BUSER = "0" *) 
   (* C_HAS_AXI_ID = "0" *) 
   (* C_HAS_AXI_RD_CHANNEL = "0" *) 
   (* C_HAS_AXI_RUSER = "0" *) 
   (* C_HAS_AXI_WR_CHANNEL = "0" *) 
   (* C_HAS_AXI_WUSER = "0" *) 
   (* C_HAS_BACKUP = "0" *) 
   (* C_HAS_DATA_COUNT = "0" *) 
   (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
   (* C_HAS_DATA_COUNTS_RACH = "0" *) 
   (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
   (* C_HAS_DATA_COUNTS_WACH = "0" *) 
   (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
   (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
   (* C_HAS_INT_CLK = "0" *) 
   (* C_HAS_MASTER_CE = "0" *) 
   (* C_HAS_MEMINIT_FILE = "0" *) 
   (* C_HAS_OVERFLOW = "0" *) 
   (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
   (* C_HAS_PROG_FLAGS_RACH = "0" *) 
   (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
   (* C_HAS_PROG_FLAGS_WACH = "0" *) 
   (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
   (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
   (* C_HAS_RD_DATA_COUNT = "0" *) 
   (* C_HAS_RD_RST = "0" *) 
   (* C_HAS_RST = "0" *) 
   (* C_HAS_SLAVE_CE = "0" *) 
   (* C_HAS_SRST = "1" *) 
   (* C_HAS_UNDERFLOW = "0" *) 
   (* C_HAS_VALID = "0" *) 
   (* C_HAS_WR_ACK = "0" *) 
   (* C_HAS_WR_DATA_COUNT = "0" *) 
   (* C_HAS_WR_RST = "0" *) 
   (* C_IMPLEMENTATION_TYPE = "0" *) 
   (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
   (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
   (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
   (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
   (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
   (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
   (* C_INIT_WR_PNTR_VAL = "0" *) 
   (* C_INTERFACE_TYPE = "0" *) 
   (* C_MEMORY_TYPE = "2" *) 
   (* C_MIF_FILE_NAME = "BlankString" *) 
   (* C_MSGON_VAL = "1" *) 
   (* C_OPTIMIZATION_MODE = "0" *) 
   (* C_OVERFLOW_LOW = "0" *) 
   (* C_POWER_SAVING_MODE = "0" *) 
   (* C_PRELOAD_LATENCY = "0" *) 
   (* C_PRELOAD_REGS = "1" *) 
   (* C_PRIM_FIFO_TYPE = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_AXIS = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_RDCH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_WDCH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
   (* C_PROG_EMPTY_TYPE = "0" *) 
   (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
   (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
   (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
   (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
   (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
   (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL = "31" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
   (* C_PROG_FULL_THRESH_NEGATE_VAL = "30" *) 
   (* C_PROG_FULL_TYPE = "0" *) 
   (* C_PROG_FULL_TYPE_AXIS = "0" *) 
   (* C_PROG_FULL_TYPE_RACH = "0" *) 
   (* C_PROG_FULL_TYPE_RDCH = "0" *) 
   (* C_PROG_FULL_TYPE_WACH = "0" *) 
   (* C_PROG_FULL_TYPE_WDCH = "0" *) 
   (* C_PROG_FULL_TYPE_WRCH = "0" *) 
   (* C_RACH_TYPE = "0" *) 
   (* C_RDCH_TYPE = "0" *) 
   (* C_RD_DATA_COUNT_WIDTH = "5" *) 
   (* C_RD_DEPTH = "32" *) 
   (* C_RD_FREQ = "1" *) 
   (* C_RD_PNTR_WIDTH = "5" *) 
   (* C_REG_SLICE_MODE_AXIS = "0" *) 
   (* C_REG_SLICE_MODE_RACH = "0" *) 
   (* C_REG_SLICE_MODE_RDCH = "0" *) 
   (* C_REG_SLICE_MODE_WACH = "0" *) 
   (* C_REG_SLICE_MODE_WDCH = "0" *) 
   (* C_REG_SLICE_MODE_WRCH = "0" *) 
   (* C_SYNCHRONIZER_STAGE = "3" *) 
   (* C_UNDERFLOW_LOW = "0" *) 
   (* C_USE_COMMON_OVERFLOW = "0" *) 
   (* C_USE_COMMON_UNDERFLOW = "0" *) 
   (* C_USE_DEFAULT_SETTINGS = "0" *) 
   (* C_USE_DOUT_RST = "0" *) 
   (* C_USE_ECC = "0" *) 
   (* C_USE_ECC_AXIS = "0" *) 
   (* C_USE_ECC_RACH = "0" *) 
   (* C_USE_ECC_RDCH = "0" *) 
   (* C_USE_ECC_WACH = "0" *) 
   (* C_USE_ECC_WDCH = "0" *) 
   (* C_USE_ECC_WRCH = "0" *) 
   (* C_USE_EMBEDDED_REG = "0" *) 
   (* C_USE_FIFO16_FLAGS = "0" *) 
   (* C_USE_FWFT_DATA_COUNT = "1" *) 
   (* C_USE_PIPELINE_REG = "0" *) 
   (* C_VALID_LOW = "0" *) 
   (* C_WACH_TYPE = "0" *) 
   (* C_WDCH_TYPE = "0" *) 
   (* C_WRCH_TYPE = "0" *) 
   (* C_WR_ACK_LOW = "0" *) 
   (* C_WR_DATA_COUNT_WIDTH = "5" *) 
   (* C_WR_DEPTH = "32" *) 
   (* C_WR_DEPTH_AXIS = "1024" *) 
   (* C_WR_DEPTH_RACH = "16" *) 
   (* C_WR_DEPTH_RDCH = "1024" *) 
   (* C_WR_DEPTH_WACH = "16" *) 
   (* C_WR_DEPTH_WDCH = "1024" *) 
   (* C_WR_DEPTH_WRCH = "16" *) 
   (* C_WR_FREQ = "1" *) 
   (* C_WR_PNTR_WIDTH = "5" *) 
   (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
   (* C_WR_PNTR_WIDTH_RACH = "4" *) 
   (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
   (* C_WR_PNTR_WIDTH_WACH = "4" *) 
   (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
   (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
   (* C_WR_RESPONSE_LATENCY = "1" *) 
   (* DONT_TOUCH *) 
   axi_dwidth_converter_0_fifo_generator_v12_0__parameterized4 m_cmd_fifo
       (.almost_empty(NLW_m_cmd_fifo_almost_empty_UNCONNECTED),
        .almost_full(NLW_m_cmd_fifo_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_m_cmd_fifo_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_m_cmd_fifo_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_m_cmd_fifo_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_m_cmd_fifo_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_m_cmd_fifo_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_m_cmd_fifo_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_m_cmd_fifo_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_m_cmd_fifo_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_m_cmd_fifo_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_m_cmd_fifo_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_m_cmd_fifo_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_m_cmd_fifo_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_m_cmd_fifo_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_m_cmd_fifo_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_m_cmd_fifo_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_m_cmd_fifo_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_m_cmd_fifo_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_m_cmd_fifo_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_m_cmd_fifo_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_m_cmd_fifo_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_m_cmd_fifo_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_m_cmd_fifo_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_m_cmd_fifo_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_m_cmd_fifo_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_m_cmd_fifo_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_m_cmd_fifo_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_m_cmd_fifo_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_m_cmd_fifo_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_m_cmd_fifo_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_m_cmd_fifo_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_m_cmd_fifo_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_m_cmd_fifo_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_m_cmd_fifo_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_m_cmd_fifo_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_m_cmd_fifo_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_m_cmd_fifo_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_m_cmd_fifo_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_m_cmd_fifo_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_m_cmd_fifo_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_m_cmd_fifo_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_m_cmd_fifo_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_m_cmd_fifo_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_m_cmd_fifo_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_m_cmd_fifo_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_m_cmd_fifo_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_m_cmd_fifo_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_m_cmd_fifo_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_m_cmd_fifo_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_m_cmd_fifo_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_m_cmd_fifo_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_m_cmd_fifo_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_m_cmd_fifo_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_m_cmd_fifo_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_m_cmd_fifo_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(I4),
        .data_count(NLW_m_cmd_fifo_data_count_UNCONNECTED[4:0]),
        .dbiterr(NLW_m_cmd_fifo_dbiterr_UNCONNECTED),
        .din({m_axi_araddr[9:0],din}),
        .dout({addr,NLW_m_cmd_fifo_dout_UNCONNECTED[12:9],n_14_m_cmd_fifo,n_15_m_cmd_fifo,n_16_m_cmd_fifo,NLW_m_cmd_fifo_dout_UNCONNECTED[5],n_18_m_cmd_fifo,n_19_m_cmd_fifo,n_20_m_cmd_fifo,n_21_m_cmd_fifo,n_22_m_cmd_fifo}),
        .empty(m_cmd_empty),
        .full(m_cmd_full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_m_cmd_fifo_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_m_cmd_fifo_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_m_cmd_fifo_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_m_cmd_fifo_m_axi_arid_UNCONNECTED[3:0]),
        .m_axi_arlen(NLW_m_cmd_fifo_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_m_cmd_fifo_m_axi_arlock_UNCONNECTED[1:0]),
        .m_axi_arprot(NLW_m_cmd_fifo_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_m_cmd_fifo_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_m_cmd_fifo_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_m_cmd_fifo_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_m_cmd_fifo_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_m_cmd_fifo_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_m_cmd_fifo_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_m_cmd_fifo_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_m_cmd_fifo_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_m_cmd_fifo_m_axi_awid_UNCONNECTED[3:0]),
        .m_axi_awlen(NLW_m_cmd_fifo_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_m_cmd_fifo_m_axi_awlock_UNCONNECTED[1:0]),
        .m_axi_awprot(NLW_m_cmd_fifo_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_m_cmd_fifo_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_m_cmd_fifo_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_m_cmd_fifo_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_m_cmd_fifo_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_m_cmd_fifo_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid({1'b0,1'b0,1'b0,1'b0}),
        .m_axi_bready(NLW_m_cmd_fifo_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid({1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_m_cmd_fifo_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_m_cmd_fifo_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_m_cmd_fifo_m_axi_wid_UNCONNECTED[3:0]),
        .m_axi_wlast(NLW_m_cmd_fifo_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_m_cmd_fifo_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_m_cmd_fifo_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_m_cmd_fifo_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_m_cmd_fifo_m_axis_tdata_UNCONNECTED[63:0]),
        .m_axis_tdest(NLW_m_cmd_fifo_m_axis_tdest_UNCONNECTED[3:0]),
        .m_axis_tid(NLW_m_cmd_fifo_m_axis_tid_UNCONNECTED[7:0]),
        .m_axis_tkeep(NLW_m_cmd_fifo_m_axis_tkeep_UNCONNECTED[3:0]),
        .m_axis_tlast(NLW_m_cmd_fifo_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_m_cmd_fifo_m_axis_tstrb_UNCONNECTED[3:0]),
        .m_axis_tuser(NLW_m_cmd_fifo_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_m_cmd_fifo_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_m_cmd_fifo_overflow_UNCONNECTED),
        .prog_empty(NLW_m_cmd_fifo_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_m_cmd_fifo_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(1'b0),
        .rd_data_count(NLW_m_cmd_fifo_rd_data_count_UNCONNECTED[4:0]),
        .rd_en(m_cmd_pop),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_m_cmd_fifo_rd_rst_busy_UNCONNECTED),
        .rst(1'b0),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock({1'b0,1'b0}),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_m_cmd_fifo_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock({1'b0,1'b0}),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_m_cmd_fifo_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_m_cmd_fifo_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_m_cmd_fifo_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_m_cmd_fifo_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_m_cmd_fifo_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_m_cmd_fifo_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_m_cmd_fifo_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_m_cmd_fifo_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_m_cmd_fifo_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_m_cmd_fifo_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_m_cmd_fifo_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_m_cmd_fifo_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tid({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tkeep({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_m_cmd_fifo_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_m_cmd_fifo_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(m_fifo_rst),
        .underflow(NLW_m_cmd_fifo_underflow_UNCONNECTED),
        .valid(NLW_m_cmd_fifo_valid_UNCONNECTED),
        .wr_ack(NLW_m_cmd_fifo_wr_ack_UNCONNECTED),
        .wr_clk(1'b0),
        .wr_data_count(NLW_m_cmd_fifo_wr_data_count_UNCONNECTED[4:0]),
        .wr_en(ar_pop),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_m_cmd_fifo_wr_rst_busy_UNCONNECTED));
LUT6 #(
    .INIT(64'h00000000808080FF)) 
     m_cmd_fifo_i_1
       (.I0(O2),
        .I1(m_axi_rvalid),
        .I2(m_axi_rlast),
        .I3(n_0_m_cmd_valid_reg),
        .I4(rresp_fifo_full),
        .I5(m_cmd_empty),
        .O(m_cmd_pop));
LUT6 #(
    .INIT(64'h00000000AAAB0000)) 
     m_cmd_valid_i_1
       (.I0(n_0_m_cmd_valid_reg),
        .I1(O2),
        .I2(rresp_fifo_full),
        .I3(m_cmd_empty),
        .I4(I6),
        .I5(n_0_m_cmd_valid_i_2),
        .O(n_0_m_cmd_valid_i_1));
LUT4 #(
    .INIT(16'h8000)) 
     m_cmd_valid_i_2
       (.I0(m_cmd_empty),
        .I1(O2),
        .I2(m_axi_rvalid),
        .I3(m_axi_rlast),
        .O(n_0_m_cmd_valid_i_2));
FDRE m_cmd_valid_reg
       (.C(I4),
        .CE(1'b1),
        .D(n_0_m_cmd_valid_i_1),
        .Q(n_0_m_cmd_valid_reg),
        .R(1'b0));
LUT6 #(
    .INIT(64'hFFFFFFFF00B80000)) 
     \m_raddr[0]_i_1 
       (.I0(m_raddr0[0]),
        .I1(\n_0_m_raddr[0]_i_2 ),
        .I2(m_raddr_incr[0]),
        .I3(\n_0_m_raddr[0]_i_4 ),
        .I4(\n_0_m_raddr[5]_i_2 ),
        .I5(\n_0_m_raddr[0]_i_5 ),
        .O(\n_0_m_raddr[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair74" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \m_raddr[0]_i_2 
       (.I0(\n_0_m_rburst_reg[0] ),
        .I1(\n_0_m_rburst_reg[1] ),
        .O(\n_0_m_raddr[0]_i_2 ));
LUT6 #(
    .INIT(64'h0000000000010000)) 
     \m_raddr[0]_i_4 
       (.I0(m_wrap_cnt_reg__0[2]),
        .I1(m_wrap_cnt_reg__0[0]),
        .I2(m_wrap_cnt_reg__0[1]),
        .I3(m_wrap_cnt_reg__0[3]),
        .I4(\n_0_m_rburst_reg[1] ),
        .I5(\n_0_m_rburst_reg[0] ),
        .O(\n_0_m_raddr[0]_i_4 ));
LUT5 #(
    .INIT(32'h00000010)) 
     \m_raddr[0]_i_5 
       (.I0(n_19_m_cmd_fifo),
        .I1(n_20_m_cmd_fifo),
        .I2(addr[0]),
        .I3(n_18_m_cmd_fifo),
        .I4(\n_0_m_raddr[5]_i_2 ),
        .O(\n_0_m_raddr[0]_i_5 ));
LUT3 #(
    .INIT(8'h6A)) 
     \m_raddr[0]_i_6 
       (.I0(m_raddr0[3]),
        .I1(\n_0_m_rsize_reg[0] ),
        .I2(\n_0_m_rsize_reg[1] ),
        .O(\n_0_m_raddr[0]_i_6 ));
LUT4 #(
    .INIT(16'hAA9A)) 
     \m_raddr[0]_i_7 
       (.I0(m_raddr0[2]),
        .I1(\n_0_m_rsize_reg[0] ),
        .I2(\n_0_m_rsize_reg[1] ),
        .I3(\n_0_m_rsize_reg[2] ),
        .O(\n_0_m_raddr[0]_i_7 ));
LUT4 #(
    .INIT(16'hA9AA)) 
     \m_raddr[0]_i_8 
       (.I0(m_raddr0[1]),
        .I1(\n_0_m_rsize_reg[2] ),
        .I2(\n_0_m_rsize_reg[1] ),
        .I3(\n_0_m_rsize_reg[0] ),
        .O(\n_0_m_raddr[0]_i_8 ));
LUT4 #(
    .INIT(16'hAAA9)) 
     \m_raddr[0]_i_9 
       (.I0(m_raddr0[0]),
        .I1(\n_0_m_rsize_reg[2] ),
        .I2(\n_0_m_rsize_reg[1] ),
        .I3(\n_0_m_rsize_reg[0] ),
        .O(\n_0_m_raddr[0]_i_9 ));
(* SOFT_HLUTNM = "soft_lutpair74" *) 
   LUT5 #(
    .INIT(32'h888A8880)) 
     \m_raddr[10]_i_1 
       (.I0(\n_0_m_raddr[12]_i_3 ),
        .I1(m_raddr_incr[10]),
        .I2(\n_0_m_rburst_reg[1] ),
        .I3(\n_0_m_rburst_reg[0] ),
        .I4(m_raddr0[10]),
        .O(\n_0_m_raddr[10]_i_1 ));
LUT5 #(
    .INIT(32'h888A8880)) 
     \m_raddr[11]_i_1 
       (.I0(\n_0_m_raddr[12]_i_3 ),
        .I1(m_raddr_incr[11]),
        .I2(\n_0_m_rburst_reg[1] ),
        .I3(\n_0_m_rburst_reg[0] ),
        .I4(m_raddr0[11]),
        .O(\n_0_m_raddr[11]_i_1 ));
LUT1 #(
    .INIT(2'h2)) 
     \m_raddr[11]_i_3 
       (.I0(\n_0_m_raddr_reg[11] ),
        .O(\n_0_m_raddr[11]_i_3 ));
LUT1 #(
    .INIT(2'h2)) 
     \m_raddr[11]_i_4 
       (.I0(\n_0_m_raddr_reg[10] ),
        .O(\n_0_m_raddr[11]_i_4 ));
LUT1 #(
    .INIT(2'h2)) 
     \m_raddr[11]_i_5 
       (.I0(\n_0_m_raddr_reg[9] ),
        .O(\n_0_m_raddr[11]_i_5 ));
LUT1 #(
    .INIT(2'h2)) 
     \m_raddr[11]_i_6 
       (.I0(\n_0_m_raddr_reg[8] ),
        .O(\n_0_m_raddr[11]_i_6 ));
LUT5 #(
    .INIT(32'h8888888F)) 
     \m_raddr[12]_i_1 
       (.I0(O2),
        .I1(m_axi_rvalid),
        .I2(n_0_m_cmd_valid_reg),
        .I3(rresp_fifo_full),
        .I4(m_cmd_empty),
        .O(\n_0_m_raddr[12]_i_1 ));
LUT1 #(
    .INIT(2'h2)) 
     \m_raddr[12]_i_10 
       (.I0(\n_0_m_raddr_reg[10] ),
        .O(\n_0_m_raddr[12]_i_10 ));
LUT1 #(
    .INIT(2'h2)) 
     \m_raddr[12]_i_11 
       (.I0(\n_0_m_raddr_reg[9] ),
        .O(\n_0_m_raddr[12]_i_11 ));
LUT5 #(
    .INIT(32'h888A8880)) 
     \m_raddr[12]_i_2 
       (.I0(\n_0_m_raddr[12]_i_3 ),
        .I1(m_raddr_incr[12]),
        .I2(\n_0_m_rburst_reg[1] ),
        .I3(\n_0_m_rburst_reg[0] ),
        .I4(m_raddr0[12]),
        .O(\n_0_m_raddr[12]_i_2 ));
LUT6 #(
    .INIT(64'h00000000FFFF7770)) 
     \m_raddr[12]_i_3 
       (.I0(\n_0_m_raddr[12]_i_6 ),
        .I1(m_axi_rlast),
        .I2(n_0_m_cmd_valid_reg),
        .I3(rresp_fifo_full),
        .I4(m_cmd_empty),
        .I5(\n_0_m_raddr[0]_i_4 ),
        .O(\n_0_m_raddr[12]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair78" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \m_raddr[12]_i_6 
       (.I0(O2),
        .I1(m_axi_rvalid),
        .O(\n_0_m_raddr[12]_i_6 ));
LUT1 #(
    .INIT(2'h2)) 
     \m_raddr[12]_i_7 
       (.I0(\n_0_m_raddr_reg[12] ),
        .O(\n_0_m_raddr[12]_i_7 ));
LUT1 #(
    .INIT(2'h2)) 
     \m_raddr[12]_i_8 
       (.I0(\n_0_m_raddr_reg[12] ),
        .O(\n_0_m_raddr[12]_i_8 ));
LUT1 #(
    .INIT(2'h2)) 
     \m_raddr[12]_i_9 
       (.I0(\n_0_m_raddr_reg[11] ),
        .O(\n_0_m_raddr[12]_i_9 ));
LUT3 #(
    .INIT(8'h02)) 
     \m_raddr[1]_i_2 
       (.I0(addr[1]),
        .I1(n_18_m_cmd_fifo),
        .I2(n_19_m_cmd_fifo),
        .O(\n_0_m_raddr[1]_i_2 ));
LUT6 #(
    .INIT(64'hBBBBBBB8888888B8)) 
     \m_raddr[1]_i_3 
       (.I0(\n_0_m_wrap_addr_reg[1] ),
        .I1(\n_0_m_raddr[0]_i_4 ),
        .I2(m_raddr0[1]),
        .I3(\n_0_m_rburst_reg[0] ),
        .I4(\n_0_m_rburst_reg[1] ),
        .I5(m_raddr_incr[1]),
        .O(\n_0_m_raddr[1]_i_3 ));
LUT4 #(
    .INIT(16'h002A)) 
     \m_raddr[2]_i_2 
       (.I0(addr[2]),
        .I1(n_19_m_cmd_fifo),
        .I2(n_20_m_cmd_fifo),
        .I3(n_18_m_cmd_fifo),
        .O(\n_0_m_raddr[2]_i_2 ));
LUT6 #(
    .INIT(64'hBBBBBBB8888888B8)) 
     \m_raddr[2]_i_3 
       (.I0(\n_0_m_wrap_addr_reg[2] ),
        .I1(\n_0_m_raddr[0]_i_4 ),
        .I2(m_raddr0[2]),
        .I3(\n_0_m_rburst_reg[0] ),
        .I4(\n_0_m_rburst_reg[1] ),
        .I5(m_raddr_incr[2]),
        .O(\n_0_m_raddr[2]_i_3 ));
LUT2 #(
    .INIT(4'h2)) 
     \m_raddr[3]_i_2 
       (.I0(addr[3]),
        .I1(n_18_m_cmd_fifo),
        .O(\n_0_m_raddr[3]_i_2 ));
LUT6 #(
    .INIT(64'hBBBBBBB8888888B8)) 
     \m_raddr[3]_i_3 
       (.I0(\n_0_m_wrap_addr_reg[3] ),
        .I1(\n_0_m_raddr[0]_i_4 ),
        .I2(m_raddr0[3]),
        .I3(\n_0_m_rburst_reg[0] ),
        .I4(\n_0_m_rburst_reg[1] ),
        .I5(m_raddr_incr[3]),
        .O(\n_0_m_raddr[3]_i_3 ));
LUT4 #(
    .INIT(16'h02AA)) 
     \m_raddr[4]_i_2 
       (.I0(addr[4]),
        .I1(n_20_m_cmd_fifo),
        .I2(n_19_m_cmd_fifo),
        .I3(n_18_m_cmd_fifo),
        .O(\n_0_m_raddr[4]_i_2 ));
LUT6 #(
    .INIT(64'hBBBBBBB8888888B8)) 
     \m_raddr[4]_i_3 
       (.I0(\n_0_m_wrap_addr_reg[4] ),
        .I1(\n_0_m_raddr[0]_i_4 ),
        .I2(m_raddr0[4]),
        .I3(\n_0_m_rburst_reg[0] ),
        .I4(\n_0_m_rburst_reg[1] ),
        .I5(m_raddr_incr[4]),
        .O(\n_0_m_raddr[4]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair71" *) 
   LUT5 #(
    .INIT(32'hFF700070)) 
     \m_raddr[5]_i_1 
       (.I0(n_19_m_cmd_fifo),
        .I1(n_18_m_cmd_fifo),
        .I2(addr[5]),
        .I3(\n_0_m_raddr[5]_i_2 ),
        .I4(\n_0_m_raddr[5]_i_3 ),
        .O(\n_0_m_raddr[5]_i_1 ));
LUT6 #(
    .INIT(64'hAAFEFEFEFEFEFEFE)) 
     \m_raddr[5]_i_2 
       (.I0(m_cmd_empty),
        .I1(rresp_fifo_full),
        .I2(n_0_m_cmd_valid_reg),
        .I3(m_axi_rlast),
        .I4(m_axi_rvalid),
        .I5(O2),
        .O(\n_0_m_raddr[5]_i_2 ));
LUT6 #(
    .INIT(64'hB8B8B8BBB8B8B888)) 
     \m_raddr[5]_i_3 
       (.I0(\n_0_m_wrap_addr_reg[5] ),
        .I1(\n_0_m_raddr[0]_i_4 ),
        .I2(m_raddr_incr[5]),
        .I3(\n_0_m_rburst_reg[0] ),
        .I4(\n_0_m_rburst_reg[1] ),
        .I5(m_raddr0[5]),
        .O(\n_0_m_raddr[5]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFE020000)) 
     \m_raddr[6]_i_1 
       (.I0(m_raddr0[6]),
        .I1(\n_0_m_rburst_reg[0] ),
        .I2(\n_0_m_rburst_reg[1] ),
        .I3(m_raddr_incr[6]),
        .I4(\n_0_m_raddr[12]_i_3 ),
        .I5(\n_0_m_raddr[6]_i_2 ),
        .O(\n_0_m_raddr[6]_i_1 ));
LUT6 #(
    .INIT(64'h00000000FDFFF8FF)) 
     \m_raddr[6]_i_2 
       (.I0(n_20_m_cmd_fifo),
        .I1(n_16_m_cmd_fifo),
        .I2(n_19_m_cmd_fifo),
        .I3(n_18_m_cmd_fifo),
        .I4(n_15_m_cmd_fifo),
        .I5(\n_0_m_raddr[6]_i_3 ),
        .O(\n_0_m_raddr[6]_i_2 ));
LUT6 #(
    .INIT(64'hBBBBBBBBBFFFFFFF)) 
     \m_raddr[6]_i_3 
       (.I0(\n_0_m_raddr[8]_i_8 ),
        .I1(addr[6]),
        .I2(n_14_m_cmd_fifo),
        .I3(n_20_m_cmd_fifo),
        .I4(n_19_m_cmd_fifo),
        .I5(n_18_m_cmd_fifo),
        .O(\n_0_m_raddr[6]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFE020000)) 
     \m_raddr[7]_i_1 
       (.I0(m_raddr0[7]),
        .I1(\n_0_m_rburst_reg[0] ),
        .I2(\n_0_m_rburst_reg[1] ),
        .I3(m_raddr_incr[7]),
        .I4(\n_0_m_raddr[12]_i_3 ),
        .I5(\n_0_m_raddr[7]_i_3 ),
        .O(\n_0_m_raddr[7]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair72" *) 
   LUT5 #(
    .INIT(32'h00080000)) 
     \m_raddr[7]_i_3 
       (.I0(\n_0_m_raddr[7]_i_8 ),
        .I1(addr[7]),
        .I2(\n_0_m_raddr[5]_i_2 ),
        .I3(n_22_m_cmd_fifo),
        .I4(n_21_m_cmd_fifo),
        .O(\n_0_m_raddr[7]_i_3 ));
LUT1 #(
    .INIT(2'h2)) 
     \m_raddr[7]_i_4 
       (.I0(\n_0_m_raddr_reg[7] ),
        .O(\n_0_m_raddr[7]_i_4 ));
LUT3 #(
    .INIT(8'h6A)) 
     \m_raddr[7]_i_5 
       (.I0(\n_0_m_raddr_reg[6] ),
        .I1(\n_0_m_rsize_reg[1] ),
        .I2(\n_0_m_rsize_reg[2] ),
        .O(\n_0_m_raddr[7]_i_5 ));
LUT3 #(
    .INIT(8'h6A)) 
     \m_raddr[7]_i_6 
       (.I0(\n_0_m_raddr_reg[5] ),
        .I1(\n_0_m_rsize_reg[0] ),
        .I2(\n_0_m_rsize_reg[2] ),
        .O(\n_0_m_raddr[7]_i_6 ));
LUT4 #(
    .INIT(16'hAA9A)) 
     \m_raddr[7]_i_7 
       (.I0(m_raddr0[4]),
        .I1(\n_0_m_rsize_reg[1] ),
        .I2(\n_0_m_rsize_reg[2] ),
        .I3(\n_0_m_rsize_reg[0] ),
        .O(\n_0_m_raddr[7]_i_7 ));
LUT6 #(
    .INIT(64'hF0C0F0A000C000A0)) 
     \m_raddr[7]_i_8 
       (.I0(n_14_m_cmd_fifo),
        .I1(n_15_m_cmd_fifo),
        .I2(n_18_m_cmd_fifo),
        .I3(n_19_m_cmd_fifo),
        .I4(n_20_m_cmd_fifo),
        .I5(n_16_m_cmd_fifo),
        .O(\n_0_m_raddr[7]_i_8 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFE020000)) 
     \m_raddr[8]_i_1 
       (.I0(m_raddr0[8]),
        .I1(\n_0_m_rburst_reg[0] ),
        .I2(\n_0_m_rburst_reg[1] ),
        .I3(m_raddr_incr[8]),
        .I4(\n_0_m_raddr[12]_i_3 ),
        .I5(\n_0_m_raddr[8]_i_3 ),
        .O(\n_0_m_raddr[8]_i_1 ));
LUT6 #(
    .INIT(64'h000000000808C000)) 
     \m_raddr[8]_i_3 
       (.I0(n_15_m_cmd_fifo),
        .I1(addr[8]),
        .I2(\n_0_m_raddr[9]_i_4 ),
        .I3(n_14_m_cmd_fifo),
        .I4(\n_0_m_raddr[9]_i_3 ),
        .I5(\n_0_m_raddr[8]_i_8 ),
        .O(\n_0_m_raddr[8]_i_3 ));
LUT1 #(
    .INIT(2'h2)) 
     \m_raddr[8]_i_4 
       (.I0(\n_0_m_raddr_reg[8] ),
        .O(\n_0_m_raddr[8]_i_4 ));
LUT1 #(
    .INIT(2'h2)) 
     \m_raddr[8]_i_5 
       (.I0(\n_0_m_raddr_reg[7] ),
        .O(\n_0_m_raddr[8]_i_5 ));
LUT1 #(
    .INIT(2'h1)) 
     \m_raddr[8]_i_6 
       (.I0(\n_0_m_raddr_reg[6] ),
        .O(\n_0_m_raddr[8]_i_6 ));
LUT1 #(
    .INIT(2'h2)) 
     \m_raddr[8]_i_7 
       (.I0(\n_0_m_raddr_reg[5] ),
        .O(\n_0_m_raddr[8]_i_7 ));
(* SOFT_HLUTNM = "soft_lutpair72" *) 
   LUT3 #(
    .INIT(8'hEF)) 
     \m_raddr[8]_i_8 
       (.I0(\n_0_m_raddr[5]_i_2 ),
        .I1(n_22_m_cmd_fifo),
        .I2(n_21_m_cmd_fifo),
        .O(\n_0_m_raddr[8]_i_8 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFE020000)) 
     \m_raddr[9]_i_1 
       (.I0(m_raddr0[9]),
        .I1(\n_0_m_rburst_reg[0] ),
        .I2(\n_0_m_rburst_reg[1] ),
        .I3(m_raddr_incr[9]),
        .I4(\n_0_m_raddr[12]_i_3 ),
        .I5(\n_0_m_raddr[9]_i_2 ),
        .O(\n_0_m_raddr[9]_i_1 ));
LUT6 #(
    .INIT(64'h0000080000000000)) 
     \m_raddr[9]_i_2 
       (.I0(\n_0_m_raddr[9]_i_3 ),
        .I1(n_14_m_cmd_fifo),
        .I2(\n_0_m_raddr[9]_i_4 ),
        .I3(addr[9]),
        .I4(\n_0_m_raddr[5]_i_2 ),
        .I5(\n_0_m_raddr[9]_i_5 ),
        .O(\n_0_m_raddr[9]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair67" *) 
   LUT3 #(
    .INIT(8'h8A)) 
     \m_raddr[9]_i_3 
       (.I0(n_18_m_cmd_fifo),
        .I1(n_19_m_cmd_fifo),
        .I2(n_20_m_cmd_fifo),
        .O(\n_0_m_raddr[9]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair71" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \m_raddr[9]_i_4 
       (.I0(n_18_m_cmd_fifo),
        .I1(n_19_m_cmd_fifo),
        .O(\n_0_m_raddr[9]_i_4 ));
LUT2 #(
    .INIT(4'h2)) 
     \m_raddr[9]_i_5 
       (.I0(n_21_m_cmd_fifo),
        .I1(n_22_m_cmd_fifo),
        .O(\n_0_m_raddr[9]_i_5 ));
FDRE \m_raddr_reg[0] 
       (.C(I4),
        .CE(\n_0_m_raddr[12]_i_1 ),
        .D(\n_0_m_raddr[0]_i_1 ),
        .Q(m_raddr0[0]),
        .R(1'b0));
CARRY4 \m_raddr_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\n_0_m_raddr_reg[0]_i_3 ,\n_1_m_raddr_reg[0]_i_3 ,\n_2_m_raddr_reg[0]_i_3 ,\n_3_m_raddr_reg[0]_i_3 }),
        .CYINIT(1'b0),
        .DI(m_raddr0[3:0]),
        .O(m_raddr_incr[3:0]),
        .S({\n_0_m_raddr[0]_i_6 ,\n_0_m_raddr[0]_i_7 ,\n_0_m_raddr[0]_i_8 ,\n_0_m_raddr[0]_i_9 }));
FDRE \m_raddr_reg[10] 
       (.C(I4),
        .CE(\n_0_m_raddr[12]_i_1 ),
        .D(\n_0_m_raddr[10]_i_1 ),
        .Q(\n_0_m_raddr_reg[10] ),
        .R(1'b0));
FDRE \m_raddr_reg[11] 
       (.C(I4),
        .CE(\n_0_m_raddr[12]_i_1 ),
        .D(\n_0_m_raddr[11]_i_1 ),
        .Q(\n_0_m_raddr_reg[11] ),
        .R(1'b0));
CARRY4 \m_raddr_reg[11]_i_2 
       (.CI(\n_0_m_raddr_reg[7]_i_2 ),
        .CO({\n_0_m_raddr_reg[11]_i_2 ,\n_1_m_raddr_reg[11]_i_2 ,\n_2_m_raddr_reg[11]_i_2 ,\n_3_m_raddr_reg[11]_i_2 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(m_raddr_incr[11:8]),
        .S({\n_0_m_raddr[11]_i_3 ,\n_0_m_raddr[11]_i_4 ,\n_0_m_raddr[11]_i_5 ,\n_0_m_raddr[11]_i_6 }));
FDRE \m_raddr_reg[12] 
       (.C(I4),
        .CE(\n_0_m_raddr[12]_i_1 ),
        .D(\n_0_m_raddr[12]_i_2 ),
        .Q(\n_0_m_raddr_reg[12] ),
        .R(1'b0));
CARRY4 \m_raddr_reg[12]_i_4 
       (.CI(\n_0_m_raddr_reg[11]_i_2 ),
        .CO(\NLW_m_raddr_reg[12]_i_4_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_m_raddr_reg[12]_i_4_O_UNCONNECTED [3:1],m_raddr_incr[12]}),
        .S({1'b0,1'b0,1'b0,\n_0_m_raddr[12]_i_7 }));
CARRY4 \m_raddr_reg[12]_i_5 
       (.CI(\n_0_m_raddr_reg[8]_i_2 ),
        .CO({\NLW_m_raddr_reg[12]_i_5_CO_UNCONNECTED [3],\n_1_m_raddr_reg[12]_i_5 ,\n_2_m_raddr_reg[12]_i_5 ,\n_3_m_raddr_reg[12]_i_5 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(m_raddr0[12:9]),
        .S({\n_0_m_raddr[12]_i_8 ,\n_0_m_raddr[12]_i_9 ,\n_0_m_raddr[12]_i_10 ,\n_0_m_raddr[12]_i_11 }));
FDRE \m_raddr_reg[1] 
       (.C(I4),
        .CE(\n_0_m_raddr[12]_i_1 ),
        .D(\n_0_m_raddr_reg[1]_i_1 ),
        .Q(m_raddr0[1]),
        .R(1'b0));
MUXF7 \m_raddr_reg[1]_i_1 
       (.I0(\n_0_m_raddr[1]_i_2 ),
        .I1(\n_0_m_raddr[1]_i_3 ),
        .O(\n_0_m_raddr_reg[1]_i_1 ),
        .S(\n_0_m_raddr[5]_i_2 ));
FDRE \m_raddr_reg[2] 
       (.C(I4),
        .CE(\n_0_m_raddr[12]_i_1 ),
        .D(\n_0_m_raddr_reg[2]_i_1 ),
        .Q(m_raddr0[2]),
        .R(1'b0));
MUXF7 \m_raddr_reg[2]_i_1 
       (.I0(\n_0_m_raddr[2]_i_2 ),
        .I1(\n_0_m_raddr[2]_i_3 ),
        .O(\n_0_m_raddr_reg[2]_i_1 ),
        .S(\n_0_m_raddr[5]_i_2 ));
FDRE \m_raddr_reg[3] 
       (.C(I4),
        .CE(\n_0_m_raddr[12]_i_1 ),
        .D(\n_0_m_raddr_reg[3]_i_1 ),
        .Q(m_raddr0[3]),
        .R(1'b0));
MUXF7 \m_raddr_reg[3]_i_1 
       (.I0(\n_0_m_raddr[3]_i_2 ),
        .I1(\n_0_m_raddr[3]_i_3 ),
        .O(\n_0_m_raddr_reg[3]_i_1 ),
        .S(\n_0_m_raddr[5]_i_2 ));
FDRE \m_raddr_reg[4] 
       (.C(I4),
        .CE(\n_0_m_raddr[12]_i_1 ),
        .D(\n_0_m_raddr_reg[4]_i_1 ),
        .Q(m_raddr0[4]),
        .R(1'b0));
MUXF7 \m_raddr_reg[4]_i_1 
       (.I0(\n_0_m_raddr[4]_i_2 ),
        .I1(\n_0_m_raddr[4]_i_3 ),
        .O(\n_0_m_raddr_reg[4]_i_1 ),
        .S(\n_0_m_raddr[5]_i_2 ));
FDRE \m_raddr_reg[5] 
       (.C(I4),
        .CE(\n_0_m_raddr[12]_i_1 ),
        .D(\n_0_m_raddr[5]_i_1 ),
        .Q(\n_0_m_raddr_reg[5] ),
        .R(1'b0));
FDRE \m_raddr_reg[6] 
       (.C(I4),
        .CE(\n_0_m_raddr[12]_i_1 ),
        .D(\n_0_m_raddr[6]_i_1 ),
        .Q(\n_0_m_raddr_reg[6] ),
        .R(1'b0));
FDRE \m_raddr_reg[7] 
       (.C(I4),
        .CE(\n_0_m_raddr[12]_i_1 ),
        .D(\n_0_m_raddr[7]_i_1 ),
        .Q(\n_0_m_raddr_reg[7] ),
        .R(1'b0));
CARRY4 \m_raddr_reg[7]_i_2 
       (.CI(\n_0_m_raddr_reg[0]_i_3 ),
        .CO({\n_0_m_raddr_reg[7]_i_2 ,\n_1_m_raddr_reg[7]_i_2 ,\n_2_m_raddr_reg[7]_i_2 ,\n_3_m_raddr_reg[7]_i_2 }),
        .CYINIT(1'b0),
        .DI({1'b0,\n_0_m_raddr_reg[6] ,\n_0_m_raddr_reg[5] ,m_raddr0[4]}),
        .O(m_raddr_incr[7:4]),
        .S({\n_0_m_raddr[7]_i_4 ,\n_0_m_raddr[7]_i_5 ,\n_0_m_raddr[7]_i_6 ,\n_0_m_raddr[7]_i_7 }));
FDRE \m_raddr_reg[8] 
       (.C(I4),
        .CE(\n_0_m_raddr[12]_i_1 ),
        .D(\n_0_m_raddr[8]_i_1 ),
        .Q(\n_0_m_raddr_reg[8] ),
        .R(1'b0));
CARRY4 \m_raddr_reg[8]_i_2 
       (.CI(1'b0),
        .CO({\n_0_m_raddr_reg[8]_i_2 ,\n_1_m_raddr_reg[8]_i_2 ,\n_2_m_raddr_reg[8]_i_2 ,\n_3_m_raddr_reg[8]_i_2 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\n_0_m_raddr_reg[6] ,1'b0}),
        .O(m_raddr0[8:5]),
        .S({\n_0_m_raddr[8]_i_4 ,\n_0_m_raddr[8]_i_5 ,\n_0_m_raddr[8]_i_6 ,\n_0_m_raddr[8]_i_7 }));
FDRE \m_raddr_reg[9] 
       (.C(I4),
        .CE(\n_0_m_raddr[12]_i_1 ),
        .D(\n_0_m_raddr[9]_i_1 ),
        .Q(\n_0_m_raddr_reg[9] ),
        .R(1'b0));
FDRE \m_rburst_reg[0] 
       (.C(I4),
        .CE(m_cmd_pop),
        .D(n_22_m_cmd_fifo),
        .Q(\n_0_m_rburst_reg[0] ),
        .R(1'b0));
FDRE \m_rburst_reg[1] 
       (.C(I4),
        .CE(m_cmd_pop),
        .D(n_21_m_cmd_fifo),
        .Q(\n_0_m_rburst_reg[1] ),
        .R(1'b0));
(* SOFT_HLUTNM = "soft_lutpair66" *) 
   LUT5 #(
    .INIT(32'hCCC08000)) 
     m_rresp_fifo_stall_i_1
       (.I0(m_axi_rvalid),
        .I1(I6),
        .I2(O2),
        .I3(rresp_fifo_full),
        .I4(n_0_m_rresp_fifo_stall_reg),
        .O(n_0_m_rresp_fifo_stall_i_1));
FDRE m_rresp_fifo_stall_reg
       (.C(I4),
        .CE(1'b1),
        .D(n_0_m_rresp_fifo_stall_i_1),
        .Q(n_0_m_rresp_fifo_stall_reg),
        .R(1'b0));
(* SOFT_HLUTNM = "soft_lutpair78" *) 
   LUT5 #(
    .INIT(32'hBFFF8000)) 
     \m_rresp_reg[0]_i_1 
       (.I0(m_axi_rresp[0]),
        .I1(m_axi_rvalid),
        .I2(O2),
        .I3(I6),
        .I4(\n_0_m_rresp_reg_reg[0] ),
        .O(\n_0_m_rresp_reg[0]_i_1 ));
LUT5 #(
    .INIT(32'hBFFF8000)) 
     \m_rresp_reg[1]_i_1 
       (.I0(m_axi_rresp[1]),
        .I1(m_axi_rvalid),
        .I2(O2),
        .I3(I6),
        .I4(\n_0_m_rresp_reg_reg[1] ),
        .O(\n_0_m_rresp_reg[1]_i_1 ));
FDRE \m_rresp_reg_reg[0] 
       (.C(I4),
        .CE(1'b1),
        .D(\n_0_m_rresp_reg[0]_i_1 ),
        .Q(\n_0_m_rresp_reg_reg[0] ),
        .R(1'b0));
FDRE \m_rresp_reg_reg[1] 
       (.C(I4),
        .CE(1'b1),
        .D(\n_0_m_rresp_reg[1]_i_1 ),
        .Q(\n_0_m_rresp_reg_reg[1] ),
        .R(1'b0));
FDRE \m_rsize_reg[0] 
       (.C(I4),
        .CE(m_cmd_pop),
        .D(n_20_m_cmd_fifo),
        .Q(\n_0_m_rsize_reg[0] ),
        .R(1'b0));
FDRE \m_rsize_reg[1] 
       (.C(I4),
        .CE(m_cmd_pop),
        .D(n_19_m_cmd_fifo),
        .Q(\n_0_m_rsize_reg[1] ),
        .R(1'b0));
FDRE \m_rsize_reg[2] 
       (.C(I4),
        .CE(m_cmd_pop),
        .D(n_18_m_cmd_fifo),
        .Q(\n_0_m_rsize_reg[2] ),
        .R(1'b0));
(* SOFT_HLUTNM = "soft_lutpair67" *) 
   LUT5 #(
    .INIT(32'h00010000)) 
     \m_wrap_addr[1]_i_1 
       (.I0(n_18_m_cmd_fifo),
        .I1(n_19_m_cmd_fifo),
        .I2(n_16_m_cmd_fifo),
        .I3(n_20_m_cmd_fifo),
        .I4(addr[1]),
        .O(\n_0_m_wrap_addr[1]_i_1 ));
LUT6 #(
    .INIT(64'h0101001100000000)) 
     \m_wrap_addr[2]_i_1 
       (.I0(n_18_m_cmd_fifo),
        .I1(n_19_m_cmd_fifo),
        .I2(n_16_m_cmd_fifo),
        .I3(n_15_m_cmd_fifo),
        .I4(n_20_m_cmd_fifo),
        .I5(addr[2]),
        .O(\n_0_m_wrap_addr[2]_i_1 ));
LUT6 #(
    .INIT(64'h1010105400000000)) 
     \m_wrap_addr[3]_i_1 
       (.I0(n_18_m_cmd_fifo),
        .I1(n_19_m_cmd_fifo),
        .I2(\n_0_m_wrap_addr[5]_i_2 ),
        .I3(n_16_m_cmd_fifo),
        .I4(n_20_m_cmd_fifo),
        .I5(addr[3]),
        .O(\n_0_m_wrap_addr[3]_i_1 ));
LUT6 #(
    .INIT(64'h4501551100000000)) 
     \m_wrap_addr[4]_i_1 
       (.I0(n_18_m_cmd_fifo),
        .I1(n_19_m_cmd_fifo),
        .I2(n_14_m_cmd_fifo),
        .I3(\n_0_m_wrap_addr[4]_i_2 ),
        .I4(n_20_m_cmd_fifo),
        .I5(addr[4]),
        .O(\n_0_m_wrap_addr[4]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair86" *) 
   LUT3 #(
    .INIT(8'h47)) 
     \m_wrap_addr[4]_i_2 
       (.I0(n_16_m_cmd_fifo),
        .I1(n_20_m_cmd_fifo),
        .I2(n_15_m_cmd_fifo),
        .O(\n_0_m_wrap_addr[4]_i_2 ));
LUT6 #(
    .INIT(64'h00CF05CF00000000)) 
     \m_wrap_addr[5]_i_1 
       (.I0(n_20_m_cmd_fifo),
        .I1(\n_0_m_wrap_addr[5]_i_2 ),
        .I2(n_19_m_cmd_fifo),
        .I3(n_18_m_cmd_fifo),
        .I4(n_16_m_cmd_fifo),
        .I5(addr[5]),
        .O(\n_0_m_wrap_addr[5]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair86" *) 
   LUT3 #(
    .INIT(8'h47)) 
     \m_wrap_addr[5]_i_2 
       (.I0(n_15_m_cmd_fifo),
        .I1(n_20_m_cmd_fifo),
        .I2(n_14_m_cmd_fifo),
        .O(\n_0_m_wrap_addr[5]_i_2 ));
FDRE \m_wrap_addr_reg[1] 
       (.C(I4),
        .CE(m_cmd_pop),
        .D(\n_0_m_wrap_addr[1]_i_1 ),
        .Q(\n_0_m_wrap_addr_reg[1] ),
        .R(1'b0));
FDRE \m_wrap_addr_reg[2] 
       (.C(I4),
        .CE(m_cmd_pop),
        .D(\n_0_m_wrap_addr[2]_i_1 ),
        .Q(\n_0_m_wrap_addr_reg[2] ),
        .R(1'b0));
FDRE \m_wrap_addr_reg[3] 
       (.C(I4),
        .CE(m_cmd_pop),
        .D(\n_0_m_wrap_addr[3]_i_1 ),
        .Q(\n_0_m_wrap_addr_reg[3] ),
        .R(1'b0));
FDRE \m_wrap_addr_reg[4] 
       (.C(I4),
        .CE(m_cmd_pop),
        .D(\n_0_m_wrap_addr[4]_i_1 ),
        .Q(\n_0_m_wrap_addr_reg[4] ),
        .R(1'b0));
FDRE \m_wrap_addr_reg[5] 
       (.C(I4),
        .CE(m_cmd_pop),
        .D(\n_0_m_wrap_addr[5]_i_1 ),
        .Q(\n_0_m_wrap_addr_reg[5] ),
        .R(1'b0));
(* SOFT_HLUTNM = "soft_lutpair84" *) 
   LUT3 #(
    .INIT(8'h74)) 
     \m_wrap_cnt[0]_i_1 
       (.I0(m_wrap_cnt_reg__0[0]),
        .I1(\n_0_m_raddr[5]_i_2 ),
        .I2(\n_0_m_wrap_cnt[0]_i_2 ),
        .O(p_0_in__1[0]));
LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
     \m_wrap_cnt[0]_i_2 
       (.I0(addr[6]),
        .I1(\n_0_m_wrap_cnt[0]_i_3 ),
        .I2(addr[4]),
        .I3(\n_0_m_raddr[9]_i_3 ),
        .I4(addr[5]),
        .I5(\n_0_m_raddr[9]_i_4 ),
        .O(\n_0_m_wrap_cnt[0]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \m_wrap_cnt[0]_i_3 
       (.I0(addr[3]),
        .I1(addr[2]),
        .I2(n_19_m_cmd_fifo),
        .I3(addr[1]),
        .I4(n_20_m_cmd_fifo),
        .I5(addr[0]),
        .O(\n_0_m_wrap_cnt[0]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair84" *) 
   LUT4 #(
    .INIT(16'h9F90)) 
     \m_wrap_cnt[1]_i_1 
       (.I0(m_wrap_cnt_reg__0[0]),
        .I1(m_wrap_cnt_reg__0[1]),
        .I2(\n_0_m_raddr[5]_i_2 ),
        .I3(\n_0_m_wrap_cnt[1]_i_2 ),
        .O(p_0_in__1[1]));
LUT5 #(
    .INIT(32'h00004C7F)) 
     \m_wrap_cnt[1]_i_2 
       (.I0(addr[7]),
        .I1(n_18_m_cmd_fifo),
        .I2(n_19_m_cmd_fifo),
        .I3(\n_0_m_wrap_cnt[1]_i_3 ),
        .I4(\n_0_m_wrap_cnt[1]_i_4 ),
        .O(\n_0_m_wrap_cnt[1]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \m_wrap_cnt[1]_i_3 
       (.I0(addr[4]),
        .I1(addr[3]),
        .I2(n_19_m_cmd_fifo),
        .I3(addr[2]),
        .I4(n_20_m_cmd_fifo),
        .I5(addr[1]),
        .O(\n_0_m_wrap_cnt[1]_i_3 ));
LUT6 #(
    .INIT(64'h0C080008FFFFFFFF)) 
     \m_wrap_cnt[1]_i_4 
       (.I0(addr[5]),
        .I1(n_18_m_cmd_fifo),
        .I2(n_19_m_cmd_fifo),
        .I3(n_20_m_cmd_fifo),
        .I4(addr[6]),
        .I5(n_16_m_cmd_fifo),
        .O(\n_0_m_wrap_cnt[1]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair73" *) 
   LUT5 #(
    .INIT(32'hA9FFA900)) 
     \m_wrap_cnt[2]_i_1 
       (.I0(m_wrap_cnt_reg__0[2]),
        .I1(m_wrap_cnt_reg__0[1]),
        .I2(m_wrap_cnt_reg__0[0]),
        .I3(\n_0_m_raddr[5]_i_2 ),
        .I4(\n_0_m_wrap_cnt[2]_i_2 ),
        .O(p_0_in__1[2]));
LUT5 #(
    .INIT(32'h00004C7F)) 
     \m_wrap_cnt[2]_i_2 
       (.I0(addr[8]),
        .I1(n_18_m_cmd_fifo),
        .I2(n_19_m_cmd_fifo),
        .I3(\n_0_m_wrap_cnt[2]_i_3 ),
        .I4(\n_0_m_wrap_cnt[2]_i_4 ),
        .O(\n_0_m_wrap_cnt[2]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \m_wrap_cnt[2]_i_3 
       (.I0(addr[5]),
        .I1(addr[4]),
        .I2(n_19_m_cmd_fifo),
        .I3(addr[3]),
        .I4(n_20_m_cmd_fifo),
        .I5(addr[2]),
        .O(\n_0_m_wrap_cnt[2]_i_3 ));
LUT6 #(
    .INIT(64'h0C080008FFFFFFFF)) 
     \m_wrap_cnt[2]_i_4 
       (.I0(addr[6]),
        .I1(n_18_m_cmd_fifo),
        .I2(n_19_m_cmd_fifo),
        .I3(n_20_m_cmd_fifo),
        .I4(addr[7]),
        .I5(n_15_m_cmd_fifo),
        .O(\n_0_m_wrap_cnt[2]_i_4 ));
LUT5 #(
    .INIT(32'h60606F60)) 
     \m_wrap_cnt[3]_i_1 
       (.I0(m_wrap_cnt_reg__0[3]),
        .I1(\n_0_m_wrap_cnt[3]_i_2 ),
        .I2(\n_0_m_raddr[5]_i_2 ),
        .I3(n_14_m_cmd_fifo),
        .I4(\n_0_m_wrap_cnt[3]_i_3 ),
        .O(p_0_in__1[3]));
(* SOFT_HLUTNM = "soft_lutpair73" *) 
   LUT3 #(
    .INIT(8'h01)) 
     \m_wrap_cnt[3]_i_2 
       (.I0(m_wrap_cnt_reg__0[1]),
        .I1(m_wrap_cnt_reg__0[0]),
        .I2(m_wrap_cnt_reg__0[2]),
        .O(\n_0_m_wrap_cnt[3]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \m_wrap_cnt[3]_i_3 
       (.I0(addr[7]),
        .I1(addr[8]),
        .I2(\n_0_m_raddr[9]_i_4 ),
        .I3(addr[9]),
        .I4(\n_0_m_raddr[9]_i_3 ),
        .I5(\n_0_m_wrap_cnt[3]_i_4 ),
        .O(\n_0_m_wrap_cnt[3]_i_3 ));
LUT6 #(
    .INIT(64'hF0FFF000AACCAACC)) 
     \m_wrap_cnt[3]_i_4 
       (.I0(addr[4]),
        .I1(addr[3]),
        .I2(addr[6]),
        .I3(n_20_m_cmd_fifo),
        .I4(addr[5]),
        .I5(n_19_m_cmd_fifo),
        .O(\n_0_m_wrap_cnt[3]_i_4 ));
FDRE \m_wrap_cnt_reg[0] 
       (.C(I4),
        .CE(\n_0_m_raddr[12]_i_1 ),
        .D(p_0_in__1[0]),
        .Q(m_wrap_cnt_reg__0[0]),
        .R(1'b0));
FDRE \m_wrap_cnt_reg[1] 
       (.C(I4),
        .CE(\n_0_m_raddr[12]_i_1 ),
        .D(p_0_in__1[1]),
        .Q(m_wrap_cnt_reg__0[1]),
        .R(1'b0));
FDRE \m_wrap_cnt_reg[2] 
       (.C(I4),
        .CE(\n_0_m_raddr[12]_i_1 ),
        .D(p_0_in__1[2]),
        .Q(m_wrap_cnt_reg__0[2]),
        .R(1'b0));
FDRE \m_wrap_cnt_reg[3] 
       (.C(I4),
        .CE(\n_0_m_raddr[12]_i_1 ),
        .D(p_0_in__1[3]),
        .Q(m_wrap_cnt_reg__0[3]),
        .R(1'b0));
LUT5 #(
    .INIT(32'hB8BBB888)) 
     rresp_wrap_i_1
       (.I0(n_0_rresp_wrap_reg),
        .I1(n_0_dw_fifogen_rresp_i_6),
        .I2(n_0_rresp_wrap_i_2),
        .I3(n_0_s_cmd_fifo_i_2),
        .I4(n_0_rresp_wrap_i_3),
        .O(n_0_rresp_wrap_i_1));
LUT6 #(
    .INIT(64'h0000000100000000)) 
     rresp_wrap_i_2
       (.I0(s_cmd_conv_len[1]),
        .I1(s_cmd_conv_len[0]),
        .I2(s_cmd_conv_len[2]),
        .I3(n_30_s_cmd_fifo),
        .I4(s_cmd_conv_len[3]),
        .I5(n_29_s_cmd_fifo),
        .O(n_0_rresp_wrap_i_2));
LUT6 #(
    .INIT(64'h0000000400000000)) 
     rresp_wrap_i_3
       (.I0(burst[0]),
        .I1(burst[1]),
        .I2(s_conv_len[3]),
        .I3(s_conv_len[2]),
        .I4(s_conv_len[1]),
        .I5(s_conv_len[0]),
        .O(n_0_rresp_wrap_i_3));
FDRE rresp_wrap_reg
       (.C(I3),
        .CE(1'b1),
        .D(n_0_rresp_wrap_i_1),
        .Q(n_0_rresp_wrap_reg),
        .R(SR));
(* SOFT_HLUTNM = "soft_lutpair91" *) 
   LUT1 #(
    .INIT(2'h1)) 
     \s_buf[0]_i_1 
       (.I0(s_buf[0]),
        .O(\n_0_s_buf[0]_i_1 ));
LUT6 #(
    .INIT(64'h0000000022022222)) 
     \s_buf[1]_i_1 
       (.I0(n_0_s_cmd_fifo_i_2),
        .I1(rresp_fifo_empty),
        .I2(O1),
        .I3(s_axi_rready),
        .I4(n_0_s_rvalid_reg),
        .I5(s_cmd_empty),
        .O(\n_0_s_buf[1]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair91" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \s_buf[1]_i_2 
       (.I0(s_buf[0]),
        .I1(s_buf[1]),
        .O(\n_0_s_buf[1]_i_2 ));
FDRE \s_buf_reg[0] 
       (.C(I3),
        .CE(\n_0_s_buf[1]_i_1 ),
        .D(\n_0_s_buf[0]_i_1 ),
        .Q(s_buf[0]),
        .R(SR));
FDRE \s_buf_reg[1] 
       (.C(I3),
        .CE(\n_0_s_buf[1]_i_1 ),
        .D(\n_0_s_buf[1]_i_2 ),
        .Q(s_buf[1]),
        .R(SR));
(* C_ADD_NGC_CONSTRAINT = "0" *) 
   (* C_APPLICATION_TYPE_AXIS = "0" *) 
   (* C_APPLICATION_TYPE_RACH = "0" *) 
   (* C_APPLICATION_TYPE_RDCH = "0" *) 
   (* C_APPLICATION_TYPE_WACH = "0" *) 
   (* C_APPLICATION_TYPE_WDCH = "0" *) 
   (* C_APPLICATION_TYPE_WRCH = "0" *) 
   (* C_AXIS_TDATA_WIDTH = "64" *) 
   (* C_AXIS_TDEST_WIDTH = "4" *) 
   (* C_AXIS_TID_WIDTH = "8" *) 
   (* C_AXIS_TKEEP_WIDTH = "4" *) 
   (* C_AXIS_TSTRB_WIDTH = "4" *) 
   (* C_AXIS_TUSER_WIDTH = "4" *) 
   (* C_AXIS_TYPE = "0" *) 
   (* C_AXI_ADDR_WIDTH = "32" *) 
   (* C_AXI_ARUSER_WIDTH = "1" *) 
   (* C_AXI_AWUSER_WIDTH = "1" *) 
   (* C_AXI_BUSER_WIDTH = "1" *) 
   (* C_AXI_DATA_WIDTH = "64" *) 
   (* C_AXI_ID_WIDTH = "4" *) 
   (* C_AXI_LEN_WIDTH = "8" *) 
   (* C_AXI_LOCK_WIDTH = "2" *) 
   (* C_AXI_RUSER_WIDTH = "1" *) 
   (* C_AXI_TYPE = "0" *) 
   (* C_AXI_WUSER_WIDTH = "1" *) 
   (* C_COMMON_CLOCK = "1" *) 
   (* C_COUNT_TYPE = "0" *) 
   (* C_DATA_COUNT_WIDTH = "5" *) 
   (* C_DEFAULT_VALUE = "BlankString" *) 
   (* C_DIN_WIDTH = "31" *) 
   (* C_DIN_WIDTH_AXIS = "1" *) 
   (* C_DIN_WIDTH_RACH = "32" *) 
   (* C_DIN_WIDTH_RDCH = "64" *) 
   (* C_DIN_WIDTH_WACH = "32" *) 
   (* C_DIN_WIDTH_WDCH = "64" *) 
   (* C_DIN_WIDTH_WRCH = "2" *) 
   (* C_DOUT_RST_VAL = "0" *) 
   (* C_DOUT_WIDTH = "31" *) 
   (* C_ENABLE_RLOCS = "0" *) 
   (* C_ENABLE_RST_SYNC = "1" *) 
   (* C_ERROR_INJECTION_TYPE = "0" *) 
   (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
   (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
   (* C_FAMILY = "virtex7" *) 
   (* C_FULL_FLAGS_RST_VAL = "0" *) 
   (* C_HAS_ALMOST_EMPTY = "0" *) 
   (* C_HAS_ALMOST_FULL = "0" *) 
   (* C_HAS_AXIS_TDATA = "0" *) 
   (* C_HAS_AXIS_TDEST = "0" *) 
   (* C_HAS_AXIS_TID = "0" *) 
   (* C_HAS_AXIS_TKEEP = "0" *) 
   (* C_HAS_AXIS_TLAST = "0" *) 
   (* C_HAS_AXIS_TREADY = "1" *) 
   (* C_HAS_AXIS_TSTRB = "0" *) 
   (* C_HAS_AXIS_TUSER = "0" *) 
   (* C_HAS_AXI_ARUSER = "0" *) 
   (* C_HAS_AXI_AWUSER = "0" *) 
   (* C_HAS_AXI_BUSER = "0" *) 
   (* C_HAS_AXI_ID = "0" *) 
   (* C_HAS_AXI_RD_CHANNEL = "0" *) 
   (* C_HAS_AXI_RUSER = "0" *) 
   (* C_HAS_AXI_WR_CHANNEL = "0" *) 
   (* C_HAS_AXI_WUSER = "0" *) 
   (* C_HAS_BACKUP = "0" *) 
   (* C_HAS_DATA_COUNT = "0" *) 
   (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
   (* C_HAS_DATA_COUNTS_RACH = "0" *) 
   (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
   (* C_HAS_DATA_COUNTS_WACH = "0" *) 
   (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
   (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
   (* C_HAS_INT_CLK = "0" *) 
   (* C_HAS_MASTER_CE = "0" *) 
   (* C_HAS_MEMINIT_FILE = "0" *) 
   (* C_HAS_OVERFLOW = "0" *) 
   (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
   (* C_HAS_PROG_FLAGS_RACH = "0" *) 
   (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
   (* C_HAS_PROG_FLAGS_WACH = "0" *) 
   (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
   (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
   (* C_HAS_RD_DATA_COUNT = "0" *) 
   (* C_HAS_RD_RST = "0" *) 
   (* C_HAS_RST = "0" *) 
   (* C_HAS_SLAVE_CE = "0" *) 
   (* C_HAS_SRST = "1" *) 
   (* C_HAS_UNDERFLOW = "0" *) 
   (* C_HAS_VALID = "0" *) 
   (* C_HAS_WR_ACK = "0" *) 
   (* C_HAS_WR_DATA_COUNT = "0" *) 
   (* C_HAS_WR_RST = "0" *) 
   (* C_IMPLEMENTATION_TYPE = "0" *) 
   (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
   (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
   (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
   (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
   (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
   (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
   (* C_INIT_WR_PNTR_VAL = "0" *) 
   (* C_INTERFACE_TYPE = "0" *) 
   (* C_MEMORY_TYPE = "2" *) 
   (* C_MIF_FILE_NAME = "BlankString" *) 
   (* C_MSGON_VAL = "1" *) 
   (* C_OPTIMIZATION_MODE = "0" *) 
   (* C_OVERFLOW_LOW = "0" *) 
   (* C_POWER_SAVING_MODE = "0" *) 
   (* C_PRELOAD_LATENCY = "0" *) 
   (* C_PRELOAD_REGS = "1" *) 
   (* C_PRIM_FIFO_TYPE = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_AXIS = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_RDCH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_WDCH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
   (* C_PROG_EMPTY_TYPE = "0" *) 
   (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
   (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
   (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
   (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
   (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
   (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL = "31" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
   (* C_PROG_FULL_THRESH_NEGATE_VAL = "30" *) 
   (* C_PROG_FULL_TYPE = "0" *) 
   (* C_PROG_FULL_TYPE_AXIS = "0" *) 
   (* C_PROG_FULL_TYPE_RACH = "0" *) 
   (* C_PROG_FULL_TYPE_RDCH = "0" *) 
   (* C_PROG_FULL_TYPE_WACH = "0" *) 
   (* C_PROG_FULL_TYPE_WDCH = "0" *) 
   (* C_PROG_FULL_TYPE_WRCH = "0" *) 
   (* C_RACH_TYPE = "0" *) 
   (* C_RDCH_TYPE = "0" *) 
   (* C_RD_DATA_COUNT_WIDTH = "5" *) 
   (* C_RD_DEPTH = "32" *) 
   (* C_RD_FREQ = "1" *) 
   (* C_RD_PNTR_WIDTH = "5" *) 
   (* C_REG_SLICE_MODE_AXIS = "0" *) 
   (* C_REG_SLICE_MODE_RACH = "0" *) 
   (* C_REG_SLICE_MODE_RDCH = "0" *) 
   (* C_REG_SLICE_MODE_WACH = "0" *) 
   (* C_REG_SLICE_MODE_WDCH = "0" *) 
   (* C_REG_SLICE_MODE_WRCH = "0" *) 
   (* C_SYNCHRONIZER_STAGE = "3" *) 
   (* C_UNDERFLOW_LOW = "0" *) 
   (* C_USE_COMMON_OVERFLOW = "0" *) 
   (* C_USE_COMMON_UNDERFLOW = "0" *) 
   (* C_USE_DEFAULT_SETTINGS = "0" *) 
   (* C_USE_DOUT_RST = "0" *) 
   (* C_USE_ECC = "0" *) 
   (* C_USE_ECC_AXIS = "0" *) 
   (* C_USE_ECC_RACH = "0" *) 
   (* C_USE_ECC_RDCH = "0" *) 
   (* C_USE_ECC_WACH = "0" *) 
   (* C_USE_ECC_WDCH = "0" *) 
   (* C_USE_ECC_WRCH = "0" *) 
   (* C_USE_EMBEDDED_REG = "0" *) 
   (* C_USE_FIFO16_FLAGS = "0" *) 
   (* C_USE_FWFT_DATA_COUNT = "1" *) 
   (* C_USE_PIPELINE_REG = "0" *) 
   (* C_VALID_LOW = "0" *) 
   (* C_WACH_TYPE = "0" *) 
   (* C_WDCH_TYPE = "0" *) 
   (* C_WRCH_TYPE = "0" *) 
   (* C_WR_ACK_LOW = "0" *) 
   (* C_WR_DATA_COUNT_WIDTH = "5" *) 
   (* C_WR_DEPTH = "32" *) 
   (* C_WR_DEPTH_AXIS = "1024" *) 
   (* C_WR_DEPTH_RACH = "16" *) 
   (* C_WR_DEPTH_RDCH = "1024" *) 
   (* C_WR_DEPTH_WACH = "16" *) 
   (* C_WR_DEPTH_WDCH = "1024" *) 
   (* C_WR_DEPTH_WRCH = "16" *) 
   (* C_WR_FREQ = "1" *) 
   (* C_WR_PNTR_WIDTH = "5" *) 
   (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
   (* C_WR_PNTR_WIDTH_RACH = "4" *) 
   (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
   (* C_WR_PNTR_WIDTH_WACH = "4" *) 
   (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
   (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
   (* C_WR_RESPONSE_LATENCY = "1" *) 
   (* DONT_TOUCH *) 
   axi_dwidth_converter_0_fifo_generator_v12_0__parameterized3 s_cmd_fifo
       (.almost_empty(NLW_s_cmd_fifo_almost_empty_UNCONNECTED),
        .almost_full(NLW_s_cmd_fifo_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_s_cmd_fifo_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_s_cmd_fifo_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_s_cmd_fifo_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_s_cmd_fifo_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_s_cmd_fifo_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_s_cmd_fifo_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_s_cmd_fifo_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_s_cmd_fifo_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_s_cmd_fifo_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_s_cmd_fifo_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_s_cmd_fifo_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_s_cmd_fifo_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_s_cmd_fifo_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_s_cmd_fifo_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_s_cmd_fifo_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_s_cmd_fifo_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_s_cmd_fifo_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_s_cmd_fifo_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_s_cmd_fifo_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_s_cmd_fifo_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_s_cmd_fifo_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_s_cmd_fifo_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_s_cmd_fifo_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_s_cmd_fifo_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_s_cmd_fifo_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_s_cmd_fifo_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_s_cmd_fifo_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_s_cmd_fifo_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_s_cmd_fifo_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_s_cmd_fifo_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_s_cmd_fifo_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_s_cmd_fifo_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_s_cmd_fifo_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_s_cmd_fifo_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_s_cmd_fifo_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_s_cmd_fifo_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_s_cmd_fifo_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_s_cmd_fifo_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_s_cmd_fifo_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_s_cmd_fifo_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_s_cmd_fifo_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_s_cmd_fifo_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_s_cmd_fifo_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_s_cmd_fifo_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_s_cmd_fifo_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_s_cmd_fifo_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_s_cmd_fifo_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_s_cmd_fifo_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_s_cmd_fifo_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_s_cmd_fifo_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_s_cmd_fifo_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_s_cmd_fifo_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_s_cmd_fifo_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_s_cmd_fifo_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(I3),
        .data_count(NLW_s_cmd_fifo_data_count_UNCONNECTED[4:0]),
        .dbiterr(NLW_s_cmd_fifo_dbiterr_UNCONNECTED),
        .din({Q[9:0],1'b0,s_axi_arlen[3:0],I1,Q[51:44],Q[37:35],Q[39:38]}),
        .dout({addr1_in,s_cmd_id,s_cmd_conv_len,s_cmd_conv_size,len,size,n_29_s_cmd_fifo,n_30_s_cmd_fifo}),
        .empty(s_cmd_empty),
        .full(s_cmd_full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_s_cmd_fifo_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_s_cmd_fifo_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_s_cmd_fifo_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_s_cmd_fifo_m_axi_arid_UNCONNECTED[3:0]),
        .m_axi_arlen(NLW_s_cmd_fifo_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_s_cmd_fifo_m_axi_arlock_UNCONNECTED[1:0]),
        .m_axi_arprot(NLW_s_cmd_fifo_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_s_cmd_fifo_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_s_cmd_fifo_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_s_cmd_fifo_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_s_cmd_fifo_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_s_cmd_fifo_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_s_cmd_fifo_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_s_cmd_fifo_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_s_cmd_fifo_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_s_cmd_fifo_m_axi_awid_UNCONNECTED[3:0]),
        .m_axi_awlen(NLW_s_cmd_fifo_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_s_cmd_fifo_m_axi_awlock_UNCONNECTED[1:0]),
        .m_axi_awprot(NLW_s_cmd_fifo_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_s_cmd_fifo_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_s_cmd_fifo_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_s_cmd_fifo_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_s_cmd_fifo_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_s_cmd_fifo_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid({1'b0,1'b0,1'b0,1'b0}),
        .m_axi_bready(NLW_s_cmd_fifo_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid({1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_s_cmd_fifo_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_s_cmd_fifo_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_s_cmd_fifo_m_axi_wid_UNCONNECTED[3:0]),
        .m_axi_wlast(NLW_s_cmd_fifo_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_s_cmd_fifo_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_s_cmd_fifo_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_s_cmd_fifo_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_s_cmd_fifo_m_axis_tdata_UNCONNECTED[63:0]),
        .m_axis_tdest(NLW_s_cmd_fifo_m_axis_tdest_UNCONNECTED[3:0]),
        .m_axis_tid(NLW_s_cmd_fifo_m_axis_tid_UNCONNECTED[7:0]),
        .m_axis_tkeep(NLW_s_cmd_fifo_m_axis_tkeep_UNCONNECTED[3:0]),
        .m_axis_tlast(NLW_s_cmd_fifo_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_s_cmd_fifo_m_axis_tstrb_UNCONNECTED[3:0]),
        .m_axis_tuser(NLW_s_cmd_fifo_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_s_cmd_fifo_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_s_cmd_fifo_overflow_UNCONNECTED),
        .prog_empty(NLW_s_cmd_fifo_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_s_cmd_fifo_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(1'b0),
        .rd_data_count(NLW_s_cmd_fifo_rd_data_count_UNCONNECTED[4:0]),
        .rd_en(s_cmd_pop),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_s_cmd_fifo_rd_rst_busy_UNCONNECTED),
        .rst(1'b0),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock({1'b0,1'b0}),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_s_cmd_fifo_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock({1'b0,1'b0}),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_s_cmd_fifo_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_s_cmd_fifo_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_s_cmd_fifo_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_s_cmd_fifo_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_s_cmd_fifo_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_s_cmd_fifo_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_s_cmd_fifo_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_s_cmd_fifo_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_s_cmd_fifo_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_s_cmd_fifo_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_s_cmd_fifo_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_s_cmd_fifo_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tid({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tkeep({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_s_cmd_fifo_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_s_cmd_fifo_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(SR),
        .underflow(NLW_s_cmd_fifo_underflow_UNCONNECTED),
        .valid(NLW_s_cmd_fifo_valid_UNCONNECTED),
        .wr_ack(NLW_s_cmd_fifo_wr_ack_UNCONNECTED),
        .wr_clk(1'b0),
        .wr_data_count(NLW_s_cmd_fifo_wr_data_count_UNCONNECTED[4:0]),
        .wr_en(s_cmd_push),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_s_cmd_fifo_wr_rst_busy_UNCONNECTED));
LUT6 #(
    .INIT(64'h0000000022022222)) 
     s_cmd_fifo_i_1
       (.I0(n_0_s_cmd_fifo_i_2),
        .I1(rresp_fifo_empty),
        .I2(O1),
        .I3(s_axi_rready),
        .I4(n_0_s_rvalid_reg),
        .I5(s_cmd_empty),
        .O(s_cmd_pop));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     s_cmd_fifo_i_2
       (.I0(\n_0_s_rcnt[6]_i_2 ),
        .I1(s_rcnt_reg__0[7]),
        .I2(s_rcnt_reg__0[6]),
        .I3(s_rcnt_reg__0[5]),
        .I4(s_rcnt_reg__0[4]),
        .I5(n_0_s_rresp_fifo_stall_reg),
        .O(n_0_s_cmd_fifo_i_2));
LUT4 #(
    .INIT(16'hA8AB)) 
     \s_conv_len[0]_i_1 
       (.I0(s_cmd_conv_len[0]),
        .I1(n_0_dw_fifogen_rresp_i_6),
        .I2(s_cmd_pop),
        .I3(s_conv_len[0]),
        .O(\n_0_s_conv_len[0]_i_1 ));
LUT5 #(
    .INIT(32'hABA8A8AB)) 
     \s_conv_len[1]_i_1 
       (.I0(s_cmd_conv_len[1]),
        .I1(n_0_dw_fifogen_rresp_i_6),
        .I2(s_cmd_pop),
        .I3(s_conv_len[1]),
        .I4(s_conv_len[0]),
        .O(\n_0_s_conv_len[1]_i_1 ));
LUT6 #(
    .INIT(64'hABA8ABA8ABA8A8AB)) 
     \s_conv_len[2]_i_1 
       (.I0(s_cmd_conv_len[2]),
        .I1(n_0_dw_fifogen_rresp_i_6),
        .I2(s_cmd_pop),
        .I3(s_conv_len[2]),
        .I4(s_conv_len[0]),
        .I5(s_conv_len[1]),
        .O(\n_0_s_conv_len[2]_i_1 ));
LUT6 #(
    .INIT(64'hB8B8B8B8B8B8B88B)) 
     \s_conv_len[3]_i_1 
       (.I0(s_cmd_conv_len[3]),
        .I1(\n_0_s_conv_len[3]_i_2 ),
        .I2(s_conv_len[3]),
        .I3(s_conv_len[2]),
        .I4(s_conv_len[1]),
        .I5(s_conv_len[0]),
        .O(\n_0_s_conv_len[3]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0322)) 
     \s_conv_len[3]_i_2 
       (.I0(s_cmd_empty),
        .I1(n_0_s_rresp_fifo_stall_reg),
        .I2(n_0_dw_fifogen_rresp_i_8),
        .I3(\n_0_s_raddr[8]_i_3 ),
        .I4(n_0_dw_fifogen_rresp_i_7),
        .I5(s_cmd_pop),
        .O(\n_0_s_conv_len[3]_i_2 ));
FDRE \s_conv_len_reg[0] 
       (.C(I3),
        .CE(rresp_fifo_pop),
        .D(\n_0_s_conv_len[0]_i_1 ),
        .Q(s_conv_len[0]),
        .R(1'b0));
FDRE \s_conv_len_reg[1] 
       (.C(I3),
        .CE(rresp_fifo_pop),
        .D(\n_0_s_conv_len[1]_i_1 ),
        .Q(s_conv_len[1]),
        .R(1'b0));
FDRE \s_conv_len_reg[2] 
       (.C(I3),
        .CE(rresp_fifo_pop),
        .D(\n_0_s_conv_len[2]_i_1 ),
        .Q(s_conv_len[2]),
        .R(1'b0));
FDRE \s_conv_len_reg[3] 
       (.C(I3),
        .CE(rresp_fifo_pop),
        .D(\n_0_s_conv_len[3]_i_1 ),
        .Q(s_conv_len[3]),
        .R(1'b0));
FDRE \s_conv_size_reg[0] 
       (.C(I3),
        .CE(s_cmd_pop),
        .D(s_cmd_conv_size[0]),
        .Q(s_conv_size[0]),
        .R(1'b0));
FDRE \s_conv_size_reg[1] 
       (.C(I3),
        .CE(s_cmd_pop),
        .D(s_cmd_conv_size[1]),
        .Q(s_conv_size[1]),
        .R(1'b0));
FDRE \s_conv_size_reg[2] 
       (.C(I3),
        .CE(s_cmd_pop),
        .D(s_cmd_conv_size[2]),
        .Q(s_conv_size[2]),
        .R(1'b0));
LUT4 #(
    .INIT(16'hBA8A)) 
     \s_id_d1[0]_i_1 
       (.I0(s_id_reg),
        .I1(s_axi_rready),
        .I2(O1),
        .I3(s_id_d1),
        .O(\n_0_s_id_d1[0]_i_1 ));
FDRE \s_id_d1_reg[0] 
       (.C(I3),
        .CE(1'b1),
        .D(\n_0_s_id_d1[0]_i_1 ),
        .Q(s_id_d1),
        .R(1'b0));
(* SOFT_HLUTNM = "soft_lutpair69" *) 
   LUT5 #(
    .INIT(32'hBFBB8088)) 
     \s_id_d2[0]_i_1 
       (.I0(s_id_d1),
        .I1(first_rvalid_d1),
        .I2(s_axi_rready),
        .I3(O1),
        .I4(s_axi_rid),
        .O(\n_0_s_id_d2[0]_i_1 ));
FDRE \s_id_d2_reg[0] 
       (.C(I3),
        .CE(1'b1),
        .D(\n_0_s_id_d2[0]_i_1 ),
        .Q(s_axi_rid),
        .R(SR));
FDRE \s_id_reg_reg[0] 
       (.C(I3),
        .CE(s_cmd_pop),
        .D(s_cmd_id),
        .Q(s_id_reg),
        .R(1'b0));
LUT6 #(
    .INIT(64'h0800080008FF0800)) 
     \s_raddr[0]_i_1 
       (.I0(\n_0_s_raddr[1]_i_2 ),
        .I1(addr1_in[0]),
        .I2(size[0]),
        .I3(s_cmd_pop),
        .I4(s_raddr[0]),
        .I5(\n_0_s_raddr[8]_i_6 ),
        .O(\n_0_s_raddr[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair89" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \s_raddr[10]_i_1 
       (.I0(s_raddr[10]),
        .I1(\n_0_s_raddr[8]_i_6 ),
        .O(\n_0_s_raddr[10]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair90" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \s_raddr[11]_i_1 
       (.I0(s_raddr[11]),
        .I1(\n_0_s_raddr[8]_i_6 ),
        .O(\n_0_s_raddr[11]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair90" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \s_raddr[12]_i_1 
       (.I0(s_raddr[12]),
        .I1(\n_0_s_raddr[8]_i_6 ),
        .O(\n_0_s_raddr[12]_i_1 ));
LUT1 #(
    .INIT(2'h2)) 
     \s_raddr[12]_i_3 
       (.I0(\n_0_s_raddr_reg[12] ),
        .O(\n_0_s_raddr[12]_i_3 ));
LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
     \s_raddr[1]_i_1 
       (.I0(addr1_in[1]),
        .I1(\n_0_s_raddr[1]_i_2 ),
        .I2(s_cmd_pop),
        .I3(\n_0_s_wrap_addr_reg[1] ),
        .I4(\n_0_s_raddr[8]_i_6 ),
        .I5(s_raddr[1]),
        .O(\n_0_s_raddr[1]_i_1 ));
LUT2 #(
    .INIT(4'h1)) 
     \s_raddr[1]_i_2 
       (.I0(size[1]),
        .I1(size[2]),
        .O(\n_0_s_raddr[1]_i_2 ));
LUT5 #(
    .INIT(32'hB8BBB888)) 
     \s_raddr[2]_i_1 
       (.I0(\n_0_s_raddr[2]_i_2 ),
        .I1(s_cmd_pop),
        .I2(\n_0_s_wrap_addr_reg[2] ),
        .I3(\n_0_s_raddr[8]_i_6 ),
        .I4(s_raddr[2]),
        .O(\n_0_s_raddr[2]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair85" *) 
   LUT4 #(
    .INIT(16'h0070)) 
     \s_raddr[2]_i_2 
       (.I0(size[0]),
        .I1(size[1]),
        .I2(addr1_in[2]),
        .I3(size[2]),
        .O(\n_0_s_raddr[2]_i_2 ));
LUT6 #(
    .INIT(64'h2F202F2F2F202020)) 
     \s_raddr[3]_i_1 
       (.I0(addr1_in[3]),
        .I1(size[2]),
        .I2(s_cmd_pop),
        .I3(\n_0_s_wrap_addr_reg[3] ),
        .I4(\n_0_s_raddr[8]_i_6 ),
        .I5(s_raddr[3]),
        .O(\n_0_s_raddr[3]_i_1 ));
LUT5 #(
    .INIT(32'h666AAAAA)) 
     \s_raddr[3]_i_3 
       (.I0(\n_0_s_raddr_reg[3] ),
        .I1(s_rsize[0]),
        .I2(burst[1]),
        .I3(burst[0]),
        .I4(s_rsize[1]),
        .O(\n_0_s_raddr[3]_i_3 ));
LUT5 #(
    .INIT(32'h999AAAAA)) 
     \s_raddr[3]_i_4 
       (.I0(\n_0_s_raddr_reg[2] ),
        .I1(s_rsize[0]),
        .I2(burst[1]),
        .I3(burst[0]),
        .I4(s_rsize[1]),
        .O(\n_0_s_raddr[3]_i_4 ));
LUT6 #(
    .INIT(64'hA9AAA9AAA9AAAAAA)) 
     \s_raddr[3]_i_5 
       (.I0(\n_0_s_raddr_reg[1] ),
        .I1(s_rsize[1]),
        .I2(s_rsize[2]),
        .I3(s_rsize[0]),
        .I4(burst[1]),
        .I5(burst[0]),
        .O(\n_0_s_raddr[3]_i_5 ));
LUT6 #(
    .INIT(64'hAAA9AAA9AAA9AAAA)) 
     \s_raddr[3]_i_6 
       (.I0(\n_0_s_raddr_reg[0] ),
        .I1(s_rsize[1]),
        .I2(s_rsize[2]),
        .I3(s_rsize[0]),
        .I4(burst[1]),
        .I5(burst[0]),
        .O(\n_0_s_raddr[3]_i_6 ));
LUT6 #(
    .INIT(64'h2F202F2F2F202020)) 
     \s_raddr[4]_i_1 
       (.I0(addr1_in[4]),
        .I1(\n_0_s_raddr[4]_i_2 ),
        .I2(s_cmd_pop),
        .I3(\n_0_s_wrap_addr_reg[4] ),
        .I4(\n_0_s_raddr[8]_i_6 ),
        .I5(s_raddr[4]),
        .O(\n_0_s_raddr[4]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair87" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \s_raddr[4]_i_2 
       (.I0(size[2]),
        .I1(size[0]),
        .O(\n_0_s_raddr[4]_i_2 ));
LUT5 #(
    .INIT(32'hB8BBB888)) 
     \s_raddr[5]_i_1 
       (.I0(addr1_in[5]),
        .I1(s_cmd_pop),
        .I2(\n_0_s_wrap_addr_reg[5] ),
        .I3(\n_0_s_raddr[8]_i_6 ),
        .I4(s_raddr[5]),
        .O(\n_0_s_raddr[5]_i_1 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \s_raddr[6]_i_1 
       (.I0(\n_0_s_raddr[6]_i_2 ),
        .I1(s_cmd_pop),
        .I2(s_raddr[6]),
        .I3(\n_0_s_raddr[8]_i_6 ),
        .O(\n_0_s_raddr[6]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair80" *) 
   LUT5 #(
    .INIT(32'h0000F4A4)) 
     \s_raddr[6]_i_2 
       (.I0(size[1]),
        .I1(len[2]),
        .I2(size[0]),
        .I3(len[1]),
        .I4(\n_0_s_raddr[6]_i_3 ),
        .O(\n_0_s_raddr[6]_i_2 ));
LUT6 #(
    .INIT(64'hDFDFDFFFDFDFFFFF)) 
     \s_raddr[6]_i_3 
       (.I0(addr1_in[6]),
        .I1(n_30_s_cmd_fifo),
        .I2(n_29_s_cmd_fifo),
        .I3(size[1]),
        .I4(size[2]),
        .I5(len[3]),
        .O(\n_0_s_raddr[6]_i_3 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \s_raddr[7]_i_1 
       (.I0(\n_0_s_raddr[7]_i_2 ),
        .I1(s_cmd_pop),
        .I2(s_raddr[7]),
        .I3(\n_0_s_raddr[8]_i_6 ),
        .O(\n_0_s_raddr[7]_i_1 ));
LUT5 #(
    .INIT(32'h20000000)) 
     \s_raddr[7]_i_2 
       (.I0(\n_0_s_wrap_addr[5]_i_2 ),
        .I1(n_30_s_cmd_fifo),
        .I2(n_29_s_cmd_fifo),
        .I3(size[2]),
        .I4(addr1_in[7]),
        .O(\n_0_s_raddr[7]_i_2 ));
LUT1 #(
    .INIT(2'h2)) 
     \s_raddr[7]_i_4 
       (.I0(\n_0_s_raddr_reg[7] ),
        .O(\n_0_s_raddr[7]_i_4 ));
LUT3 #(
    .INIT(8'hA9)) 
     \s_raddr[7]_i_5 
       (.I0(\n_0_s_raddr_reg[6] ),
        .I1(burst[1]),
        .I2(burst[0]),
        .O(\n_0_s_raddr[7]_i_5 ));
LUT5 #(
    .INIT(32'h56AAAAAA)) 
     \s_raddr[7]_i_6 
       (.I0(\n_0_s_raddr_reg[5] ),
        .I1(burst[0]),
        .I2(burst[1]),
        .I3(s_rsize[0]),
        .I4(s_rsize[2]),
        .O(\n_0_s_raddr[7]_i_6 ));
LUT5 #(
    .INIT(32'h999AAAAA)) 
     \s_raddr[7]_i_7 
       (.I0(\n_0_s_raddr_reg[4] ),
        .I1(s_rsize[0]),
        .I2(burst[1]),
        .I3(burst[0]),
        .I4(s_rsize[2]),
        .O(\n_0_s_raddr[7]_i_7 ));
LUT5 #(
    .INIT(32'hEAEEAAAA)) 
     \s_raddr[8]_i_1 
       (.I0(s_cmd_pop),
        .I1(n_0_s_rvalid_reg),
        .I2(s_axi_rready),
        .I3(O1),
        .I4(\n_0_s_raddr[8]_i_3 ),
        .O(\n_0_s_raddr[8]_i_1 ));
LUT1 #(
    .INIT(2'h2)) 
     \s_raddr[8]_i_10 
       (.I0(\n_0_s_raddr_reg[8] ),
        .O(\n_0_s_raddr[8]_i_10 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \s_raddr[8]_i_2 
       (.I0(\n_0_s_raddr[8]_i_4 ),
        .I1(s_cmd_pop),
        .I2(s_raddr[8]),
        .I3(\n_0_s_raddr[8]_i_6 ),
        .O(\n_0_s_raddr[8]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair70" *) 
   LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     \s_raddr[8]_i_3 
       (.I0(s_rcnt_reg__0[4]),
        .I1(s_rcnt_reg__0[5]),
        .I2(\n_0_s_rcnt[6]_i_2 ),
        .I3(s_rcnt_reg__0[7]),
        .I4(s_rcnt_reg__0[6]),
        .O(\n_0_s_raddr[8]_i_3 ));
LUT6 #(
    .INIT(64'h0080000000000000)) 
     \s_raddr[8]_i_4 
       (.I0(addr1_in[8]),
        .I1(len[3]),
        .I2(n_29_s_cmd_fifo),
        .I3(n_30_s_cmd_fifo),
        .I4(size[2]),
        .I5(size[0]),
        .O(\n_0_s_raddr[8]_i_4 ));
LUT6 #(
    .INIT(64'h0000000000000004)) 
     \s_raddr[8]_i_6 
       (.I0(burst[0]),
        .I1(burst[1]),
        .I2(s_wrap_cnt_reg__0[1]),
        .I3(s_wrap_cnt_reg__0[0]),
        .I4(s_wrap_cnt_reg__0[2]),
        .I5(s_wrap_cnt_reg__0[3]),
        .O(\n_0_s_raddr[8]_i_6 ));
LUT1 #(
    .INIT(2'h2)) 
     \s_raddr[8]_i_7 
       (.I0(\n_0_s_raddr_reg[11] ),
        .O(\n_0_s_raddr[8]_i_7 ));
LUT1 #(
    .INIT(2'h2)) 
     \s_raddr[8]_i_8 
       (.I0(\n_0_s_raddr_reg[10] ),
        .O(\n_0_s_raddr[8]_i_8 ));
LUT1 #(
    .INIT(2'h2)) 
     \s_raddr[8]_i_9 
       (.I0(\n_0_s_raddr_reg[9] ),
        .O(\n_0_s_raddr[8]_i_9 ));
(* SOFT_HLUTNM = "soft_lutpair89" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \s_raddr[9]_i_1 
       (.I0(s_raddr[9]),
        .I1(\n_0_s_raddr[8]_i_6 ),
        .O(\n_0_s_raddr[9]_i_1 ));
FDRE \s_raddr_reg[0] 
       (.C(I3),
        .CE(\n_0_s_raddr[8]_i_1 ),
        .D(\n_0_s_raddr[0]_i_1 ),
        .Q(\n_0_s_raddr_reg[0] ),
        .R(1'b0));
FDRE \s_raddr_reg[10] 
       (.C(I3),
        .CE(\n_0_s_raddr[8]_i_1 ),
        .D(\n_0_s_raddr[10]_i_1 ),
        .Q(\n_0_s_raddr_reg[10] ),
        .R(s_cmd_pop));
FDRE \s_raddr_reg[11] 
       (.C(I3),
        .CE(\n_0_s_raddr[8]_i_1 ),
        .D(\n_0_s_raddr[11]_i_1 ),
        .Q(\n_0_s_raddr_reg[11] ),
        .R(s_cmd_pop));
FDRE \s_raddr_reg[12] 
       (.C(I3),
        .CE(\n_0_s_raddr[8]_i_1 ),
        .D(\n_0_s_raddr[12]_i_1 ),
        .Q(\n_0_s_raddr_reg[12] ),
        .R(s_cmd_pop));
CARRY4 \s_raddr_reg[12]_i_2 
       (.CI(\n_0_s_raddr_reg[8]_i_5 ),
        .CO(\NLW_s_raddr_reg[12]_i_2_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_s_raddr_reg[12]_i_2_O_UNCONNECTED [3:1],s_raddr[12]}),
        .S({1'b0,1'b0,1'b0,\n_0_s_raddr[12]_i_3 }));
FDRE \s_raddr_reg[1] 
       (.C(I3),
        .CE(\n_0_s_raddr[8]_i_1 ),
        .D(\n_0_s_raddr[1]_i_1 ),
        .Q(\n_0_s_raddr_reg[1] ),
        .R(1'b0));
FDRE \s_raddr_reg[2] 
       (.C(I3),
        .CE(\n_0_s_raddr[8]_i_1 ),
        .D(\n_0_s_raddr[2]_i_1 ),
        .Q(\n_0_s_raddr_reg[2] ),
        .R(1'b0));
FDRE \s_raddr_reg[3] 
       (.C(I3),
        .CE(\n_0_s_raddr[8]_i_1 ),
        .D(\n_0_s_raddr[3]_i_1 ),
        .Q(\n_0_s_raddr_reg[3] ),
        .R(1'b0));
CARRY4 \s_raddr_reg[3]_i_2 
       (.CI(1'b0),
        .CO({\n_0_s_raddr_reg[3]_i_2 ,\n_1_s_raddr_reg[3]_i_2 ,\n_2_s_raddr_reg[3]_i_2 ,\n_3_s_raddr_reg[3]_i_2 }),
        .CYINIT(1'b0),
        .DI({\n_0_s_raddr_reg[3] ,\n_0_s_raddr_reg[2] ,\n_0_s_raddr_reg[1] ,\n_0_s_raddr_reg[0] }),
        .O(s_raddr[3:0]),
        .S({\n_0_s_raddr[3]_i_3 ,\n_0_s_raddr[3]_i_4 ,\n_0_s_raddr[3]_i_5 ,\n_0_s_raddr[3]_i_6 }));
FDRE \s_raddr_reg[4] 
       (.C(I3),
        .CE(\n_0_s_raddr[8]_i_1 ),
        .D(\n_0_s_raddr[4]_i_1 ),
        .Q(\n_0_s_raddr_reg[4] ),
        .R(1'b0));
FDRE \s_raddr_reg[5] 
       (.C(I3),
        .CE(\n_0_s_raddr[8]_i_1 ),
        .D(\n_0_s_raddr[5]_i_1 ),
        .Q(\n_0_s_raddr_reg[5] ),
        .R(1'b0));
FDRE \s_raddr_reg[6] 
       (.C(I3),
        .CE(\n_0_s_raddr[8]_i_1 ),
        .D(\n_0_s_raddr[6]_i_1 ),
        .Q(\n_0_s_raddr_reg[6] ),
        .R(1'b0));
FDRE \s_raddr_reg[7] 
       (.C(I3),
        .CE(\n_0_s_raddr[8]_i_1 ),
        .D(\n_0_s_raddr[7]_i_1 ),
        .Q(\n_0_s_raddr_reg[7] ),
        .R(1'b0));
CARRY4 \s_raddr_reg[7]_i_3 
       (.CI(\n_0_s_raddr_reg[3]_i_2 ),
        .CO({\n_0_s_raddr_reg[7]_i_3 ,\n_1_s_raddr_reg[7]_i_3 ,\n_2_s_raddr_reg[7]_i_3 ,\n_3_s_raddr_reg[7]_i_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\n_0_s_raddr_reg[6] ,\n_0_s_raddr_reg[5] ,\n_0_s_raddr_reg[4] }),
        .O(s_raddr[7:4]),
        .S({\n_0_s_raddr[7]_i_4 ,\n_0_s_raddr[7]_i_5 ,\n_0_s_raddr[7]_i_6 ,\n_0_s_raddr[7]_i_7 }));
FDRE \s_raddr_reg[8] 
       (.C(I3),
        .CE(\n_0_s_raddr[8]_i_1 ),
        .D(\n_0_s_raddr[8]_i_2 ),
        .Q(\n_0_s_raddr_reg[8] ),
        .R(1'b0));
CARRY4 \s_raddr_reg[8]_i_5 
       (.CI(\n_0_s_raddr_reg[7]_i_3 ),
        .CO({\n_0_s_raddr_reg[8]_i_5 ,\n_1_s_raddr_reg[8]_i_5 ,\n_2_s_raddr_reg[8]_i_5 ,\n_3_s_raddr_reg[8]_i_5 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(s_raddr[11:8]),
        .S({\n_0_s_raddr[8]_i_7 ,\n_0_s_raddr[8]_i_8 ,\n_0_s_raddr[8]_i_9 ,\n_0_s_raddr[8]_i_10 }));
FDRE \s_raddr_reg[9] 
       (.C(I3),
        .CE(\n_0_s_raddr[8]_i_1 ),
        .D(\n_0_s_raddr[9]_i_1 ),
        .Q(\n_0_s_raddr_reg[9] ),
        .R(s_cmd_pop));
FDRE \s_rburst_reg[0] 
       (.C(I3),
        .CE(s_cmd_pop),
        .D(n_30_s_cmd_fifo),
        .Q(burst[0]),
        .R(1'b0));
FDRE \s_rburst_reg[1] 
       (.C(I3),
        .CE(s_cmd_pop),
        .D(n_29_s_cmd_fifo),
        .Q(burst[1]),
        .R(1'b0));
(* SOFT_HLUTNM = "soft_lutpair82" *) 
   LUT3 #(
    .INIT(8'h45)) 
     \s_rcnt[0]_i_1 
       (.I0(s_rcnt_reg__0[0]),
        .I1(len[0]),
        .I2(n_0_s_cmd_fifo_i_2),
        .O(\n_0_s_rcnt[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair82" *) 
   LUT4 #(
    .INIT(16'hB88B)) 
     \s_rcnt[1]_i_1 
       (.I0(len[1]),
        .I1(n_0_s_cmd_fifo_i_2),
        .I2(s_rcnt_reg__0[0]),
        .I3(s_rcnt_reg__0[1]),
        .O(p_0_in__0[1]));
LUT5 #(
    .INIT(32'hDDD0000D)) 
     \s_rcnt[2]_i_1 
       (.I0(n_0_s_cmd_fifo_i_2),
        .I1(len[2]),
        .I2(s_rcnt_reg__0[0]),
        .I3(s_rcnt_reg__0[1]),
        .I4(s_rcnt_reg__0[2]),
        .O(p_0_in__0[2]));
LUT6 #(
    .INIT(64'hDDDDDDD00000000D)) 
     \s_rcnt[3]_i_1 
       (.I0(n_0_s_cmd_fifo_i_2),
        .I1(len[3]),
        .I2(s_rcnt_reg__0[2]),
        .I3(s_rcnt_reg__0[1]),
        .I4(s_rcnt_reg__0[0]),
        .I5(s_rcnt_reg__0[3]),
        .O(p_0_in__0[3]));
LUT4 #(
    .INIT(16'h9099)) 
     \s_rcnt[4]_i_1 
       (.I0(\n_0_s_rcnt[6]_i_2 ),
        .I1(s_rcnt_reg__0[4]),
        .I2(len[4]),
        .I3(n_0_s_cmd_fifo_i_2),
        .O(p_0_in__0[4]));
LUT5 #(
    .INIT(32'hB8B8B88B)) 
     \s_rcnt[5]_i_1 
       (.I0(len[5]),
        .I1(n_0_s_cmd_fifo_i_2),
        .I2(s_rcnt_reg__0[5]),
        .I3(\n_0_s_rcnt[6]_i_2 ),
        .I4(s_rcnt_reg__0[4]),
        .O(p_0_in__0[5]));
LUT6 #(
    .INIT(64'hFE010000FE01FE01)) 
     \s_rcnt[6]_i_1 
       (.I0(\n_0_s_rcnt[6]_i_2 ),
        .I1(s_rcnt_reg__0[5]),
        .I2(s_rcnt_reg__0[4]),
        .I3(s_rcnt_reg__0[6]),
        .I4(len[6]),
        .I5(n_0_s_cmd_fifo_i_2),
        .O(p_0_in__0[6]));
(* SOFT_HLUTNM = "soft_lutpair79" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \s_rcnt[6]_i_2 
       (.I0(s_rcnt_reg__0[1]),
        .I1(s_rcnt_reg__0[0]),
        .I2(s_rcnt_reg__0[3]),
        .I3(s_rcnt_reg__0[2]),
        .O(\n_0_s_rcnt[6]_i_2 ));
LUT6 #(
    .INIT(64'h1F1000101F101F10)) 
     \s_rcnt[7]_i_1 
       (.I0(s_cmd_empty),
        .I1(rresp_fifo_empty),
        .I2(n_0_s_cmd_fifo_i_2),
        .I3(n_0_s_rvalid_reg),
        .I4(s_axi_rready),
        .I5(O1),
        .O(\n_0_s_rcnt[7]_i_1 ));
LUT5 #(
    .INIT(32'hE100E1E1)) 
     \s_rcnt[7]_i_2 
       (.I0(s_rcnt_reg__0[6]),
        .I1(\n_0_s_rcnt[7]_i_3 ),
        .I2(s_rcnt_reg__0[7]),
        .I3(len[7]),
        .I4(n_0_s_cmd_fifo_i_2),
        .O(p_0_in__0[7]));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \s_rcnt[7]_i_3 
       (.I0(s_rcnt_reg__0[2]),
        .I1(s_rcnt_reg__0[3]),
        .I2(s_rcnt_reg__0[0]),
        .I3(s_rcnt_reg__0[1]),
        .I4(s_rcnt_reg__0[5]),
        .I5(s_rcnt_reg__0[4]),
        .O(\n_0_s_rcnt[7]_i_3 ));
FDRE \s_rcnt_reg[0] 
       (.C(I3),
        .CE(\n_0_s_rcnt[7]_i_1 ),
        .D(\n_0_s_rcnt[0]_i_1 ),
        .Q(s_rcnt_reg__0[0]),
        .R(SR));
FDRE \s_rcnt_reg[1] 
       (.C(I3),
        .CE(\n_0_s_rcnt[7]_i_1 ),
        .D(p_0_in__0[1]),
        .Q(s_rcnt_reg__0[1]),
        .R(SR));
FDRE \s_rcnt_reg[2] 
       (.C(I3),
        .CE(\n_0_s_rcnt[7]_i_1 ),
        .D(p_0_in__0[2]),
        .Q(s_rcnt_reg__0[2]),
        .R(SR));
FDRE \s_rcnt_reg[3] 
       (.C(I3),
        .CE(\n_0_s_rcnt[7]_i_1 ),
        .D(p_0_in__0[3]),
        .Q(s_rcnt_reg__0[3]),
        .R(SR));
FDRE \s_rcnt_reg[4] 
       (.C(I3),
        .CE(\n_0_s_rcnt[7]_i_1 ),
        .D(p_0_in__0[4]),
        .Q(s_rcnt_reg__0[4]),
        .R(SR));
FDRE \s_rcnt_reg[5] 
       (.C(I3),
        .CE(\n_0_s_rcnt[7]_i_1 ),
        .D(p_0_in__0[5]),
        .Q(s_rcnt_reg__0[5]),
        .R(SR));
FDRE \s_rcnt_reg[6] 
       (.C(I3),
        .CE(\n_0_s_rcnt[7]_i_1 ),
        .D(p_0_in__0[6]),
        .Q(s_rcnt_reg__0[6]),
        .R(SR));
FDRE \s_rcnt_reg[7] 
       (.C(I3),
        .CE(\n_0_s_rcnt[7]_i_1 ),
        .D(p_0_in__0[7]),
        .Q(s_rcnt_reg__0[7]),
        .R(SR));
FDRE s_rlast_d1_reg
       (.C(I3),
        .CE(s_rbuf_en),
        .D(s_rlast),
        .Q(s_rlast_d1),
        .R(SR));
FDRE s_rlast_d2_reg
       (.C(I3),
        .CE(s_rbuf_en),
        .D(s_rlast_d1),
        .Q(s_axi_rlast),
        .R(SR));
LUT6 #(
    .INIT(64'hBBABBBBB88A88888)) 
     s_rlast_i_1
       (.I0(n_0_s_rlast_i_2),
        .I1(s_cmd_pop),
        .I2(n_0_s_rvalid_reg),
        .I3(n_0_s_rvalid_i_2),
        .I4(\n_0_s_raddr[8]_i_3 ),
        .I5(s_rlast),
        .O(n_0_s_rlast_i_1));
LUT5 #(
    .INIT(32'hABAAAAAA)) 
     s_rlast_i_2
       (.I0(n_0_s_rlast_i_3),
        .I1(len[6]),
        .I2(len[0]),
        .I3(n_0_s_rlast_i_4),
        .I4(s_cmd_pop),
        .O(n_0_s_rlast_i_2));
(* SOFT_HLUTNM = "soft_lutpair79" *) 
   LUT5 #(
    .INIT(32'h00000020)) 
     s_rlast_i_3
       (.I0(n_0_s_rlast_i_5),
        .I1(s_rcnt_reg__0[1]),
        .I2(s_rcnt_reg__0[0]),
        .I3(s_rcnt_reg__0[2]),
        .I4(s_rcnt_reg__0[3]),
        .O(n_0_s_rlast_i_3));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     s_rlast_i_4
       (.I0(len[7]),
        .I1(len[4]),
        .I2(len[3]),
        .I3(len[5]),
        .I4(len[1]),
        .I5(len[2]),
        .O(n_0_s_rlast_i_4));
(* SOFT_HLUTNM = "soft_lutpair70" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     s_rlast_i_5
       (.I0(s_rcnt_reg__0[7]),
        .I1(s_rcnt_reg__0[6]),
        .I2(s_rcnt_reg__0[5]),
        .I3(s_rcnt_reg__0[4]),
        .O(n_0_s_rlast_i_5));
FDRE s_rlast_reg
       (.C(I3),
        .CE(1'b1),
        .D(n_0_s_rlast_i_1),
        .Q(s_rlast),
        .R(SR));
LUT4 #(
    .INIT(16'hBA8A)) 
     \s_rresp_d1[0]_i_1 
       (.I0(\n_0_s_rresp_reg_reg[0] ),
        .I1(s_axi_rready),
        .I2(O1),
        .I3(s_rresp_d1[0]),
        .O(\n_0_s_rresp_d1[0]_i_1 ));
LUT4 #(
    .INIT(16'hBA8A)) 
     \s_rresp_d1[1]_i_1 
       (.I0(\n_0_s_rresp_reg_reg[1] ),
        .I1(s_axi_rready),
        .I2(O1),
        .I3(s_rresp_d1[1]),
        .O(\n_0_s_rresp_d1[1]_i_1 ));
FDRE \s_rresp_d1_reg[0] 
       (.C(I3),
        .CE(1'b1),
        .D(\n_0_s_rresp_d1[0]_i_1 ),
        .Q(s_rresp_d1[0]),
        .R(1'b0));
FDRE \s_rresp_d1_reg[1] 
       (.C(I3),
        .CE(1'b1),
        .D(\n_0_s_rresp_d1[1]_i_1 ),
        .Q(s_rresp_d1[1]),
        .R(1'b0));
LUT5 #(
    .INIT(32'hBFBB8088)) 
     \s_rresp_d2[0]_i_1 
       (.I0(s_rresp_d1[0]),
        .I1(first_rvalid_d1),
        .I2(s_axi_rready),
        .I3(O1),
        .I4(s_axi_rresp[0]),
        .O(\n_0_s_rresp_d2[0]_i_1 ));
LUT5 #(
    .INIT(32'hBFBB8088)) 
     \s_rresp_d2[1]_i_1 
       (.I0(s_rresp_d1[1]),
        .I1(first_rvalid_d1),
        .I2(s_axi_rready),
        .I3(O1),
        .I4(s_axi_rresp[1]),
        .O(\n_0_s_rresp_d2[1]_i_1 ));
FDRE \s_rresp_d2_reg[0] 
       (.C(I3),
        .CE(1'b1),
        .D(\n_0_s_rresp_d2[0]_i_1 ),
        .Q(s_axi_rresp[0]),
        .R(SR));
FDRE \s_rresp_d2_reg[1] 
       (.C(I3),
        .CE(1'b1),
        .D(\n_0_s_rresp_d2[1]_i_1 ),
        .Q(s_axi_rresp[1]),
        .R(SR));
LUT5 #(
    .INIT(32'hEEE00000)) 
     s_rresp_fifo_stall_i_1
       (.I0(n_0_s_rresp_fifo_stall_reg),
        .I1(s_rresp_fifo_stall17_out),
        .I2(n_0_dw_fifogen_rresp_i_6),
        .I3(s_cmd_pop),
        .I4(I5),
        .O(n_0_s_rresp_fifo_stall_i_1));
(* SOFT_HLUTNM = "soft_lutpair77" *) 
   LUT5 #(
    .INIT(32'h0000EE0E)) 
     s_rresp_fifo_stall_i_2
       (.I0(n_0_s_rresp_fifo_stall_reg),
        .I1(n_0_dw_fifogen_rresp_i_8),
        .I2(O1),
        .I3(s_axi_rready),
        .I4(n_0_s_cmd_fifo_i_2),
        .O(s_rresp_fifo_stall17_out));
FDRE s_rresp_fifo_stall_reg
       (.C(I3),
        .CE(1'b1),
        .D(n_0_s_rresp_fifo_stall_i_1),
        .Q(n_0_s_rresp_fifo_stall_reg),
        .R(1'b0));
FDRE \s_rresp_first_reg[0] 
       (.C(I3),
        .CE(s_cmd_pop),
        .D(n_3_dw_fifogen_rresp),
        .Q(s_rresp_first[0]),
        .R(1'b0));
FDRE \s_rresp_first_reg[1] 
       (.C(I3),
        .CE(s_cmd_pop),
        .D(n_2_dw_fifogen_rresp),
        .Q(s_rresp_first[1]),
        .R(1'b0));
LUT5 #(
    .INIT(32'hB8FFB800)) 
     \s_rresp_reg[0]_i_1 
       (.I0(s_rresp_first[0]),
        .I1(n_0_dw_fifogen_rresp_i_6),
        .I2(n_3_dw_fifogen_rresp),
        .I3(\n_0_s_rresp_reg[1]_i_2 ),
        .I4(\n_0_s_rresp_reg_reg[0] ),
        .O(\n_0_s_rresp_reg[0]_i_1 ));
LUT5 #(
    .INIT(32'hB8FFB800)) 
     \s_rresp_reg[1]_i_1 
       (.I0(s_rresp_first[1]),
        .I1(n_0_dw_fifogen_rresp_i_6),
        .I2(n_2_dw_fifogen_rresp),
        .I3(\n_0_s_rresp_reg[1]_i_2 ),
        .I4(\n_0_s_rresp_reg_reg[1] ),
        .O(\n_0_s_rresp_reg[1]_i_1 ));
LUT6 #(
    .INIT(64'h000A000A00FF000E)) 
     \s_rresp_reg[1]_i_2 
       (.I0(\n_0_s_rresp_reg[1]_i_3 ),
        .I1(\n_0_s_raddr[8]_i_3 ),
        .I2(rresp_fifo_empty),
        .I3(\n_0_s_rresp_reg[1]_i_4 ),
        .I4(n_0_rresp_wrap_reg),
        .I5(\n_0_s_rresp_reg[1]_i_5 ),
        .O(\n_0_s_rresp_reg[1]_i_2 ));
LUT5 #(
    .INIT(32'hAAAAAAAB)) 
     \s_rresp_reg[1]_i_3 
       (.I0(n_0_s_rresp_fifo_stall_reg),
        .I1(\n_0_s_rcnt[7]_i_3 ),
        .I2(s_rcnt_reg__0[7]),
        .I3(s_rcnt_reg__0[6]),
        .I4(s_cmd_empty),
        .O(\n_0_s_rresp_reg[1]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair81" *) 
   LUT3 #(
    .INIT(8'h20)) 
     \s_rresp_reg[1]_i_4 
       (.I0(n_0_s_rvalid_reg),
        .I1(s_axi_rready),
        .I2(O1),
        .O(\n_0_s_rresp_reg[1]_i_4 ));
LUT6 #(
    .INIT(64'h000000005F7F557F)) 
     \s_rresp_reg[1]_i_5 
       (.I0(\n_0_s_raddr_reg[5] ),
        .I1(s_rsize[0]),
        .I2(s_rsize[2]),
        .I3(\n_0_s_raddr_reg[4] ),
        .I4(\n_0_s_rresp_reg[1]_i_6 ),
        .I5(\n_0_s_rresp_reg[1]_i_7 ),
        .O(\n_0_s_rresp_reg[1]_i_5 ));
LUT6 #(
    .INIT(64'h33337F7F3F3F7FFF)) 
     \s_rresp_reg[1]_i_6 
       (.I0(\n_0_s_raddr_reg[1] ),
        .I1(\n_0_s_raddr_reg[3] ),
        .I2(\n_0_s_raddr_reg[2] ),
        .I3(\n_0_s_raddr_reg[0] ),
        .I4(s_rsize[1]),
        .I5(s_rsize[0]),
        .O(\n_0_s_rresp_reg[1]_i_6 ));
LUT5 #(
    .INIT(32'hFFFF1FFF)) 
     \s_rresp_reg[1]_i_7 
       (.I0(burst[1]),
        .I1(burst[0]),
        .I2(s_conv_size[2]),
        .I3(s_conv_size[1]),
        .I4(s_conv_size[0]),
        .O(\n_0_s_rresp_reg[1]_i_7 ));
FDRE \s_rresp_reg_reg[0] 
       (.C(I3),
        .CE(1'b1),
        .D(\n_0_s_rresp_reg[0]_i_1 ),
        .Q(\n_0_s_rresp_reg_reg[0] ),
        .R(1'b0));
FDRE \s_rresp_reg_reg[1] 
       (.C(I3),
        .CE(1'b1),
        .D(\n_0_s_rresp_reg[1]_i_1 ),
        .Q(\n_0_s_rresp_reg_reg[1] ),
        .R(1'b0));
FDRE \s_rsize_reg[0] 
       (.C(I3),
        .CE(s_cmd_pop),
        .D(size[0]),
        .Q(s_rsize[0]),
        .R(1'b0));
FDRE \s_rsize_reg[1] 
       (.C(I3),
        .CE(s_cmd_pop),
        .D(size[1]),
        .Q(s_rsize[1]),
        .R(1'b0));
FDRE \s_rsize_reg[2] 
       (.C(I3),
        .CE(s_cmd_pop),
        .D(size[2]),
        .Q(s_rsize[2]),
        .R(1'b0));
FDRE s_rvalid_d1_reg
       (.C(I3),
        .CE(s_rbuf_en),
        .D(n_0_s_rvalid_reg),
        .Q(s_rvalid_d1),
        .R(SR));
FDRE s_rvalid_d2_reg
       (.C(I3),
        .CE(s_rbuf_en),
        .D(s_rvalid_d1),
        .Q(O1),
        .R(SR));
LUT6 #(
    .INIT(64'h5500DF0055005500)) 
     s_rvalid_i_1
       (.I0(n_0_dw_fifogen_rresp_i_6),
        .I1(n_0_s_rvalid_i_2),
        .I2(n_0_s_cmd_fifo_i_2),
        .I3(I5),
        .I4(n_0_s_rvalid_i_3),
        .I5(n_0_s_rvalid_reg),
        .O(n_0_s_rvalid_i_1));
(* SOFT_HLUTNM = "soft_lutpair69" *) 
   LUT2 #(
    .INIT(4'h2)) 
     s_rvalid_i_2
       (.I0(O1),
        .I1(s_axi_rready),
        .O(n_0_s_rvalid_i_2));
(* SOFT_HLUTNM = "soft_lutpair77" *) 
   LUT4 #(
    .INIT(16'hBBB0)) 
     s_rvalid_i_3
       (.I0(s_axi_rready),
        .I1(O1),
        .I2(n_0_dw_fifogen_rresp_i_8),
        .I3(n_0_s_rresp_fifo_stall_reg),
        .O(n_0_s_rvalid_i_3));
FDRE s_rvalid_reg
       (.C(I3),
        .CE(1'b1),
        .D(n_0_s_rvalid_i_1),
        .Q(n_0_s_rvalid_reg),
        .R(1'b0));
(* SOFT_HLUTNM = "soft_lutpair76" *) 
   LUT5 #(
    .INIT(32'h00000002)) 
     \s_wrap_addr[1]_i_1 
       (.I0(addr1_in[1]),
        .I1(size[2]),
        .I2(size[1]),
        .I3(len[1]),
        .I4(size[0]),
        .O(\n_0_s_wrap_addr[1]_i_1 ));
LUT6 #(
    .INIT(64'h0002000200000202)) 
     \s_wrap_addr[2]_i_1 
       (.I0(addr1_in[2]),
        .I1(size[2]),
        .I2(size[1]),
        .I3(len[1]),
        .I4(len[2]),
        .I5(size[0]),
        .O(\n_0_s_wrap_addr[2]_i_1 ));
LUT6 #(
    .INIT(64'h0002000200022022)) 
     \s_wrap_addr[3]_i_1 
       (.I0(addr1_in[3]),
        .I1(size[2]),
        .I2(size[1]),
        .I3(\n_0_s_wrap_addr[5]_i_2 ),
        .I4(len[1]),
        .I5(size[0]),
        .O(\n_0_s_wrap_addr[3]_i_1 ));
LUT6 #(
    .INIT(64'h2022000222220202)) 
     \s_wrap_addr[4]_i_1 
       (.I0(addr1_in[4]),
        .I1(size[2]),
        .I2(size[1]),
        .I3(len[3]),
        .I4(\n_0_s_wrap_addr[4]_i_2 ),
        .I5(size[0]),
        .O(\n_0_s_wrap_addr[4]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair80" *) 
   LUT3 #(
    .INIT(8'h47)) 
     \s_wrap_addr[4]_i_2 
       (.I0(len[1]),
        .I1(size[0]),
        .I2(len[2]),
        .O(\n_0_s_wrap_addr[4]_i_2 ));
LUT6 #(
    .INIT(64'h00000AAA00220AAA)) 
     \s_wrap_addr[5]_i_1 
       (.I0(addr1_in[5]),
        .I1(size[0]),
        .I2(\n_0_s_wrap_addr[5]_i_2 ),
        .I3(size[1]),
        .I4(size[2]),
        .I5(len[1]),
        .O(\n_0_s_wrap_addr[5]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair87" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \s_wrap_addr[5]_i_2 
       (.I0(len[2]),
        .I1(size[0]),
        .I2(len[3]),
        .O(\n_0_s_wrap_addr[5]_i_2 ));
FDRE \s_wrap_addr_reg[1] 
       (.C(I3),
        .CE(s_cmd_pop),
        .D(\n_0_s_wrap_addr[1]_i_1 ),
        .Q(\n_0_s_wrap_addr_reg[1] ),
        .R(1'b0));
FDRE \s_wrap_addr_reg[2] 
       (.C(I3),
        .CE(s_cmd_pop),
        .D(\n_0_s_wrap_addr[2]_i_1 ),
        .Q(\n_0_s_wrap_addr_reg[2] ),
        .R(1'b0));
FDRE \s_wrap_addr_reg[3] 
       (.C(I3),
        .CE(s_cmd_pop),
        .D(\n_0_s_wrap_addr[3]_i_1 ),
        .Q(\n_0_s_wrap_addr_reg[3] ),
        .R(1'b0));
FDRE \s_wrap_addr_reg[4] 
       (.C(I3),
        .CE(s_cmd_pop),
        .D(\n_0_s_wrap_addr[4]_i_1 ),
        .Q(\n_0_s_wrap_addr_reg[4] ),
        .R(1'b0));
FDRE \s_wrap_addr_reg[5] 
       (.C(I3),
        .CE(s_cmd_pop),
        .D(\n_0_s_wrap_addr[5]_i_1 ),
        .Q(\n_0_s_wrap_addr_reg[5] ),
        .R(1'b0));
(* SOFT_HLUTNM = "soft_lutpair83" *) 
   LUT3 #(
    .INIT(8'h8B)) 
     \s_wrap_cnt[0]_i_1 
       (.I0(\n_0_s_wrap_cnt[0]_i_2 ),
        .I1(s_cmd_pop),
        .I2(s_wrap_cnt_reg__0[0]),
        .O(p_0_in[0]));
LUT6 #(
    .INIT(64'h00CC04C433FF37F7)) 
     \s_wrap_cnt[0]_i_2 
       (.I0(addr1_in[4]),
        .I1(size[2]),
        .I2(size[1]),
        .I3(addr1_in[5]),
        .I4(size[0]),
        .I5(\n_0_s_wrap_cnt[0]_i_3 ),
        .O(\n_0_s_wrap_cnt[0]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \s_wrap_cnt[0]_i_3 
       (.I0(addr1_in[3]),
        .I1(addr1_in[2]),
        .I2(size[1]),
        .I3(addr1_in[1]),
        .I4(size[0]),
        .I5(addr1_in[0]),
        .O(\n_0_s_wrap_cnt[0]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair83" *) 
   LUT4 #(
    .INIT(16'hB88B)) 
     \s_wrap_cnt[1]_i_1 
       (.I0(\n_0_s_wrap_cnt[1]_i_2 ),
        .I1(s_cmd_pop),
        .I2(s_wrap_cnt_reg__0[0]),
        .I3(s_wrap_cnt_reg__0[1]),
        .O(p_0_in[1]));
LUT6 #(
    .INIT(64'h000CCC0C0C440C44)) 
     \s_wrap_cnt[1]_i_2 
       (.I0(\n_0_s_wrap_cnt[1]_i_3 ),
        .I1(len[1]),
        .I2(addr1_in[6]),
        .I3(\n_0_s_wrap_cnt[3]_i_4 ),
        .I4(addr1_in[5]),
        .I5(\n_0_s_wrap_cnt[3]_i_5 ),
        .O(\n_0_s_wrap_cnt[1]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \s_wrap_cnt[1]_i_3 
       (.I0(addr1_in[4]),
        .I1(addr1_in[3]),
        .I2(size[1]),
        .I3(addr1_in[2]),
        .I4(size[0]),
        .I5(addr1_in[1]),
        .O(\n_0_s_wrap_cnt[1]_i_3 ));
LUT5 #(
    .INIT(32'hB8B8B88B)) 
     \s_wrap_cnt[2]_i_1 
       (.I0(\n_0_s_wrap_cnt[2]_i_2 ),
        .I1(s_cmd_pop),
        .I2(s_wrap_cnt_reg__0[2]),
        .I3(s_wrap_cnt_reg__0[1]),
        .I4(s_wrap_cnt_reg__0[0]),
        .O(p_0_in[2]));
LUT6 #(
    .INIT(64'h000CCC0C0C440C44)) 
     \s_wrap_cnt[2]_i_2 
       (.I0(\n_0_s_wrap_cnt[2]_i_3 ),
        .I1(len[2]),
        .I2(addr1_in[7]),
        .I3(\n_0_s_wrap_cnt[3]_i_4 ),
        .I4(addr1_in[6]),
        .I5(\n_0_s_wrap_cnt[3]_i_5 ),
        .O(\n_0_s_wrap_cnt[2]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \s_wrap_cnt[2]_i_3 
       (.I0(addr1_in[5]),
        .I1(addr1_in[4]),
        .I2(size[1]),
        .I3(addr1_in[3]),
        .I4(size[0]),
        .I5(addr1_in[2]),
        .O(\n_0_s_wrap_cnt[2]_i_3 ));
LUT6 #(
    .INIT(64'hB8B8B8B8B8B8B88B)) 
     \s_wrap_cnt[3]_i_1 
       (.I0(\n_0_s_wrap_cnt[3]_i_2 ),
        .I1(s_cmd_pop),
        .I2(s_wrap_cnt_reg__0[3]),
        .I3(s_wrap_cnt_reg__0[2]),
        .I4(s_wrap_cnt_reg__0[0]),
        .I5(s_wrap_cnt_reg__0[1]),
        .O(p_0_in[3]));
LUT6 #(
    .INIT(64'h000A02A2A0AA02A2)) 
     \s_wrap_cnt[3]_i_2 
       (.I0(len[3]),
        .I1(\n_0_s_wrap_cnt[3]_i_3 ),
        .I2(\n_0_s_wrap_cnt[3]_i_4 ),
        .I3(addr1_in[8]),
        .I4(\n_0_s_wrap_cnt[3]_i_5 ),
        .I5(addr1_in[7]),
        .O(\n_0_s_wrap_cnt[3]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \s_wrap_cnt[3]_i_3 
       (.I0(addr1_in[6]),
        .I1(addr1_in[5]),
        .I2(size[1]),
        .I3(addr1_in[4]),
        .I4(size[0]),
        .I5(addr1_in[3]),
        .O(\n_0_s_wrap_cnt[3]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair76" *) 
   LUT3 #(
    .INIT(8'h8A)) 
     \s_wrap_cnt[3]_i_4 
       (.I0(size[2]),
        .I1(size[1]),
        .I2(size[0]),
        .O(\n_0_s_wrap_cnt[3]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair85" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \s_wrap_cnt[3]_i_5 
       (.I0(size[2]),
        .I1(size[1]),
        .O(\n_0_s_wrap_cnt[3]_i_5 ));
FDRE \s_wrap_cnt_reg[0] 
       (.C(I3),
        .CE(\n_0_s_raddr[8]_i_1 ),
        .D(p_0_in[0]),
        .Q(s_wrap_cnt_reg__0[0]),
        .R(1'b0));
FDRE \s_wrap_cnt_reg[1] 
       (.C(I3),
        .CE(\n_0_s_raddr[8]_i_1 ),
        .D(p_0_in[1]),
        .Q(s_wrap_cnt_reg__0[1]),
        .R(1'b0));
FDRE \s_wrap_cnt_reg[2] 
       (.C(I3),
        .CE(\n_0_s_raddr[8]_i_1 ),
        .D(p_0_in[2]),
        .Q(s_wrap_cnt_reg__0[2]),
        .R(1'b0));
FDRE \s_wrap_cnt_reg[3] 
       (.C(I3),
        .CE(\n_0_s_raddr[8]_i_1 ),
        .D(p_0_in[3]),
        .Q(s_wrap_cnt_reg__0[3]),
        .R(1'b0));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* C_FAMILY = "virtex7" *) (* C_AXI_PROTOCOL = "0" *) 
(* C_S_AXI_ID_WIDTH = "1" *) (* C_SUPPORTS_ID = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_S_AXI_DATA_WIDTH = "256" *) (* C_M_AXI_DATA_WIDTH = "512" *) (* C_AXI_SUPPORTS_WRITE = "1" *) 
(* C_AXI_SUPPORTS_READ = "1" *) (* C_FIFO_MODE = "2" *) (* C_S_AXI_ACLK_RATIO = "1" *) 
(* C_M_AXI_ACLK_RATIO = "2" *) (* C_AXI_IS_ACLK_ASYNC = "1" *) (* C_MAX_SPLIT_BEATS = "16" *) 
(* C_PACKING_LEVEL = "1" *) (* C_SYNCHRONIZER_STAGE = "3" *) (* C_S_AXI_BYTES_LOG = "5" *) 
(* C_M_AXI_BYTES_LOG = "6" *) (* C_RATIO = "0" *) (* C_RATIO_LOG = "0" *) 
(* P_AXI4 = "0" *) (* P_AXI3 = "1" *) (* P_AXILITE = "2" *) 
(* P_CONVERSION = "2" *) (* P_MAX_SPLIT_BEATS = "16" *) (* ORIG_REF_NAME = "axi_dwidth_converter_v2_1_top" *) 
module axi_dwidth_converter_0_axi_dwidth_converter_v2_1_top
   (s_axi_aclk,
    s_axi_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awregion,
    s_axi_awqos,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arregion,
    s_axi_arqos,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_aclk,
    m_axi_aresetn,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awregion,
    m_axi_awqos,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_bready,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arregion,
    m_axi_arqos,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_rvalid,
    m_axi_rready);
  (* KEEP = "true" *) input s_axi_aclk;
  (* KEEP = "true" *) input s_axi_aresetn;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awregion;
  input [3:0]s_axi_awqos;
  input s_axi_awvalid;
  output s_axi_awready;
  input [255:0]s_axi_wdata;
  input [31:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arregion;
  input [3:0]s_axi_arqos;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [255:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  (* KEEP = "true" *) input m_axi_aclk;
  (* KEEP = "true" *) input m_axi_aresetn;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awregion;
  output [3:0]m_axi_awqos;
  output m_axi_awvalid;
  input m_axi_awready;
  output [511:0]m_axi_wdata;
  output [63:0]m_axi_wstrb;
  output m_axi_wlast;
  output m_axi_wvalid;
  input m_axi_wready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  output m_axi_bready;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arregion;
  output [3:0]m_axi_arqos;
  output m_axi_arvalid;
  input m_axi_arready;
  input [511:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input m_axi_rvalid;
  output m_axi_rready;

  wire \<const0> ;
(* RTL_KEEP = "true" *)   wire m_axi_aclk;
  wire [31:0]m_axi_araddr;
  wire [1:0]m_axi_arburst;
  wire [3:0]m_axi_arcache;
(* RTL_KEEP = "true" *)   wire m_axi_aresetn;
  wire [7:0]m_axi_arlen;
  wire [0:0]m_axi_arlock;
  wire [2:0]m_axi_arprot;
  wire [3:0]m_axi_arqos;
  wire m_axi_arready;
  wire [3:0]m_axi_arregion;
  wire [2:0]m_axi_arsize;
  wire m_axi_arvalid;
  wire [31:0]m_axi_awaddr;
  wire [1:0]m_axi_awburst;
  wire [3:0]m_axi_awcache;
  wire [7:0]m_axi_awlen;
  wire [0:0]m_axi_awlock;
  wire [2:0]m_axi_awprot;
  wire [3:0]m_axi_awqos;
  wire m_axi_awready;
  wire [3:0]m_axi_awregion;
  wire [2:0]m_axi_awsize;
  wire m_axi_awvalid;
  wire m_axi_bready;
  wire [1:0]m_axi_bresp;
  wire m_axi_bvalid;
  wire [511:0]m_axi_rdata;
  wire m_axi_rlast;
  wire m_axi_rready;
  wire [1:0]m_axi_rresp;
  wire m_axi_rvalid;
  wire [511:0]m_axi_wdata;
  wire m_axi_wlast;
  wire m_axi_wready;
  wire [63:0]m_axi_wstrb;
  wire m_axi_wvalid;
(* RTL_KEEP = "true" *)   wire s_axi_aclk;
  wire [31:0]s_axi_araddr;
  wire [1:0]s_axi_arburst;
  wire [3:0]s_axi_arcache;
(* RTL_KEEP = "true" *)   wire s_axi_aresetn;
  wire [0:0]s_axi_arid;
  wire [7:0]s_axi_arlen;
  wire [0:0]s_axi_arlock;
  wire [2:0]s_axi_arprot;
  wire [3:0]s_axi_arqos;
  wire s_axi_arready;
  wire [3:0]s_axi_arregion;
  wire [2:0]s_axi_arsize;
  wire s_axi_arvalid;
  wire [31:0]s_axi_awaddr;
  wire [1:0]s_axi_awburst;
  wire [3:0]s_axi_awcache;
  wire [0:0]s_axi_awid;
  wire [7:0]s_axi_awlen;
  wire [0:0]s_axi_awlock;
  wire [2:0]s_axi_awprot;
  wire [3:0]s_axi_awqos;
  wire s_axi_awready;
  wire [3:0]s_axi_awregion;
  wire [2:0]s_axi_awsize;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire [255:0]s_axi_rdata;
  wire [0:0]s_axi_rid;
  wire s_axi_rlast;
  wire s_axi_rready;
  wire [1:0]s_axi_rresp;
  wire s_axi_rvalid;
  wire [255:0]s_axi_wdata;
  wire s_axi_wlast;
  wire s_axi_wready;
  wire [31:0]s_axi_wstrb;
  wire s_axi_wvalid;

  assign s_axi_bid[0] = \<const0> ;
GND GND
       (.G(\<const0> ));
axi_dwidth_converter_0_axi_dwidth_converter_v2_1_axi_upsizer \gen_upsizer.gen_full_upsizer.axi_upsizer_inst 
       (.D({s_axi_awregion,s_axi_awqos,s_axi_awlock,s_axi_awlen,s_axi_awcache,s_axi_awburst,s_axi_awsize,s_axi_awprot,s_axi_awaddr}),
        .I1(m_axi_aresetn),
        .I2(s_axi_aresetn),
        .I3(s_axi_aclk),
        .I4(m_axi_aclk),
        .I5({s_axi_arregion,s_axi_arqos,s_axi_arlock,s_axi_arlen,s_axi_arcache,s_axi_arburst,s_axi_arsize,s_axi_arprot,s_axi_araddr}),
        .M_AXI_AWADDR(m_axi_awaddr),
        .M_AXI_AWBURST(m_axi_awburst),
        .M_AXI_AWLEN(m_axi_awlen),
        .M_AXI_AWSIZE(m_axi_awsize),
        .O1(m_axi_wlast),
        .O2(m_axi_wvalid),
        .O3(s_axi_wready),
        .O4(m_axi_rready),
        .din({m_axi_arlen,m_axi_arsize,m_axi_arburst}),
        .dina({s_axi_wstrb[31],s_axi_wdata[255:248],s_axi_wstrb[30],s_axi_wdata[247:240],s_axi_wstrb[29],s_axi_wdata[239:232],s_axi_wstrb[28],s_axi_wdata[231:224],s_axi_wstrb[27],s_axi_wdata[223:216],s_axi_wstrb[26],s_axi_wdata[215:208],s_axi_wstrb[25],s_axi_wdata[207:200],s_axi_wstrb[24],s_axi_wdata[199:192],s_axi_wstrb[23],s_axi_wdata[191:184],s_axi_wstrb[22],s_axi_wdata[183:176],s_axi_wstrb[21],s_axi_wdata[175:168],s_axi_wstrb[20],s_axi_wdata[167:160],s_axi_wstrb[19],s_axi_wdata[159:152],s_axi_wstrb[18],s_axi_wdata[151:144],s_axi_wstrb[17],s_axi_wdata[143:136],s_axi_wstrb[16],s_axi_wdata[135:128],s_axi_wstrb[15],s_axi_wdata[127:120],s_axi_wstrb[14],s_axi_wdata[119:112],s_axi_wstrb[13],s_axi_wdata[111:104],s_axi_wstrb[12],s_axi_wdata[103:96],s_axi_wstrb[11],s_axi_wdata[95:88],s_axi_wstrb[10],s_axi_wdata[87:80],s_axi_wstrb[9],s_axi_wdata[79:72],s_axi_wstrb[8],s_axi_wdata[71:64],s_axi_wstrb[7],s_axi_wdata[63:56],s_axi_wstrb[6],s_axi_wdata[55:48],s_axi_wstrb[5],s_axi_wdata[47:40],s_axi_wstrb[4],s_axi_wdata[39:32],s_axi_wstrb[3],s_axi_wdata[31:24],s_axi_wstrb[2],s_axi_wdata[23:16],s_axi_wstrb[1],s_axi_wdata[15:8],s_axi_wstrb[0],s_axi_wdata[7:0]}),
        .m_axi_araddr(m_axi_araddr),
        .m_axi_arcache(m_axi_arcache),
        .m_axi_arlock(m_axi_arlock),
        .m_axi_arprot(m_axi_arprot),
        .m_axi_arqos(m_axi_arqos),
        .m_axi_arready(m_axi_arready),
        .m_axi_arregion(m_axi_arregion),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_awcache(m_axi_awcache),
        .m_axi_awlock(m_axi_awlock),
        .m_axi_awprot(m_axi_awprot),
        .m_axi_awqos(m_axi_awqos),
        .m_axi_awready(m_axi_awready),
        .m_axi_awregion(m_axi_awregion),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bready(m_axi_bready),
        .m_axi_bresp(m_axi_bresp),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_rdata(m_axi_rdata),
        .m_axi_rlast(m_axi_rlast),
        .m_axi_rresp(m_axi_rresp),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axi_wdata(m_axi_wdata),
        .m_axi_wready(m_axi_wready),
        .m_axi_wstrb(m_axi_wstrb),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(s_axi_bresp),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rid(s_axi_rid),
        .s_axi_rlast(s_axi_rlast),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(s_axi_rresp),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wlast(s_axi_wlast),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* ORIG_REF_NAME = "axi_dwidth_converter_v2_1_w_upsizer_pktfifo" *) 
module axi_dwidth_converter_0_axi_dwidth_converter_v2_1_w_upsizer_pktfifo
   (m_axi_wdata,
    mi_buf_en,
    M_AXI_AWADDR,
    D,
    O1,
    O2,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    wr_cmd_ready,
    load_mi_ptr,
    O3,
    load_si_ptr,
    m_axi_awready_i,
    O4,
    m_fifo_rst,
    mi_last,
    O5,
    O6,
    m_axi_awvalid,
    O7,
    mi_first,
    mi_first_d1,
    word,
    out,
    O8,
    si_state,
    O9,
    O10,
    O11,
    O12,
    O13,
    O14,
    O15,
    m_axi_wstrb,
    cmd_push_block0,
    I3,
    dina,
    I4,
    SR,
    I1,
    I2,
    I5,
    I6,
    I7,
    I8,
    I9,
    I10,
    I11,
    I12,
    Q,
    I13,
    I14,
    I15,
    I16,
    I17,
    I18,
    I19,
    I20,
    I21,
    I22,
    I23,
    I24,
    I25,
    I26,
    I27,
    I28,
    I29,
    I30,
    I31,
    I32,
    I33,
    f_si_wrap_word_return,
    I34,
    I35,
    I36,
    I37,
    I38,
    I39,
    I40,
    I41,
    I42,
    m_axi_wready,
    m_axi_awready,
    I43,
    I44,
    sr_awvalid,
    s_axi_wlast,
    s_axi_wvalid,
    I45,
    I46,
    I47,
    I48,
    I49,
    I50,
    I51,
    I52,
    I53,
    I54,
    I55,
    I56,
    I57,
    I58,
    I59,
    I60,
    I61,
    I62,
    I63,
    I64,
    I65,
    I66,
    I67,
    I68,
    I69,
    I70,
    I71,
    I72,
    I73,
    I74,
    I75,
    I76,
    I77,
    I78,
    I79,
    I80,
    I81,
    I82,
    I83,
    I84,
    I85,
    I86,
    I87,
    I88,
    I89,
    I90,
    I91,
    I92);
  output [511:0]m_axi_wdata;
  output mi_buf_en;
  output [31:0]M_AXI_AWADDR;
  output [7:0]D;
  output [2:0]O1;
  output [1:0]O2;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output wr_cmd_ready;
  output load_mi_ptr;
  output [0:0]O3;
  output load_si_ptr;
  output m_axi_awready_i;
  output O4;
  output m_fifo_rst;
  output mi_last;
  output O5;
  output O6;
  output m_axi_awvalid;
  output O7;
  output mi_first;
  output mi_first_d1;
  output word;
  output [2:0]out;
  output O8;
  output [1:0]si_state;
  output O9;
  output O10;
  output O11;
  output O12;
  output O13;
  output O14;
  output O15;
  output [63:0]m_axi_wstrb;
  output cmd_push_block0;
  input I3;
  input [287:0]dina;
  input I4;
  input [0:0]SR;
  input I1;
  input I2;
  input I5;
  input I6;
  input I7;
  input I8;
  input I9;
  input I10;
  input I11;
  input I12;
  input [48:0]Q;
  input I13;
  input I14;
  input I15;
  input I16;
  input I17;
  input I18;
  input I19;
  input I20;
  input I21;
  input I22;
  input I23;
  input I24;
  input I25;
  input I26;
  input I27;
  input I28;
  input I29;
  input I30;
  input I31;
  input I32;
  input I33;
  input f_si_wrap_word_return;
  input I34;
  input I35;
  input I36;
  input I37;
  input I38;
  input I39;
  input I40;
  input I41;
  input I42;
  input m_axi_wready;
  input m_axi_awready;
  input I43;
  input I44;
  input sr_awvalid;
  input s_axi_wlast;
  input s_axi_wvalid;
  input I45;
  input I46;
  input I47;
  input I48;
  input I49;
  input I50;
  input I51;
  input I52;
  input I53;
  input I54;
  input I55;
  input I56;
  input I57;
  input I58;
  input I59;
  input I60;
  input I61;
  input I62;
  input I63;
  input I64;
  input I65;
  input I66;
  input I67;
  input I68;
  input I69;
  input I70;
  input I71;
  input I72;
  input I73;
  input I74;
  input I75;
  input I76;
  input I77;
  input I78;
  input I79;
  input I80;
  input I81;
  input I82;
  input I83;
  input I84;
  input I85;
  input I86;
  input I87;
  input I88;
  input I89;
  input I90;
  input [25:0]I91;
  input I92;

  wire [7:0]D;
  wire I1;
  wire I10;
  wire I11;
  wire I12;
  wire I13;
  wire I14;
  wire I15;
  wire I16;
  wire I17;
  wire I18;
  wire I19;
  wire I2;
  wire I20;
  wire I21;
  wire I22;
  wire I23;
  wire I24;
  wire I25;
  wire I26;
  wire I27;
  wire I28;
  wire I29;
  wire I3;
  wire I30;
  wire I31;
  wire I32;
  wire I33;
  wire I34;
  wire I35;
  wire I36;
  wire I37;
  wire I38;
  wire I39;
  wire I4;
  wire I40;
  wire I41;
  wire I42;
  wire I43;
  wire I44;
  wire I45;
  wire I46;
  wire I47;
  wire I48;
  wire I49;
  wire I5;
  wire I50;
  wire I51;
  wire I52;
  wire I53;
  wire I54;
  wire I55;
  wire I56;
  wire I57;
  wire I58;
  wire I59;
  wire I6;
  wire I60;
  wire I61;
  wire I62;
  wire I63;
  wire I64;
  wire I65;
  wire I66;
  wire I67;
  wire I68;
  wire I69;
  wire I7;
  wire I70;
  wire I71;
  wire I72;
  wire I73;
  wire I74;
  wire I75;
  wire I76;
  wire I77;
  wire I78;
  wire I79;
  wire I8;
  wire I80;
  wire I81;
  wire I82;
  wire I83;
  wire I84;
  wire I85;
  wire I86;
  wire I87;
  wire I88;
  wire I89;
  wire I9;
  wire I90;
  wire [25:0]I91;
  wire I92;
  wire [31:0]M_AXI_AWADDR;
  wire [2:0]O1;
  wire O10;
  wire O11;
  wire O12;
  wire O13;
  wire O14;
  wire O15;
  wire [1:0]O2;
  wire [0:0]O3;
  wire O4;
  wire O5;
  wire O6;
  wire O7;
  wire O8;
  wire O9;
  wire [48:0]Q;
  wire [0:0]SR;
  wire aw_fifo_aresetn;
  wire aw_pop;
  wire aw_pop_event;
  wire aw_pop_resync;
  wire aw_ready;
  wire awpop_reset;
  wire [1:0]buf_cnt;
  wire cmd_push_block0;
  wire [3:3]data6;
  wire [287:0]dina;
  wire [63:0]f_mi_be_rot;
  wire f_mi_wrap_be00119_out;
  wire f_mi_wrap_be00136_out;
  wire f_mi_wrap_be00148_out;
  wire f_mi_wrap_be0103_out;
  wire f_mi_wrap_be059_out;
  wire f_mi_wrap_be068_out;
  wire f_mi_wrap_be081_out;
  wire f_mi_wrap_be083_out;
  wire f_mi_wrap_be085_out;
  wire f_mi_wrap_be089_out;
  wire f_mi_wrap_be095_out;
  wire f_mi_wrap_be097_out;
  wire [0:0]f_mi_wrap_cnt0_return;
  wire f_si_wrap_word_return;
  wire first_load_mi_d1;
  wire [5:0]index;
  wire load_mi_d1;
  wire load_mi_d2;
  wire load_mi_next;
  wire load_mi_ptr;
  wire load_si_ptr;
  wire [3:0]m_axi_awcache;
  wire [0:0]m_axi_awlock;
  wire [2:0]m_axi_awprot;
  wire [3:0]m_axi_awqos;
  wire m_axi_awready;
  wire m_axi_awready_i;
  wire [3:0]m_axi_awregion;
  wire m_axi_awvalid;
  wire [511:0]m_axi_wdata;
  wire m_axi_wready;
  wire [63:0]m_axi_wstrb;
  wire m_fifo_rst;
  wire mi_awvalid;
  wire mi_buf0;
  wire [8:0]mi_buf_addr;
  wire mi_buf_en;
  wire mi_first;
  wire mi_first_d1;
  wire mi_last;
  wire [5:0]mi_last_index_reg;
(* RTL_KEEP = "yes" *)   wire [2:0]mi_state;
  wire [7:0]mi_wcnt;
  wire [63:0]mi_wrap_be_next;
  wire [3:0]mi_wrap_cnt;
  wire [63:0]mi_wstrb_mask_d20;
  wire \n_0_FSM_sequential_mi_state[0]_i_1 ;
  wire \n_0_FSM_sequential_mi_state[0]_i_2 ;
  wire \n_0_FSM_sequential_mi_state[0]_i_3 ;
  wire \n_0_FSM_sequential_mi_state[0]_i_4 ;
  wire \n_0_FSM_sequential_mi_state[0]_i_5 ;
  wire \n_0_FSM_sequential_mi_state[0]_i_6 ;
  wire \n_0_FSM_sequential_mi_state[1]_i_1 ;
  wire \n_0_FSM_sequential_mi_state[1]_i_2 ;
  wire \n_0_FSM_sequential_mi_state[1]_i_3 ;
  wire \n_0_FSM_sequential_mi_state[1]_i_4 ;
  wire \n_0_FSM_sequential_mi_state[2]_i_1 ;
  wire \n_0_FSM_sequential_mi_state[2]_i_2 ;
  wire \n_0_FSM_sequential_mi_state[2]_i_3 ;
  wire \n_0_FSM_sequential_mi_state[2]_i_4 ;
  wire \n_0_FSM_sequential_mi_state[2]_i_6 ;
  wire \n_0_FSM_sequential_mi_state[2]_i_7 ;
  wire \n_0_FSM_sequential_mi_state[2]_i_8 ;
  wire \n_0_FSM_sequential_mi_state[2]_i_9 ;
  wire n_0_M_AXI_WLAST_i_i_1;
  wire n_0_M_AXI_WLAST_i_i_2;
  wire n_0_M_AXI_WLAST_i_i_3;
  wire n_0_dw_fifogen_aw_i_5;
  wire n_0_first_load_mi_d1_i_1;
  wire \n_0_mi_addr[0]_i_1 ;
  wire \n_0_mi_addr[1]_i_1 ;
  wire \n_0_mi_addr[2]_i_1 ;
  wire \n_0_mi_addr[3]_i_1 ;
  wire \n_0_mi_addr[4]_i_1 ;
  wire \n_0_mi_addr[5]_i_1 ;
  wire \n_0_mi_addr[5]_i_2 ;
  wire \n_0_mi_addr_d1[5]_i_1 ;
  wire \n_0_mi_addr_d1_reg[0] ;
  wire \n_0_mi_addr_d1_reg[1] ;
  wire \n_0_mi_addr_d1_reg[2] ;
  wire \n_0_mi_addr_d1_reg[3] ;
  wire \n_0_mi_addr_d1_reg[4] ;
  wire \n_0_mi_addr_d1_reg[5] ;
  wire \n_0_mi_addr_reg[0] ;
  wire \n_0_mi_addr_reg[1] ;
  wire \n_0_mi_addr_reg[2] ;
  wire \n_0_mi_addr_reg[3] ;
  wire \n_0_mi_addr_reg[4] ;
  wire \n_0_mi_addr_reg[5] ;
  wire \n_0_mi_be[0]_i_1 ;
  wire \n_0_mi_be[0]_i_2 ;
  wire \n_0_mi_be[0]_i_3 ;
  wire \n_0_mi_be[0]_i_5 ;
  wire \n_0_mi_be[10]_i_1 ;
  wire \n_0_mi_be[10]_i_2 ;
  wire \n_0_mi_be[10]_i_3 ;
  wire \n_0_mi_be[10]_i_5 ;
  wire \n_0_mi_be[11]_i_1 ;
  wire \n_0_mi_be[11]_i_2 ;
  wire \n_0_mi_be[11]_i_3 ;
  wire \n_0_mi_be[11]_i_5 ;
  wire \n_0_mi_be[12]_i_1 ;
  wire \n_0_mi_be[12]_i_2 ;
  wire \n_0_mi_be[12]_i_3 ;
  wire \n_0_mi_be[12]_i_5 ;
  wire \n_0_mi_be[13]_i_1 ;
  wire \n_0_mi_be[13]_i_2 ;
  wire \n_0_mi_be[13]_i_3 ;
  wire \n_0_mi_be[13]_i_5 ;
  wire \n_0_mi_be[14]_i_1 ;
  wire \n_0_mi_be[14]_i_2 ;
  wire \n_0_mi_be[14]_i_3 ;
  wire \n_0_mi_be[14]_i_5 ;
  wire \n_0_mi_be[15]_i_1 ;
  wire \n_0_mi_be[15]_i_2 ;
  wire \n_0_mi_be[15]_i_3 ;
  wire \n_0_mi_be[15]_i_4 ;
  wire \n_0_mi_be[15]_i_6 ;
  wire \n_0_mi_be[16]_i_1 ;
  wire \n_0_mi_be[16]_i_2 ;
  wire \n_0_mi_be[16]_i_3 ;
  wire \n_0_mi_be[16]_i_5 ;
  wire \n_0_mi_be[17]_i_1 ;
  wire \n_0_mi_be[17]_i_2 ;
  wire \n_0_mi_be[17]_i_3 ;
  wire \n_0_mi_be[17]_i_5 ;
  wire \n_0_mi_be[18]_i_1 ;
  wire \n_0_mi_be[18]_i_2 ;
  wire \n_0_mi_be[18]_i_3 ;
  wire \n_0_mi_be[18]_i_5 ;
  wire \n_0_mi_be[19]_i_1 ;
  wire \n_0_mi_be[19]_i_2 ;
  wire \n_0_mi_be[19]_i_3 ;
  wire \n_0_mi_be[19]_i_5 ;
  wire \n_0_mi_be[1]_i_1 ;
  wire \n_0_mi_be[1]_i_2 ;
  wire \n_0_mi_be[1]_i_3 ;
  wire \n_0_mi_be[1]_i_5 ;
  wire \n_0_mi_be[20]_i_1 ;
  wire \n_0_mi_be[20]_i_2 ;
  wire \n_0_mi_be[20]_i_3 ;
  wire \n_0_mi_be[20]_i_5 ;
  wire \n_0_mi_be[21]_i_1 ;
  wire \n_0_mi_be[21]_i_2 ;
  wire \n_0_mi_be[21]_i_3 ;
  wire \n_0_mi_be[21]_i_5 ;
  wire \n_0_mi_be[22]_i_1 ;
  wire \n_0_mi_be[22]_i_2 ;
  wire \n_0_mi_be[22]_i_3 ;
  wire \n_0_mi_be[22]_i_5 ;
  wire \n_0_mi_be[23]_i_1 ;
  wire \n_0_mi_be[23]_i_2 ;
  wire \n_0_mi_be[23]_i_3 ;
  wire \n_0_mi_be[23]_i_5 ;
  wire \n_0_mi_be[24]_i_1 ;
  wire \n_0_mi_be[24]_i_2 ;
  wire \n_0_mi_be[24]_i_3 ;
  wire \n_0_mi_be[24]_i_5 ;
  wire \n_0_mi_be[25]_i_1 ;
  wire \n_0_mi_be[25]_i_2 ;
  wire \n_0_mi_be[25]_i_3 ;
  wire \n_0_mi_be[25]_i_5 ;
  wire \n_0_mi_be[26]_i_1 ;
  wire \n_0_mi_be[26]_i_2 ;
  wire \n_0_mi_be[26]_i_3 ;
  wire \n_0_mi_be[26]_i_5 ;
  wire \n_0_mi_be[27]_i_1 ;
  wire \n_0_mi_be[27]_i_2 ;
  wire \n_0_mi_be[27]_i_3 ;
  wire \n_0_mi_be[27]_i_5 ;
  wire \n_0_mi_be[28]_i_1 ;
  wire \n_0_mi_be[28]_i_2 ;
  wire \n_0_mi_be[28]_i_3 ;
  wire \n_0_mi_be[28]_i_5 ;
  wire \n_0_mi_be[29]_i_1 ;
  wire \n_0_mi_be[29]_i_2 ;
  wire \n_0_mi_be[29]_i_3 ;
  wire \n_0_mi_be[29]_i_5 ;
  wire \n_0_mi_be[2]_i_1 ;
  wire \n_0_mi_be[2]_i_2 ;
  wire \n_0_mi_be[2]_i_3 ;
  wire \n_0_mi_be[2]_i_5 ;
  wire \n_0_mi_be[30]_i_1 ;
  wire \n_0_mi_be[30]_i_2 ;
  wire \n_0_mi_be[30]_i_3 ;
  wire \n_0_mi_be[30]_i_5 ;
  wire \n_0_mi_be[31]_i_1 ;
  wire \n_0_mi_be[31]_i_2 ;
  wire \n_0_mi_be[31]_i_3 ;
  wire \n_0_mi_be[31]_i_4 ;
  wire \n_0_mi_be[31]_i_6 ;
  wire \n_0_mi_be[32]_i_1 ;
  wire \n_0_mi_be[32]_i_2 ;
  wire \n_0_mi_be[32]_i_3 ;
  wire \n_0_mi_be[32]_i_5 ;
  wire \n_0_mi_be[33]_i_1 ;
  wire \n_0_mi_be[33]_i_2 ;
  wire \n_0_mi_be[33]_i_3 ;
  wire \n_0_mi_be[33]_i_5 ;
  wire \n_0_mi_be[34]_i_1 ;
  wire \n_0_mi_be[34]_i_2 ;
  wire \n_0_mi_be[34]_i_3 ;
  wire \n_0_mi_be[34]_i_5 ;
  wire \n_0_mi_be[35]_i_1 ;
  wire \n_0_mi_be[35]_i_2 ;
  wire \n_0_mi_be[35]_i_3 ;
  wire \n_0_mi_be[35]_i_5 ;
  wire \n_0_mi_be[36]_i_1 ;
  wire \n_0_mi_be[36]_i_2 ;
  wire \n_0_mi_be[36]_i_3 ;
  wire \n_0_mi_be[36]_i_5 ;
  wire \n_0_mi_be[37]_i_1 ;
  wire \n_0_mi_be[37]_i_2 ;
  wire \n_0_mi_be[37]_i_3 ;
  wire \n_0_mi_be[37]_i_5 ;
  wire \n_0_mi_be[38]_i_1 ;
  wire \n_0_mi_be[38]_i_2 ;
  wire \n_0_mi_be[38]_i_3 ;
  wire \n_0_mi_be[38]_i_5 ;
  wire \n_0_mi_be[39]_i_1 ;
  wire \n_0_mi_be[39]_i_2 ;
  wire \n_0_mi_be[39]_i_3 ;
  wire \n_0_mi_be[39]_i_5 ;
  wire \n_0_mi_be[3]_i_1 ;
  wire \n_0_mi_be[3]_i_2 ;
  wire \n_0_mi_be[3]_i_3 ;
  wire \n_0_mi_be[3]_i_5 ;
  wire \n_0_mi_be[40]_i_1 ;
  wire \n_0_mi_be[40]_i_2 ;
  wire \n_0_mi_be[40]_i_3 ;
  wire \n_0_mi_be[40]_i_5 ;
  wire \n_0_mi_be[41]_i_1 ;
  wire \n_0_mi_be[41]_i_2 ;
  wire \n_0_mi_be[41]_i_3 ;
  wire \n_0_mi_be[41]_i_5 ;
  wire \n_0_mi_be[42]_i_1 ;
  wire \n_0_mi_be[42]_i_2 ;
  wire \n_0_mi_be[42]_i_3 ;
  wire \n_0_mi_be[42]_i_5 ;
  wire \n_0_mi_be[43]_i_1 ;
  wire \n_0_mi_be[43]_i_2 ;
  wire \n_0_mi_be[43]_i_3 ;
  wire \n_0_mi_be[43]_i_5 ;
  wire \n_0_mi_be[44]_i_1 ;
  wire \n_0_mi_be[44]_i_2 ;
  wire \n_0_mi_be[44]_i_3 ;
  wire \n_0_mi_be[44]_i_5 ;
  wire \n_0_mi_be[45]_i_1 ;
  wire \n_0_mi_be[45]_i_2 ;
  wire \n_0_mi_be[45]_i_3 ;
  wire \n_0_mi_be[45]_i_5 ;
  wire \n_0_mi_be[46]_i_1 ;
  wire \n_0_mi_be[46]_i_2 ;
  wire \n_0_mi_be[46]_i_3 ;
  wire \n_0_mi_be[46]_i_5 ;
  wire \n_0_mi_be[47]_i_1 ;
  wire \n_0_mi_be[47]_i_2 ;
  wire \n_0_mi_be[47]_i_3 ;
  wire \n_0_mi_be[47]_i_4 ;
  wire \n_0_mi_be[47]_i_5 ;
  wire \n_0_mi_be[47]_i_6 ;
  wire \n_0_mi_be[47]_i_8 ;
  wire \n_0_mi_be[48]_i_1 ;
  wire \n_0_mi_be[48]_i_2 ;
  wire \n_0_mi_be[48]_i_3 ;
  wire \n_0_mi_be[48]_i_4 ;
  wire \n_0_mi_be[48]_i_5 ;
  wire \n_0_mi_be[48]_i_7 ;
  wire \n_0_mi_be[49]_i_1 ;
  wire \n_0_mi_be[49]_i_2 ;
  wire \n_0_mi_be[49]_i_3 ;
  wire \n_0_mi_be[49]_i_4 ;
  wire \n_0_mi_be[49]_i_5 ;
  wire \n_0_mi_be[49]_i_7 ;
  wire \n_0_mi_be[4]_i_1 ;
  wire \n_0_mi_be[4]_i_2 ;
  wire \n_0_mi_be[4]_i_3 ;
  wire \n_0_mi_be[4]_i_5 ;
  wire \n_0_mi_be[50]_i_1 ;
  wire \n_0_mi_be[50]_i_2 ;
  wire \n_0_mi_be[50]_i_3 ;
  wire \n_0_mi_be[50]_i_4 ;
  wire \n_0_mi_be[50]_i_5 ;
  wire \n_0_mi_be[50]_i_7 ;
  wire \n_0_mi_be[51]_i_1 ;
  wire \n_0_mi_be[51]_i_2 ;
  wire \n_0_mi_be[51]_i_3 ;
  wire \n_0_mi_be[51]_i_4 ;
  wire \n_0_mi_be[51]_i_5 ;
  wire \n_0_mi_be[51]_i_7 ;
  wire \n_0_mi_be[52]_i_1 ;
  wire \n_0_mi_be[52]_i_2 ;
  wire \n_0_mi_be[52]_i_3 ;
  wire \n_0_mi_be[52]_i_4 ;
  wire \n_0_mi_be[52]_i_5 ;
  wire \n_0_mi_be[52]_i_7 ;
  wire \n_0_mi_be[53]_i_1 ;
  wire \n_0_mi_be[53]_i_2 ;
  wire \n_0_mi_be[53]_i_3 ;
  wire \n_0_mi_be[53]_i_4 ;
  wire \n_0_mi_be[53]_i_5 ;
  wire \n_0_mi_be[53]_i_7 ;
  wire \n_0_mi_be[54]_i_1 ;
  wire \n_0_mi_be[54]_i_2 ;
  wire \n_0_mi_be[54]_i_3 ;
  wire \n_0_mi_be[54]_i_4 ;
  wire \n_0_mi_be[54]_i_5 ;
  wire \n_0_mi_be[54]_i_7 ;
  wire \n_0_mi_be[55]_i_1 ;
  wire \n_0_mi_be[55]_i_2 ;
  wire \n_0_mi_be[55]_i_3 ;
  wire \n_0_mi_be[55]_i_4 ;
  wire \n_0_mi_be[55]_i_5 ;
  wire \n_0_mi_be[55]_i_7 ;
  wire \n_0_mi_be[56]_i_1 ;
  wire \n_0_mi_be[56]_i_2 ;
  wire \n_0_mi_be[56]_i_3 ;
  wire \n_0_mi_be[56]_i_4 ;
  wire \n_0_mi_be[56]_i_5 ;
  wire \n_0_mi_be[56]_i_7 ;
  wire \n_0_mi_be[57]_i_1 ;
  wire \n_0_mi_be[57]_i_2 ;
  wire \n_0_mi_be[57]_i_3 ;
  wire \n_0_mi_be[57]_i_4 ;
  wire \n_0_mi_be[57]_i_5 ;
  wire \n_0_mi_be[57]_i_7 ;
  wire \n_0_mi_be[58]_i_1 ;
  wire \n_0_mi_be[58]_i_2 ;
  wire \n_0_mi_be[58]_i_3 ;
  wire \n_0_mi_be[58]_i_4 ;
  wire \n_0_mi_be[58]_i_5 ;
  wire \n_0_mi_be[58]_i_7 ;
  wire \n_0_mi_be[59]_i_1 ;
  wire \n_0_mi_be[59]_i_2 ;
  wire \n_0_mi_be[59]_i_3 ;
  wire \n_0_mi_be[59]_i_4 ;
  wire \n_0_mi_be[59]_i_5 ;
  wire \n_0_mi_be[59]_i_7 ;
  wire \n_0_mi_be[5]_i_1 ;
  wire \n_0_mi_be[5]_i_2 ;
  wire \n_0_mi_be[5]_i_3 ;
  wire \n_0_mi_be[5]_i_5 ;
  wire \n_0_mi_be[60]_i_1 ;
  wire \n_0_mi_be[60]_i_2 ;
  wire \n_0_mi_be[60]_i_3 ;
  wire \n_0_mi_be[60]_i_4 ;
  wire \n_0_mi_be[60]_i_5 ;
  wire \n_0_mi_be[60]_i_7 ;
  wire \n_0_mi_be[61]_i_1 ;
  wire \n_0_mi_be[61]_i_2 ;
  wire \n_0_mi_be[61]_i_3 ;
  wire \n_0_mi_be[61]_i_4 ;
  wire \n_0_mi_be[61]_i_5 ;
  wire \n_0_mi_be[61]_i_7 ;
  wire \n_0_mi_be[62]_i_1 ;
  wire \n_0_mi_be[62]_i_2 ;
  wire \n_0_mi_be[62]_i_3 ;
  wire \n_0_mi_be[62]_i_4 ;
  wire \n_0_mi_be[62]_i_5 ;
  wire \n_0_mi_be[62]_i_7 ;
  wire \n_0_mi_be[63]_i_1 ;
  wire \n_0_mi_be[63]_i_10 ;
  wire \n_0_mi_be[63]_i_11 ;
  wire \n_0_mi_be[63]_i_13 ;
  wire \n_0_mi_be[63]_i_14 ;
  wire \n_0_mi_be[63]_i_2 ;
  wire \n_0_mi_be[63]_i_3 ;
  wire \n_0_mi_be[63]_i_4 ;
  wire \n_0_mi_be[63]_i_5 ;
  wire \n_0_mi_be[63]_i_6 ;
  wire \n_0_mi_be[63]_i_7 ;
  wire \n_0_mi_be[63]_i_8 ;
  wire \n_0_mi_be[63]_i_9 ;
  wire \n_0_mi_be[6]_i_1 ;
  wire \n_0_mi_be[6]_i_2 ;
  wire \n_0_mi_be[6]_i_3 ;
  wire \n_0_mi_be[6]_i_5 ;
  wire \n_0_mi_be[7]_i_1 ;
  wire \n_0_mi_be[7]_i_2 ;
  wire \n_0_mi_be[7]_i_3 ;
  wire \n_0_mi_be[7]_i_5 ;
  wire \n_0_mi_be[8]_i_1 ;
  wire \n_0_mi_be[8]_i_2 ;
  wire \n_0_mi_be[8]_i_3 ;
  wire \n_0_mi_be[8]_i_5 ;
  wire \n_0_mi_be[9]_i_1 ;
  wire \n_0_mi_be[9]_i_2 ;
  wire \n_0_mi_be[9]_i_3 ;
  wire \n_0_mi_be[9]_i_5 ;
  wire \n_0_mi_be_d1_reg[0] ;
  wire \n_0_mi_be_d1_reg[10] ;
  wire \n_0_mi_be_d1_reg[11] ;
  wire \n_0_mi_be_d1_reg[12] ;
  wire \n_0_mi_be_d1_reg[13] ;
  wire \n_0_mi_be_d1_reg[14] ;
  wire \n_0_mi_be_d1_reg[15] ;
  wire \n_0_mi_be_d1_reg[16] ;
  wire \n_0_mi_be_d1_reg[17] ;
  wire \n_0_mi_be_d1_reg[18] ;
  wire \n_0_mi_be_d1_reg[19] ;
  wire \n_0_mi_be_d1_reg[1] ;
  wire \n_0_mi_be_d1_reg[20] ;
  wire \n_0_mi_be_d1_reg[21] ;
  wire \n_0_mi_be_d1_reg[22] ;
  wire \n_0_mi_be_d1_reg[23] ;
  wire \n_0_mi_be_d1_reg[24] ;
  wire \n_0_mi_be_d1_reg[25] ;
  wire \n_0_mi_be_d1_reg[26] ;
  wire \n_0_mi_be_d1_reg[27] ;
  wire \n_0_mi_be_d1_reg[28] ;
  wire \n_0_mi_be_d1_reg[29] ;
  wire \n_0_mi_be_d1_reg[2] ;
  wire \n_0_mi_be_d1_reg[30] ;
  wire \n_0_mi_be_d1_reg[31] ;
  wire \n_0_mi_be_d1_reg[32] ;
  wire \n_0_mi_be_d1_reg[33] ;
  wire \n_0_mi_be_d1_reg[34] ;
  wire \n_0_mi_be_d1_reg[35] ;
  wire \n_0_mi_be_d1_reg[36] ;
  wire \n_0_mi_be_d1_reg[37] ;
  wire \n_0_mi_be_d1_reg[38] ;
  wire \n_0_mi_be_d1_reg[39] ;
  wire \n_0_mi_be_d1_reg[3] ;
  wire \n_0_mi_be_d1_reg[40] ;
  wire \n_0_mi_be_d1_reg[41] ;
  wire \n_0_mi_be_d1_reg[42] ;
  wire \n_0_mi_be_d1_reg[43] ;
  wire \n_0_mi_be_d1_reg[44] ;
  wire \n_0_mi_be_d1_reg[45] ;
  wire \n_0_mi_be_d1_reg[46] ;
  wire \n_0_mi_be_d1_reg[47] ;
  wire \n_0_mi_be_d1_reg[48] ;
  wire \n_0_mi_be_d1_reg[49] ;
  wire \n_0_mi_be_d1_reg[4] ;
  wire \n_0_mi_be_d1_reg[50] ;
  wire \n_0_mi_be_d1_reg[51] ;
  wire \n_0_mi_be_d1_reg[52] ;
  wire \n_0_mi_be_d1_reg[53] ;
  wire \n_0_mi_be_d1_reg[54] ;
  wire \n_0_mi_be_d1_reg[55] ;
  wire \n_0_mi_be_d1_reg[56] ;
  wire \n_0_mi_be_d1_reg[57] ;
  wire \n_0_mi_be_d1_reg[58] ;
  wire \n_0_mi_be_d1_reg[59] ;
  wire \n_0_mi_be_d1_reg[5] ;
  wire \n_0_mi_be_d1_reg[60] ;
  wire \n_0_mi_be_d1_reg[61] ;
  wire \n_0_mi_be_d1_reg[62] ;
  wire \n_0_mi_be_d1_reg[63] ;
  wire \n_0_mi_be_d1_reg[6] ;
  wire \n_0_mi_be_d1_reg[7] ;
  wire \n_0_mi_be_d1_reg[8] ;
  wire \n_0_mi_be_d1_reg[9] ;
  wire \n_0_mi_be_reg[0] ;
  wire \n_0_mi_be_reg[10] ;
  wire \n_0_mi_be_reg[11] ;
  wire \n_0_mi_be_reg[12] ;
  wire \n_0_mi_be_reg[13] ;
  wire \n_0_mi_be_reg[14] ;
  wire \n_0_mi_be_reg[15] ;
  wire \n_0_mi_be_reg[16] ;
  wire \n_0_mi_be_reg[17] ;
  wire \n_0_mi_be_reg[18] ;
  wire \n_0_mi_be_reg[19] ;
  wire \n_0_mi_be_reg[1] ;
  wire \n_0_mi_be_reg[20] ;
  wire \n_0_mi_be_reg[21] ;
  wire \n_0_mi_be_reg[22] ;
  wire \n_0_mi_be_reg[23] ;
  wire \n_0_mi_be_reg[24] ;
  wire \n_0_mi_be_reg[25] ;
  wire \n_0_mi_be_reg[26] ;
  wire \n_0_mi_be_reg[27] ;
  wire \n_0_mi_be_reg[28] ;
  wire \n_0_mi_be_reg[29] ;
  wire \n_0_mi_be_reg[2] ;
  wire \n_0_mi_be_reg[30] ;
  wire \n_0_mi_be_reg[31] ;
  wire \n_0_mi_be_reg[32] ;
  wire \n_0_mi_be_reg[33] ;
  wire \n_0_mi_be_reg[34] ;
  wire \n_0_mi_be_reg[35] ;
  wire \n_0_mi_be_reg[36] ;
  wire \n_0_mi_be_reg[37] ;
  wire \n_0_mi_be_reg[38] ;
  wire \n_0_mi_be_reg[39] ;
  wire \n_0_mi_be_reg[3] ;
  wire \n_0_mi_be_reg[40] ;
  wire \n_0_mi_be_reg[41] ;
  wire \n_0_mi_be_reg[42] ;
  wire \n_0_mi_be_reg[43] ;
  wire \n_0_mi_be_reg[44] ;
  wire \n_0_mi_be_reg[45] ;
  wire \n_0_mi_be_reg[46] ;
  wire \n_0_mi_be_reg[47] ;
  wire \n_0_mi_be_reg[48] ;
  wire \n_0_mi_be_reg[49] ;
  wire \n_0_mi_be_reg[4] ;
  wire \n_0_mi_be_reg[50] ;
  wire \n_0_mi_be_reg[51] ;
  wire \n_0_mi_be_reg[52] ;
  wire \n_0_mi_be_reg[53] ;
  wire \n_0_mi_be_reg[54] ;
  wire \n_0_mi_be_reg[55] ;
  wire \n_0_mi_be_reg[56] ;
  wire \n_0_mi_be_reg[57] ;
  wire \n_0_mi_be_reg[58] ;
  wire \n_0_mi_be_reg[59] ;
  wire \n_0_mi_be_reg[5] ;
  wire \n_0_mi_be_reg[60] ;
  wire \n_0_mi_be_reg[61] ;
  wire \n_0_mi_be_reg[62] ;
  wire \n_0_mi_be_reg[63] ;
  wire \n_0_mi_be_reg[6] ;
  wire \n_0_mi_be_reg[7] ;
  wire \n_0_mi_be_reg[8] ;
  wire \n_0_mi_be_reg[9] ;
  wire \n_0_mi_buf[0]_i_1 ;
  wire \n_0_mi_buf[1]_i_2 ;
  wire \n_0_mi_burst[0]_i_1 ;
  wire \n_0_mi_burst[1]_i_1 ;
  wire \n_0_mi_burst[1]_i_2 ;
  wire \n_0_mi_burst_reg[0] ;
  wire \n_0_mi_burst_reg[1] ;
  wire n_0_mi_last_i_5;
  wire n_0_mi_last_i_6;
  wire \n_0_mi_last_index_reg_d0[0]_i_1 ;
  wire \n_0_mi_last_index_reg_d0[1]_i_1 ;
  wire \n_0_mi_last_index_reg_d0[2]_i_1 ;
  wire \n_0_mi_last_index_reg_d0[3]_i_1 ;
  wire \n_0_mi_last_index_reg_d0[4]_i_1 ;
  wire \n_0_mi_last_index_reg_d0[5]_i_1 ;
  wire \n_0_mi_last_index_reg_d0_reg[0] ;
  wire \n_0_mi_last_index_reg_d0_reg[1] ;
  wire \n_0_mi_last_index_reg_d0_reg[2] ;
  wire \n_0_mi_last_index_reg_d0_reg[3] ;
  wire \n_0_mi_last_index_reg_d0_reg[4] ;
  wire \n_0_mi_last_index_reg_d0_reg[5] ;
  wire \n_0_mi_ptr[0]_i_1 ;
  wire \n_0_mi_ptr[0]_i_2 ;
  wire \n_0_mi_ptr[0]_i_3 ;
  wire \n_0_mi_ptr[0]_i_4 ;
  wire \n_0_mi_ptr[0]_i_5 ;
  wire \n_0_mi_ptr[0]_i_6 ;
  wire \n_0_mi_ptr[1]_i_1 ;
  wire \n_0_mi_ptr[1]_i_2 ;
  wire \n_0_mi_ptr[1]_i_3 ;
  wire \n_0_mi_ptr[1]_i_4 ;
  wire \n_0_mi_ptr[2]_i_1 ;
  wire \n_0_mi_ptr[2]_i_2 ;
  wire \n_0_mi_ptr[2]_i_3 ;
  wire \n_0_mi_ptr[2]_i_4 ;
  wire \n_0_mi_ptr[2]_i_5 ;
  wire \n_0_mi_ptr[2]_i_6 ;
  wire \n_0_mi_ptr[3]_i_1 ;
  wire \n_0_mi_ptr[4]_i_1 ;
  wire \n_0_mi_ptr[5]_i_1 ;
  wire \n_0_mi_ptr[6]_i_1 ;
  wire \n_0_mi_ptr[6]_i_2 ;
  wire \n_0_mi_ptr[6]_i_3 ;
  wire \n_0_mi_ptr[6]_i_4 ;
  wire \n_0_mi_ptr[6]_i_5 ;
  wire \n_0_mi_ptr[6]_i_6 ;
  wire \n_0_mi_ptr[6]_i_7 ;
  wire \n_0_mi_size[0]_i_1 ;
  wire \n_0_mi_size[0]_i_2 ;
  wire \n_0_mi_size[1]_i_1 ;
  wire \n_0_mi_size[1]_i_2 ;
  wire \n_0_mi_size[2]_i_1 ;
  wire \n_0_mi_size[2]_i_2 ;
  wire \n_0_mi_wcnt[0]_i_1 ;
  wire \n_0_mi_wcnt[0]_i_2 ;
  wire \n_0_mi_wcnt[1]_i_1 ;
  wire \n_0_mi_wcnt[1]_i_2 ;
  wire \n_0_mi_wcnt[2]_i_1 ;
  wire \n_0_mi_wcnt[2]_i_2 ;
  wire \n_0_mi_wcnt[3]_i_1 ;
  wire \n_0_mi_wcnt[3]_i_2 ;
  wire \n_0_mi_wcnt[4]_i_1 ;
  wire \n_0_mi_wcnt[4]_i_2 ;
  wire \n_0_mi_wcnt[5]_i_1 ;
  wire \n_0_mi_wcnt[5]_i_2 ;
  wire \n_0_mi_wcnt[5]_i_3 ;
  wire \n_0_mi_wcnt[6]_i_1 ;
  wire \n_0_mi_wcnt[6]_i_2 ;
  wire \n_0_mi_wcnt[7]_i_1 ;
  wire \n_0_mi_wcnt[7]_i_2 ;
  wire \n_0_mi_wcnt[7]_i_3 ;
  wire \n_0_mi_wcnt[7]_i_4 ;
  wire \n_0_mi_wcnt[7]_i_5 ;
  wire \n_0_mi_wcnt[7]_i_6 ;
  wire \n_0_mi_wcnt[7]_i_7 ;
  wire \n_0_mi_wrap_be_next[0]_i_1 ;
  wire \n_0_mi_wrap_be_next[0]_i_2 ;
  wire \n_0_mi_wrap_be_next[0]_i_3 ;
  wire \n_0_mi_wrap_be_next[0]_i_4 ;
  wire \n_0_mi_wrap_be_next[0]_i_5 ;
  wire \n_0_mi_wrap_be_next[0]_i_6 ;
  wire \n_0_mi_wrap_be_next[10]_i_1 ;
  wire \n_0_mi_wrap_be_next[10]_i_2 ;
  wire \n_0_mi_wrap_be_next[10]_i_4 ;
  wire \n_0_mi_wrap_be_next[10]_i_5 ;
  wire \n_0_mi_wrap_be_next[11]_i_1 ;
  wire \n_0_mi_wrap_be_next[11]_i_2 ;
  wire \n_0_mi_wrap_be_next[11]_i_3 ;
  wire \n_0_mi_wrap_be_next[11]_i_4 ;
  wire \n_0_mi_wrap_be_next[12]_i_1 ;
  wire \n_0_mi_wrap_be_next[12]_i_2 ;
  wire \n_0_mi_wrap_be_next[12]_i_3 ;
  wire \n_0_mi_wrap_be_next[12]_i_4 ;
  wire \n_0_mi_wrap_be_next[12]_i_5 ;
  wire \n_0_mi_wrap_be_next[13]_i_1 ;
  wire \n_0_mi_wrap_be_next[13]_i_2 ;
  wire \n_0_mi_wrap_be_next[13]_i_3 ;
  wire \n_0_mi_wrap_be_next[13]_i_4 ;
  wire \n_0_mi_wrap_be_next[13]_i_5 ;
  wire \n_0_mi_wrap_be_next[14]_i_1 ;
  wire \n_0_mi_wrap_be_next[14]_i_2 ;
  wire \n_0_mi_wrap_be_next[14]_i_3 ;
  wire \n_0_mi_wrap_be_next[14]_i_4 ;
  wire \n_0_mi_wrap_be_next[14]_i_5 ;
  wire \n_0_mi_wrap_be_next[15]_i_1 ;
  wire \n_0_mi_wrap_be_next[15]_i_2 ;
  wire \n_0_mi_wrap_be_next[15]_i_3 ;
  wire \n_0_mi_wrap_be_next[16]_i_1 ;
  wire \n_0_mi_wrap_be_next[16]_i_10 ;
  wire \n_0_mi_wrap_be_next[16]_i_2 ;
  wire \n_0_mi_wrap_be_next[16]_i_3 ;
  wire \n_0_mi_wrap_be_next[16]_i_4 ;
  wire \n_0_mi_wrap_be_next[16]_i_5 ;
  wire \n_0_mi_wrap_be_next[16]_i_6 ;
  wire \n_0_mi_wrap_be_next[16]_i_7 ;
  wire \n_0_mi_wrap_be_next[16]_i_8 ;
  wire \n_0_mi_wrap_be_next[16]_i_9 ;
  wire \n_0_mi_wrap_be_next[17]_i_1 ;
  wire \n_0_mi_wrap_be_next[17]_i_2 ;
  wire \n_0_mi_wrap_be_next[17]_i_3 ;
  wire \n_0_mi_wrap_be_next[17]_i_4 ;
  wire \n_0_mi_wrap_be_next[18]_i_1 ;
  wire \n_0_mi_wrap_be_next[18]_i_2 ;
  wire \n_0_mi_wrap_be_next[18]_i_3 ;
  wire \n_0_mi_wrap_be_next[18]_i_4 ;
  wire \n_0_mi_wrap_be_next[18]_i_5 ;
  wire \n_0_mi_wrap_be_next[18]_i_6 ;
  wire \n_0_mi_wrap_be_next[19]_i_1 ;
  wire \n_0_mi_wrap_be_next[19]_i_2 ;
  wire \n_0_mi_wrap_be_next[19]_i_4 ;
  wire \n_0_mi_wrap_be_next[1]_i_1 ;
  wire \n_0_mi_wrap_be_next[1]_i_2 ;
  wire \n_0_mi_wrap_be_next[1]_i_3 ;
  wire \n_0_mi_wrap_be_next[1]_i_4 ;
  wire \n_0_mi_wrap_be_next[1]_i_5 ;
  wire \n_0_mi_wrap_be_next[20]_i_1 ;
  wire \n_0_mi_wrap_be_next[20]_i_2 ;
  wire \n_0_mi_wrap_be_next[20]_i_3 ;
  wire \n_0_mi_wrap_be_next[20]_i_4 ;
  wire \n_0_mi_wrap_be_next[20]_i_5 ;
  wire \n_0_mi_wrap_be_next[20]_i_6 ;
  wire \n_0_mi_wrap_be_next[21]_i_1 ;
  wire \n_0_mi_wrap_be_next[21]_i_2 ;
  wire \n_0_mi_wrap_be_next[21]_i_3 ;
  wire \n_0_mi_wrap_be_next[21]_i_4 ;
  wire \n_0_mi_wrap_be_next[21]_i_5 ;
  wire \n_0_mi_wrap_be_next[22]_i_1 ;
  wire \n_0_mi_wrap_be_next[22]_i_2 ;
  wire \n_0_mi_wrap_be_next[22]_i_3 ;
  wire \n_0_mi_wrap_be_next[22]_i_4 ;
  wire \n_0_mi_wrap_be_next[23]_i_1 ;
  wire \n_0_mi_wrap_be_next[23]_i_2 ;
  wire \n_0_mi_wrap_be_next[23]_i_4 ;
  wire \n_0_mi_wrap_be_next[24]_i_1 ;
  wire \n_0_mi_wrap_be_next[24]_i_2 ;
  wire \n_0_mi_wrap_be_next[24]_i_3 ;
  wire \n_0_mi_wrap_be_next[24]_i_4 ;
  wire \n_0_mi_wrap_be_next[24]_i_5 ;
  wire \n_0_mi_wrap_be_next[24]_i_6 ;
  wire \n_0_mi_wrap_be_next[24]_i_7 ;
  wire \n_0_mi_wrap_be_next[24]_i_8 ;
  wire \n_0_mi_wrap_be_next[25]_i_1 ;
  wire \n_0_mi_wrap_be_next[25]_i_2 ;
  wire \n_0_mi_wrap_be_next[25]_i_3 ;
  wire \n_0_mi_wrap_be_next[25]_i_4 ;
  wire \n_0_mi_wrap_be_next[25]_i_5 ;
  wire \n_0_mi_wrap_be_next[25]_i_6 ;
  wire \n_0_mi_wrap_be_next[25]_i_7 ;
  wire \n_0_mi_wrap_be_next[26]_i_1 ;
  wire \n_0_mi_wrap_be_next[26]_i_2 ;
  wire \n_0_mi_wrap_be_next[26]_i_4 ;
  wire \n_0_mi_wrap_be_next[26]_i_5 ;
  wire \n_0_mi_wrap_be_next[27]_i_1 ;
  wire \n_0_mi_wrap_be_next[27]_i_2 ;
  wire \n_0_mi_wrap_be_next[27]_i_3 ;
  wire \n_0_mi_wrap_be_next[28]_i_1 ;
  wire \n_0_mi_wrap_be_next[28]_i_2 ;
  wire \n_0_mi_wrap_be_next[28]_i_3 ;
  wire \n_0_mi_wrap_be_next[28]_i_4 ;
  wire \n_0_mi_wrap_be_next[28]_i_5 ;
  wire \n_0_mi_wrap_be_next[28]_i_6 ;
  wire \n_0_mi_wrap_be_next[28]_i_7 ;
  wire \n_0_mi_wrap_be_next[29]_i_1 ;
  wire \n_0_mi_wrap_be_next[29]_i_2 ;
  wire \n_0_mi_wrap_be_next[29]_i_3 ;
  wire \n_0_mi_wrap_be_next[29]_i_4 ;
  wire \n_0_mi_wrap_be_next[29]_i_5 ;
  wire \n_0_mi_wrap_be_next[2]_i_1 ;
  wire \n_0_mi_wrap_be_next[2]_i_2 ;
  wire \n_0_mi_wrap_be_next[2]_i_3 ;
  wire \n_0_mi_wrap_be_next[2]_i_4 ;
  wire \n_0_mi_wrap_be_next[2]_i_5 ;
  wire \n_0_mi_wrap_be_next[2]_i_6 ;
  wire \n_0_mi_wrap_be_next[2]_i_7 ;
  wire \n_0_mi_wrap_be_next[2]_i_8 ;
  wire \n_0_mi_wrap_be_next[30]_i_1 ;
  wire \n_0_mi_wrap_be_next[30]_i_2 ;
  wire \n_0_mi_wrap_be_next[30]_i_3 ;
  wire \n_0_mi_wrap_be_next[30]_i_4 ;
  wire \n_0_mi_wrap_be_next[30]_i_5 ;
  wire \n_0_mi_wrap_be_next[30]_i_6 ;
  wire \n_0_mi_wrap_be_next[31]_i_1 ;
  wire \n_0_mi_wrap_be_next[31]_i_2 ;
  wire \n_0_mi_wrap_be_next[32]_i_1 ;
  wire \n_0_mi_wrap_be_next[32]_i_10 ;
  wire \n_0_mi_wrap_be_next[32]_i_11 ;
  wire \n_0_mi_wrap_be_next[32]_i_2 ;
  wire \n_0_mi_wrap_be_next[32]_i_3 ;
  wire \n_0_mi_wrap_be_next[32]_i_4 ;
  wire \n_0_mi_wrap_be_next[32]_i_5 ;
  wire \n_0_mi_wrap_be_next[32]_i_6 ;
  wire \n_0_mi_wrap_be_next[32]_i_7 ;
  wire \n_0_mi_wrap_be_next[32]_i_8 ;
  wire \n_0_mi_wrap_be_next[32]_i_9 ;
  wire \n_0_mi_wrap_be_next[33]_i_1 ;
  wire \n_0_mi_wrap_be_next[33]_i_2 ;
  wire \n_0_mi_wrap_be_next[33]_i_3 ;
  wire \n_0_mi_wrap_be_next[33]_i_4 ;
  wire \n_0_mi_wrap_be_next[33]_i_5 ;
  wire \n_0_mi_wrap_be_next[33]_i_6 ;
  wire \n_0_mi_wrap_be_next[33]_i_7 ;
  wire \n_0_mi_wrap_be_next[33]_i_8 ;
  wire \n_0_mi_wrap_be_next[34]_i_1 ;
  wire \n_0_mi_wrap_be_next[34]_i_10 ;
  wire \n_0_mi_wrap_be_next[34]_i_11 ;
  wire \n_0_mi_wrap_be_next[34]_i_2 ;
  wire \n_0_mi_wrap_be_next[34]_i_3 ;
  wire \n_0_mi_wrap_be_next[34]_i_4 ;
  wire \n_0_mi_wrap_be_next[34]_i_5 ;
  wire \n_0_mi_wrap_be_next[34]_i_6 ;
  wire \n_0_mi_wrap_be_next[34]_i_7 ;
  wire \n_0_mi_wrap_be_next[34]_i_8 ;
  wire \n_0_mi_wrap_be_next[34]_i_9 ;
  wire \n_0_mi_wrap_be_next[35]_i_1 ;
  wire \n_0_mi_wrap_be_next[35]_i_2 ;
  wire \n_0_mi_wrap_be_next[35]_i_3 ;
  wire \n_0_mi_wrap_be_next[35]_i_5 ;
  wire \n_0_mi_wrap_be_next[36]_i_1 ;
  wire \n_0_mi_wrap_be_next[36]_i_10 ;
  wire \n_0_mi_wrap_be_next[36]_i_11 ;
  wire \n_0_mi_wrap_be_next[36]_i_12 ;
  wire \n_0_mi_wrap_be_next[36]_i_2 ;
  wire \n_0_mi_wrap_be_next[36]_i_3 ;
  wire \n_0_mi_wrap_be_next[36]_i_4 ;
  wire \n_0_mi_wrap_be_next[36]_i_5 ;
  wire \n_0_mi_wrap_be_next[36]_i_6 ;
  wire \n_0_mi_wrap_be_next[36]_i_7 ;
  wire \n_0_mi_wrap_be_next[36]_i_8 ;
  wire \n_0_mi_wrap_be_next[36]_i_9 ;
  wire \n_0_mi_wrap_be_next[37]_i_1 ;
  wire \n_0_mi_wrap_be_next[37]_i_2 ;
  wire \n_0_mi_wrap_be_next[37]_i_3 ;
  wire \n_0_mi_wrap_be_next[37]_i_4 ;
  wire \n_0_mi_wrap_be_next[38]_i_1 ;
  wire \n_0_mi_wrap_be_next[38]_i_2 ;
  wire \n_0_mi_wrap_be_next[38]_i_3 ;
  wire \n_0_mi_wrap_be_next[38]_i_4 ;
  wire \n_0_mi_wrap_be_next[39]_i_1 ;
  wire \n_0_mi_wrap_be_next[39]_i_2 ;
  wire \n_0_mi_wrap_be_next[39]_i_4 ;
  wire \n_0_mi_wrap_be_next[3]_i_1 ;
  wire \n_0_mi_wrap_be_next[3]_i_2 ;
  wire \n_0_mi_wrap_be_next[3]_i_3 ;
  wire \n_0_mi_wrap_be_next[3]_i_4 ;
  wire \n_0_mi_wrap_be_next[3]_i_5 ;
  wire \n_0_mi_wrap_be_next[40]_i_1 ;
  wire \n_0_mi_wrap_be_next[40]_i_10 ;
  wire \n_0_mi_wrap_be_next[40]_i_11 ;
  wire \n_0_mi_wrap_be_next[40]_i_12 ;
  wire \n_0_mi_wrap_be_next[40]_i_13 ;
  wire \n_0_mi_wrap_be_next[40]_i_14 ;
  wire \n_0_mi_wrap_be_next[40]_i_16 ;
  wire \n_0_mi_wrap_be_next[40]_i_17 ;
  wire \n_0_mi_wrap_be_next[40]_i_2 ;
  wire \n_0_mi_wrap_be_next[40]_i_3 ;
  wire \n_0_mi_wrap_be_next[40]_i_4 ;
  wire \n_0_mi_wrap_be_next[40]_i_5 ;
  wire \n_0_mi_wrap_be_next[40]_i_6 ;
  wire \n_0_mi_wrap_be_next[40]_i_7 ;
  wire \n_0_mi_wrap_be_next[40]_i_8 ;
  wire \n_0_mi_wrap_be_next[40]_i_9 ;
  wire \n_0_mi_wrap_be_next[41]_i_1 ;
  wire \n_0_mi_wrap_be_next[41]_i_2 ;
  wire \n_0_mi_wrap_be_next[41]_i_3 ;
  wire \n_0_mi_wrap_be_next[41]_i_4 ;
  wire \n_0_mi_wrap_be_next[41]_i_5 ;
  wire \n_0_mi_wrap_be_next[42]_i_1 ;
  wire \n_0_mi_wrap_be_next[42]_i_2 ;
  wire \n_0_mi_wrap_be_next[42]_i_3 ;
  wire \n_0_mi_wrap_be_next[42]_i_4 ;
  wire \n_0_mi_wrap_be_next[42]_i_5 ;
  wire \n_0_mi_wrap_be_next[42]_i_6 ;
  wire \n_0_mi_wrap_be_next[43]_i_1 ;
  wire \n_0_mi_wrap_be_next[43]_i_2 ;
  wire \n_0_mi_wrap_be_next[43]_i_3 ;
  wire \n_0_mi_wrap_be_next[43]_i_4 ;
  wire \n_0_mi_wrap_be_next[43]_i_5 ;
  wire \n_0_mi_wrap_be_next[44]_i_1 ;
  wire \n_0_mi_wrap_be_next[44]_i_2 ;
  wire \n_0_mi_wrap_be_next[44]_i_3 ;
  wire \n_0_mi_wrap_be_next[44]_i_4 ;
  wire \n_0_mi_wrap_be_next[44]_i_5 ;
  wire \n_0_mi_wrap_be_next[44]_i_6 ;
  wire \n_0_mi_wrap_be_next[45]_i_1 ;
  wire \n_0_mi_wrap_be_next[45]_i_2 ;
  wire \n_0_mi_wrap_be_next[45]_i_3 ;
  wire \n_0_mi_wrap_be_next[45]_i_4 ;
  wire \n_0_mi_wrap_be_next[45]_i_5 ;
  wire \n_0_mi_wrap_be_next[45]_i_6 ;
  wire \n_0_mi_wrap_be_next[45]_i_7 ;
  wire \n_0_mi_wrap_be_next[46]_i_1 ;
  wire \n_0_mi_wrap_be_next[46]_i_2 ;
  wire \n_0_mi_wrap_be_next[46]_i_3 ;
  wire \n_0_mi_wrap_be_next[46]_i_4 ;
  wire \n_0_mi_wrap_be_next[46]_i_5 ;
  wire \n_0_mi_wrap_be_next[47]_i_1 ;
  wire \n_0_mi_wrap_be_next[47]_i_2 ;
  wire \n_0_mi_wrap_be_next[47]_i_3 ;
  wire \n_0_mi_wrap_be_next[47]_i_4 ;
  wire \n_0_mi_wrap_be_next[48]_i_1 ;
  wire \n_0_mi_wrap_be_next[48]_i_10 ;
  wire \n_0_mi_wrap_be_next[48]_i_11 ;
  wire \n_0_mi_wrap_be_next[48]_i_12 ;
  wire \n_0_mi_wrap_be_next[48]_i_13 ;
  wire \n_0_mi_wrap_be_next[48]_i_14 ;
  wire \n_0_mi_wrap_be_next[48]_i_15 ;
  wire \n_0_mi_wrap_be_next[48]_i_2 ;
  wire \n_0_mi_wrap_be_next[48]_i_3 ;
  wire \n_0_mi_wrap_be_next[48]_i_4 ;
  wire \n_0_mi_wrap_be_next[48]_i_5 ;
  wire \n_0_mi_wrap_be_next[48]_i_6 ;
  wire \n_0_mi_wrap_be_next[48]_i_7 ;
  wire \n_0_mi_wrap_be_next[48]_i_8 ;
  wire \n_0_mi_wrap_be_next[48]_i_9 ;
  wire \n_0_mi_wrap_be_next[49]_i_1 ;
  wire \n_0_mi_wrap_be_next[49]_i_2 ;
  wire \n_0_mi_wrap_be_next[49]_i_3 ;
  wire \n_0_mi_wrap_be_next[49]_i_4 ;
  wire \n_0_mi_wrap_be_next[49]_i_5 ;
  wire \n_0_mi_wrap_be_next[49]_i_6 ;
  wire \n_0_mi_wrap_be_next[49]_i_7 ;
  wire \n_0_mi_wrap_be_next[49]_i_8 ;
  wire \n_0_mi_wrap_be_next[4]_i_1 ;
  wire \n_0_mi_wrap_be_next[4]_i_2 ;
  wire \n_0_mi_wrap_be_next[4]_i_3 ;
  wire \n_0_mi_wrap_be_next[4]_i_4 ;
  wire \n_0_mi_wrap_be_next[4]_i_5 ;
  wire \n_0_mi_wrap_be_next[4]_i_6 ;
  wire \n_0_mi_wrap_be_next[50]_i_1 ;
  wire \n_0_mi_wrap_be_next[50]_i_2 ;
  wire \n_0_mi_wrap_be_next[50]_i_3 ;
  wire \n_0_mi_wrap_be_next[50]_i_4 ;
  wire \n_0_mi_wrap_be_next[50]_i_5 ;
  wire \n_0_mi_wrap_be_next[50]_i_6 ;
  wire \n_0_mi_wrap_be_next[51]_i_1 ;
  wire \n_0_mi_wrap_be_next[51]_i_2 ;
  wire \n_0_mi_wrap_be_next[51]_i_3 ;
  wire \n_0_mi_wrap_be_next[51]_i_4 ;
  wire \n_0_mi_wrap_be_next[51]_i_5 ;
  wire \n_0_mi_wrap_be_next[52]_i_1 ;
  wire \n_0_mi_wrap_be_next[52]_i_2 ;
  wire \n_0_mi_wrap_be_next[52]_i_3 ;
  wire \n_0_mi_wrap_be_next[52]_i_4 ;
  wire \n_0_mi_wrap_be_next[52]_i_5 ;
  wire \n_0_mi_wrap_be_next[52]_i_6 ;
  wire \n_0_mi_wrap_be_next[53]_i_1 ;
  wire \n_0_mi_wrap_be_next[53]_i_2 ;
  wire \n_0_mi_wrap_be_next[53]_i_3 ;
  wire \n_0_mi_wrap_be_next[53]_i_4 ;
  wire \n_0_mi_wrap_be_next[53]_i_5 ;
  wire \n_0_mi_wrap_be_next[53]_i_6 ;
  wire \n_0_mi_wrap_be_next[53]_i_7 ;
  wire \n_0_mi_wrap_be_next[54]_i_1 ;
  wire \n_0_mi_wrap_be_next[54]_i_2 ;
  wire \n_0_mi_wrap_be_next[54]_i_3 ;
  wire \n_0_mi_wrap_be_next[54]_i_4 ;
  wire \n_0_mi_wrap_be_next[54]_i_6 ;
  wire \n_0_mi_wrap_be_next[54]_i_8 ;
  wire \n_0_mi_wrap_be_next[54]_i_9 ;
  wire \n_0_mi_wrap_be_next[55]_i_1 ;
  wire \n_0_mi_wrap_be_next[55]_i_2 ;
  wire \n_0_mi_wrap_be_next[55]_i_3 ;
  wire \n_0_mi_wrap_be_next[56]_i_1 ;
  wire \n_0_mi_wrap_be_next[56]_i_10 ;
  wire \n_0_mi_wrap_be_next[56]_i_11 ;
  wire \n_0_mi_wrap_be_next[56]_i_2 ;
  wire \n_0_mi_wrap_be_next[56]_i_3 ;
  wire \n_0_mi_wrap_be_next[56]_i_4 ;
  wire \n_0_mi_wrap_be_next[56]_i_5 ;
  wire \n_0_mi_wrap_be_next[56]_i_6 ;
  wire \n_0_mi_wrap_be_next[56]_i_7 ;
  wire \n_0_mi_wrap_be_next[56]_i_8 ;
  wire \n_0_mi_wrap_be_next[56]_i_9 ;
  wire \n_0_mi_wrap_be_next[57]_i_1 ;
  wire \n_0_mi_wrap_be_next[57]_i_2 ;
  wire \n_0_mi_wrap_be_next[57]_i_3 ;
  wire \n_0_mi_wrap_be_next[57]_i_4 ;
  wire \n_0_mi_wrap_be_next[57]_i_5 ;
  wire \n_0_mi_wrap_be_next[58]_i_1 ;
  wire \n_0_mi_wrap_be_next[58]_i_2 ;
  wire \n_0_mi_wrap_be_next[58]_i_4 ;
  wire \n_0_mi_wrap_be_next[58]_i_5 ;
  wire \n_0_mi_wrap_be_next[58]_i_6 ;
  wire \n_0_mi_wrap_be_next[58]_i_7 ;
  wire \n_0_mi_wrap_be_next[58]_i_8 ;
  wire \n_0_mi_wrap_be_next[58]_i_9 ;
  wire \n_0_mi_wrap_be_next[59]_i_1 ;
  wire \n_0_mi_wrap_be_next[59]_i_2 ;
  wire \n_0_mi_wrap_be_next[59]_i_3 ;
  wire \n_0_mi_wrap_be_next[5]_i_1 ;
  wire \n_0_mi_wrap_be_next[5]_i_2 ;
  wire \n_0_mi_wrap_be_next[5]_i_3 ;
  wire \n_0_mi_wrap_be_next[5]_i_4 ;
  wire \n_0_mi_wrap_be_next[60]_i_1 ;
  wire \n_0_mi_wrap_be_next[60]_i_2 ;
  wire \n_0_mi_wrap_be_next[60]_i_3 ;
  wire \n_0_mi_wrap_be_next[60]_i_4 ;
  wire \n_0_mi_wrap_be_next[60]_i_5 ;
  wire \n_0_mi_wrap_be_next[60]_i_6 ;
  wire \n_0_mi_wrap_be_next[60]_i_7 ;
  wire \n_0_mi_wrap_be_next[60]_i_8 ;
  wire \n_0_mi_wrap_be_next[60]_i_9 ;
  wire \n_0_mi_wrap_be_next[61]_i_1 ;
  wire \n_0_mi_wrap_be_next[61]_i_2 ;
  wire \n_0_mi_wrap_be_next[61]_i_3 ;
  wire \n_0_mi_wrap_be_next[61]_i_4 ;
  wire \n_0_mi_wrap_be_next[61]_i_5 ;
  wire \n_0_mi_wrap_be_next[61]_i_6 ;
  wire \n_0_mi_wrap_be_next[61]_i_7 ;
  wire \n_0_mi_wrap_be_next[62]_i_1 ;
  wire \n_0_mi_wrap_be_next[62]_i_2 ;
  wire \n_0_mi_wrap_be_next[62]_i_3 ;
  wire \n_0_mi_wrap_be_next[62]_i_4 ;
  wire \n_0_mi_wrap_be_next[62]_i_5 ;
  wire \n_0_mi_wrap_be_next[62]_i_6 ;
  wire \n_0_mi_wrap_be_next[62]_i_7 ;
  wire \n_0_mi_wrap_be_next[63]_i_1 ;
  wire \n_0_mi_wrap_be_next[63]_i_2 ;
  wire \n_0_mi_wrap_be_next[6]_i_1 ;
  wire \n_0_mi_wrap_be_next[6]_i_2 ;
  wire \n_0_mi_wrap_be_next[6]_i_3 ;
  wire \n_0_mi_wrap_be_next[6]_i_4 ;
  wire \n_0_mi_wrap_be_next[6]_i_5 ;
  wire \n_0_mi_wrap_be_next[7]_i_1 ;
  wire \n_0_mi_wrap_be_next[7]_i_2 ;
  wire \n_0_mi_wrap_be_next[7]_i_3 ;
  wire \n_0_mi_wrap_be_next[7]_i_4 ;
  wire \n_0_mi_wrap_be_next[7]_i_5 ;
  wire \n_0_mi_wrap_be_next[8]_i_1 ;
  wire \n_0_mi_wrap_be_next[8]_i_2 ;
  wire \n_0_mi_wrap_be_next[8]_i_3 ;
  wire \n_0_mi_wrap_be_next[8]_i_4 ;
  wire \n_0_mi_wrap_be_next[8]_i_5 ;
  wire \n_0_mi_wrap_be_next[8]_i_6 ;
  wire \n_0_mi_wrap_be_next[8]_i_7 ;
  wire \n_0_mi_wrap_be_next[8]_i_8 ;
  wire \n_0_mi_wrap_be_next[9]_i_1 ;
  wire \n_0_mi_wrap_be_next[9]_i_2 ;
  wire \n_0_mi_wrap_be_next[9]_i_3 ;
  wire \n_0_mi_wrap_cnt[0]_i_1 ;
  wire \n_0_mi_wrap_cnt[0]_i_10 ;
  wire \n_0_mi_wrap_cnt[0]_i_11 ;
  wire \n_0_mi_wrap_cnt[0]_i_12 ;
  wire \n_0_mi_wrap_cnt[0]_i_13 ;
  wire \n_0_mi_wrap_cnt[0]_i_14 ;
  wire \n_0_mi_wrap_cnt[0]_i_2 ;
  wire \n_0_mi_wrap_cnt[0]_i_3 ;
  wire \n_0_mi_wrap_cnt[0]_i_4 ;
  wire \n_0_mi_wrap_cnt[0]_i_5 ;
  wire \n_0_mi_wrap_cnt[0]_i_6 ;
  wire \n_0_mi_wrap_cnt[0]_i_8 ;
  wire \n_0_mi_wrap_cnt[0]_i_9 ;
  wire \n_0_mi_wrap_cnt[1]_i_1 ;
  wire \n_0_mi_wrap_cnt[1]_i_10 ;
  wire \n_0_mi_wrap_cnt[1]_i_11 ;
  wire \n_0_mi_wrap_cnt[1]_i_12 ;
  wire \n_0_mi_wrap_cnt[1]_i_13 ;
  wire \n_0_mi_wrap_cnt[1]_i_2 ;
  wire \n_0_mi_wrap_cnt[1]_i_3 ;
  wire \n_0_mi_wrap_cnt[1]_i_4 ;
  wire \n_0_mi_wrap_cnt[1]_i_5 ;
  wire \n_0_mi_wrap_cnt[1]_i_6 ;
  wire \n_0_mi_wrap_cnt[1]_i_7 ;
  wire \n_0_mi_wrap_cnt[1]_i_8 ;
  wire \n_0_mi_wrap_cnt[1]_i_9 ;
  wire \n_0_mi_wrap_cnt[2]_i_1 ;
  wire \n_0_mi_wrap_cnt[2]_i_10 ;
  wire \n_0_mi_wrap_cnt[2]_i_11 ;
  wire \n_0_mi_wrap_cnt[2]_i_12 ;
  wire \n_0_mi_wrap_cnt[2]_i_13 ;
  wire \n_0_mi_wrap_cnt[2]_i_14 ;
  wire \n_0_mi_wrap_cnt[2]_i_15 ;
  wire \n_0_mi_wrap_cnt[2]_i_2 ;
  wire \n_0_mi_wrap_cnt[2]_i_3 ;
  wire \n_0_mi_wrap_cnt[2]_i_4 ;
  wire \n_0_mi_wrap_cnt[2]_i_5 ;
  wire \n_0_mi_wrap_cnt[2]_i_6 ;
  wire \n_0_mi_wrap_cnt[2]_i_7 ;
  wire \n_0_mi_wrap_cnt[2]_i_8 ;
  wire \n_0_mi_wrap_cnt[2]_i_9 ;
  wire \n_0_mi_wrap_cnt[3]_i_1 ;
  wire \n_0_mi_wrap_cnt[3]_i_10 ;
  wire \n_0_mi_wrap_cnt[3]_i_11 ;
  wire \n_0_mi_wrap_cnt[3]_i_12 ;
  wire \n_0_mi_wrap_cnt[3]_i_13 ;
  wire \n_0_mi_wrap_cnt[3]_i_14 ;
  wire \n_0_mi_wrap_cnt[3]_i_15 ;
  wire \n_0_mi_wrap_cnt[3]_i_16 ;
  wire \n_0_mi_wrap_cnt[3]_i_2 ;
  wire \n_0_mi_wrap_cnt[3]_i_3 ;
  wire \n_0_mi_wrap_cnt[3]_i_4 ;
  wire \n_0_mi_wrap_cnt[3]_i_5 ;
  wire \n_0_mi_wrap_cnt[3]_i_6 ;
  wire \n_0_mi_wrap_cnt[3]_i_7 ;
  wire \n_0_mi_wrap_cnt[3]_i_8 ;
  wire \n_0_mi_wrap_cnt[3]_i_9 ;
  wire \n_0_mi_wstrb_mask_d2[10]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[11]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[12]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[14]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[16]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[16]_i_3 ;
  wire \n_0_mi_wstrb_mask_d2[17]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[18]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[19]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[1]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[20]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[21]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[21]_i_3 ;
  wire \n_0_mi_wstrb_mask_d2[22]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[22]_i_3 ;
  wire \n_0_mi_wstrb_mask_d2[23]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[24]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[25]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[26]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[27]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[27]_i_3 ;
  wire \n_0_mi_wstrb_mask_d2[28]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[29]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[2]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[30]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[32]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[33]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[33]_i_3 ;
  wire \n_0_mi_wstrb_mask_d2[34]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[35]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[36]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[37]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[38]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[39]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[39]_i_3 ;
  wire \n_0_mi_wstrb_mask_d2[40]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[41]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[42]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[43]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[44]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[44]_i_3 ;
  wire \n_0_mi_wstrb_mask_d2[45]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[46]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[47]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[48]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[49]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[4]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[50]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[51]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[51]_i_3 ;
  wire \n_0_mi_wstrb_mask_d2[52]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[52]_i_3 ;
  wire \n_0_mi_wstrb_mask_d2[53]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[53]_i_3 ;
  wire \n_0_mi_wstrb_mask_d2[54]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[55]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[56]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[56]_i_3 ;
  wire \n_0_mi_wstrb_mask_d2[57]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[57]_i_3 ;
  wire \n_0_mi_wstrb_mask_d2[58]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[58]_i_3 ;
  wire \n_0_mi_wstrb_mask_d2[58]_i_4 ;
  wire \n_0_mi_wstrb_mask_d2[59]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[5]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[5]_i_3 ;
  wire \n_0_mi_wstrb_mask_d2[5]_i_4 ;
  wire \n_0_mi_wstrb_mask_d2[60]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[60]_i_3 ;
  wire \n_0_mi_wstrb_mask_d2[61]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[61]_i_3 ;
  wire \n_0_mi_wstrb_mask_d2[62]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2[62]_i_3 ;
  wire \n_0_mi_wstrb_mask_d2[62]_i_4 ;
  wire \n_0_mi_wstrb_mask_d2[63]_i_1 ;
  wire \n_0_mi_wstrb_mask_d2[63]_i_3 ;
  wire \n_0_mi_wstrb_mask_d2[6]_i_2 ;
  wire \n_0_mi_wstrb_mask_d2_reg[0] ;
  wire \n_0_mi_wstrb_mask_d2_reg[10] ;
  wire \n_0_mi_wstrb_mask_d2_reg[11] ;
  wire \n_0_mi_wstrb_mask_d2_reg[12] ;
  wire \n_0_mi_wstrb_mask_d2_reg[13] ;
  wire \n_0_mi_wstrb_mask_d2_reg[14] ;
  wire \n_0_mi_wstrb_mask_d2_reg[15] ;
  wire \n_0_mi_wstrb_mask_d2_reg[16] ;
  wire \n_0_mi_wstrb_mask_d2_reg[17] ;
  wire \n_0_mi_wstrb_mask_d2_reg[18] ;
  wire \n_0_mi_wstrb_mask_d2_reg[19] ;
  wire \n_0_mi_wstrb_mask_d2_reg[1] ;
  wire \n_0_mi_wstrb_mask_d2_reg[20] ;
  wire \n_0_mi_wstrb_mask_d2_reg[21] ;
  wire \n_0_mi_wstrb_mask_d2_reg[22] ;
  wire \n_0_mi_wstrb_mask_d2_reg[23] ;
  wire \n_0_mi_wstrb_mask_d2_reg[24] ;
  wire \n_0_mi_wstrb_mask_d2_reg[25] ;
  wire \n_0_mi_wstrb_mask_d2_reg[26] ;
  wire \n_0_mi_wstrb_mask_d2_reg[27] ;
  wire \n_0_mi_wstrb_mask_d2_reg[28] ;
  wire \n_0_mi_wstrb_mask_d2_reg[29] ;
  wire \n_0_mi_wstrb_mask_d2_reg[2] ;
  wire \n_0_mi_wstrb_mask_d2_reg[30] ;
  wire \n_0_mi_wstrb_mask_d2_reg[31] ;
  wire \n_0_mi_wstrb_mask_d2_reg[32] ;
  wire \n_0_mi_wstrb_mask_d2_reg[33] ;
  wire \n_0_mi_wstrb_mask_d2_reg[34] ;
  wire \n_0_mi_wstrb_mask_d2_reg[35] ;
  wire \n_0_mi_wstrb_mask_d2_reg[36] ;
  wire \n_0_mi_wstrb_mask_d2_reg[37] ;
  wire \n_0_mi_wstrb_mask_d2_reg[38] ;
  wire \n_0_mi_wstrb_mask_d2_reg[39] ;
  wire \n_0_mi_wstrb_mask_d2_reg[3] ;
  wire \n_0_mi_wstrb_mask_d2_reg[40] ;
  wire \n_0_mi_wstrb_mask_d2_reg[41] ;
  wire \n_0_mi_wstrb_mask_d2_reg[42] ;
  wire \n_0_mi_wstrb_mask_d2_reg[43] ;
  wire \n_0_mi_wstrb_mask_d2_reg[44] ;
  wire \n_0_mi_wstrb_mask_d2_reg[45] ;
  wire \n_0_mi_wstrb_mask_d2_reg[46] ;
  wire \n_0_mi_wstrb_mask_d2_reg[47] ;
  wire \n_0_mi_wstrb_mask_d2_reg[48] ;
  wire \n_0_mi_wstrb_mask_d2_reg[49] ;
  wire \n_0_mi_wstrb_mask_d2_reg[4] ;
  wire \n_0_mi_wstrb_mask_d2_reg[50] ;
  wire \n_0_mi_wstrb_mask_d2_reg[51] ;
  wire \n_0_mi_wstrb_mask_d2_reg[52] ;
  wire \n_0_mi_wstrb_mask_d2_reg[53] ;
  wire \n_0_mi_wstrb_mask_d2_reg[54] ;
  wire \n_0_mi_wstrb_mask_d2_reg[55] ;
  wire \n_0_mi_wstrb_mask_d2_reg[56] ;
  wire \n_0_mi_wstrb_mask_d2_reg[57] ;
  wire \n_0_mi_wstrb_mask_d2_reg[58] ;
  wire \n_0_mi_wstrb_mask_d2_reg[59] ;
  wire \n_0_mi_wstrb_mask_d2_reg[5] ;
  wire \n_0_mi_wstrb_mask_d2_reg[60] ;
  wire \n_0_mi_wstrb_mask_d2_reg[61] ;
  wire \n_0_mi_wstrb_mask_d2_reg[62] ;
  wire \n_0_mi_wstrb_mask_d2_reg[63] ;
  wire \n_0_mi_wstrb_mask_d2_reg[6] ;
  wire \n_0_mi_wstrb_mask_d2_reg[7] ;
  wire \n_0_mi_wstrb_mask_d2_reg[8] ;
  wire \n_0_mi_wstrb_mask_d2_reg[9] ;
  wire \n_0_next_mi_addr_reg[0] ;
  wire \n_0_next_mi_addr_reg[1] ;
  wire \n_0_next_mi_addr_reg[2] ;
  wire \n_0_next_mi_addr_reg[3] ;
  wire \n_0_next_mi_addr_reg[4] ;
  wire \n_0_next_mi_addr_reg[5] ;
  wire \n_0_next_mi_addr_reg[6] ;
  wire \n_0_next_mi_addr_reg[7] ;
  wire \n_0_next_mi_addr_reg[8] ;
  wire \n_0_next_mi_len[7]_i_2 ;
  wire \n_0_next_mi_len_reg[0] ;
  wire \n_0_next_mi_len_reg[1] ;
  wire \n_0_next_mi_len_reg[2] ;
  wire \n_0_next_mi_len_reg[4] ;
  wire \n_0_next_mi_len_reg[5] ;
  wire \n_0_next_mi_len_reg[6] ;
  wire \n_0_next_mi_len_reg[7] ;
  wire n_0_next_valid_i_1;
  wire \n_0_si_be[0]_i_2 ;
  wire \n_0_si_be[0]_i_4 ;
  wire \n_0_si_be[0]_i_5 ;
  wire \n_0_si_be[10]_i_2 ;
  wire \n_0_si_be[10]_i_4 ;
  wire \n_0_si_be[10]_i_5 ;
  wire \n_0_si_be[11]_i_2 ;
  wire \n_0_si_be[11]_i_4 ;
  wire \n_0_si_be[11]_i_5 ;
  wire \n_0_si_be[12]_i_2 ;
  wire \n_0_si_be[12]_i_4 ;
  wire \n_0_si_be[12]_i_5 ;
  wire \n_0_si_be[13]_i_2 ;
  wire \n_0_si_be[13]_i_4 ;
  wire \n_0_si_be[13]_i_5 ;
  wire \n_0_si_be[14]_i_2 ;
  wire \n_0_si_be[14]_i_4 ;
  wire \n_0_si_be[14]_i_5 ;
  wire \n_0_si_be[15]_i_2 ;
  wire \n_0_si_be[15]_i_4 ;
  wire \n_0_si_be[15]_i_5 ;
  wire \n_0_si_be[16]_i_2 ;
  wire \n_0_si_be[16]_i_4 ;
  wire \n_0_si_be[16]_i_5 ;
  wire \n_0_si_be[17]_i_2 ;
  wire \n_0_si_be[17]_i_4 ;
  wire \n_0_si_be[17]_i_5 ;
  wire \n_0_si_be[18]_i_2 ;
  wire \n_0_si_be[18]_i_4 ;
  wire \n_0_si_be[18]_i_5 ;
  wire \n_0_si_be[19]_i_2 ;
  wire \n_0_si_be[19]_i_4 ;
  wire \n_0_si_be[19]_i_5 ;
  wire \n_0_si_be[1]_i_2 ;
  wire \n_0_si_be[1]_i_4 ;
  wire \n_0_si_be[1]_i_5 ;
  wire \n_0_si_be[20]_i_2 ;
  wire \n_0_si_be[20]_i_4 ;
  wire \n_0_si_be[20]_i_5 ;
  wire \n_0_si_be[21]_i_2 ;
  wire \n_0_si_be[21]_i_4 ;
  wire \n_0_si_be[21]_i_5 ;
  wire \n_0_si_be[22]_i_2 ;
  wire \n_0_si_be[22]_i_4 ;
  wire \n_0_si_be[22]_i_5 ;
  wire \n_0_si_be[23]_i_2 ;
  wire \n_0_si_be[23]_i_4 ;
  wire \n_0_si_be[23]_i_5 ;
  wire \n_0_si_be[24]_i_2 ;
  wire \n_0_si_be[24]_i_4 ;
  wire \n_0_si_be[24]_i_5 ;
  wire \n_0_si_be[25]_i_2 ;
  wire \n_0_si_be[25]_i_4 ;
  wire \n_0_si_be[25]_i_5 ;
  wire \n_0_si_be[26]_i_2 ;
  wire \n_0_si_be[26]_i_4 ;
  wire \n_0_si_be[26]_i_5 ;
  wire \n_0_si_be[27]_i_2 ;
  wire \n_0_si_be[27]_i_4 ;
  wire \n_0_si_be[27]_i_5 ;
  wire \n_0_si_be[28]_i_2 ;
  wire \n_0_si_be[28]_i_4 ;
  wire \n_0_si_be[28]_i_5 ;
  wire \n_0_si_be[29]_i_2 ;
  wire \n_0_si_be[29]_i_4 ;
  wire \n_0_si_be[29]_i_5 ;
  wire \n_0_si_be[2]_i_2 ;
  wire \n_0_si_be[2]_i_4 ;
  wire \n_0_si_be[2]_i_5 ;
  wire \n_0_si_be[30]_i_2 ;
  wire \n_0_si_be[30]_i_4 ;
  wire \n_0_si_be[30]_i_5 ;
  wire \n_0_si_be[31]_i_3 ;
  wire \n_0_si_be[31]_i_5 ;
  wire \n_0_si_be[31]_i_6 ;
  wire \n_0_si_be[31]_i_7 ;
  wire \n_0_si_be[31]_i_8 ;
  wire \n_0_si_be[3]_i_2 ;
  wire \n_0_si_be[3]_i_4 ;
  wire \n_0_si_be[3]_i_5 ;
  wire \n_0_si_be[4]_i_2 ;
  wire \n_0_si_be[4]_i_4 ;
  wire \n_0_si_be[4]_i_5 ;
  wire \n_0_si_be[5]_i_2 ;
  wire \n_0_si_be[5]_i_4 ;
  wire \n_0_si_be[5]_i_5 ;
  wire \n_0_si_be[6]_i_2 ;
  wire \n_0_si_be[6]_i_4 ;
  wire \n_0_si_be[6]_i_5 ;
  wire \n_0_si_be[7]_i_2 ;
  wire \n_0_si_be[7]_i_4 ;
  wire \n_0_si_be[7]_i_5 ;
  wire \n_0_si_be[8]_i_2 ;
  wire \n_0_si_be[8]_i_4 ;
  wire \n_0_si_be[8]_i_5 ;
  wire \n_0_si_be[9]_i_2 ;
  wire \n_0_si_be[9]_i_4 ;
  wire \n_0_si_be[9]_i_5 ;
  wire \n_0_si_be_reg[0] ;
  wire \n_0_si_be_reg[10] ;
  wire \n_0_si_be_reg[11] ;
  wire \n_0_si_be_reg[12] ;
  wire \n_0_si_be_reg[13] ;
  wire \n_0_si_be_reg[14] ;
  wire \n_0_si_be_reg[15] ;
  wire \n_0_si_be_reg[16] ;
  wire \n_0_si_be_reg[17] ;
  wire \n_0_si_be_reg[18] ;
  wire \n_0_si_be_reg[19] ;
  wire \n_0_si_be_reg[1] ;
  wire \n_0_si_be_reg[20] ;
  wire \n_0_si_be_reg[21] ;
  wire \n_0_si_be_reg[22] ;
  wire \n_0_si_be_reg[23] ;
  wire \n_0_si_be_reg[24] ;
  wire \n_0_si_be_reg[25] ;
  wire \n_0_si_be_reg[26] ;
  wire \n_0_si_be_reg[27] ;
  wire \n_0_si_be_reg[28] ;
  wire \n_0_si_be_reg[29] ;
  wire \n_0_si_be_reg[2] ;
  wire \n_0_si_be_reg[30] ;
  wire \n_0_si_be_reg[3] ;
  wire \n_0_si_be_reg[4] ;
  wire \n_0_si_be_reg[5] ;
  wire \n_0_si_be_reg[6] ;
  wire \n_0_si_be_reg[7] ;
  wire \n_0_si_be_reg[8] ;
  wire \n_0_si_be_reg[9] ;
  wire \n_0_si_buf[0]_i_1 ;
  wire \n_0_si_buf[1]_i_1 ;
  wire \n_0_si_ptr[2]_i_2 ;
  wire \n_0_si_ptr[6]_i_4 ;
  wire \n_0_si_ptr[6]_i_5 ;
  wire \n_0_si_size_reg[0] ;
  wire \n_0_si_size_reg[1] ;
  wire \n_0_si_size_reg[2] ;
  wire n_0_w_buffer_i_10;
  wire n_0_w_buffer_i_11;
  wire n_0_w_buffer_i_12;
  wire n_0_w_buffer_i_13;
  wire n_0_w_buffer_i_14;
  wire n_0_w_buffer_i_15;
  wire n_0_w_buffer_i_16;
  wire n_0_w_buffer_i_17;
  wire n_0_w_buffer_i_18;
  wire n_0_w_buffer_i_19;
  wire n_0_w_buffer_i_2;
  wire n_0_w_buffer_i_20;
  wire n_0_w_buffer_i_21;
  wire n_0_w_buffer_i_22;
  wire n_0_w_buffer_i_23;
  wire n_0_w_buffer_i_24;
  wire n_0_w_buffer_i_25;
  wire n_0_w_buffer_i_26;
  wire n_0_w_buffer_i_27;
  wire n_0_w_buffer_i_28;
  wire n_0_w_buffer_i_29;
  wire n_0_w_buffer_i_3;
  wire n_0_w_buffer_i_30;
  wire n_0_w_buffer_i_31;
  wire n_0_w_buffer_i_32;
  wire n_0_w_buffer_i_33;
  wire n_0_w_buffer_i_34;
  wire n_0_w_buffer_i_35;
  wire n_0_w_buffer_i_36;
  wire n_0_w_buffer_i_37;
  wire n_0_w_buffer_i_38;
  wire n_0_w_buffer_i_39;
  wire n_0_w_buffer_i_4;
  wire n_0_w_buffer_i_40;
  wire n_0_w_buffer_i_41;
  wire n_0_w_buffer_i_42;
  wire n_0_w_buffer_i_43;
  wire n_0_w_buffer_i_44;
  wire n_0_w_buffer_i_45;
  wire n_0_w_buffer_i_46;
  wire n_0_w_buffer_i_47;
  wire n_0_w_buffer_i_48;
  wire n_0_w_buffer_i_49;
  wire n_0_w_buffer_i_5;
  wire n_0_w_buffer_i_50;
  wire n_0_w_buffer_i_51;
  wire n_0_w_buffer_i_52;
  wire n_0_w_buffer_i_53;
  wire n_0_w_buffer_i_54;
  wire n_0_w_buffer_i_55;
  wire n_0_w_buffer_i_56;
  wire n_0_w_buffer_i_57;
  wire n_0_w_buffer_i_58;
  wire n_0_w_buffer_i_59;
  wire n_0_w_buffer_i_6;
  wire n_0_w_buffer_i_60;
  wire n_0_w_buffer_i_61;
  wire n_0_w_buffer_i_62;
  wire n_0_w_buffer_i_63;
  wire n_0_w_buffer_i_64;
  wire n_0_w_buffer_i_65;
  wire n_0_w_buffer_i_7;
  wire n_0_w_buffer_i_8;
  wire n_0_w_buffer_i_9;
  wire n_19_s_aw_reg;
  wire n_20_s_aw_reg;
  wire n_21_s_aw_reg;
  wire n_22_s_aw_reg;
  wire n_23_s_aw_reg;
  wire n_24_s_aw_reg;
  wire n_25_s_aw_reg;
  wire n_26_s_aw_reg;
  wire n_27_s_aw_reg;
  wire n_28_s_aw_reg;
  wire n_29_s_aw_reg;
  wire n_30_s_aw_reg;
  wire n_31_s_aw_reg;
  wire n_32_s_aw_reg;
  wire n_33_s_aw_reg;
  wire n_34_s_aw_reg;
  wire n_35_s_aw_reg;
  wire n_36_s_aw_reg;
  wire n_37_s_aw_reg;
  wire n_38_s_aw_reg;
  wire n_39_s_aw_reg;
  wire n_3_s_aw_reg;
  wire n_40_s_aw_reg;
  wire n_41_s_aw_reg;
  wire n_42_s_aw_reg;
  wire n_43_s_aw_reg;
  wire n_44_s_aw_reg;
  wire n_45_s_aw_reg;
  wire n_46_s_aw_reg;
  wire n_47_s_aw_reg;
  wire n_48_s_aw_reg;
  wire n_49_s_aw_reg;
  wire n_50_s_aw_reg;
  wire n_51_s_aw_reg;
  wire n_54_s_aw_reg;
  wire n_55_s_aw_reg;
  wire n_56_s_aw_reg;
  wire n_57_s_aw_reg;
  wire n_5_s_aw_reg;
  wire n_6_s_aw_reg;
  wire n_7_s_aw_reg;
  wire [1:0]next_mi_burst;
  wire [5:0]next_mi_last_index_reg;
  wire next_valid;
  wire [3:0]p_0_in;
  wire [6:0]p_0_in__0;
  wire p_161_in;
  wire p_176_in;
  wire p_1_in;
  wire p_6_in;
  wire [31:0]s_awaddr_reg;
  wire [1:0]s_awburst_reg;
  wire [3:0]s_awcache_reg;
  wire [7:0]s_awlen_reg;
  wire s_awlock_reg;
  wire [2:0]s_awprot_reg;
  wire [3:0]s_awqos_reg;
  wire s_awready_reg;
  wire [3:0]s_awregion_reg;
  wire [2:0]s_awsize_reg;
  wire s_axi_wlast;
  wire s_axi_wvalid;
  wire [1:0]si_buf;
  wire [1:0]si_burst;
  wire [5:0]si_last_index_reg;
  wire [6:0]si_ptr_reg__0;
  wire [1:0]si_state;
  wire [31:0]si_wrap_be_next;
  wire [3:0]si_wrap_cnt_reg__0;
  wire si_wrap_word_next;
  wire [2:0]size;
  wire [2:0]size__0;
  wire sr_awvalid;
  wire word;
  wire [575:8]wpayload1_out;
  wire wr_cmd_ready;
  wire NLW_dw_fifogen_aw_almost_empty_UNCONNECTED;
  wire NLW_dw_fifogen_aw_almost_full_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_ar_overflow_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_ar_prog_full_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_ar_underflow_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_aw_overflow_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_aw_prog_full_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_aw_underflow_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_b_dbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_b_overflow_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_b_prog_empty_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_b_prog_full_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_b_sbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_b_underflow_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_r_dbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_r_overflow_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_r_prog_empty_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_r_prog_full_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_r_sbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_r_underflow_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_w_dbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_w_overflow_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_w_prog_empty_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_w_prog_full_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_w_sbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axi_w_underflow_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axis_dbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axis_overflow_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axis_prog_empty_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axis_prog_full_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axis_sbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_aw_axis_underflow_UNCONNECTED;
  wire NLW_dw_fifogen_aw_dbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_aw_empty_UNCONNECTED;
  wire NLW_dw_fifogen_aw_full_UNCONNECTED;
  wire NLW_dw_fifogen_aw_m_axi_arvalid_UNCONNECTED;
  wire NLW_dw_fifogen_aw_m_axi_bready_UNCONNECTED;
  wire NLW_dw_fifogen_aw_m_axi_rready_UNCONNECTED;
  wire NLW_dw_fifogen_aw_m_axi_wlast_UNCONNECTED;
  wire NLW_dw_fifogen_aw_m_axi_wvalid_UNCONNECTED;
  wire NLW_dw_fifogen_aw_m_axis_tlast_UNCONNECTED;
  wire NLW_dw_fifogen_aw_m_axis_tvalid_UNCONNECTED;
  wire NLW_dw_fifogen_aw_overflow_UNCONNECTED;
  wire NLW_dw_fifogen_aw_prog_empty_UNCONNECTED;
  wire NLW_dw_fifogen_aw_prog_full_UNCONNECTED;
  wire NLW_dw_fifogen_aw_rd_rst_busy_UNCONNECTED;
  wire NLW_dw_fifogen_aw_s_axi_arready_UNCONNECTED;
  wire NLW_dw_fifogen_aw_s_axi_bvalid_UNCONNECTED;
  wire NLW_dw_fifogen_aw_s_axi_rlast_UNCONNECTED;
  wire NLW_dw_fifogen_aw_s_axi_rvalid_UNCONNECTED;
  wire NLW_dw_fifogen_aw_s_axi_wready_UNCONNECTED;
  wire NLW_dw_fifogen_aw_s_axis_tready_UNCONNECTED;
  wire NLW_dw_fifogen_aw_sbiterr_UNCONNECTED;
  wire NLW_dw_fifogen_aw_underflow_UNCONNECTED;
  wire NLW_dw_fifogen_aw_valid_UNCONNECTED;
  wire NLW_dw_fifogen_aw_wr_ack_UNCONNECTED;
  wire NLW_dw_fifogen_aw_wr_rst_busy_UNCONNECTED;
  wire [5:0]NLW_dw_fifogen_aw_axi_ar_data_count_UNCONNECTED;
  wire [5:0]NLW_dw_fifogen_aw_axi_ar_rd_data_count_UNCONNECTED;
  wire [5:0]NLW_dw_fifogen_aw_axi_ar_wr_data_count_UNCONNECTED;
  wire [5:0]NLW_dw_fifogen_aw_axi_aw_data_count_UNCONNECTED;
  wire [5:0]NLW_dw_fifogen_aw_axi_aw_rd_data_count_UNCONNECTED;
  wire [5:0]NLW_dw_fifogen_aw_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_dw_fifogen_aw_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_dw_fifogen_aw_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_dw_fifogen_aw_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_aw_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_aw_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_aw_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_aw_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_aw_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_aw_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_aw_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_aw_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_dw_fifogen_aw_axis_wr_data_count_UNCONNECTED;
  wire [9:0]NLW_dw_fifogen_aw_data_count_UNCONNECTED;
  wire [17:0]NLW_dw_fifogen_aw_dout_UNCONNECTED;
  wire [31:0]NLW_dw_fifogen_aw_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_dw_fifogen_aw_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_aw_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_aw_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_dw_fifogen_aw_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_aw_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_dw_fifogen_aw_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_aw_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_aw_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_dw_fifogen_aw_m_axi_arsize_UNCONNECTED;
  wire [5:0]NLW_dw_fifogen_aw_m_axi_aruser_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_aw_m_axi_awid_UNCONNECTED;
  wire [31:0]NLW_dw_fifogen_aw_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_aw_m_axi_wid_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_aw_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_aw_m_axi_wuser_UNCONNECTED;
  wire [63:0]NLW_dw_fifogen_aw_m_axis_tdata_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_aw_m_axis_tdest_UNCONNECTED;
  wire [7:0]NLW_dw_fifogen_aw_m_axis_tid_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_aw_m_axis_tkeep_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_aw_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_aw_m_axis_tuser_UNCONNECTED;
  wire [9:0]NLW_dw_fifogen_aw_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_aw_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_dw_fifogen_aw_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_aw_s_axi_buser_UNCONNECTED;
  wire [31:0]NLW_dw_fifogen_aw_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_aw_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_dw_fifogen_aw_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_dw_fifogen_aw_s_axi_ruser_UNCONNECTED;
  wire [9:0]NLW_dw_fifogen_aw_wr_data_count_UNCONNECTED;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_almost_empty_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_almost_full_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_ar_dbiterr_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_ar_overflow_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_ar_prog_empty_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_ar_prog_full_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_ar_sbiterr_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_ar_underflow_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_aw_dbiterr_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_aw_overflow_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_aw_prog_empty_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_aw_prog_full_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_aw_sbiterr_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_aw_underflow_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_b_dbiterr_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_b_overflow_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_b_prog_empty_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_b_prog_full_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_b_sbiterr_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_b_underflow_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_r_dbiterr_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_r_overflow_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_r_prog_empty_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_r_prog_full_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_r_sbiterr_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_r_underflow_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_w_dbiterr_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_w_overflow_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_w_prog_empty_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_w_prog_full_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_w_sbiterr_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_w_underflow_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axis_dbiterr_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axis_overflow_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axis_prog_empty_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axis_prog_full_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axis_sbiterr_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_axis_underflow_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_dbiterr_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_full_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_arvalid_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awvalid_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_bready_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_rready_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_wlast_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_wvalid_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axis_tlast_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axis_tvalid_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_overflow_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_prog_empty_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_prog_full_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_rd_rst_busy_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_arready_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_awready_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_bvalid_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_rlast_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_rvalid_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_wready_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axis_tready_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_sbiterr_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_underflow_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_valid_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_wr_ack_UNCONNECTED ;
  wire \NLW_gen_awpop_fifo.dw_fifogen_awpop_wr_rst_busy_UNCONNECTED ;
  wire [4:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_ar_data_count_UNCONNECTED ;
  wire [4:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_ar_rd_data_count_UNCONNECTED ;
  wire [4:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_ar_wr_data_count_UNCONNECTED ;
  wire [4:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_aw_data_count_UNCONNECTED ;
  wire [4:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_aw_rd_data_count_UNCONNECTED ;
  wire [4:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_aw_wr_data_count_UNCONNECTED ;
  wire [4:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_b_data_count_UNCONNECTED ;
  wire [4:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_b_rd_data_count_UNCONNECTED ;
  wire [4:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_b_wr_data_count_UNCONNECTED ;
  wire [10:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_r_data_count_UNCONNECTED ;
  wire [10:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_r_rd_data_count_UNCONNECTED ;
  wire [10:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_r_wr_data_count_UNCONNECTED ;
  wire [10:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_w_data_count_UNCONNECTED ;
  wire [10:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_w_rd_data_count_UNCONNECTED ;
  wire [10:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_w_wr_data_count_UNCONNECTED ;
  wire [10:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_axis_data_count_UNCONNECTED ;
  wire [10:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_axis_rd_data_count_UNCONNECTED ;
  wire [10:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_axis_wr_data_count_UNCONNECTED ;
  wire [4:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_data_count_UNCONNECTED ;
  wire [0:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_dout_UNCONNECTED ;
  wire [31:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_araddr_UNCONNECTED ;
  wire [1:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_arburst_UNCONNECTED ;
  wire [3:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_arcache_UNCONNECTED ;
  wire [3:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_arid_UNCONNECTED ;
  wire [7:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_arlen_UNCONNECTED ;
  wire [1:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_arlock_UNCONNECTED ;
  wire [2:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_arprot_UNCONNECTED ;
  wire [3:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_arqos_UNCONNECTED ;
  wire [3:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_arregion_UNCONNECTED ;
  wire [2:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_arsize_UNCONNECTED ;
  wire [0:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_aruser_UNCONNECTED ;
  wire [31:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awaddr_UNCONNECTED ;
  wire [1:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awburst_UNCONNECTED ;
  wire [3:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awcache_UNCONNECTED ;
  wire [3:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awid_UNCONNECTED ;
  wire [7:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awlen_UNCONNECTED ;
  wire [1:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awlock_UNCONNECTED ;
  wire [2:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awprot_UNCONNECTED ;
  wire [3:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awqos_UNCONNECTED ;
  wire [3:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awregion_UNCONNECTED ;
  wire [2:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awsize_UNCONNECTED ;
  wire [0:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awuser_UNCONNECTED ;
  wire [63:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_wdata_UNCONNECTED ;
  wire [3:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_wid_UNCONNECTED ;
  wire [7:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_wstrb_UNCONNECTED ;
  wire [0:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_wuser_UNCONNECTED ;
  wire [63:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axis_tdata_UNCONNECTED ;
  wire [3:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axis_tdest_UNCONNECTED ;
  wire [7:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axis_tid_UNCONNECTED ;
  wire [3:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axis_tkeep_UNCONNECTED ;
  wire [3:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axis_tstrb_UNCONNECTED ;
  wire [3:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axis_tuser_UNCONNECTED ;
  wire [4:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_rd_data_count_UNCONNECTED ;
  wire [3:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_bid_UNCONNECTED ;
  wire [1:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_bresp_UNCONNECTED ;
  wire [0:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_buser_UNCONNECTED ;
  wire [63:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_rdata_UNCONNECTED ;
  wire [3:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_rid_UNCONNECTED ;
  wire [1:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_rresp_UNCONNECTED ;
  wire [0:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_ruser_UNCONNECTED ;
  wire [4:0]\NLW_gen_awpop_fifo.dw_fifogen_awpop_wr_data_count_UNCONNECTED ;
  wire NLW_w_buffer_dbiterr_UNCONNECTED;
  wire NLW_w_buffer_s_axi_arready_UNCONNECTED;
  wire NLW_w_buffer_s_axi_awready_UNCONNECTED;
  wire NLW_w_buffer_s_axi_bvalid_UNCONNECTED;
  wire NLW_w_buffer_s_axi_dbiterr_UNCONNECTED;
  wire NLW_w_buffer_s_axi_rlast_UNCONNECTED;
  wire NLW_w_buffer_s_axi_rvalid_UNCONNECTED;
  wire NLW_w_buffer_s_axi_sbiterr_UNCONNECTED;
  wire NLW_w_buffer_s_axi_wready_UNCONNECTED;
  wire NLW_w_buffer_sbiterr_UNCONNECTED;
  wire [575:0]NLW_w_buffer_douta_UNCONNECTED;
  wire [8:0]NLW_w_buffer_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_w_buffer_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_w_buffer_s_axi_bresp_UNCONNECTED;
  wire [8:0]NLW_w_buffer_s_axi_rdaddrecc_UNCONNECTED;
  wire [575:0]NLW_w_buffer_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_w_buffer_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_w_buffer_s_axi_rresp_UNCONNECTED;

  assign out[2:0] = mi_state;
LUT4 #(
    .INIT(16'hEFE0)) 
     \FSM_sequential_mi_state[0]_i_1 
       (.I0(\n_0_FSM_sequential_mi_state[0]_i_2 ),
        .I1(\n_0_FSM_sequential_mi_state[0]_i_3 ),
        .I2(\n_0_FSM_sequential_mi_state[2]_i_3 ),
        .I3(mi_state[0]),
        .O(\n_0_FSM_sequential_mi_state[0]_i_1 ));
LUT6 #(
    .INIT(64'hAAAEAAAEAAAAAAAE)) 
     \FSM_sequential_mi_state[0]_i_2 
       (.I0(\n_0_FSM_sequential_mi_state[0]_i_4 ),
        .I1(\n_0_FSM_sequential_mi_state[0]_i_5 ),
        .I2(mi_state[1]),
        .I3(mi_state[0]),
        .I4(mi_state[2]),
        .I5(mi_awvalid),
        .O(\n_0_FSM_sequential_mi_state[0]_i_2 ));
LUT5 #(
    .INIT(32'h1111000F)) 
     \FSM_sequential_mi_state[0]_i_3 
       (.I0(\n_0_FSM_sequential_mi_state[0]_i_6 ),
        .I1(mi_state[1]),
        .I2(mi_state[2]),
        .I3(m_axi_awready),
        .I4(mi_state[0]),
        .O(\n_0_FSM_sequential_mi_state[0]_i_3 ));
LUT6 #(
    .INIT(64'h0040404040404040)) 
     \FSM_sequential_mi_state[0]_i_4 
       (.I0(\n_0_FSM_sequential_mi_state[1]_i_3 ),
        .I1(m_axi_awready),
        .I2(mi_state[2]),
        .I3(m_axi_wready),
        .I4(O4),
        .I5(O6),
        .O(\n_0_FSM_sequential_mi_state[0]_i_4 ));
LUT6 #(
    .INIT(64'hD5D55555D5D555FF)) 
     \FSM_sequential_mi_state[0]_i_5 
       (.I0(mi_state[2]),
        .I1(m_axi_wready),
        .I2(O4),
        .I3(O5),
        .I4(O6),
        .I5(mi_last),
        .O(\n_0_FSM_sequential_mi_state[0]_i_5 ));
LUT4 #(
    .INIT(16'h7FFF)) 
     \FSM_sequential_mi_state[0]_i_6 
       (.I0(O4),
        .I1(m_axi_wready),
        .I2(mi_state[2]),
        .I3(O6),
        .O(\n_0_FSM_sequential_mi_state[0]_i_6 ));
LUT6 #(
    .INIT(64'hABAFFFFFABAF0000)) 
     \FSM_sequential_mi_state[1]_i_1 
       (.I0(\n_0_FSM_sequential_mi_state[1]_i_2 ),
        .I1(m_axi_awready),
        .I2(\n_0_FSM_sequential_mi_state[1]_i_3 ),
        .I3(\n_0_FSM_sequential_mi_state[1]_i_4 ),
        .I4(\n_0_FSM_sequential_mi_state[2]_i_3 ),
        .I5(mi_state[1]),
        .O(\n_0_FSM_sequential_mi_state[1]_i_1 ));
LUT6 #(
    .INIT(64'h0444444444444444)) 
     \FSM_sequential_mi_state[1]_i_2 
       (.I0(mi_state[1]),
        .I1(mi_state[0]),
        .I2(O6),
        .I3(mi_state[2]),
        .I4(m_axi_wready),
        .I5(O4),
        .O(\n_0_FSM_sequential_mi_state[1]_i_2 ));
LUT2 #(
    .INIT(4'hB)) 
     \FSM_sequential_mi_state[1]_i_3 
       (.I0(mi_state[0]),
        .I1(mi_state[1]),
        .O(\n_0_FSM_sequential_mi_state[1]_i_3 ));
LUT4 #(
    .INIT(16'h80FF)) 
     \FSM_sequential_mi_state[1]_i_4 
       (.I0(O6),
        .I1(O4),
        .I2(m_axi_wready),
        .I3(mi_state[2]),
        .O(\n_0_FSM_sequential_mi_state[1]_i_4 ));
LUT3 #(
    .INIT(8'hB8)) 
     \FSM_sequential_mi_state[2]_i_1 
       (.I0(\n_0_FSM_sequential_mi_state[2]_i_2 ),
        .I1(\n_0_FSM_sequential_mi_state[2]_i_3 ),
        .I2(mi_state[2]),
        .O(\n_0_FSM_sequential_mi_state[2]_i_1 ));
LUT6 #(
    .INIT(64'hF3F0E000E0C0E000)) 
     \FSM_sequential_mi_state[2]_i_2 
       (.I0(\n_0_FSM_sequential_mi_state[2]_i_4 ),
        .I1(mi_state[0]),
        .I2(mi_state[2]),
        .I3(p_161_in),
        .I4(mi_state[1]),
        .I5(m_axi_awready),
        .O(\n_0_FSM_sequential_mi_state[2]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF5444)) 
     \FSM_sequential_mi_state[2]_i_3 
       (.I0(mi_state[1]),
        .I1(mi_state[0]),
        .I2(\n_0_FSM_sequential_mi_state[2]_i_6 ),
        .I3(mi_state[2]),
        .I4(\n_0_FSM_sequential_mi_state[2]_i_7 ),
        .I5(\n_0_FSM_sequential_mi_state[2]_i_8 ),
        .O(\n_0_FSM_sequential_mi_state[2]_i_3 ));
LUT5 #(
    .INIT(32'h00000010)) 
     \FSM_sequential_mi_state[2]_i_4 
       (.I0(mi_last),
        .I1(O6),
        .I2(mi_awvalid),
        .I3(O5),
        .I4(mi_state[1]),
        .O(\n_0_FSM_sequential_mi_state[2]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair191" *) 
   LUT3 #(
    .INIT(8'h7F)) 
     \FSM_sequential_mi_state[2]_i_5 
       (.I0(m_axi_wready),
        .I1(O4),
        .I2(O6),
        .O(p_161_in));
LUT6 #(
    .INIT(64'hFF04000400040004)) 
     \FSM_sequential_mi_state[2]_i_6 
       (.I0(mi_last),
        .I1(mi_awvalid),
        .I2(O5),
        .I3(O6),
        .I4(O4),
        .I5(m_axi_wready),
        .O(\n_0_FSM_sequential_mi_state[2]_i_6 ));
LUT6 #(
    .INIT(64'hFFFFFFFF0000B830)) 
     \FSM_sequential_mi_state[2]_i_7 
       (.I0(mi_state[0]),
        .I1(mi_state[1]),
        .I2(mi_awvalid),
        .I3(m_axi_awready),
        .I4(mi_state[2]),
        .I5(\n_0_FSM_sequential_mi_state[2]_i_9 ),
        .O(\n_0_FSM_sequential_mi_state[2]_i_7 ));
LUT6 #(
    .INIT(64'h00000000FF800000)) 
     \FSM_sequential_mi_state[2]_i_8 
       (.I0(m_axi_wready),
        .I1(O4),
        .I2(O6),
        .I3(m_axi_awready),
        .I4(mi_state[1]),
        .I5(mi_state[0]),
        .O(\n_0_FSM_sequential_mi_state[2]_i_8 ));
LUT6 #(
    .INIT(64'h8000000000000000)) 
     \FSM_sequential_mi_state[2]_i_9 
       (.I0(m_axi_wready),
        .I1(mi_state[2]),
        .I2(O6),
        .I3(O4),
        .I4(mi_state[1]),
        .I5(mi_state[0]),
        .O(\n_0_FSM_sequential_mi_state[2]_i_9 ));
(* KEEP = "yes" *) 
   FDRE \FSM_sequential_mi_state_reg[0] 
       (.C(I4),
        .CE(1'b1),
        .D(\n_0_FSM_sequential_mi_state[0]_i_1 ),
        .Q(mi_state[0]),
        .R(m_fifo_rst));
(* KEEP = "yes" *) 
   FDRE \FSM_sequential_mi_state_reg[1] 
       (.C(I4),
        .CE(1'b1),
        .D(\n_0_FSM_sequential_mi_state[1]_i_1 ),
        .Q(mi_state[1]),
        .R(m_fifo_rst));
(* KEEP = "yes" *) 
   FDRE \FSM_sequential_mi_state_reg[2] 
       (.C(I4),
        .CE(1'b1),
        .D(\n_0_FSM_sequential_mi_state[2]_i_1 ),
        .Q(mi_state[2]),
        .R(m_fifo_rst));
LUT1 #(
    .INIT(2'h1)) 
     M_AXI_AWVALID_i_i_1
       (.I0(I42),
        .O(m_fifo_rst));
FDRE M_AXI_AWVALID_i_reg
       (.C(I4),
        .CE(1'b1),
        .D(I37),
        .Q(m_axi_awvalid),
        .R(m_fifo_rst));
LUT6 #(
    .INIT(64'h7077700000000000)) 
     M_AXI_WLAST_i_i_1
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(n_0_M_AXI_WLAST_i_i_3),
        .I2(O5),
        .I3(mi_buf_en),
        .I4(O6),
        .I5(I42),
        .O(n_0_M_AXI_WLAST_i_i_1));
LUT3 #(
    .INIT(8'h0E)) 
     M_AXI_WLAST_i_i_2
       (.I0(mi_state[2]),
        .I1(mi_awvalid),
        .I2(mi_state[1]),
        .O(n_0_M_AXI_WLAST_i_i_2));
LUT6 #(
    .INIT(64'hC80000000F0F0F0F)) 
     M_AXI_WLAST_i_i_3
       (.I0(mi_awvalid),
        .I1(O6),
        .I2(mi_state[0]),
        .I3(O4),
        .I4(m_axi_wready),
        .I5(mi_state[2]),
        .O(n_0_M_AXI_WLAST_i_i_3));
FDRE M_AXI_WLAST_i_reg
       (.C(I4),
        .CE(1'b1),
        .D(n_0_M_AXI_WLAST_i_i_1),
        .Q(O6),
        .R(1'b0));
FDRE M_AXI_WVALID_i_reg
       (.C(I4),
        .CE(1'b1),
        .D(I34),
        .Q(O4),
        .R(m_fifo_rst));
LUT5 #(
    .INIT(32'hFF7FFFFF)) 
     S_AXI_WREADY_i_i_6
       (.I0(O7),
        .I1(s_axi_wvalid),
        .I2(s_axi_wlast),
        .I3(si_state[1]),
        .I4(si_state[0]),
        .O(O12));
FDRE S_AXI_WREADY_i_reg
       (.C(I3),
        .CE(1'b1),
        .D(I38),
        .Q(O7),
        .R(SR));
FDRE \buf_cnt_reg[0] 
       (.C(I3),
        .CE(1'b1),
        .D(n_55_s_aw_reg),
        .Q(buf_cnt[0]),
        .R(SR));
FDRE \buf_cnt_reg[1] 
       (.C(I3),
        .CE(1'b1),
        .D(n_54_s_aw_reg),
        .Q(buf_cnt[1]),
        .R(SR));
FDRE cmd_ready_i_reg
       (.C(I3),
        .CE(1'b1),
        .D(aw_pop_resync),
        .Q(wr_cmd_ready),
        .R(SR));
(* C_ADD_NGC_CONSTRAINT = "0" *) 
   (* C_APPLICATION_TYPE_AXIS = "0" *) 
   (* C_APPLICATION_TYPE_RACH = "0" *) 
   (* C_APPLICATION_TYPE_RDCH = "0" *) 
   (* C_APPLICATION_TYPE_WACH = "0" *) 
   (* C_APPLICATION_TYPE_WDCH = "0" *) 
   (* C_APPLICATION_TYPE_WRCH = "0" *) 
   (* C_AXIS_TDATA_WIDTH = "64" *) 
   (* C_AXIS_TDEST_WIDTH = "4" *) 
   (* C_AXIS_TID_WIDTH = "8" *) 
   (* C_AXIS_TKEEP_WIDTH = "4" *) 
   (* C_AXIS_TSTRB_WIDTH = "4" *) 
   (* C_AXIS_TUSER_WIDTH = "4" *) 
   (* C_AXIS_TYPE = "0" *) 
   (* C_AXI_ADDR_WIDTH = "32" *) 
   (* C_AXI_ARUSER_WIDTH = "6" *) 
   (* C_AXI_AWUSER_WIDTH = "6" *) 
   (* C_AXI_BUSER_WIDTH = "1" *) 
   (* C_AXI_DATA_WIDTH = "32" *) 
   (* C_AXI_ID_WIDTH = "1" *) 
   (* C_AXI_LEN_WIDTH = "8" *) 
   (* C_AXI_LOCK_WIDTH = "1" *) 
   (* C_AXI_RUSER_WIDTH = "1" *) 
   (* C_AXI_TYPE = "1" *) 
   (* C_AXI_WUSER_WIDTH = "1" *) 
   (* C_COMMON_CLOCK = "0" *) 
   (* C_COUNT_TYPE = "0" *) 
   (* C_DATA_COUNT_WIDTH = "10" *) 
   (* C_DEFAULT_VALUE = "BlankString" *) 
   (* C_DIN_WIDTH = "18" *) 
   (* C_DIN_WIDTH_AXIS = "1" *) 
   (* C_DIN_WIDTH_RACH = "67" *) 
   (* C_DIN_WIDTH_RDCH = "35" *) 
   (* C_DIN_WIDTH_WACH = "67" *) 
   (* C_DIN_WIDTH_WDCH = "37" *) 
   (* C_DIN_WIDTH_WRCH = "2" *) 
   (* C_DOUT_RST_VAL = "0" *) 
   (* C_DOUT_WIDTH = "18" *) 
   (* C_ENABLE_RLOCS = "0" *) 
   (* C_ENABLE_RST_SYNC = "1" *) 
   (* C_ERROR_INJECTION_TYPE = "0" *) 
   (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
   (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
   (* C_FAMILY = "virtex7" *) 
   (* C_FULL_FLAGS_RST_VAL = "1" *) 
   (* C_HAS_ALMOST_EMPTY = "0" *) 
   (* C_HAS_ALMOST_FULL = "0" *) 
   (* C_HAS_AXIS_TDATA = "0" *) 
   (* C_HAS_AXIS_TDEST = "0" *) 
   (* C_HAS_AXIS_TID = "0" *) 
   (* C_HAS_AXIS_TKEEP = "0" *) 
   (* C_HAS_AXIS_TLAST = "0" *) 
   (* C_HAS_AXIS_TREADY = "1" *) 
   (* C_HAS_AXIS_TSTRB = "0" *) 
   (* C_HAS_AXIS_TUSER = "0" *) 
   (* C_HAS_AXI_ARUSER = "1" *) 
   (* C_HAS_AXI_AWUSER = "1" *) 
   (* C_HAS_AXI_BUSER = "0" *) 
   (* C_HAS_AXI_ID = "0" *) 
   (* C_HAS_AXI_RD_CHANNEL = "0" *) 
   (* C_HAS_AXI_RUSER = "0" *) 
   (* C_HAS_AXI_WR_CHANNEL = "1" *) 
   (* C_HAS_AXI_WUSER = "0" *) 
   (* C_HAS_BACKUP = "0" *) 
   (* C_HAS_DATA_COUNT = "0" *) 
   (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
   (* C_HAS_DATA_COUNTS_RACH = "0" *) 
   (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
   (* C_HAS_DATA_COUNTS_WACH = "0" *) 
   (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
   (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
   (* C_HAS_INT_CLK = "0" *) 
   (* C_HAS_MASTER_CE = "0" *) 
   (* C_HAS_MEMINIT_FILE = "0" *) 
   (* C_HAS_OVERFLOW = "0" *) 
   (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
   (* C_HAS_PROG_FLAGS_RACH = "0" *) 
   (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
   (* C_HAS_PROG_FLAGS_WACH = "0" *) 
   (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
   (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
   (* C_HAS_RD_DATA_COUNT = "0" *) 
   (* C_HAS_RD_RST = "0" *) 
   (* C_HAS_RST = "1" *) 
   (* C_HAS_SLAVE_CE = "0" *) 
   (* C_HAS_SRST = "0" *) 
   (* C_HAS_UNDERFLOW = "0" *) 
   (* C_HAS_VALID = "0" *) 
   (* C_HAS_WR_ACK = "0" *) 
   (* C_HAS_WR_DATA_COUNT = "0" *) 
   (* C_HAS_WR_RST = "0" *) 
   (* C_IMPLEMENTATION_TYPE = "0" *) 
   (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
   (* C_IMPLEMENTATION_TYPE_RACH = "12" *) 
   (* C_IMPLEMENTATION_TYPE_RDCH = "11" *) 
   (* C_IMPLEMENTATION_TYPE_WACH = "12" *) 
   (* C_IMPLEMENTATION_TYPE_WDCH = "11" *) 
   (* C_IMPLEMENTATION_TYPE_WRCH = "12" *) 
   (* C_INIT_WR_PNTR_VAL = "0" *) 
   (* C_INTERFACE_TYPE = "2" *) 
   (* C_MEMORY_TYPE = "1" *) 
   (* C_MIF_FILE_NAME = "BlankString" *) 
   (* C_MSGON_VAL = "1" *) 
   (* C_OPTIMIZATION_MODE = "0" *) 
   (* C_OVERFLOW_LOW = "0" *) 
   (* C_POWER_SAVING_MODE = "0" *) 
   (* C_PRELOAD_LATENCY = "1" *) 
   (* C_PRELOAD_REGS = "0" *) 
   (* C_PRIM_FIFO_TYPE = "4kx4" *) 
   (* C_PRIM_FIFO_TYPE_AXIS = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_RDCH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_WDCH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "2" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "14" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "30" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "14" *) 
   (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "3" *) 
   (* C_PROG_EMPTY_TYPE = "0" *) 
   (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
   (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
   (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
   (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
   (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
   (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL = "1022" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "15" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "31" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "15" *) 
   (* C_PROG_FULL_THRESH_NEGATE_VAL = "1021" *) 
   (* C_PROG_FULL_TYPE = "0" *) 
   (* C_PROG_FULL_TYPE_AXIS = "0" *) 
   (* C_PROG_FULL_TYPE_RACH = "0" *) 
   (* C_PROG_FULL_TYPE_RDCH = "0" *) 
   (* C_PROG_FULL_TYPE_WACH = "0" *) 
   (* C_PROG_FULL_TYPE_WDCH = "0" *) 
   (* C_PROG_FULL_TYPE_WRCH = "0" *) 
   (* C_RACH_TYPE = "0" *) 
   (* C_RDCH_TYPE = "0" *) 
   (* C_RD_DATA_COUNT_WIDTH = "10" *) 
   (* C_RD_DEPTH = "1024" *) 
   (* C_RD_FREQ = "1" *) 
   (* C_RD_PNTR_WIDTH = "10" *) 
   (* C_REG_SLICE_MODE_AXIS = "0" *) 
   (* C_REG_SLICE_MODE_RACH = "0" *) 
   (* C_REG_SLICE_MODE_RDCH = "0" *) 
   (* C_REG_SLICE_MODE_WACH = "0" *) 
   (* C_REG_SLICE_MODE_WDCH = "0" *) 
   (* C_REG_SLICE_MODE_WRCH = "0" *) 
   (* C_SYNCHRONIZER_STAGE = "3" *) 
   (* C_UNDERFLOW_LOW = "0" *) 
   (* C_USE_COMMON_OVERFLOW = "0" *) 
   (* C_USE_COMMON_UNDERFLOW = "0" *) 
   (* C_USE_DEFAULT_SETTINGS = "0" *) 
   (* C_USE_DOUT_RST = "1" *) 
   (* C_USE_ECC = "0" *) 
   (* C_USE_ECC_AXIS = "0" *) 
   (* C_USE_ECC_RACH = "0" *) 
   (* C_USE_ECC_RDCH = "0" *) 
   (* C_USE_ECC_WACH = "0" *) 
   (* C_USE_ECC_WDCH = "0" *) 
   (* C_USE_ECC_WRCH = "0" *) 
   (* C_USE_EMBEDDED_REG = "0" *) 
   (* C_USE_FIFO16_FLAGS = "0" *) 
   (* C_USE_FWFT_DATA_COUNT = "0" *) 
   (* C_USE_PIPELINE_REG = "0" *) 
   (* C_VALID_LOW = "0" *) 
   (* C_WACH_TYPE = "0" *) 
   (* C_WDCH_TYPE = "2" *) 
   (* C_WRCH_TYPE = "2" *) 
   (* C_WR_ACK_LOW = "0" *) 
   (* C_WR_DATA_COUNT_WIDTH = "10" *) 
   (* C_WR_DEPTH = "1024" *) 
   (* C_WR_DEPTH_AXIS = "1024" *) 
   (* C_WR_DEPTH_RACH = "32" *) 
   (* C_WR_DEPTH_RDCH = "1024" *) 
   (* C_WR_DEPTH_WACH = "32" *) 
   (* C_WR_DEPTH_WDCH = "1024" *) 
   (* C_WR_DEPTH_WRCH = "16" *) 
   (* C_WR_FREQ = "1" *) 
   (* C_WR_PNTR_WIDTH = "10" *) 
   (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
   (* C_WR_PNTR_WIDTH_RACH = "5" *) 
   (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
   (* C_WR_PNTR_WIDTH_WACH = "5" *) 
   (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
   (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
   (* C_WR_RESPONSE_LATENCY = "1" *) 
   (* DONT_TOUCH *) 
   axi_dwidth_converter_0_fifo_generator_v12_0 dw_fifogen_aw
       (.almost_empty(NLW_dw_fifogen_aw_almost_empty_UNCONNECTED),
        .almost_full(NLW_dw_fifogen_aw_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_dw_fifogen_aw_axi_ar_data_count_UNCONNECTED[5:0]),
        .axi_ar_dbiterr(NLW_dw_fifogen_aw_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_dw_fifogen_aw_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_dw_fifogen_aw_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_dw_fifogen_aw_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_dw_fifogen_aw_axi_ar_rd_data_count_UNCONNECTED[5:0]),
        .axi_ar_sbiterr(NLW_dw_fifogen_aw_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_dw_fifogen_aw_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_dw_fifogen_aw_axi_ar_wr_data_count_UNCONNECTED[5:0]),
        .axi_aw_data_count(NLW_dw_fifogen_aw_axi_aw_data_count_UNCONNECTED[5:0]),
        .axi_aw_dbiterr(NLW_dw_fifogen_aw_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_dw_fifogen_aw_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_dw_fifogen_aw_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_dw_fifogen_aw_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_dw_fifogen_aw_axi_aw_rd_data_count_UNCONNECTED[5:0]),
        .axi_aw_sbiterr(NLW_dw_fifogen_aw_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_dw_fifogen_aw_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_dw_fifogen_aw_axi_aw_wr_data_count_UNCONNECTED[5:0]),
        .axi_b_data_count(NLW_dw_fifogen_aw_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_dw_fifogen_aw_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_dw_fifogen_aw_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_dw_fifogen_aw_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_dw_fifogen_aw_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_dw_fifogen_aw_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_dw_fifogen_aw_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_dw_fifogen_aw_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_dw_fifogen_aw_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_dw_fifogen_aw_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_dw_fifogen_aw_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_dw_fifogen_aw_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_dw_fifogen_aw_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_dw_fifogen_aw_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_dw_fifogen_aw_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_dw_fifogen_aw_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_dw_fifogen_aw_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_dw_fifogen_aw_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_dw_fifogen_aw_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_dw_fifogen_aw_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_dw_fifogen_aw_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_dw_fifogen_aw_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_dw_fifogen_aw_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_dw_fifogen_aw_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_dw_fifogen_aw_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_dw_fifogen_aw_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_dw_fifogen_aw_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_dw_fifogen_aw_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_dw_fifogen_aw_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_dw_fifogen_aw_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_dw_fifogen_aw_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_dw_fifogen_aw_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_dw_fifogen_aw_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_dw_fifogen_aw_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_dw_fifogen_aw_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_dw_fifogen_aw_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_dw_fifogen_aw_data_count_UNCONNECTED[9:0]),
        .dbiterr(NLW_dw_fifogen_aw_dbiterr_UNCONNECTED),
        .din({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dout(NLW_dw_fifogen_aw_dout_UNCONNECTED[17:0]),
        .empty(NLW_dw_fifogen_aw_empty_UNCONNECTED),
        .full(NLW_dw_fifogen_aw_full_UNCONNECTED),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(I4),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_dw_fifogen_aw_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_dw_fifogen_aw_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_dw_fifogen_aw_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_dw_fifogen_aw_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_dw_fifogen_aw_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_dw_fifogen_aw_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_dw_fifogen_aw_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_dw_fifogen_aw_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_dw_fifogen_aw_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_dw_fifogen_aw_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_dw_fifogen_aw_m_axi_aruser_UNCONNECTED[5:0]),
        .m_axi_arvalid(NLW_dw_fifogen_aw_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(M_AXI_AWADDR),
        .m_axi_awburst(O2),
        .m_axi_awcache(m_axi_awcache),
        .m_axi_awid(NLW_dw_fifogen_aw_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(D),
        .m_axi_awlock(m_axi_awlock),
        .m_axi_awprot(m_axi_awprot),
        .m_axi_awqos(m_axi_awqos),
        .m_axi_awready(aw_pop),
        .m_axi_awregion(m_axi_awregion),
        .m_axi_awsize(O1),
        .m_axi_awuser(mi_last_index_reg),
        .m_axi_awvalid(mi_awvalid),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_dw_fifogen_aw_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_dw_fifogen_aw_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_dw_fifogen_aw_m_axi_wdata_UNCONNECTED[31:0]),
        .m_axi_wid(NLW_dw_fifogen_aw_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_dw_fifogen_aw_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_dw_fifogen_aw_m_axi_wstrb_UNCONNECTED[3:0]),
        .m_axi_wuser(NLW_dw_fifogen_aw_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_dw_fifogen_aw_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_dw_fifogen_aw_m_axis_tdata_UNCONNECTED[63:0]),
        .m_axis_tdest(NLW_dw_fifogen_aw_m_axis_tdest_UNCONNECTED[3:0]),
        .m_axis_tid(NLW_dw_fifogen_aw_m_axis_tid_UNCONNECTED[7:0]),
        .m_axis_tkeep(NLW_dw_fifogen_aw_m_axis_tkeep_UNCONNECTED[3:0]),
        .m_axis_tlast(NLW_dw_fifogen_aw_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_dw_fifogen_aw_m_axis_tstrb_UNCONNECTED[3:0]),
        .m_axis_tuser(NLW_dw_fifogen_aw_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_dw_fifogen_aw_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_dw_fifogen_aw_overflow_UNCONNECTED),
        .prog_empty(NLW_dw_fifogen_aw_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_dw_fifogen_aw_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(1'b0),
        .rd_data_count(NLW_dw_fifogen_aw_rd_data_count_UNCONNECTED[9:0]),
        .rd_en(1'b0),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_dw_fifogen_aw_rd_rst_busy_UNCONNECTED),
        .rst(1'b0),
        .s_aclk(I3),
        .s_aclk_en(1'b0),
        .s_aresetn(aw_fifo_aresetn),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_dw_fifogen_aw_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr(s_awaddr_reg),
        .s_axi_awburst(s_awburst_reg),
        .s_axi_awcache(s_awcache_reg),
        .s_axi_awid(1'b0),
        .s_axi_awlen(s_awlen_reg),
        .s_axi_awlock(s_awlock_reg),
        .s_axi_awprot(s_awprot_reg),
        .s_axi_awqos(s_awqos_reg),
        .s_axi_awready(aw_ready),
        .s_axi_awregion(s_awregion_reg),
        .s_axi_awsize(s_awsize_reg),
        .s_axi_awuser(si_last_index_reg),
        .s_axi_awvalid(s_awready_reg),
        .s_axi_bid(NLW_dw_fifogen_aw_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_dw_fifogen_aw_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_dw_fifogen_aw_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_dw_fifogen_aw_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_dw_fifogen_aw_s_axi_rdata_UNCONNECTED[31:0]),
        .s_axi_rid(NLW_dw_fifogen_aw_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_dw_fifogen_aw_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_dw_fifogen_aw_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_dw_fifogen_aw_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_dw_fifogen_aw_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_dw_fifogen_aw_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tid({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tkeep({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_dw_fifogen_aw_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_dw_fifogen_aw_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(1'b0),
        .underflow(NLW_dw_fifogen_aw_underflow_UNCONNECTED),
        .valid(NLW_dw_fifogen_aw_valid_UNCONNECTED),
        .wr_ack(NLW_dw_fifogen_aw_wr_ack_UNCONNECTED),
        .wr_clk(1'b0),
        .wr_data_count(NLW_dw_fifogen_aw_wr_data_count_UNCONNECTED[9:0]),
        .wr_en(1'b0),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_dw_fifogen_aw_wr_rst_busy_UNCONNECTED));
(* SOFT_HLUTNM = "soft_lutpair256" *) 
   LUT2 #(
    .INIT(4'h8)) 
     dw_fifogen_aw_i_1
       (.I0(I90),
        .I1(I42),
        .O(aw_fifo_aresetn));
LUT4 #(
    .INIT(16'hA800)) 
     dw_fifogen_aw_i_3
       (.I0(mi_state[1]),
        .I1(m_axi_awready),
        .I2(mi_state[2]),
        .I3(n_0_dw_fifogen_aw_i_5),
        .O(aw_pop));
LUT6 #(
    .INIT(64'hF5555555D5555555)) 
     dw_fifogen_aw_i_5
       (.I0(mi_state[2]),
        .I1(m_axi_awready),
        .I2(m_axi_wready),
        .I3(O4),
        .I4(O6),
        .I5(mi_state[0]),
        .O(n_0_dw_fifogen_aw_i_5));
LUT2 #(
    .INIT(4'hE)) 
     first_load_mi_d1_i_1
       (.I0(load_mi_d1),
        .I1(first_load_mi_d1),
        .O(n_0_first_load_mi_d1_i_1));
FDRE first_load_mi_d1_reg
       (.C(I4),
        .CE(1'b1),
        .D(n_0_first_load_mi_d1_i_1),
        .Q(first_load_mi_d1),
        .R(m_fifo_rst));
(* C_ADD_NGC_CONSTRAINT = "0" *) 
   (* C_APPLICATION_TYPE_AXIS = "0" *) 
   (* C_APPLICATION_TYPE_RACH = "0" *) 
   (* C_APPLICATION_TYPE_RDCH = "0" *) 
   (* C_APPLICATION_TYPE_WACH = "0" *) 
   (* C_APPLICATION_TYPE_WDCH = "0" *) 
   (* C_APPLICATION_TYPE_WRCH = "0" *) 
   (* C_AXIS_TDATA_WIDTH = "64" *) 
   (* C_AXIS_TDEST_WIDTH = "4" *) 
   (* C_AXIS_TID_WIDTH = "8" *) 
   (* C_AXIS_TKEEP_WIDTH = "4" *) 
   (* C_AXIS_TSTRB_WIDTH = "4" *) 
   (* C_AXIS_TUSER_WIDTH = "4" *) 
   (* C_AXIS_TYPE = "0" *) 
   (* C_AXI_ADDR_WIDTH = "32" *) 
   (* C_AXI_ARUSER_WIDTH = "1" *) 
   (* C_AXI_AWUSER_WIDTH = "1" *) 
   (* C_AXI_BUSER_WIDTH = "1" *) 
   (* C_AXI_DATA_WIDTH = "64" *) 
   (* C_AXI_ID_WIDTH = "4" *) 
   (* C_AXI_LEN_WIDTH = "8" *) 
   (* C_AXI_LOCK_WIDTH = "2" *) 
   (* C_AXI_RUSER_WIDTH = "1" *) 
   (* C_AXI_TYPE = "0" *) 
   (* C_AXI_WUSER_WIDTH = "1" *) 
   (* C_COMMON_CLOCK = "0" *) 
   (* C_COUNT_TYPE = "0" *) 
   (* C_DATA_COUNT_WIDTH = "5" *) 
   (* C_DEFAULT_VALUE = "BlankString" *) 
   (* C_DIN_WIDTH = "1" *) 
   (* C_DIN_WIDTH_AXIS = "1" *) 
   (* C_DIN_WIDTH_RACH = "32" *) 
   (* C_DIN_WIDTH_RDCH = "64" *) 
   (* C_DIN_WIDTH_WACH = "32" *) 
   (* C_DIN_WIDTH_WDCH = "64" *) 
   (* C_DIN_WIDTH_WRCH = "2" *) 
   (* C_DOUT_RST_VAL = "0" *) 
   (* C_DOUT_WIDTH = "1" *) 
   (* C_ENABLE_RLOCS = "0" *) 
   (* C_ENABLE_RST_SYNC = "1" *) 
   (* C_ERROR_INJECTION_TYPE = "0" *) 
   (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
   (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
   (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
   (* C_FAMILY = "virtex7" *) 
   (* C_FULL_FLAGS_RST_VAL = "0" *) 
   (* C_HAS_ALMOST_EMPTY = "0" *) 
   (* C_HAS_ALMOST_FULL = "0" *) 
   (* C_HAS_AXIS_TDATA = "0" *) 
   (* C_HAS_AXIS_TDEST = "0" *) 
   (* C_HAS_AXIS_TID = "0" *) 
   (* C_HAS_AXIS_TKEEP = "0" *) 
   (* C_HAS_AXIS_TLAST = "0" *) 
   (* C_HAS_AXIS_TREADY = "1" *) 
   (* C_HAS_AXIS_TSTRB = "0" *) 
   (* C_HAS_AXIS_TUSER = "0" *) 
   (* C_HAS_AXI_ARUSER = "0" *) 
   (* C_HAS_AXI_AWUSER = "0" *) 
   (* C_HAS_AXI_BUSER = "0" *) 
   (* C_HAS_AXI_ID = "0" *) 
   (* C_HAS_AXI_RD_CHANNEL = "0" *) 
   (* C_HAS_AXI_RUSER = "0" *) 
   (* C_HAS_AXI_WR_CHANNEL = "0" *) 
   (* C_HAS_AXI_WUSER = "0" *) 
   (* C_HAS_BACKUP = "0" *) 
   (* C_HAS_DATA_COUNT = "0" *) 
   (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
   (* C_HAS_DATA_COUNTS_RACH = "0" *) 
   (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
   (* C_HAS_DATA_COUNTS_WACH = "0" *) 
   (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
   (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
   (* C_HAS_INT_CLK = "0" *) 
   (* C_HAS_MASTER_CE = "0" *) 
   (* C_HAS_MEMINIT_FILE = "0" *) 
   (* C_HAS_OVERFLOW = "0" *) 
   (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
   (* C_HAS_PROG_FLAGS_RACH = "0" *) 
   (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
   (* C_HAS_PROG_FLAGS_WACH = "0" *) 
   (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
   (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
   (* C_HAS_RD_DATA_COUNT = "0" *) 
   (* C_HAS_RD_RST = "0" *) 
   (* C_HAS_RST = "1" *) 
   (* C_HAS_SLAVE_CE = "0" *) 
   (* C_HAS_SRST = "0" *) 
   (* C_HAS_UNDERFLOW = "0" *) 
   (* C_HAS_VALID = "0" *) 
   (* C_HAS_WR_ACK = "0" *) 
   (* C_HAS_WR_DATA_COUNT = "0" *) 
   (* C_HAS_WR_RST = "0" *) 
   (* C_IMPLEMENTATION_TYPE = "2" *) 
   (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
   (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
   (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
   (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
   (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
   (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
   (* C_INIT_WR_PNTR_VAL = "0" *) 
   (* C_INTERFACE_TYPE = "0" *) 
   (* C_MEMORY_TYPE = "2" *) 
   (* C_MIF_FILE_NAME = "BlankString" *) 
   (* C_MSGON_VAL = "1" *) 
   (* C_OPTIMIZATION_MODE = "0" *) 
   (* C_OVERFLOW_LOW = "0" *) 
   (* C_POWER_SAVING_MODE = "0" *) 
   (* C_PRELOAD_LATENCY = "0" *) 
   (* C_PRELOAD_REGS = "1" *) 
   (* C_PRIM_FIFO_TYPE = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_AXIS = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_RDCH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_WDCH = "512x36" *) 
   (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
   (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
   (* C_PROG_EMPTY_TYPE = "0" *) 
   (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
   (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
   (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
   (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
   (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
   (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL = "31" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
   (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
   (* C_PROG_FULL_THRESH_NEGATE_VAL = "30" *) 
   (* C_PROG_FULL_TYPE = "0" *) 
   (* C_PROG_FULL_TYPE_AXIS = "0" *) 
   (* C_PROG_FULL_TYPE_RACH = "0" *) 
   (* C_PROG_FULL_TYPE_RDCH = "0" *) 
   (* C_PROG_FULL_TYPE_WACH = "0" *) 
   (* C_PROG_FULL_TYPE_WDCH = "0" *) 
   (* C_PROG_FULL_TYPE_WRCH = "0" *) 
   (* C_RACH_TYPE = "0" *) 
   (* C_RDCH_TYPE = "0" *) 
   (* C_RD_DATA_COUNT_WIDTH = "5" *) 
   (* C_RD_DEPTH = "32" *) 
   (* C_RD_FREQ = "1" *) 
   (* C_RD_PNTR_WIDTH = "5" *) 
   (* C_REG_SLICE_MODE_AXIS = "0" *) 
   (* C_REG_SLICE_MODE_RACH = "0" *) 
   (* C_REG_SLICE_MODE_RDCH = "0" *) 
   (* C_REG_SLICE_MODE_WACH = "0" *) 
   (* C_REG_SLICE_MODE_WDCH = "0" *) 
   (* C_REG_SLICE_MODE_WRCH = "0" *) 
   (* C_SYNCHRONIZER_STAGE = "3" *) 
   (* C_UNDERFLOW_LOW = "0" *) 
   (* C_USE_COMMON_OVERFLOW = "0" *) 
   (* C_USE_COMMON_UNDERFLOW = "0" *) 
   (* C_USE_DEFAULT_SETTINGS = "0" *) 
   (* C_USE_DOUT_RST = "0" *) 
   (* C_USE_ECC = "0" *) 
   (* C_USE_ECC_AXIS = "0" *) 
   (* C_USE_ECC_RACH = "0" *) 
   (* C_USE_ECC_RDCH = "0" *) 
   (* C_USE_ECC_WACH = "0" *) 
   (* C_USE_ECC_WDCH = "0" *) 
   (* C_USE_ECC_WRCH = "0" *) 
   (* C_USE_EMBEDDED_REG = "0" *) 
   (* C_USE_FIFO16_FLAGS = "0" *) 
   (* C_USE_FWFT_DATA_COUNT = "1" *) 
   (* C_USE_PIPELINE_REG = "0" *) 
   (* C_VALID_LOW = "0" *) 
   (* C_WACH_TYPE = "0" *) 
   (* C_WDCH_TYPE = "0" *) 
   (* C_WRCH_TYPE = "0" *) 
   (* C_WR_ACK_LOW = "0" *) 
   (* C_WR_DATA_COUNT_WIDTH = "5" *) 
   (* C_WR_DEPTH = "32" *) 
   (* C_WR_DEPTH_AXIS = "1024" *) 
   (* C_WR_DEPTH_RACH = "16" *) 
   (* C_WR_DEPTH_RDCH = "1024" *) 
   (* C_WR_DEPTH_WACH = "16" *) 
   (* C_WR_DEPTH_WDCH = "1024" *) 
   (* C_WR_DEPTH_WRCH = "16" *) 
   (* C_WR_FREQ = "1" *) 
   (* C_WR_PNTR_WIDTH = "5" *) 
   (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
   (* C_WR_PNTR_WIDTH_RACH = "4" *) 
   (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
   (* C_WR_PNTR_WIDTH_WACH = "4" *) 
   (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
   (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
   (* C_WR_RESPONSE_LATENCY = "1" *) 
   (* DONT_TOUCH *) 
   axi_dwidth_converter_0_fifo_generator_v12_0__parameterized0 \gen_awpop_fifo.dw_fifogen_awpop 
       (.almost_empty(\NLW_gen_awpop_fifo.dw_fifogen_awpop_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gen_awpop_fifo.dw_fifogen_awpop_almost_full_UNCONNECTED ),
        .axi_ar_data_count(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_ar_data_count_UNCONNECTED [4:0]),
        .axi_ar_dbiterr(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_ar_dbiterr_UNCONNECTED ),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_ar_overflow_UNCONNECTED ),
        .axi_ar_prog_empty(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_ar_prog_empty_UNCONNECTED ),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_ar_prog_full_UNCONNECTED ),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_ar_rd_data_count_UNCONNECTED [4:0]),
        .axi_ar_sbiterr(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_ar_sbiterr_UNCONNECTED ),
        .axi_ar_underflow(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_ar_underflow_UNCONNECTED ),
        .axi_ar_wr_data_count(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_ar_wr_data_count_UNCONNECTED [4:0]),
        .axi_aw_data_count(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_aw_data_count_UNCONNECTED [4:0]),
        .axi_aw_dbiterr(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_aw_dbiterr_UNCONNECTED ),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_aw_overflow_UNCONNECTED ),
        .axi_aw_prog_empty(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_aw_prog_empty_UNCONNECTED ),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_aw_prog_full_UNCONNECTED ),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_aw_rd_data_count_UNCONNECTED [4:0]),
        .axi_aw_sbiterr(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_aw_sbiterr_UNCONNECTED ),
        .axi_aw_underflow(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_aw_underflow_UNCONNECTED ),
        .axi_aw_wr_data_count(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_aw_wr_data_count_UNCONNECTED [4:0]),
        .axi_b_data_count(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_b_data_count_UNCONNECTED [4:0]),
        .axi_b_dbiterr(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_b_dbiterr_UNCONNECTED ),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_b_overflow_UNCONNECTED ),
        .axi_b_prog_empty(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_b_prog_empty_UNCONNECTED ),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_b_prog_full_UNCONNECTED ),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_b_rd_data_count_UNCONNECTED [4:0]),
        .axi_b_sbiterr(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_b_sbiterr_UNCONNECTED ),
        .axi_b_underflow(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_b_underflow_UNCONNECTED ),
        .axi_b_wr_data_count(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_b_wr_data_count_UNCONNECTED [4:0]),
        .axi_r_data_count(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_r_data_count_UNCONNECTED [10:0]),
        .axi_r_dbiterr(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_r_dbiterr_UNCONNECTED ),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_r_overflow_UNCONNECTED ),
        .axi_r_prog_empty(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_r_prog_empty_UNCONNECTED ),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_r_prog_full_UNCONNECTED ),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_r_rd_data_count_UNCONNECTED [10:0]),
        .axi_r_sbiterr(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_r_sbiterr_UNCONNECTED ),
        .axi_r_underflow(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_r_underflow_UNCONNECTED ),
        .axi_r_wr_data_count(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_r_wr_data_count_UNCONNECTED [10:0]),
        .axi_w_data_count(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_w_data_count_UNCONNECTED [10:0]),
        .axi_w_dbiterr(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_w_dbiterr_UNCONNECTED ),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_w_overflow_UNCONNECTED ),
        .axi_w_prog_empty(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_w_prog_empty_UNCONNECTED ),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_w_prog_full_UNCONNECTED ),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_w_rd_data_count_UNCONNECTED [10:0]),
        .axi_w_sbiterr(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_w_sbiterr_UNCONNECTED ),
        .axi_w_underflow(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_w_underflow_UNCONNECTED ),
        .axi_w_wr_data_count(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axi_w_wr_data_count_UNCONNECTED [10:0]),
        .axis_data_count(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axis_data_count_UNCONNECTED [10:0]),
        .axis_dbiterr(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axis_dbiterr_UNCONNECTED ),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axis_overflow_UNCONNECTED ),
        .axis_prog_empty(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axis_prog_empty_UNCONNECTED ),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axis_prog_full_UNCONNECTED ),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axis_rd_data_count_UNCONNECTED [10:0]),
        .axis_sbiterr(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axis_sbiterr_UNCONNECTED ),
        .axis_underflow(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axis_underflow_UNCONNECTED ),
        .axis_wr_data_count(\NLW_gen_awpop_fifo.dw_fifogen_awpop_axis_wr_data_count_UNCONNECTED [10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(\NLW_gen_awpop_fifo.dw_fifogen_awpop_data_count_UNCONNECTED [4:0]),
        .dbiterr(\NLW_gen_awpop_fifo.dw_fifogen_awpop_dbiterr_UNCONNECTED ),
        .din(1'b0),
        .dout(\NLW_gen_awpop_fifo.dw_fifogen_awpop_dout_UNCONNECTED [0]),
        .empty(aw_pop_event),
        .full(\NLW_gen_awpop_fifo.dw_fifogen_awpop_full_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_araddr_UNCONNECTED [31:0]),
        .m_axi_arburst(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_arburst_UNCONNECTED [1:0]),
        .m_axi_arcache(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_arcache_UNCONNECTED [3:0]),
        .m_axi_arid(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_arid_UNCONNECTED [3:0]),
        .m_axi_arlen(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_arlen_UNCONNECTED [7:0]),
        .m_axi_arlock(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_arlock_UNCONNECTED [1:0]),
        .m_axi_arprot(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_arprot_UNCONNECTED [2:0]),
        .m_axi_arqos(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_arqos_UNCONNECTED [3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_arregion_UNCONNECTED [3:0]),
        .m_axi_arsize(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_arsize_UNCONNECTED [2:0]),
        .m_axi_aruser(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_aruser_UNCONNECTED [0]),
        .m_axi_arvalid(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_arvalid_UNCONNECTED ),
        .m_axi_awaddr(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awaddr_UNCONNECTED [31:0]),
        .m_axi_awburst(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awburst_UNCONNECTED [1:0]),
        .m_axi_awcache(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awcache_UNCONNECTED [3:0]),
        .m_axi_awid(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awid_UNCONNECTED [3:0]),
        .m_axi_awlen(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awlen_UNCONNECTED [7:0]),
        .m_axi_awlock(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awlock_UNCONNECTED [1:0]),
        .m_axi_awprot(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awprot_UNCONNECTED [2:0]),
        .m_axi_awqos(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awqos_UNCONNECTED [3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awregion_UNCONNECTED [3:0]),
        .m_axi_awsize(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awsize_UNCONNECTED [2:0]),
        .m_axi_awuser(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awuser_UNCONNECTED [0]),
        .m_axi_awvalid(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_awvalid_UNCONNECTED ),
        .m_axi_bid({1'b0,1'b0,1'b0,1'b0}),
        .m_axi_bready(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_bready_UNCONNECTED ),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid({1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rlast(1'b0),
        .m_axi_rready(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_rready_UNCONNECTED ),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_wdata_UNCONNECTED [63:0]),
        .m_axi_wid(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_wid_UNCONNECTED [3:0]),
        .m_axi_wlast(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_wlast_UNCONNECTED ),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_wstrb_UNCONNECTED [7:0]),
        .m_axi_wuser(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_wuser_UNCONNECTED [0]),
        .m_axi_wvalid(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axi_wvalid_UNCONNECTED ),
        .m_axis_tdata(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axis_tdata_UNCONNECTED [63:0]),
        .m_axis_tdest(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axis_tdest_UNCONNECTED [3:0]),
        .m_axis_tid(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axis_tid_UNCONNECTED [7:0]),
        .m_axis_tkeep(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axis_tkeep_UNCONNECTED [3:0]),
        .m_axis_tlast(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axis_tlast_UNCONNECTED ),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axis_tstrb_UNCONNECTED [3:0]),
        .m_axis_tuser(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axis_tuser_UNCONNECTED [3:0]),
        .m_axis_tvalid(\NLW_gen_awpop_fifo.dw_fifogen_awpop_m_axis_tvalid_UNCONNECTED ),
        .overflow(\NLW_gen_awpop_fifo.dw_fifogen_awpop_overflow_UNCONNECTED ),
        .prog_empty(\NLW_gen_awpop_fifo.dw_fifogen_awpop_prog_empty_UNCONNECTED ),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(\NLW_gen_awpop_fifo.dw_fifogen_awpop_prog_full_UNCONNECTED ),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(I3),
        .rd_data_count(\NLW_gen_awpop_fifo.dw_fifogen_awpop_rd_data_count_UNCONNECTED [4:0]),
        .rd_en(aw_pop_resync),
        .rd_rst(1'b0),
        .rd_rst_busy(\NLW_gen_awpop_fifo.dw_fifogen_awpop_rd_rst_busy_UNCONNECTED ),
        .rst(awpop_reset),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock({1'b0,1'b0}),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(\NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_arready_UNCONNECTED ),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock({1'b0,1'b0}),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(\NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_awready_UNCONNECTED ),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(\NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_bid_UNCONNECTED [3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(\NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_bresp_UNCONNECTED [1:0]),
        .s_axi_buser(\NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_buser_UNCONNECTED [0]),
        .s_axi_bvalid(\NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_bvalid_UNCONNECTED ),
        .s_axi_rdata(\NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_rdata_UNCONNECTED [63:0]),
        .s_axi_rid(\NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_rid_UNCONNECTED [3:0]),
        .s_axi_rlast(\NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_rlast_UNCONNECTED ),
        .s_axi_rready(1'b0),
        .s_axi_rresp(\NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_rresp_UNCONNECTED [1:0]),
        .s_axi_ruser(\NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_ruser_UNCONNECTED [0]),
        .s_axi_rvalid(\NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_rvalid_UNCONNECTED ),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wlast(1'b0),
        .s_axi_wready(\NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axi_wready_UNCONNECTED ),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tid({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tkeep({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tlast(1'b0),
        .s_axis_tready(\NLW_gen_awpop_fifo.dw_fifogen_awpop_s_axis_tready_UNCONNECTED ),
        .s_axis_tstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(\NLW_gen_awpop_fifo.dw_fifogen_awpop_sbiterr_UNCONNECTED ),
        .sleep(1'b0),
        .srst(1'b0),
        .underflow(\NLW_gen_awpop_fifo.dw_fifogen_awpop_underflow_UNCONNECTED ),
        .valid(\NLW_gen_awpop_fifo.dw_fifogen_awpop_valid_UNCONNECTED ),
        .wr_ack(\NLW_gen_awpop_fifo.dw_fifogen_awpop_wr_ack_UNCONNECTED ),
        .wr_clk(I4),
        .wr_data_count(\NLW_gen_awpop_fifo.dw_fifogen_awpop_wr_data_count_UNCONNECTED [4:0]),
        .wr_en(aw_pop),
        .wr_rst(1'b0),
        .wr_rst_busy(\NLW_gen_awpop_fifo.dw_fifogen_awpop_wr_rst_busy_UNCONNECTED ));
(* SOFT_HLUTNM = "soft_lutpair256" *) 
   LUT2 #(
    .INIT(4'h7)) 
     \gen_awpop_fifo.dw_fifogen_awpop_i_1 
       (.I0(I42),
        .I1(I90),
        .O(awpop_reset));
LUT1 #(
    .INIT(2'h1)) 
     \gen_awpop_fifo.dw_fifogen_awpop_i_2 
       (.I0(aw_pop_event),
        .O(aw_pop_resync));
LUT4 #(
    .INIT(16'h5400)) 
     load_mi_d1_i_1
       (.I0(mi_state[1]),
        .I1(mi_awvalid),
        .I2(mi_state[2]),
        .I3(n_0_M_AXI_WLAST_i_i_3),
        .O(load_mi_ptr));
FDRE load_mi_d1_reg
       (.C(I4),
        .CE(1'b1),
        .D(load_mi_ptr),
        .Q(load_mi_d1),
        .R(1'b0));
FDRE load_mi_d2_reg
       (.C(I4),
        .CE(1'b1),
        .D(load_mi_d1),
        .Q(load_mi_d2),
        .R(1'b0));
(* SOFT_HLUTNM = "soft_lutpair191" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[0]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[8]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[0] ),
        .O(m_axi_wstrb[0]));
(* SOFT_HLUTNM = "soft_lutpair202" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[10]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[98]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[10] ),
        .O(m_axi_wstrb[10]));
(* SOFT_HLUTNM = "soft_lutpair203" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[11]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[107]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[11] ),
        .O(m_axi_wstrb[11]));
(* SOFT_HLUTNM = "soft_lutpair204" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[12]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[116]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[12] ),
        .O(m_axi_wstrb[12]));
(* SOFT_HLUTNM = "soft_lutpair205" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[13]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[125]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[13] ),
        .O(m_axi_wstrb[13]));
(* SOFT_HLUTNM = "soft_lutpair206" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[14]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[134]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[14] ),
        .O(m_axi_wstrb[14]));
(* SOFT_HLUTNM = "soft_lutpair207" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[15]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[143]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[15] ),
        .O(m_axi_wstrb[15]));
(* SOFT_HLUTNM = "soft_lutpair208" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[16]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[152]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[16] ),
        .O(m_axi_wstrb[16]));
(* SOFT_HLUTNM = "soft_lutpair209" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[17]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[161]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[17] ),
        .O(m_axi_wstrb[17]));
(* SOFT_HLUTNM = "soft_lutpair210" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[18]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[170]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[18] ),
        .O(m_axi_wstrb[18]));
(* SOFT_HLUTNM = "soft_lutpair211" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[19]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[179]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[19] ),
        .O(m_axi_wstrb[19]));
(* SOFT_HLUTNM = "soft_lutpair192" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[1]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[17]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[1] ),
        .O(m_axi_wstrb[1]));
(* SOFT_HLUTNM = "soft_lutpair212" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[20]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[188]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[20] ),
        .O(m_axi_wstrb[20]));
(* SOFT_HLUTNM = "soft_lutpair213" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[21]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[197]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[21] ),
        .O(m_axi_wstrb[21]));
(* SOFT_HLUTNM = "soft_lutpair214" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[22]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[206]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[22] ),
        .O(m_axi_wstrb[22]));
(* SOFT_HLUTNM = "soft_lutpair215" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[23]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[215]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[23] ),
        .O(m_axi_wstrb[23]));
(* SOFT_HLUTNM = "soft_lutpair223" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[24]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[224]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[24] ),
        .O(m_axi_wstrb[24]));
(* SOFT_HLUTNM = "soft_lutpair216" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[25]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[233]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[25] ),
        .O(m_axi_wstrb[25]));
(* SOFT_HLUTNM = "soft_lutpair217" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[26]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[242]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[26] ),
        .O(m_axi_wstrb[26]));
(* SOFT_HLUTNM = "soft_lutpair218" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[27]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[251]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[27] ),
        .O(m_axi_wstrb[27]));
(* SOFT_HLUTNM = "soft_lutpair219" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[28]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[260]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[28] ),
        .O(m_axi_wstrb[28]));
(* SOFT_HLUTNM = "soft_lutpair220" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[29]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[269]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[29] ),
        .O(m_axi_wstrb[29]));
(* SOFT_HLUTNM = "soft_lutpair193" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[2]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[26]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[2] ),
        .O(m_axi_wstrb[2]));
(* SOFT_HLUTNM = "soft_lutpair221" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[30]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[278]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[30] ),
        .O(m_axi_wstrb[30]));
LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[31]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[287]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[31] ),
        .O(m_axi_wstrb[31]));
(* SOFT_HLUTNM = "soft_lutpair230" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[32]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[296]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[32] ),
        .O(m_axi_wstrb[32]));
(* SOFT_HLUTNM = "soft_lutpair230" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[33]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[305]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[33] ),
        .O(m_axi_wstrb[33]));
(* SOFT_HLUTNM = "soft_lutpair223" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[34]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[314]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[34] ),
        .O(m_axi_wstrb[34]));
(* SOFT_HLUTNM = "soft_lutpair221" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[35]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[323]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[35] ),
        .O(m_axi_wstrb[35]));
(* SOFT_HLUTNM = "soft_lutpair220" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[36]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[332]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[36] ),
        .O(m_axi_wstrb[36]));
(* SOFT_HLUTNM = "soft_lutpair219" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[37]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[341]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[37] ),
        .O(m_axi_wstrb[37]));
(* SOFT_HLUTNM = "soft_lutpair218" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[38]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[350]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[38] ),
        .O(m_axi_wstrb[38]));
(* SOFT_HLUTNM = "soft_lutpair217" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[39]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[359]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[39] ),
        .O(m_axi_wstrb[39]));
(* SOFT_HLUTNM = "soft_lutpair199" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[3]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[35]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[3] ),
        .O(m_axi_wstrb[3]));
(* SOFT_HLUTNM = "soft_lutpair216" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[40]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[368]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[40] ),
        .O(m_axi_wstrb[40]));
(* SOFT_HLUTNM = "soft_lutpair215" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[41]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[377]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[41] ),
        .O(m_axi_wstrb[41]));
(* SOFT_HLUTNM = "soft_lutpair214" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[42]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[386]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[42] ),
        .O(m_axi_wstrb[42]));
(* SOFT_HLUTNM = "soft_lutpair213" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[43]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[395]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[43] ),
        .O(m_axi_wstrb[43]));
(* SOFT_HLUTNM = "soft_lutpair212" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[44]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[404]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[44] ),
        .O(m_axi_wstrb[44]));
(* SOFT_HLUTNM = "soft_lutpair211" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[45]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[413]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[45] ),
        .O(m_axi_wstrb[45]));
(* SOFT_HLUTNM = "soft_lutpair210" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[46]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[422]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[46] ),
        .O(m_axi_wstrb[46]));
(* SOFT_HLUTNM = "soft_lutpair209" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[47]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[431]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[47] ),
        .O(m_axi_wstrb[47]));
(* SOFT_HLUTNM = "soft_lutpair208" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[48]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[440]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[48] ),
        .O(m_axi_wstrb[48]));
(* SOFT_HLUTNM = "soft_lutpair207" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[49]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[449]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[49] ),
        .O(m_axi_wstrb[49]));
(* SOFT_HLUTNM = "soft_lutpair195" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[4]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[44]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[4] ),
        .O(m_axi_wstrb[4]));
(* SOFT_HLUTNM = "soft_lutpair206" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[50]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[458]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[50] ),
        .O(m_axi_wstrb[50]));
(* SOFT_HLUTNM = "soft_lutpair205" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[51]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[467]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[51] ),
        .O(m_axi_wstrb[51]));
(* SOFT_HLUTNM = "soft_lutpair204" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[52]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[476]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[52] ),
        .O(m_axi_wstrb[52]));
(* SOFT_HLUTNM = "soft_lutpair203" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[53]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[485]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[53] ),
        .O(m_axi_wstrb[53]));
(* SOFT_HLUTNM = "soft_lutpair202" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[54]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[494]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[54] ),
        .O(m_axi_wstrb[54]));
(* SOFT_HLUTNM = "soft_lutpair201" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[55]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[503]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[55] ),
        .O(m_axi_wstrb[55]));
(* SOFT_HLUTNM = "soft_lutpair200" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[56]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[512]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[56] ),
        .O(m_axi_wstrb[56]));
(* SOFT_HLUTNM = "soft_lutpair199" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[57]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[521]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[57] ),
        .O(m_axi_wstrb[57]));
(* SOFT_HLUTNM = "soft_lutpair198" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[58]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[530]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[58] ),
        .O(m_axi_wstrb[58]));
(* SOFT_HLUTNM = "soft_lutpair197" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[59]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[539]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[59] ),
        .O(m_axi_wstrb[59]));
(* SOFT_HLUTNM = "soft_lutpair196" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[5]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[53]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[5] ),
        .O(m_axi_wstrb[5]));
(* SOFT_HLUTNM = "soft_lutpair196" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[60]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[548]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[60] ),
        .O(m_axi_wstrb[60]));
(* SOFT_HLUTNM = "soft_lutpair195" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[61]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[557]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[61] ),
        .O(m_axi_wstrb[61]));
(* SOFT_HLUTNM = "soft_lutpair193" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[62]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[566]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[62] ),
        .O(m_axi_wstrb[62]));
(* SOFT_HLUTNM = "soft_lutpair192" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[63]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[575]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[63] ),
        .O(m_axi_wstrb[63]));
(* SOFT_HLUTNM = "soft_lutpair197" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[6]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[62]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[6] ),
        .O(m_axi_wstrb[6]));
(* SOFT_HLUTNM = "soft_lutpair198" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[7]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[71]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[7] ),
        .O(m_axi_wstrb[7]));
(* SOFT_HLUTNM = "soft_lutpair200" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[8]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[80]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[8] ),
        .O(m_axi_wstrb[8]));
(* SOFT_HLUTNM = "soft_lutpair201" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \m_axi_wstrb[9]_INST_0 
       (.I0(O4),
        .I1(wpayload1_out[89]),
        .I2(\n_0_mi_wstrb_mask_d2_reg[9] ),
        .O(m_axi_wstrb[9]));
LUT6 #(
    .INIT(64'hEEEFFFFF22200000)) 
     \mi_addr[0]_i_1 
       (.I0(M_AXI_AWADDR[0]),
        .I1(mi_state[1]),
        .I2(mi_awvalid),
        .I3(mi_state[2]),
        .I4(n_0_M_AXI_WLAST_i_i_3),
        .I5(\n_0_next_mi_addr_reg[0] ),
        .O(\n_0_mi_addr[0]_i_1 ));
LUT6 #(
    .INIT(64'hEEEFFFFF22200000)) 
     \mi_addr[1]_i_1 
       (.I0(M_AXI_AWADDR[1]),
        .I1(mi_state[1]),
        .I2(mi_awvalid),
        .I3(mi_state[2]),
        .I4(n_0_M_AXI_WLAST_i_i_3),
        .I5(\n_0_next_mi_addr_reg[1] ),
        .O(\n_0_mi_addr[1]_i_1 ));
LUT6 #(
    .INIT(64'hEEEFFFFF22200000)) 
     \mi_addr[2]_i_1 
       (.I0(M_AXI_AWADDR[2]),
        .I1(mi_state[1]),
        .I2(mi_awvalid),
        .I3(mi_state[2]),
        .I4(n_0_M_AXI_WLAST_i_i_3),
        .I5(\n_0_next_mi_addr_reg[2] ),
        .O(\n_0_mi_addr[2]_i_1 ));
LUT6 #(
    .INIT(64'hEEEFFFFF22200000)) 
     \mi_addr[3]_i_1 
       (.I0(M_AXI_AWADDR[3]),
        .I1(mi_state[1]),
        .I2(mi_awvalid),
        .I3(mi_state[2]),
        .I4(n_0_M_AXI_WLAST_i_i_3),
        .I5(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_addr[3]_i_1 ));
LUT6 #(
    .INIT(64'hEEEFFFFF22200000)) 
     \mi_addr[4]_i_1 
       (.I0(M_AXI_AWADDR[4]),
        .I1(mi_state[1]),
        .I2(mi_awvalid),
        .I3(mi_state[2]),
        .I4(n_0_M_AXI_WLAST_i_i_3),
        .I5(\n_0_next_mi_addr_reg[4] ),
        .O(\n_0_mi_addr[4]_i_1 ));
LUT4 #(
    .INIT(16'hFF80)) 
     \mi_addr[5]_i_1 
       (.I0(next_valid),
        .I1(mi_last),
        .I2(mi_buf_en),
        .I3(load_mi_ptr),
        .O(\n_0_mi_addr[5]_i_1 ));
LUT6 #(
    .INIT(64'hEEEFFFFF22200000)) 
     \mi_addr[5]_i_2 
       (.I0(M_AXI_AWADDR[5]),
        .I1(mi_state[1]),
        .I2(mi_awvalid),
        .I3(mi_state[2]),
        .I4(n_0_M_AXI_WLAST_i_i_3),
        .I5(\n_0_next_mi_addr_reg[5] ),
        .O(\n_0_mi_addr[5]_i_2 ));
LUT5 #(
    .INIT(32'h0000FFF8)) 
     \mi_addr_d1[5]_i_1 
       (.I0(O4),
        .I1(m_axi_wready),
        .I2(load_mi_d2),
        .I3(load_mi_d1),
        .I4(load_mi_ptr),
        .O(\n_0_mi_addr_d1[5]_i_1 ));
FDRE \mi_addr_d1_reg[0] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_addr_reg[0] ),
        .Q(\n_0_mi_addr_d1_reg[0] ),
        .R(1'b0));
FDRE \mi_addr_d1_reg[1] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_addr_reg[1] ),
        .Q(\n_0_mi_addr_d1_reg[1] ),
        .R(1'b0));
FDRE \mi_addr_d1_reg[2] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_addr_reg[2] ),
        .Q(\n_0_mi_addr_d1_reg[2] ),
        .R(1'b0));
FDRE \mi_addr_d1_reg[3] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_addr_reg[3] ),
        .Q(\n_0_mi_addr_d1_reg[3] ),
        .R(1'b0));
FDRE \mi_addr_d1_reg[4] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_addr_reg[4] ),
        .Q(\n_0_mi_addr_d1_reg[4] ),
        .R(1'b0));
FDRE \mi_addr_d1_reg[5] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_addr_reg[5] ),
        .Q(\n_0_mi_addr_d1_reg[5] ),
        .R(1'b0));
FDRE \mi_addr_reg[0] 
       (.C(I4),
        .CE(\n_0_mi_addr[5]_i_1 ),
        .D(\n_0_mi_addr[0]_i_1 ),
        .Q(\n_0_mi_addr_reg[0] ),
        .R(1'b0));
FDRE \mi_addr_reg[1] 
       (.C(I4),
        .CE(\n_0_mi_addr[5]_i_1 ),
        .D(\n_0_mi_addr[1]_i_1 ),
        .Q(\n_0_mi_addr_reg[1] ),
        .R(1'b0));
FDRE \mi_addr_reg[2] 
       (.C(I4),
        .CE(\n_0_mi_addr[5]_i_1 ),
        .D(\n_0_mi_addr[2]_i_1 ),
        .Q(\n_0_mi_addr_reg[2] ),
        .R(1'b0));
FDRE \mi_addr_reg[3] 
       (.C(I4),
        .CE(\n_0_mi_addr[5]_i_1 ),
        .D(\n_0_mi_addr[3]_i_1 ),
        .Q(\n_0_mi_addr_reg[3] ),
        .R(1'b0));
FDRE \mi_addr_reg[4] 
       (.C(I4),
        .CE(\n_0_mi_addr[5]_i_1 ),
        .D(\n_0_mi_addr[4]_i_1 ),
        .Q(\n_0_mi_addr_reg[4] ),
        .R(1'b0));
FDRE \mi_addr_reg[5] 
       (.C(I4),
        .CE(\n_0_mi_addr[5]_i_1 ),
        .D(\n_0_mi_addr[5]_i_2 ),
        .Q(\n_0_mi_addr_reg[5] ),
        .R(1'b0));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[0]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[0]_i_2 ),
        .I2(mi_wrap_be_next[0]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[15]_i_3 ),
        .I5(\n_0_mi_be[0]_i_3 ),
        .O(\n_0_mi_be[0]_i_1 ));
LUT6 #(
    .INIT(64'hFF10FF101010FF10)) 
     \mi_be[0]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[48]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[0]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF8F008F008F00)) 
     \mi_be[0]_i_3 
       (.I0(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I1(\n_0_mi_be[48]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[0]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[0]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[0]_i_4 
       (.I0(\n_0_mi_be[0]_i_5 ),
        .I1(\n_0_mi_be_reg[48] ),
        .I2(\n_0_mi_be_reg[32] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[0]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[0]_i_5 
       (.I0(\n_0_mi_be_reg[62] ),
        .I1(\n_0_mi_be_reg[56] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[63] ),
        .I5(\n_0_mi_be_reg[60] ),
        .O(\n_0_mi_be[0]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[10]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[10]_i_2 ),
        .I2(mi_wrap_be_next[10]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[15]_i_3 ),
        .I5(\n_0_mi_be[10]_i_3 ),
        .O(\n_0_mi_be[10]_i_1 ));
LUT6 #(
    .INIT(64'hFF10FF101010FF10)) 
     \mi_be[10]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[58]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[10]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF8F008F008F00)) 
     \mi_be[10]_i_3 
       (.I0(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I1(\n_0_mi_be[58]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[10]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[10]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[10]_i_4 
       (.I0(\n_0_mi_be[10]_i_5 ),
        .I1(\n_0_mi_be_reg[58] ),
        .I2(\n_0_mi_be_reg[42] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[10]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[10]_i_5 
       (.I0(\n_0_mi_be_reg[8] ),
        .I1(\n_0_mi_be_reg[2] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[9] ),
        .I5(\n_0_mi_be_reg[6] ),
        .O(\n_0_mi_be[10]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[11]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[11]_i_2 ),
        .I2(mi_wrap_be_next[11]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[15]_i_3 ),
        .I5(\n_0_mi_be[11]_i_3 ),
        .O(\n_0_mi_be[11]_i_1 ));
LUT6 #(
    .INIT(64'hFF10FF101010FF10)) 
     \mi_be[11]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[59]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[11]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF8F008F008F00)) 
     \mi_be[11]_i_3 
       (.I0(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I1(\n_0_mi_be[59]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[11]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[11]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[11]_i_4 
       (.I0(\n_0_mi_be[11]_i_5 ),
        .I1(\n_0_mi_be_reg[59] ),
        .I2(\n_0_mi_be_reg[43] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[11]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[11]_i_5 
       (.I0(\n_0_mi_be_reg[9] ),
        .I1(\n_0_mi_be_reg[3] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[10] ),
        .I5(\n_0_mi_be_reg[7] ),
        .O(\n_0_mi_be[11]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[12]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[12]_i_2 ),
        .I2(mi_wrap_be_next[12]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[15]_i_3 ),
        .I5(\n_0_mi_be[12]_i_3 ),
        .O(\n_0_mi_be[12]_i_1 ));
LUT6 #(
    .INIT(64'hFF10FF101010FF10)) 
     \mi_be[12]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[60]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[12]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF8F008F008F00)) 
     \mi_be[12]_i_3 
       (.I0(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I1(\n_0_mi_be[60]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[12]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[12]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[12]_i_4 
       (.I0(\n_0_mi_be[12]_i_5 ),
        .I1(\n_0_mi_be_reg[60] ),
        .I2(\n_0_mi_be_reg[44] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[12]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[12]_i_5 
       (.I0(\n_0_mi_be_reg[10] ),
        .I1(\n_0_mi_be_reg[4] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[11] ),
        .I5(\n_0_mi_be_reg[8] ),
        .O(\n_0_mi_be[12]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[13]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[13]_i_2 ),
        .I2(mi_wrap_be_next[13]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[15]_i_3 ),
        .I5(\n_0_mi_be[13]_i_3 ),
        .O(\n_0_mi_be[13]_i_1 ));
LUT6 #(
    .INIT(64'hFF10FF101010FF10)) 
     \mi_be[13]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[61]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[13]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF8F008F008F00)) 
     \mi_be[13]_i_3 
       (.I0(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I1(\n_0_mi_be[61]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[13]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[13]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[13]_i_4 
       (.I0(\n_0_mi_be[13]_i_5 ),
        .I1(\n_0_mi_be_reg[61] ),
        .I2(\n_0_mi_be_reg[45] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[13]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[13]_i_5 
       (.I0(\n_0_mi_be_reg[11] ),
        .I1(\n_0_mi_be_reg[5] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[12] ),
        .I5(\n_0_mi_be_reg[9] ),
        .O(\n_0_mi_be[13]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[14]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[14]_i_2 ),
        .I2(mi_wrap_be_next[14]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[15]_i_3 ),
        .I5(\n_0_mi_be[14]_i_3 ),
        .O(\n_0_mi_be[14]_i_1 ));
LUT6 #(
    .INIT(64'hFF10FF101010FF10)) 
     \mi_be[14]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[62]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[14]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF8F008F008F00)) 
     \mi_be[14]_i_3 
       (.I0(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I1(\n_0_mi_be[62]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[14]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[14]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[14]_i_4 
       (.I0(\n_0_mi_be[14]_i_5 ),
        .I1(\n_0_mi_be_reg[62] ),
        .I2(\n_0_mi_be_reg[46] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[14]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[14]_i_5 
       (.I0(\n_0_mi_be_reg[12] ),
        .I1(\n_0_mi_be_reg[6] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[13] ),
        .I5(\n_0_mi_be_reg[10] ),
        .O(\n_0_mi_be[14]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[15]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[15]_i_2 ),
        .I2(mi_wrap_be_next[15]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[15]_i_3 ),
        .I5(\n_0_mi_be[15]_i_4 ),
        .O(\n_0_mi_be[15]_i_1 ));
LUT6 #(
    .INIT(64'hFF10FF101010FF10)) 
     \mi_be[15]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[63]_i_7 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[15]_i_2 ));
LUT6 #(
    .INIT(64'h0008FFFF00080008)) 
     \mi_be[15]_i_3 
       (.I0(\n_0_mi_be[47]_i_5 ),
        .I1(O1[2]),
        .I2(O1[1]),
        .I3(M_AXI_AWADDR[5]),
        .I4(\n_0_next_mi_addr_reg[5] ),
        .I5(\n_0_mi_be[47]_i_6 ),
        .O(\n_0_mi_be[15]_i_3 ));
LUT6 #(
    .INIT(64'hFFFF8F008F008F00)) 
     \mi_be[15]_i_4 
       (.I0(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I1(\n_0_mi_be[63]_i_10 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[15]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[15]_i_4 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[15]_i_5 
       (.I0(\n_0_mi_be[15]_i_6 ),
        .I1(\n_0_mi_be_reg[63] ),
        .I2(\n_0_mi_be_reg[47] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[15]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[15]_i_6 
       (.I0(\n_0_mi_be_reg[13] ),
        .I1(\n_0_mi_be_reg[7] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[14] ),
        .I5(\n_0_mi_be_reg[11] ),
        .O(\n_0_mi_be[15]_i_6 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[16]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[16]_i_2 ),
        .I2(mi_wrap_be_next[16]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[31]_i_3 ),
        .I5(\n_0_mi_be[16]_i_3 ),
        .O(\n_0_mi_be[16]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[16]_i_2 
       (.I0(M_AXI_AWADDR[5]),
        .I1(M_AXI_AWADDR[4]),
        .I2(\n_0_mi_be[48]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[16]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[16]_i_3 
       (.I0(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I1(\n_0_mi_be[48]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[16]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[16]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[16]_i_4 
       (.I0(\n_0_mi_be[16]_i_5 ),
        .I1(\n_0_mi_be_reg[0] ),
        .I2(\n_0_mi_be_reg[48] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[16]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[16]_i_5 
       (.I0(\n_0_mi_be_reg[14] ),
        .I1(\n_0_mi_be_reg[8] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[15] ),
        .I5(\n_0_mi_be_reg[12] ),
        .O(\n_0_mi_be[16]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[17]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[17]_i_2 ),
        .I2(mi_wrap_be_next[17]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[31]_i_3 ),
        .I5(\n_0_mi_be[17]_i_3 ),
        .O(\n_0_mi_be[17]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[17]_i_2 
       (.I0(M_AXI_AWADDR[5]),
        .I1(M_AXI_AWADDR[4]),
        .I2(\n_0_mi_be[49]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[17]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[17]_i_3 
       (.I0(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I1(\n_0_mi_be[49]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[17]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[17]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[17]_i_4 
       (.I0(\n_0_mi_be[17]_i_5 ),
        .I1(\n_0_mi_be_reg[1] ),
        .I2(\n_0_mi_be_reg[49] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[17]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[17]_i_5 
       (.I0(\n_0_mi_be_reg[15] ),
        .I1(\n_0_mi_be_reg[9] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[16] ),
        .I5(\n_0_mi_be_reg[13] ),
        .O(\n_0_mi_be[17]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[18]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[18]_i_2 ),
        .I2(mi_wrap_be_next[18]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[31]_i_3 ),
        .I5(\n_0_mi_be[18]_i_3 ),
        .O(\n_0_mi_be[18]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[18]_i_2 
       (.I0(M_AXI_AWADDR[5]),
        .I1(M_AXI_AWADDR[4]),
        .I2(\n_0_mi_be[50]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[18]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[18]_i_3 
       (.I0(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I1(\n_0_mi_be[50]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[18]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[18]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[18]_i_4 
       (.I0(\n_0_mi_be[18]_i_5 ),
        .I1(\n_0_mi_be_reg[2] ),
        .I2(\n_0_mi_be_reg[50] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[18]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[18]_i_5 
       (.I0(\n_0_mi_be_reg[16] ),
        .I1(\n_0_mi_be_reg[10] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[17] ),
        .I5(\n_0_mi_be_reg[14] ),
        .O(\n_0_mi_be[18]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[19]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[19]_i_2 ),
        .I2(mi_wrap_be_next[19]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[31]_i_3 ),
        .I5(\n_0_mi_be[19]_i_3 ),
        .O(\n_0_mi_be[19]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[19]_i_2 
       (.I0(M_AXI_AWADDR[5]),
        .I1(M_AXI_AWADDR[4]),
        .I2(\n_0_mi_be[51]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[19]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[19]_i_3 
       (.I0(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I1(\n_0_mi_be[51]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[19]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[19]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[19]_i_4 
       (.I0(\n_0_mi_be[19]_i_5 ),
        .I1(\n_0_mi_be_reg[3] ),
        .I2(\n_0_mi_be_reg[51] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[19]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[19]_i_5 
       (.I0(\n_0_mi_be_reg[17] ),
        .I1(\n_0_mi_be_reg[11] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[18] ),
        .I5(\n_0_mi_be_reg[15] ),
        .O(\n_0_mi_be[19]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[1]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[1]_i_2 ),
        .I2(mi_wrap_be_next[1]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[15]_i_3 ),
        .I5(\n_0_mi_be[1]_i_3 ),
        .O(\n_0_mi_be[1]_i_1 ));
LUT6 #(
    .INIT(64'hFF10FF101010FF10)) 
     \mi_be[1]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[49]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[1]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF8F008F008F00)) 
     \mi_be[1]_i_3 
       (.I0(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I1(\n_0_mi_be[49]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[1]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[1]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[1]_i_4 
       (.I0(\n_0_mi_be[1]_i_5 ),
        .I1(\n_0_mi_be_reg[49] ),
        .I2(\n_0_mi_be_reg[33] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[1]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[1]_i_5 
       (.I0(\n_0_mi_be_reg[63] ),
        .I1(\n_0_mi_be_reg[57] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[0] ),
        .I5(\n_0_mi_be_reg[61] ),
        .O(\n_0_mi_be[1]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[20]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[20]_i_2 ),
        .I2(mi_wrap_be_next[20]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[31]_i_3 ),
        .I5(\n_0_mi_be[20]_i_3 ),
        .O(\n_0_mi_be[20]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[20]_i_2 
       (.I0(M_AXI_AWADDR[5]),
        .I1(M_AXI_AWADDR[4]),
        .I2(\n_0_mi_be[52]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[20]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[20]_i_3 
       (.I0(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I1(\n_0_mi_be[52]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[20]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[20]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[20]_i_4 
       (.I0(\n_0_mi_be[20]_i_5 ),
        .I1(\n_0_mi_be_reg[4] ),
        .I2(\n_0_mi_be_reg[52] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[20]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[20]_i_5 
       (.I0(\n_0_mi_be_reg[18] ),
        .I1(\n_0_mi_be_reg[12] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[19] ),
        .I5(\n_0_mi_be_reg[16] ),
        .O(\n_0_mi_be[20]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[21]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[21]_i_2 ),
        .I2(mi_wrap_be_next[21]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[31]_i_3 ),
        .I5(\n_0_mi_be[21]_i_3 ),
        .O(\n_0_mi_be[21]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[21]_i_2 
       (.I0(M_AXI_AWADDR[5]),
        .I1(M_AXI_AWADDR[4]),
        .I2(\n_0_mi_be[53]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[21]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[21]_i_3 
       (.I0(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I1(\n_0_mi_be[53]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[21]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[21]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[21]_i_4 
       (.I0(\n_0_mi_be[21]_i_5 ),
        .I1(\n_0_mi_be_reg[5] ),
        .I2(\n_0_mi_be_reg[53] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[21]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[21]_i_5 
       (.I0(\n_0_mi_be_reg[19] ),
        .I1(\n_0_mi_be_reg[13] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[20] ),
        .I5(\n_0_mi_be_reg[17] ),
        .O(\n_0_mi_be[21]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[22]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[22]_i_2 ),
        .I2(mi_wrap_be_next[22]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[31]_i_3 ),
        .I5(\n_0_mi_be[22]_i_3 ),
        .O(\n_0_mi_be[22]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[22]_i_2 
       (.I0(M_AXI_AWADDR[5]),
        .I1(M_AXI_AWADDR[4]),
        .I2(\n_0_mi_be[54]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[22]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[22]_i_3 
       (.I0(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I1(\n_0_mi_be[54]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[22]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[22]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[22]_i_4 
       (.I0(\n_0_mi_be[22]_i_5 ),
        .I1(\n_0_mi_be_reg[6] ),
        .I2(\n_0_mi_be_reg[54] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[22]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[22]_i_5 
       (.I0(\n_0_mi_be_reg[20] ),
        .I1(\n_0_mi_be_reg[14] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[21] ),
        .I5(\n_0_mi_be_reg[18] ),
        .O(\n_0_mi_be[22]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[23]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[23]_i_2 ),
        .I2(mi_wrap_be_next[23]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[31]_i_3 ),
        .I5(\n_0_mi_be[23]_i_3 ),
        .O(\n_0_mi_be[23]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[23]_i_2 
       (.I0(M_AXI_AWADDR[5]),
        .I1(M_AXI_AWADDR[4]),
        .I2(\n_0_mi_be[55]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[23]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[23]_i_3 
       (.I0(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I1(\n_0_mi_be[55]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[23]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[23]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[23]_i_4 
       (.I0(\n_0_mi_be[23]_i_5 ),
        .I1(\n_0_mi_be_reg[7] ),
        .I2(\n_0_mi_be_reg[55] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[23]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[23]_i_5 
       (.I0(\n_0_mi_be_reg[21] ),
        .I1(\n_0_mi_be_reg[15] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[22] ),
        .I5(\n_0_mi_be_reg[19] ),
        .O(\n_0_mi_be[23]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[24]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[24]_i_2 ),
        .I2(mi_wrap_be_next[24]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[31]_i_3 ),
        .I5(\n_0_mi_be[24]_i_3 ),
        .O(\n_0_mi_be[24]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[24]_i_2 
       (.I0(M_AXI_AWADDR[5]),
        .I1(M_AXI_AWADDR[4]),
        .I2(\n_0_mi_be[56]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[24]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[24]_i_3 
       (.I0(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I1(\n_0_mi_be[56]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[24]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[24]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[24]_i_4 
       (.I0(\n_0_mi_be[24]_i_5 ),
        .I1(\n_0_mi_be_reg[8] ),
        .I2(\n_0_mi_be_reg[56] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[24]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[24]_i_5 
       (.I0(\n_0_mi_be_reg[22] ),
        .I1(\n_0_mi_be_reg[16] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[23] ),
        .I5(\n_0_mi_be_reg[20] ),
        .O(\n_0_mi_be[24]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[25]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[25]_i_2 ),
        .I2(mi_wrap_be_next[25]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[31]_i_3 ),
        .I5(\n_0_mi_be[25]_i_3 ),
        .O(\n_0_mi_be[25]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[25]_i_2 
       (.I0(M_AXI_AWADDR[5]),
        .I1(M_AXI_AWADDR[4]),
        .I2(\n_0_mi_be[57]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[25]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[25]_i_3 
       (.I0(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I1(\n_0_mi_be[57]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[25]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[25]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[25]_i_4 
       (.I0(\n_0_mi_be[25]_i_5 ),
        .I1(\n_0_mi_be_reg[9] ),
        .I2(\n_0_mi_be_reg[57] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[25]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[25]_i_5 
       (.I0(\n_0_mi_be_reg[23] ),
        .I1(\n_0_mi_be_reg[17] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[24] ),
        .I5(\n_0_mi_be_reg[21] ),
        .O(\n_0_mi_be[25]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[26]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[26]_i_2 ),
        .I2(mi_wrap_be_next[26]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[31]_i_3 ),
        .I5(\n_0_mi_be[26]_i_3 ),
        .O(\n_0_mi_be[26]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[26]_i_2 
       (.I0(M_AXI_AWADDR[5]),
        .I1(M_AXI_AWADDR[4]),
        .I2(\n_0_mi_be[58]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[26]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[26]_i_3 
       (.I0(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I1(\n_0_mi_be[58]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[26]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[26]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[26]_i_4 
       (.I0(\n_0_mi_be[26]_i_5 ),
        .I1(\n_0_mi_be_reg[10] ),
        .I2(\n_0_mi_be_reg[58] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[26]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[26]_i_5 
       (.I0(\n_0_mi_be_reg[24] ),
        .I1(\n_0_mi_be_reg[18] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[25] ),
        .I5(\n_0_mi_be_reg[22] ),
        .O(\n_0_mi_be[26]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[27]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[27]_i_2 ),
        .I2(mi_wrap_be_next[27]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[31]_i_3 ),
        .I5(\n_0_mi_be[27]_i_3 ),
        .O(\n_0_mi_be[27]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[27]_i_2 
       (.I0(M_AXI_AWADDR[5]),
        .I1(M_AXI_AWADDR[4]),
        .I2(\n_0_mi_be[59]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[27]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[27]_i_3 
       (.I0(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I1(\n_0_mi_be[59]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[27]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[27]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[27]_i_4 
       (.I0(\n_0_mi_be[27]_i_5 ),
        .I1(\n_0_mi_be_reg[11] ),
        .I2(\n_0_mi_be_reg[59] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[27]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[27]_i_5 
       (.I0(\n_0_mi_be_reg[25] ),
        .I1(\n_0_mi_be_reg[19] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[26] ),
        .I5(\n_0_mi_be_reg[23] ),
        .O(\n_0_mi_be[27]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[28]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[28]_i_2 ),
        .I2(mi_wrap_be_next[28]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[31]_i_3 ),
        .I5(\n_0_mi_be[28]_i_3 ),
        .O(\n_0_mi_be[28]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[28]_i_2 
       (.I0(M_AXI_AWADDR[5]),
        .I1(M_AXI_AWADDR[4]),
        .I2(\n_0_mi_be[60]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[28]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[28]_i_3 
       (.I0(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I1(\n_0_mi_be[60]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[28]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[28]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[28]_i_4 
       (.I0(\n_0_mi_be[28]_i_5 ),
        .I1(\n_0_mi_be_reg[12] ),
        .I2(\n_0_mi_be_reg[60] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[28]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[28]_i_5 
       (.I0(\n_0_mi_be_reg[26] ),
        .I1(\n_0_mi_be_reg[20] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[27] ),
        .I5(\n_0_mi_be_reg[24] ),
        .O(\n_0_mi_be[28]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[29]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[29]_i_2 ),
        .I2(mi_wrap_be_next[29]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[31]_i_3 ),
        .I5(\n_0_mi_be[29]_i_3 ),
        .O(\n_0_mi_be[29]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[29]_i_2 
       (.I0(M_AXI_AWADDR[5]),
        .I1(M_AXI_AWADDR[4]),
        .I2(\n_0_mi_be[61]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[29]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[29]_i_3 
       (.I0(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I1(\n_0_mi_be[61]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[29]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[29]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[29]_i_4 
       (.I0(\n_0_mi_be[29]_i_5 ),
        .I1(\n_0_mi_be_reg[13] ),
        .I2(\n_0_mi_be_reg[61] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[29]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[29]_i_5 
       (.I0(\n_0_mi_be_reg[27] ),
        .I1(\n_0_mi_be_reg[21] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[28] ),
        .I5(\n_0_mi_be_reg[25] ),
        .O(\n_0_mi_be[29]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[2]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[2]_i_2 ),
        .I2(mi_wrap_be_next[2]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[15]_i_3 ),
        .I5(\n_0_mi_be[2]_i_3 ),
        .O(\n_0_mi_be[2]_i_1 ));
LUT6 #(
    .INIT(64'hFF10FF101010FF10)) 
     \mi_be[2]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[50]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[2]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF8F008F008F00)) 
     \mi_be[2]_i_3 
       (.I0(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I1(\n_0_mi_be[50]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[2]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[2]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[2]_i_4 
       (.I0(\n_0_mi_be[2]_i_5 ),
        .I1(\n_0_mi_be_reg[50] ),
        .I2(\n_0_mi_be_reg[34] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[2]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[2]_i_5 
       (.I0(\n_0_mi_be_reg[0] ),
        .I1(\n_0_mi_be_reg[58] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[1] ),
        .I5(\n_0_mi_be_reg[62] ),
        .O(\n_0_mi_be[2]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[30]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[30]_i_2 ),
        .I2(mi_wrap_be_next[30]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[31]_i_3 ),
        .I5(\n_0_mi_be[30]_i_3 ),
        .O(\n_0_mi_be[30]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[30]_i_2 
       (.I0(M_AXI_AWADDR[5]),
        .I1(M_AXI_AWADDR[4]),
        .I2(\n_0_mi_be[62]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[30]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[30]_i_3 
       (.I0(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I1(\n_0_mi_be[62]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[30]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[30]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[30]_i_4 
       (.I0(\n_0_mi_be[30]_i_5 ),
        .I1(\n_0_mi_be_reg[14] ),
        .I2(\n_0_mi_be_reg[62] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[30]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[30]_i_5 
       (.I0(\n_0_mi_be_reg[28] ),
        .I1(\n_0_mi_be_reg[22] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[29] ),
        .I5(\n_0_mi_be_reg[26] ),
        .O(\n_0_mi_be[30]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[31]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[31]_i_2 ),
        .I2(mi_wrap_be_next[31]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[31]_i_3 ),
        .I5(\n_0_mi_be[31]_i_4 ),
        .O(\n_0_mi_be[31]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[31]_i_2 
       (.I0(M_AXI_AWADDR[5]),
        .I1(M_AXI_AWADDR[4]),
        .I2(\n_0_mi_be[63]_i_7 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[31]_i_2 ));
LUT6 #(
    .INIT(64'h0008FFFF00080008)) 
     \mi_be[31]_i_3 
       (.I0(\n_0_mi_be[63]_i_8 ),
        .I1(O1[2]),
        .I2(O1[1]),
        .I3(M_AXI_AWADDR[5]),
        .I4(\n_0_next_mi_addr_reg[5] ),
        .I5(\n_0_mi_be[63]_i_9 ),
        .O(\n_0_mi_be[31]_i_3 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[31]_i_4 
       (.I0(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I1(\n_0_mi_be[63]_i_10 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[31]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[31]_i_4 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[31]_i_5 
       (.I0(\n_0_mi_be[31]_i_6 ),
        .I1(\n_0_mi_be_reg[15] ),
        .I2(\n_0_mi_be_reg[63] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[31]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[31]_i_6 
       (.I0(\n_0_mi_be_reg[29] ),
        .I1(\n_0_mi_be_reg[23] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[30] ),
        .I5(\n_0_mi_be_reg[27] ),
        .O(\n_0_mi_be[31]_i_6 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[32]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[32]_i_2 ),
        .I2(mi_wrap_be_next[32]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[47]_i_3 ),
        .I5(\n_0_mi_be[32]_i_3 ),
        .O(\n_0_mi_be[32]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[32]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[48]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[32]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[32]_i_3 
       (.I0(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I1(\n_0_mi_be[48]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[32]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[32]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[32]_i_4 
       (.I0(\n_0_mi_be[32]_i_5 ),
        .I1(\n_0_mi_be_reg[16] ),
        .I2(\n_0_mi_be_reg[0] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[32]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[32]_i_5 
       (.I0(\n_0_mi_be_reg[30] ),
        .I1(\n_0_mi_be_reg[24] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[31] ),
        .I5(\n_0_mi_be_reg[28] ),
        .O(\n_0_mi_be[32]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[33]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[33]_i_2 ),
        .I2(mi_wrap_be_next[33]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[47]_i_3 ),
        .I5(\n_0_mi_be[33]_i_3 ),
        .O(\n_0_mi_be[33]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[33]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[49]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[33]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[33]_i_3 
       (.I0(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I1(\n_0_mi_be[49]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[33]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[33]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[33]_i_4 
       (.I0(\n_0_mi_be[33]_i_5 ),
        .I1(\n_0_mi_be_reg[17] ),
        .I2(\n_0_mi_be_reg[1] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[33]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[33]_i_5 
       (.I0(\n_0_mi_be_reg[31] ),
        .I1(\n_0_mi_be_reg[25] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[32] ),
        .I5(\n_0_mi_be_reg[29] ),
        .O(\n_0_mi_be[33]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[34]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[34]_i_2 ),
        .I2(mi_wrap_be_next[34]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[47]_i_3 ),
        .I5(\n_0_mi_be[34]_i_3 ),
        .O(\n_0_mi_be[34]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[34]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[50]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[34]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[34]_i_3 
       (.I0(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I1(\n_0_mi_be[50]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[34]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[34]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[34]_i_4 
       (.I0(\n_0_mi_be[34]_i_5 ),
        .I1(\n_0_mi_be_reg[18] ),
        .I2(\n_0_mi_be_reg[2] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[34]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[34]_i_5 
       (.I0(\n_0_mi_be_reg[32] ),
        .I1(\n_0_mi_be_reg[26] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[33] ),
        .I5(\n_0_mi_be_reg[30] ),
        .O(\n_0_mi_be[34]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[35]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[35]_i_2 ),
        .I2(mi_wrap_be_next[35]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[47]_i_3 ),
        .I5(\n_0_mi_be[35]_i_3 ),
        .O(\n_0_mi_be[35]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[35]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[51]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[35]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[35]_i_3 
       (.I0(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I1(\n_0_mi_be[51]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[35]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[35]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[35]_i_4 
       (.I0(\n_0_mi_be[35]_i_5 ),
        .I1(\n_0_mi_be_reg[19] ),
        .I2(\n_0_mi_be_reg[3] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[35]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[35]_i_5 
       (.I0(\n_0_mi_be_reg[33] ),
        .I1(\n_0_mi_be_reg[27] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[34] ),
        .I5(\n_0_mi_be_reg[31] ),
        .O(\n_0_mi_be[35]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[36]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[36]_i_2 ),
        .I2(mi_wrap_be_next[36]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[47]_i_3 ),
        .I5(\n_0_mi_be[36]_i_3 ),
        .O(\n_0_mi_be[36]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[36]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[52]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[36]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[36]_i_3 
       (.I0(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I1(\n_0_mi_be[52]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[36]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[36]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[36]_i_4 
       (.I0(\n_0_mi_be[36]_i_5 ),
        .I1(\n_0_mi_be_reg[20] ),
        .I2(\n_0_mi_be_reg[4] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[36]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[36]_i_5 
       (.I0(\n_0_mi_be_reg[34] ),
        .I1(\n_0_mi_be_reg[28] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[35] ),
        .I5(\n_0_mi_be_reg[32] ),
        .O(\n_0_mi_be[36]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[37]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[37]_i_2 ),
        .I2(mi_wrap_be_next[37]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[47]_i_3 ),
        .I5(\n_0_mi_be[37]_i_3 ),
        .O(\n_0_mi_be[37]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[37]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[53]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[37]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[37]_i_3 
       (.I0(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I1(\n_0_mi_be[53]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[37]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[37]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[37]_i_4 
       (.I0(\n_0_mi_be[37]_i_5 ),
        .I1(\n_0_mi_be_reg[21] ),
        .I2(\n_0_mi_be_reg[5] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[37]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[37]_i_5 
       (.I0(\n_0_mi_be_reg[35] ),
        .I1(\n_0_mi_be_reg[29] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[36] ),
        .I5(\n_0_mi_be_reg[33] ),
        .O(\n_0_mi_be[37]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[38]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[38]_i_2 ),
        .I2(mi_wrap_be_next[38]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[47]_i_3 ),
        .I5(\n_0_mi_be[38]_i_3 ),
        .O(\n_0_mi_be[38]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[38]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[54]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[38]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[38]_i_3 
       (.I0(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I1(\n_0_mi_be[54]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[38]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[38]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[38]_i_4 
       (.I0(\n_0_mi_be[38]_i_5 ),
        .I1(\n_0_mi_be_reg[22] ),
        .I2(\n_0_mi_be_reg[6] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[38]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[38]_i_5 
       (.I0(\n_0_mi_be_reg[36] ),
        .I1(\n_0_mi_be_reg[30] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[37] ),
        .I5(\n_0_mi_be_reg[34] ),
        .O(\n_0_mi_be[38]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[39]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[39]_i_2 ),
        .I2(mi_wrap_be_next[39]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[47]_i_3 ),
        .I5(\n_0_mi_be[39]_i_3 ),
        .O(\n_0_mi_be[39]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[39]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[55]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[39]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[39]_i_3 
       (.I0(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I1(\n_0_mi_be[55]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[39]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[39]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[39]_i_4 
       (.I0(\n_0_mi_be[39]_i_5 ),
        .I1(\n_0_mi_be_reg[23] ),
        .I2(\n_0_mi_be_reg[7] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[39]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[39]_i_5 
       (.I0(\n_0_mi_be_reg[37] ),
        .I1(\n_0_mi_be_reg[31] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[38] ),
        .I5(\n_0_mi_be_reg[35] ),
        .O(\n_0_mi_be[39]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[3]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[3]_i_2 ),
        .I2(mi_wrap_be_next[3]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[15]_i_3 ),
        .I5(\n_0_mi_be[3]_i_3 ),
        .O(\n_0_mi_be[3]_i_1 ));
LUT6 #(
    .INIT(64'hFF10FF101010FF10)) 
     \mi_be[3]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[51]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[3]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF8F008F008F00)) 
     \mi_be[3]_i_3 
       (.I0(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I1(\n_0_mi_be[51]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[3]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[3]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[3]_i_4 
       (.I0(\n_0_mi_be[3]_i_5 ),
        .I1(\n_0_mi_be_reg[51] ),
        .I2(\n_0_mi_be_reg[35] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[3]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[3]_i_5 
       (.I0(\n_0_mi_be_reg[1] ),
        .I1(\n_0_mi_be_reg[59] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[2] ),
        .I5(\n_0_mi_be_reg[63] ),
        .O(\n_0_mi_be[3]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[40]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[40]_i_2 ),
        .I2(mi_wrap_be_next[40]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[47]_i_3 ),
        .I5(\n_0_mi_be[40]_i_3 ),
        .O(\n_0_mi_be[40]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[40]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[56]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[40]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[40]_i_3 
       (.I0(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I1(\n_0_mi_be[56]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[40]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[40]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[40]_i_4 
       (.I0(\n_0_mi_be[40]_i_5 ),
        .I1(\n_0_mi_be_reg[24] ),
        .I2(\n_0_mi_be_reg[8] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[40]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[40]_i_5 
       (.I0(\n_0_mi_be_reg[38] ),
        .I1(\n_0_mi_be_reg[32] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[39] ),
        .I5(\n_0_mi_be_reg[36] ),
        .O(\n_0_mi_be[40]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[41]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[41]_i_2 ),
        .I2(mi_wrap_be_next[41]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[47]_i_3 ),
        .I5(\n_0_mi_be[41]_i_3 ),
        .O(\n_0_mi_be[41]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[41]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[57]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[41]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[41]_i_3 
       (.I0(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I1(\n_0_mi_be[57]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[41]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[41]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[41]_i_4 
       (.I0(\n_0_mi_be[41]_i_5 ),
        .I1(\n_0_mi_be_reg[25] ),
        .I2(\n_0_mi_be_reg[9] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[41]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[41]_i_5 
       (.I0(\n_0_mi_be_reg[39] ),
        .I1(\n_0_mi_be_reg[33] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[40] ),
        .I5(\n_0_mi_be_reg[37] ),
        .O(\n_0_mi_be[41]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[42]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[42]_i_2 ),
        .I2(mi_wrap_be_next[42]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[47]_i_3 ),
        .I5(\n_0_mi_be[42]_i_3 ),
        .O(\n_0_mi_be[42]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[42]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[58]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[42]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[42]_i_3 
       (.I0(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I1(\n_0_mi_be[58]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[42]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[42]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[42]_i_4 
       (.I0(\n_0_mi_be[42]_i_5 ),
        .I1(\n_0_mi_be_reg[26] ),
        .I2(\n_0_mi_be_reg[10] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[42]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[42]_i_5 
       (.I0(\n_0_mi_be_reg[40] ),
        .I1(\n_0_mi_be_reg[34] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[41] ),
        .I5(\n_0_mi_be_reg[38] ),
        .O(\n_0_mi_be[42]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[43]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[43]_i_2 ),
        .I2(mi_wrap_be_next[43]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[47]_i_3 ),
        .I5(\n_0_mi_be[43]_i_3 ),
        .O(\n_0_mi_be[43]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[43]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[59]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[43]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[43]_i_3 
       (.I0(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I1(\n_0_mi_be[59]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[43]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[43]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[43]_i_4 
       (.I0(\n_0_mi_be[43]_i_5 ),
        .I1(\n_0_mi_be_reg[27] ),
        .I2(\n_0_mi_be_reg[11] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[43]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[43]_i_5 
       (.I0(\n_0_mi_be_reg[41] ),
        .I1(\n_0_mi_be_reg[35] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[42] ),
        .I5(\n_0_mi_be_reg[39] ),
        .O(\n_0_mi_be[43]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[44]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[44]_i_2 ),
        .I2(mi_wrap_be_next[44]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[47]_i_3 ),
        .I5(\n_0_mi_be[44]_i_3 ),
        .O(\n_0_mi_be[44]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[44]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[60]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[44]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[44]_i_3 
       (.I0(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I1(\n_0_mi_be[60]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[44]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[44]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[44]_i_4 
       (.I0(\n_0_mi_be[44]_i_5 ),
        .I1(\n_0_mi_be_reg[28] ),
        .I2(\n_0_mi_be_reg[12] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[44]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[44]_i_5 
       (.I0(\n_0_mi_be_reg[42] ),
        .I1(\n_0_mi_be_reg[36] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[43] ),
        .I5(\n_0_mi_be_reg[40] ),
        .O(\n_0_mi_be[44]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[45]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[45]_i_2 ),
        .I2(mi_wrap_be_next[45]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[47]_i_3 ),
        .I5(\n_0_mi_be[45]_i_3 ),
        .O(\n_0_mi_be[45]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[45]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[61]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[45]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[45]_i_3 
       (.I0(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I1(\n_0_mi_be[61]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[45]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[45]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[45]_i_4 
       (.I0(\n_0_mi_be[45]_i_5 ),
        .I1(\n_0_mi_be_reg[29] ),
        .I2(\n_0_mi_be_reg[13] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[45]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[45]_i_5 
       (.I0(\n_0_mi_be_reg[43] ),
        .I1(\n_0_mi_be_reg[37] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[44] ),
        .I5(\n_0_mi_be_reg[41] ),
        .O(\n_0_mi_be[45]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[46]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[46]_i_2 ),
        .I2(mi_wrap_be_next[46]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[47]_i_3 ),
        .I5(\n_0_mi_be[46]_i_3 ),
        .O(\n_0_mi_be[46]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[46]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[62]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[46]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[46]_i_3 
       (.I0(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I1(\n_0_mi_be[62]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[46]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[46]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[46]_i_4 
       (.I0(\n_0_mi_be[46]_i_5 ),
        .I1(\n_0_mi_be_reg[30] ),
        .I2(\n_0_mi_be_reg[14] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[46]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[46]_i_5 
       (.I0(\n_0_mi_be_reg[44] ),
        .I1(\n_0_mi_be_reg[38] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[45] ),
        .I5(\n_0_mi_be_reg[42] ),
        .O(\n_0_mi_be[46]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[47]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[47]_i_2 ),
        .I2(mi_wrap_be_next[47]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[47]_i_3 ),
        .I5(\n_0_mi_be[47]_i_4 ),
        .O(\n_0_mi_be[47]_i_1 ));
LUT6 #(
    .INIT(64'hFF40FF404040FF40)) 
     \mi_be[47]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[63]_i_7 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[47]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF008000800080)) 
     \mi_be[47]_i_3 
       (.I0(\n_0_mi_be[47]_i_5 ),
        .I1(M_AXI_AWADDR[5]),
        .I2(O1[2]),
        .I3(O1[1]),
        .I4(\n_0_next_mi_addr_reg[5] ),
        .I5(\n_0_mi_be[47]_i_6 ),
        .O(\n_0_mi_be[47]_i_3 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[47]_i_4 
       (.I0(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I1(\n_0_mi_be[63]_i_10 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[47]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[47]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair147" *) 
   LUT5 #(
    .INIT(32'h4F4F4F00)) 
     \mi_be[47]_i_5 
       (.I0(M_AXI_AWADDR[4]),
        .I1(n_0_M_AXI_WLAST_i_i_2),
        .I2(\n_0_mi_size[0]_i_2 ),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .O(\n_0_mi_be[47]_i_5 ));
LUT6 #(
    .INIT(64'h0040004000000040)) 
     \mi_be[47]_i_6 
       (.I0(size[1]),
        .I1(size[2]),
        .I2(mi_last),
        .I3(load_mi_ptr),
        .I4(\n_0_next_mi_addr_reg[4] ),
        .I5(size[0]),
        .O(\n_0_mi_be[47]_i_6 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[47]_i_7 
       (.I0(\n_0_mi_be[47]_i_8 ),
        .I1(\n_0_mi_be_reg[31] ),
        .I2(\n_0_mi_be_reg[15] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[47]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[47]_i_8 
       (.I0(\n_0_mi_be_reg[45] ),
        .I1(\n_0_mi_be_reg[39] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[46] ),
        .I5(\n_0_mi_be_reg[43] ),
        .O(\n_0_mi_be[47]_i_8 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[48]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[48]_i_2 ),
        .I2(mi_wrap_be_next[48]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[63]_i_5 ),
        .I5(\n_0_mi_be[48]_i_3 ),
        .O(\n_0_mi_be[48]_i_1 ));
LUT6 #(
    .INIT(64'hFF80FF808080FF80)) 
     \mi_be[48]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[48]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[48]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[48]_i_3 
       (.I0(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I1(\n_0_mi_be[48]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[48]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[48]_i_3 ));
LUT6 #(
    .INIT(64'h00000000F0FF0031)) 
     \mi_be[48]_i_4 
       (.I0(M_AXI_AWADDR[0]),
        .I1(M_AXI_AWADDR[1]),
        .I2(O1[0]),
        .I3(M_AXI_AWADDR[2]),
        .I4(O1[1]),
        .I5(M_AXI_AWADDR[3]),
        .O(\n_0_mi_be[48]_i_4 ));
LUT6 #(
    .INIT(64'h00000000F0FF0031)) 
     \mi_be[48]_i_5 
       (.I0(\n_0_next_mi_addr_reg[0] ),
        .I1(\n_0_next_mi_addr_reg[1] ),
        .I2(size[0]),
        .I3(\n_0_next_mi_addr_reg[2] ),
        .I4(size[1]),
        .I5(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_be[48]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[48]_i_6 
       (.I0(\n_0_mi_be[48]_i_7 ),
        .I1(\n_0_mi_be_reg[32] ),
        .I2(\n_0_mi_be_reg[16] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[48]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[48]_i_7 
       (.I0(\n_0_mi_be_reg[46] ),
        .I1(\n_0_mi_be_reg[40] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[47] ),
        .I5(\n_0_mi_be_reg[44] ),
        .O(\n_0_mi_be[48]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[49]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[49]_i_2 ),
        .I2(mi_wrap_be_next[49]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[63]_i_5 ),
        .I5(\n_0_mi_be[49]_i_3 ),
        .O(\n_0_mi_be[49]_i_1 ));
LUT6 #(
    .INIT(64'hFF80FF808080FF80)) 
     \mi_be[49]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[49]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[49]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[49]_i_3 
       (.I0(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I1(\n_0_mi_be[49]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[49]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[49]_i_3 ));
LUT6 #(
    .INIT(64'h00000000F0FF0032)) 
     \mi_be[49]_i_4 
       (.I0(M_AXI_AWADDR[0]),
        .I1(M_AXI_AWADDR[1]),
        .I2(O1[0]),
        .I3(M_AXI_AWADDR[2]),
        .I4(O1[1]),
        .I5(M_AXI_AWADDR[3]),
        .O(\n_0_mi_be[49]_i_4 ));
LUT6 #(
    .INIT(64'h00000000F0FF0032)) 
     \mi_be[49]_i_5 
       (.I0(\n_0_next_mi_addr_reg[0] ),
        .I1(\n_0_next_mi_addr_reg[1] ),
        .I2(size[0]),
        .I3(\n_0_next_mi_addr_reg[2] ),
        .I4(size[1]),
        .I5(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_be[49]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[49]_i_6 
       (.I0(\n_0_mi_be[49]_i_7 ),
        .I1(\n_0_mi_be_reg[33] ),
        .I2(\n_0_mi_be_reg[17] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[49]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[49]_i_7 
       (.I0(\n_0_mi_be_reg[47] ),
        .I1(\n_0_mi_be_reg[41] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[48] ),
        .I5(\n_0_mi_be_reg[45] ),
        .O(\n_0_mi_be[49]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[4]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[4]_i_2 ),
        .I2(mi_wrap_be_next[4]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[15]_i_3 ),
        .I5(\n_0_mi_be[4]_i_3 ),
        .O(\n_0_mi_be[4]_i_1 ));
LUT6 #(
    .INIT(64'hFF10FF101010FF10)) 
     \mi_be[4]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[52]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[4]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF8F008F008F00)) 
     \mi_be[4]_i_3 
       (.I0(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I1(\n_0_mi_be[52]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[4]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[4]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[4]_i_4 
       (.I0(\n_0_mi_be[4]_i_5 ),
        .I1(\n_0_mi_be_reg[52] ),
        .I2(\n_0_mi_be_reg[36] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[4]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[4]_i_5 
       (.I0(\n_0_mi_be_reg[2] ),
        .I1(\n_0_mi_be_reg[60] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[3] ),
        .I5(\n_0_mi_be_reg[0] ),
        .O(\n_0_mi_be[4]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[50]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[50]_i_2 ),
        .I2(mi_wrap_be_next[50]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[63]_i_5 ),
        .I5(\n_0_mi_be[50]_i_3 ),
        .O(\n_0_mi_be[50]_i_1 ));
LUT6 #(
    .INIT(64'hFF80FF808080FF80)) 
     \mi_be[50]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[50]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[50]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[50]_i_3 
       (.I0(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I1(\n_0_mi_be[50]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[50]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[50]_i_3 ));
LUT6 #(
    .INIT(64'h00000000F0FF00C4)) 
     \mi_be[50]_i_4 
       (.I0(M_AXI_AWADDR[0]),
        .I1(M_AXI_AWADDR[1]),
        .I2(O1[0]),
        .I3(M_AXI_AWADDR[2]),
        .I4(O1[1]),
        .I5(M_AXI_AWADDR[3]),
        .O(\n_0_mi_be[50]_i_4 ));
LUT6 #(
    .INIT(64'h00000000F0FF00C4)) 
     \mi_be[50]_i_5 
       (.I0(\n_0_next_mi_addr_reg[0] ),
        .I1(\n_0_next_mi_addr_reg[1] ),
        .I2(size[0]),
        .I3(\n_0_next_mi_addr_reg[2] ),
        .I4(size[1]),
        .I5(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_be[50]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[50]_i_6 
       (.I0(\n_0_mi_be[50]_i_7 ),
        .I1(\n_0_mi_be_reg[34] ),
        .I2(\n_0_mi_be_reg[18] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[50]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[50]_i_7 
       (.I0(\n_0_mi_be_reg[48] ),
        .I1(\n_0_mi_be_reg[42] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[49] ),
        .I5(\n_0_mi_be_reg[46] ),
        .O(\n_0_mi_be[50]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[51]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[51]_i_2 ),
        .I2(mi_wrap_be_next[51]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[63]_i_5 ),
        .I5(\n_0_mi_be[51]_i_3 ),
        .O(\n_0_mi_be[51]_i_1 ));
LUT6 #(
    .INIT(64'hFF80FF808080FF80)) 
     \mi_be[51]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[51]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[51]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[51]_i_3 
       (.I0(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I1(\n_0_mi_be[51]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[51]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[51]_i_3 ));
LUT6 #(
    .INIT(64'h00000000F0FF00C8)) 
     \mi_be[51]_i_4 
       (.I0(M_AXI_AWADDR[0]),
        .I1(M_AXI_AWADDR[1]),
        .I2(O1[0]),
        .I3(M_AXI_AWADDR[2]),
        .I4(O1[1]),
        .I5(M_AXI_AWADDR[3]),
        .O(\n_0_mi_be[51]_i_4 ));
LUT6 #(
    .INIT(64'h00000000F0FF00C8)) 
     \mi_be[51]_i_5 
       (.I0(\n_0_next_mi_addr_reg[0] ),
        .I1(\n_0_next_mi_addr_reg[1] ),
        .I2(size[0]),
        .I3(\n_0_next_mi_addr_reg[2] ),
        .I4(size[1]),
        .I5(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_be[51]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[51]_i_6 
       (.I0(\n_0_mi_be[51]_i_7 ),
        .I1(\n_0_mi_be_reg[35] ),
        .I2(\n_0_mi_be_reg[19] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[51]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[51]_i_7 
       (.I0(\n_0_mi_be_reg[49] ),
        .I1(\n_0_mi_be_reg[43] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[50] ),
        .I5(\n_0_mi_be_reg[47] ),
        .O(\n_0_mi_be[51]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[52]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[52]_i_2 ),
        .I2(mi_wrap_be_next[52]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[63]_i_5 ),
        .I5(\n_0_mi_be[52]_i_3 ),
        .O(\n_0_mi_be[52]_i_1 ));
LUT6 #(
    .INIT(64'hFF80FF808080FF80)) 
     \mi_be[52]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[52]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[52]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[52]_i_3 
       (.I0(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I1(\n_0_mi_be[52]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[52]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[52]_i_3 ));
LUT6 #(
    .INIT(64'h00000000FFF03100)) 
     \mi_be[52]_i_4 
       (.I0(M_AXI_AWADDR[0]),
        .I1(M_AXI_AWADDR[1]),
        .I2(O1[0]),
        .I3(M_AXI_AWADDR[2]),
        .I4(O1[1]),
        .I5(M_AXI_AWADDR[3]),
        .O(\n_0_mi_be[52]_i_4 ));
LUT6 #(
    .INIT(64'h00000000FFF03100)) 
     \mi_be[52]_i_5 
       (.I0(\n_0_next_mi_addr_reg[0] ),
        .I1(\n_0_next_mi_addr_reg[1] ),
        .I2(size[0]),
        .I3(\n_0_next_mi_addr_reg[2] ),
        .I4(size[1]),
        .I5(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_be[52]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[52]_i_6 
       (.I0(\n_0_mi_be[52]_i_7 ),
        .I1(\n_0_mi_be_reg[36] ),
        .I2(\n_0_mi_be_reg[20] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[52]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[52]_i_7 
       (.I0(\n_0_mi_be_reg[50] ),
        .I1(\n_0_mi_be_reg[44] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[51] ),
        .I5(\n_0_mi_be_reg[48] ),
        .O(\n_0_mi_be[52]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[53]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[53]_i_2 ),
        .I2(mi_wrap_be_next[53]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[63]_i_5 ),
        .I5(\n_0_mi_be[53]_i_3 ),
        .O(\n_0_mi_be[53]_i_1 ));
LUT6 #(
    .INIT(64'hFF80FF808080FF80)) 
     \mi_be[53]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[53]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[53]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[53]_i_3 
       (.I0(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I1(\n_0_mi_be[53]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[53]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[53]_i_3 ));
LUT6 #(
    .INIT(64'h00000000FFF03200)) 
     \mi_be[53]_i_4 
       (.I0(M_AXI_AWADDR[0]),
        .I1(M_AXI_AWADDR[1]),
        .I2(O1[0]),
        .I3(M_AXI_AWADDR[2]),
        .I4(O1[1]),
        .I5(M_AXI_AWADDR[3]),
        .O(\n_0_mi_be[53]_i_4 ));
LUT6 #(
    .INIT(64'h00000000FFF03200)) 
     \mi_be[53]_i_5 
       (.I0(\n_0_next_mi_addr_reg[0] ),
        .I1(\n_0_next_mi_addr_reg[1] ),
        .I2(size[0]),
        .I3(\n_0_next_mi_addr_reg[2] ),
        .I4(size[1]),
        .I5(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_be[53]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[53]_i_6 
       (.I0(\n_0_mi_be[53]_i_7 ),
        .I1(\n_0_mi_be_reg[37] ),
        .I2(\n_0_mi_be_reg[21] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[53]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[53]_i_7 
       (.I0(\n_0_mi_be_reg[51] ),
        .I1(\n_0_mi_be_reg[45] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[52] ),
        .I5(\n_0_mi_be_reg[49] ),
        .O(\n_0_mi_be[53]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[54]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[54]_i_2 ),
        .I2(mi_wrap_be_next[54]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[63]_i_5 ),
        .I5(\n_0_mi_be[54]_i_3 ),
        .O(\n_0_mi_be[54]_i_1 ));
LUT6 #(
    .INIT(64'hFF80FF808080FF80)) 
     \mi_be[54]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[54]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[54]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[54]_i_3 
       (.I0(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I1(\n_0_mi_be[54]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[54]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[54]_i_3 ));
LUT6 #(
    .INIT(64'h00000000FFF0C400)) 
     \mi_be[54]_i_4 
       (.I0(M_AXI_AWADDR[0]),
        .I1(M_AXI_AWADDR[1]),
        .I2(O1[0]),
        .I3(M_AXI_AWADDR[2]),
        .I4(O1[1]),
        .I5(M_AXI_AWADDR[3]),
        .O(\n_0_mi_be[54]_i_4 ));
LUT6 #(
    .INIT(64'h00000000FFF0C400)) 
     \mi_be[54]_i_5 
       (.I0(\n_0_next_mi_addr_reg[0] ),
        .I1(\n_0_next_mi_addr_reg[1] ),
        .I2(size[0]),
        .I3(\n_0_next_mi_addr_reg[2] ),
        .I4(size[1]),
        .I5(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_be[54]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[54]_i_6 
       (.I0(\n_0_mi_be[54]_i_7 ),
        .I1(\n_0_mi_be_reg[38] ),
        .I2(\n_0_mi_be_reg[22] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[54]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[54]_i_7 
       (.I0(\n_0_mi_be_reg[52] ),
        .I1(\n_0_mi_be_reg[46] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[53] ),
        .I5(\n_0_mi_be_reg[50] ),
        .O(\n_0_mi_be[54]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[55]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[55]_i_2 ),
        .I2(mi_wrap_be_next[55]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[63]_i_5 ),
        .I5(\n_0_mi_be[55]_i_3 ),
        .O(\n_0_mi_be[55]_i_1 ));
LUT6 #(
    .INIT(64'hFF80FF808080FF80)) 
     \mi_be[55]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[55]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[55]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[55]_i_3 
       (.I0(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I1(\n_0_mi_be[55]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[55]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[55]_i_3 ));
LUT6 #(
    .INIT(64'h00000000FFF0C800)) 
     \mi_be[55]_i_4 
       (.I0(M_AXI_AWADDR[0]),
        .I1(M_AXI_AWADDR[1]),
        .I2(O1[0]),
        .I3(M_AXI_AWADDR[2]),
        .I4(O1[1]),
        .I5(M_AXI_AWADDR[3]),
        .O(\n_0_mi_be[55]_i_4 ));
LUT6 #(
    .INIT(64'h00000000FFF0C800)) 
     \mi_be[55]_i_5 
       (.I0(\n_0_next_mi_addr_reg[0] ),
        .I1(\n_0_next_mi_addr_reg[1] ),
        .I2(size[0]),
        .I3(\n_0_next_mi_addr_reg[2] ),
        .I4(size[1]),
        .I5(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_be[55]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[55]_i_6 
       (.I0(\n_0_mi_be[55]_i_7 ),
        .I1(\n_0_mi_be_reg[39] ),
        .I2(\n_0_mi_be_reg[23] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[55]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[55]_i_7 
       (.I0(\n_0_mi_be_reg[53] ),
        .I1(\n_0_mi_be_reg[47] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[54] ),
        .I5(\n_0_mi_be_reg[51] ),
        .O(\n_0_mi_be[55]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[56]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[56]_i_2 ),
        .I2(mi_wrap_be_next[56]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[63]_i_5 ),
        .I5(\n_0_mi_be[56]_i_3 ),
        .O(\n_0_mi_be[56]_i_1 ));
LUT6 #(
    .INIT(64'hFF80FF808080FF80)) 
     \mi_be[56]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[56]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[56]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[56]_i_3 
       (.I0(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I1(\n_0_mi_be[56]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[56]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[56]_i_3 ));
LUT6 #(
    .INIT(64'hF0FF003100000000)) 
     \mi_be[56]_i_4 
       (.I0(M_AXI_AWADDR[0]),
        .I1(M_AXI_AWADDR[1]),
        .I2(O1[0]),
        .I3(M_AXI_AWADDR[2]),
        .I4(O1[1]),
        .I5(M_AXI_AWADDR[3]),
        .O(\n_0_mi_be[56]_i_4 ));
LUT6 #(
    .INIT(64'hF0FF003100000000)) 
     \mi_be[56]_i_5 
       (.I0(\n_0_next_mi_addr_reg[0] ),
        .I1(\n_0_next_mi_addr_reg[1] ),
        .I2(size[0]),
        .I3(\n_0_next_mi_addr_reg[2] ),
        .I4(size[1]),
        .I5(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_be[56]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[56]_i_6 
       (.I0(\n_0_mi_be[56]_i_7 ),
        .I1(\n_0_mi_be_reg[40] ),
        .I2(\n_0_mi_be_reg[24] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[56]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[56]_i_7 
       (.I0(\n_0_mi_be_reg[54] ),
        .I1(\n_0_mi_be_reg[48] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[55] ),
        .I5(\n_0_mi_be_reg[52] ),
        .O(\n_0_mi_be[56]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[57]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[57]_i_2 ),
        .I2(mi_wrap_be_next[57]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[63]_i_5 ),
        .I5(\n_0_mi_be[57]_i_3 ),
        .O(\n_0_mi_be[57]_i_1 ));
LUT6 #(
    .INIT(64'hFF80FF808080FF80)) 
     \mi_be[57]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[57]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[57]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[57]_i_3 
       (.I0(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I1(\n_0_mi_be[57]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[57]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[57]_i_3 ));
LUT6 #(
    .INIT(64'hF0FF003200000000)) 
     \mi_be[57]_i_4 
       (.I0(M_AXI_AWADDR[0]),
        .I1(M_AXI_AWADDR[1]),
        .I2(O1[0]),
        .I3(M_AXI_AWADDR[2]),
        .I4(O1[1]),
        .I5(M_AXI_AWADDR[3]),
        .O(\n_0_mi_be[57]_i_4 ));
LUT6 #(
    .INIT(64'hF0FF003200000000)) 
     \mi_be[57]_i_5 
       (.I0(\n_0_next_mi_addr_reg[0] ),
        .I1(\n_0_next_mi_addr_reg[1] ),
        .I2(size[0]),
        .I3(\n_0_next_mi_addr_reg[2] ),
        .I4(size[1]),
        .I5(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_be[57]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[57]_i_6 
       (.I0(\n_0_mi_be[57]_i_7 ),
        .I1(\n_0_mi_be_reg[41] ),
        .I2(\n_0_mi_be_reg[25] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[57]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[57]_i_7 
       (.I0(\n_0_mi_be_reg[55] ),
        .I1(\n_0_mi_be_reg[49] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[56] ),
        .I5(\n_0_mi_be_reg[53] ),
        .O(\n_0_mi_be[57]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[58]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[58]_i_2 ),
        .I2(mi_wrap_be_next[58]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[63]_i_5 ),
        .I5(\n_0_mi_be[58]_i_3 ),
        .O(\n_0_mi_be[58]_i_1 ));
LUT6 #(
    .INIT(64'hFF80FF808080FF80)) 
     \mi_be[58]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[58]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[58]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[58]_i_3 
       (.I0(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I1(\n_0_mi_be[58]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[58]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[58]_i_3 ));
LUT6 #(
    .INIT(64'hF0FF00C400000000)) 
     \mi_be[58]_i_4 
       (.I0(M_AXI_AWADDR[0]),
        .I1(M_AXI_AWADDR[1]),
        .I2(O1[0]),
        .I3(M_AXI_AWADDR[2]),
        .I4(O1[1]),
        .I5(M_AXI_AWADDR[3]),
        .O(\n_0_mi_be[58]_i_4 ));
LUT6 #(
    .INIT(64'hF0FF00C400000000)) 
     \mi_be[58]_i_5 
       (.I0(\n_0_next_mi_addr_reg[0] ),
        .I1(\n_0_next_mi_addr_reg[1] ),
        .I2(size[0]),
        .I3(\n_0_next_mi_addr_reg[2] ),
        .I4(size[1]),
        .I5(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_be[58]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[58]_i_6 
       (.I0(\n_0_mi_be[58]_i_7 ),
        .I1(\n_0_mi_be_reg[42] ),
        .I2(\n_0_mi_be_reg[26] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[58]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[58]_i_7 
       (.I0(\n_0_mi_be_reg[56] ),
        .I1(\n_0_mi_be_reg[50] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[57] ),
        .I5(\n_0_mi_be_reg[54] ),
        .O(\n_0_mi_be[58]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[59]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[59]_i_2 ),
        .I2(mi_wrap_be_next[59]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[63]_i_5 ),
        .I5(\n_0_mi_be[59]_i_3 ),
        .O(\n_0_mi_be[59]_i_1 ));
LUT6 #(
    .INIT(64'hFF80FF808080FF80)) 
     \mi_be[59]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[59]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[59]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[59]_i_3 
       (.I0(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I1(\n_0_mi_be[59]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[59]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[59]_i_3 ));
LUT6 #(
    .INIT(64'hF0FF00C800000000)) 
     \mi_be[59]_i_4 
       (.I0(M_AXI_AWADDR[0]),
        .I1(M_AXI_AWADDR[1]),
        .I2(O1[0]),
        .I3(M_AXI_AWADDR[2]),
        .I4(O1[1]),
        .I5(M_AXI_AWADDR[3]),
        .O(\n_0_mi_be[59]_i_4 ));
LUT6 #(
    .INIT(64'hF0FF00C800000000)) 
     \mi_be[59]_i_5 
       (.I0(\n_0_next_mi_addr_reg[0] ),
        .I1(\n_0_next_mi_addr_reg[1] ),
        .I2(size[0]),
        .I3(\n_0_next_mi_addr_reg[2] ),
        .I4(size[1]),
        .I5(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_be[59]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[59]_i_6 
       (.I0(\n_0_mi_be[59]_i_7 ),
        .I1(\n_0_mi_be_reg[43] ),
        .I2(\n_0_mi_be_reg[27] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[59]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[59]_i_7 
       (.I0(\n_0_mi_be_reg[57] ),
        .I1(\n_0_mi_be_reg[51] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[58] ),
        .I5(\n_0_mi_be_reg[55] ),
        .O(\n_0_mi_be[59]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[5]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[5]_i_2 ),
        .I2(mi_wrap_be_next[5]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[15]_i_3 ),
        .I5(\n_0_mi_be[5]_i_3 ),
        .O(\n_0_mi_be[5]_i_1 ));
LUT6 #(
    .INIT(64'hFF10FF101010FF10)) 
     \mi_be[5]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[53]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[5]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF8F008F008F00)) 
     \mi_be[5]_i_3 
       (.I0(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I1(\n_0_mi_be[53]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[5]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[5]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[5]_i_4 
       (.I0(\n_0_mi_be[5]_i_5 ),
        .I1(\n_0_mi_be_reg[53] ),
        .I2(\n_0_mi_be_reg[37] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[5]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[5]_i_5 
       (.I0(\n_0_mi_be_reg[3] ),
        .I1(\n_0_mi_be_reg[61] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[4] ),
        .I5(\n_0_mi_be_reg[1] ),
        .O(\n_0_mi_be[5]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[60]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[60]_i_2 ),
        .I2(mi_wrap_be_next[60]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[63]_i_5 ),
        .I5(\n_0_mi_be[60]_i_3 ),
        .O(\n_0_mi_be[60]_i_1 ));
LUT6 #(
    .INIT(64'hFF80FF808080FF80)) 
     \mi_be[60]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[60]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[60]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[60]_i_3 
       (.I0(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I1(\n_0_mi_be[60]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[60]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[60]_i_3 ));
LUT6 #(
    .INIT(64'hFFF0310000000000)) 
     \mi_be[60]_i_4 
       (.I0(M_AXI_AWADDR[0]),
        .I1(M_AXI_AWADDR[1]),
        .I2(O1[0]),
        .I3(M_AXI_AWADDR[2]),
        .I4(O1[1]),
        .I5(M_AXI_AWADDR[3]),
        .O(\n_0_mi_be[60]_i_4 ));
LUT6 #(
    .INIT(64'hFFF0310000000000)) 
     \mi_be[60]_i_5 
       (.I0(\n_0_next_mi_addr_reg[0] ),
        .I1(\n_0_next_mi_addr_reg[1] ),
        .I2(size[0]),
        .I3(\n_0_next_mi_addr_reg[2] ),
        .I4(size[1]),
        .I5(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_be[60]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[60]_i_6 
       (.I0(\n_0_mi_be[60]_i_7 ),
        .I1(\n_0_mi_be_reg[44] ),
        .I2(\n_0_mi_be_reg[28] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[60]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[60]_i_7 
       (.I0(\n_0_mi_be_reg[58] ),
        .I1(\n_0_mi_be_reg[52] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[59] ),
        .I5(\n_0_mi_be_reg[56] ),
        .O(\n_0_mi_be[60]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[61]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[61]_i_2 ),
        .I2(mi_wrap_be_next[61]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[63]_i_5 ),
        .I5(\n_0_mi_be[61]_i_3 ),
        .O(\n_0_mi_be[61]_i_1 ));
LUT6 #(
    .INIT(64'hFF80FF808080FF80)) 
     \mi_be[61]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[61]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[61]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[61]_i_3 
       (.I0(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I1(\n_0_mi_be[61]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[61]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[61]_i_3 ));
LUT6 #(
    .INIT(64'hFFF0320000000000)) 
     \mi_be[61]_i_4 
       (.I0(M_AXI_AWADDR[0]),
        .I1(M_AXI_AWADDR[1]),
        .I2(O1[0]),
        .I3(M_AXI_AWADDR[2]),
        .I4(O1[1]),
        .I5(M_AXI_AWADDR[3]),
        .O(\n_0_mi_be[61]_i_4 ));
LUT6 #(
    .INIT(64'hFFF0320000000000)) 
     \mi_be[61]_i_5 
       (.I0(\n_0_next_mi_addr_reg[0] ),
        .I1(\n_0_next_mi_addr_reg[1] ),
        .I2(size[0]),
        .I3(\n_0_next_mi_addr_reg[2] ),
        .I4(size[1]),
        .I5(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_be[61]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[61]_i_6 
       (.I0(\n_0_mi_be[61]_i_7 ),
        .I1(\n_0_mi_be_reg[45] ),
        .I2(\n_0_mi_be_reg[29] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[61]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[61]_i_7 
       (.I0(\n_0_mi_be_reg[59] ),
        .I1(\n_0_mi_be_reg[53] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[60] ),
        .I5(\n_0_mi_be_reg[57] ),
        .O(\n_0_mi_be[61]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[62]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[62]_i_2 ),
        .I2(mi_wrap_be_next[62]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[63]_i_5 ),
        .I5(\n_0_mi_be[62]_i_3 ),
        .O(\n_0_mi_be[62]_i_1 ));
LUT6 #(
    .INIT(64'hFF80FF808080FF80)) 
     \mi_be[62]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[62]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[62]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[62]_i_3 
       (.I0(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I1(\n_0_mi_be[62]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[62]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[62]_i_3 ));
LUT6 #(
    .INIT(64'hFFF0C40000000000)) 
     \mi_be[62]_i_4 
       (.I0(M_AXI_AWADDR[0]),
        .I1(M_AXI_AWADDR[1]),
        .I2(O1[0]),
        .I3(M_AXI_AWADDR[2]),
        .I4(O1[1]),
        .I5(M_AXI_AWADDR[3]),
        .O(\n_0_mi_be[62]_i_4 ));
LUT6 #(
    .INIT(64'hFFF0C40000000000)) 
     \mi_be[62]_i_5 
       (.I0(\n_0_next_mi_addr_reg[0] ),
        .I1(\n_0_next_mi_addr_reg[1] ),
        .I2(size[0]),
        .I3(\n_0_next_mi_addr_reg[2] ),
        .I4(size[1]),
        .I5(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_be[62]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[62]_i_6 
       (.I0(\n_0_mi_be[62]_i_7 ),
        .I1(\n_0_mi_be_reg[46] ),
        .I2(\n_0_mi_be_reg[30] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[62]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[62]_i_7 
       (.I0(\n_0_mi_be_reg[60] ),
        .I1(\n_0_mi_be_reg[54] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[61] ),
        .I5(\n_0_mi_be_reg[58] ),
        .O(\n_0_mi_be[62]_i_7 ));
LUT4 #(
    .INIT(16'hFFA8)) 
     \mi_be[63]_i_1 
       (.I0(mi_buf_en),
        .I1(\n_0_mi_burst_reg[0] ),
        .I2(\n_0_mi_burst_reg[1] ),
        .I3(\n_0_mi_burst[1]_i_1 ),
        .O(\n_0_mi_be[63]_i_1 ));
LUT6 #(
    .INIT(64'hFFF0C80000000000)) 
     \mi_be[63]_i_10 
       (.I0(\n_0_next_mi_addr_reg[0] ),
        .I1(\n_0_next_mi_addr_reg[1] ),
        .I2(size[0]),
        .I3(\n_0_next_mi_addr_reg[2] ),
        .I4(size[1]),
        .I5(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_be[63]_i_10 ));
LUT4 #(
    .INIT(16'h4404)) 
     \mi_be[63]_i_11 
       (.I0(load_mi_ptr),
        .I1(mi_last),
        .I2(size[2]),
        .I3(size[1]),
        .O(\n_0_mi_be[63]_i_11 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[63]_i_12 
       (.I0(\n_0_mi_be[63]_i_14 ),
        .I1(\n_0_mi_be_reg[47] ),
        .I2(\n_0_mi_be_reg[31] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[63]));
LUT6 #(
    .INIT(64'hAAAAAAA8AAAAAAAA)) 
     \mi_be[63]_i_13 
       (.I0(\n_0_mi_ptr[6]_i_5 ),
        .I1(\n_0_mi_wrap_cnt[3]_i_12 ),
        .I2(mi_wrap_cnt[3]),
        .I3(mi_wrap_cnt[2]),
        .I4(\n_0_mi_burst_reg[0] ),
        .I5(\n_0_mi_burst_reg[1] ),
        .O(\n_0_mi_be[63]_i_13 ));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[63]_i_14 
       (.I0(\n_0_mi_be_reg[61] ),
        .I1(\n_0_mi_be_reg[55] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[62] ),
        .I5(\n_0_mi_be_reg[59] ),
        .O(\n_0_mi_be[63]_i_14 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[63]_i_2 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[63]_i_3 ),
        .I2(mi_wrap_be_next[63]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[63]_i_5 ),
        .I5(\n_0_mi_be[63]_i_6 ),
        .O(\n_0_mi_be[63]_i_2 ));
LUT6 #(
    .INIT(64'hFF80FF808080FF80)) 
     \mi_be[63]_i_3 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[63]_i_7 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[63]_i_3 ));
LUT6 #(
    .INIT(64'h0000000200000000)) 
     \mi_be[63]_i_4 
       (.I0(\n_0_mi_ptr[6]_i_5 ),
        .I1(\n_0_mi_wrap_cnt[3]_i_12 ),
        .I2(mi_wrap_cnt[3]),
        .I3(mi_wrap_cnt[2]),
        .I4(\n_0_mi_burst_reg[0] ),
        .I5(\n_0_mi_burst_reg[1] ),
        .O(\n_0_mi_be[63]_i_4 ));
LUT6 #(
    .INIT(64'hFFFF008000800080)) 
     \mi_be[63]_i_5 
       (.I0(\n_0_mi_be[63]_i_8 ),
        .I1(M_AXI_AWADDR[5]),
        .I2(O1[2]),
        .I3(O1[1]),
        .I4(\n_0_next_mi_addr_reg[5] ),
        .I5(\n_0_mi_be[63]_i_9 ),
        .O(\n_0_mi_be[63]_i_5 ));
LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
     \mi_be[63]_i_6 
       (.I0(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I1(\n_0_mi_be[63]_i_10 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[63]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[63]_i_6 ));
LUT6 #(
    .INIT(64'hFFF0C80000000000)) 
     \mi_be[63]_i_7 
       (.I0(M_AXI_AWADDR[0]),
        .I1(M_AXI_AWADDR[1]),
        .I2(O1[0]),
        .I3(M_AXI_AWADDR[2]),
        .I4(O1[1]),
        .I5(M_AXI_AWADDR[3]),
        .O(\n_0_mi_be[63]_i_7 ));
(* SOFT_HLUTNM = "soft_lutpair147" *) 
   LUT5 #(
    .INIT(32'h8F8F8F00)) 
     \mi_be[63]_i_8 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(M_AXI_AWADDR[4]),
        .I2(\n_0_mi_size[0]_i_2 ),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .O(\n_0_mi_be[63]_i_8 ));
LUT6 #(
    .INIT(64'h0040004000400000)) 
     \mi_be[63]_i_9 
       (.I0(size[1]),
        .I1(size[2]),
        .I2(mi_last),
        .I3(load_mi_ptr),
        .I4(\n_0_next_mi_addr_reg[4] ),
        .I5(size[0]),
        .O(\n_0_mi_be[63]_i_9 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[6]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[6]_i_2 ),
        .I2(mi_wrap_be_next[6]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[15]_i_3 ),
        .I5(\n_0_mi_be[6]_i_3 ),
        .O(\n_0_mi_be[6]_i_1 ));
LUT6 #(
    .INIT(64'hFF10FF101010FF10)) 
     \mi_be[6]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[54]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[6]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF8F008F008F00)) 
     \mi_be[6]_i_3 
       (.I0(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I1(\n_0_mi_be[54]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[6]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[6]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[6]_i_4 
       (.I0(\n_0_mi_be[6]_i_5 ),
        .I1(\n_0_mi_be_reg[54] ),
        .I2(\n_0_mi_be_reg[38] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[6]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[6]_i_5 
       (.I0(\n_0_mi_be_reg[4] ),
        .I1(\n_0_mi_be_reg[62] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[5] ),
        .I5(\n_0_mi_be_reg[2] ),
        .O(\n_0_mi_be[6]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[7]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[7]_i_2 ),
        .I2(mi_wrap_be_next[7]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[15]_i_3 ),
        .I5(\n_0_mi_be[7]_i_3 ),
        .O(\n_0_mi_be[7]_i_1 ));
LUT6 #(
    .INIT(64'hFF10FF101010FF10)) 
     \mi_be[7]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[55]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[7]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF8F008F008F00)) 
     \mi_be[7]_i_3 
       (.I0(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I1(\n_0_mi_be[55]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[7]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[7]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[7]_i_4 
       (.I0(\n_0_mi_be[7]_i_5 ),
        .I1(\n_0_mi_be_reg[55] ),
        .I2(\n_0_mi_be_reg[39] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[7]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[7]_i_5 
       (.I0(\n_0_mi_be_reg[5] ),
        .I1(\n_0_mi_be_reg[63] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[6] ),
        .I5(\n_0_mi_be_reg[3] ),
        .O(\n_0_mi_be[7]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[8]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[8]_i_2 ),
        .I2(mi_wrap_be_next[8]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[15]_i_3 ),
        .I5(\n_0_mi_be[8]_i_3 ),
        .O(\n_0_mi_be[8]_i_1 ));
LUT6 #(
    .INIT(64'hFF10FF101010FF10)) 
     \mi_be[8]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[56]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[8]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF8F008F008F00)) 
     \mi_be[8]_i_3 
       (.I0(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I1(\n_0_mi_be[56]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[8]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[8]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[8]_i_4 
       (.I0(\n_0_mi_be[8]_i_5 ),
        .I1(\n_0_mi_be_reg[56] ),
        .I2(\n_0_mi_be_reg[40] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[8]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[8]_i_5 
       (.I0(\n_0_mi_be_reg[6] ),
        .I1(\n_0_mi_be_reg[0] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[7] ),
        .I5(\n_0_mi_be_reg[4] ),
        .O(\n_0_mi_be[8]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
     \mi_be[9]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_be[9]_i_2 ),
        .I2(mi_wrap_be_next[9]),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(\n_0_mi_be[15]_i_3 ),
        .I5(\n_0_mi_be[9]_i_3 ),
        .O(\n_0_mi_be[9]_i_1 ));
LUT6 #(
    .INIT(64'hFF10FF101010FF10)) 
     \mi_be[9]_i_2 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_be[57]_i_4 ),
        .I3(O1[2]),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_be[9]_i_2 ));
LUT6 #(
    .INIT(64'hFFFF8F008F008F00)) 
     \mi_be[9]_i_3 
       (.I0(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I1(\n_0_mi_be[57]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_be[63]_i_11 ),
        .I4(f_mi_be_rot[9]),
        .I5(\n_0_mi_be[63]_i_13 ),
        .O(\n_0_mi_be[9]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAAF0CCAAAA)) 
     \mi_be[9]_i_4 
       (.I0(\n_0_mi_be[9]_i_5 ),
        .I1(\n_0_mi_be_reg[57] ),
        .I2(\n_0_mi_be_reg[41] ),
        .I3(size__0[0]),
        .I4(size__0[2]),
        .I5(size__0[1]),
        .O(f_mi_be_rot[9]));
LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
     \mi_be[9]_i_5 
       (.I0(\n_0_mi_be_reg[7] ),
        .I1(\n_0_mi_be_reg[1] ),
        .I2(size__0[1]),
        .I3(size__0[0]),
        .I4(\n_0_mi_be_reg[8] ),
        .I5(\n_0_mi_be_reg[5] ),
        .O(\n_0_mi_be[9]_i_5 ));
FDRE \mi_be_d1_reg[0] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[0] ),
        .Q(\n_0_mi_be_d1_reg[0] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[10] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[10] ),
        .Q(\n_0_mi_be_d1_reg[10] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[11] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[11] ),
        .Q(\n_0_mi_be_d1_reg[11] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[12] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[12] ),
        .Q(\n_0_mi_be_d1_reg[12] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[13] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[13] ),
        .Q(\n_0_mi_be_d1_reg[13] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[14] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[14] ),
        .Q(\n_0_mi_be_d1_reg[14] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[15] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[15] ),
        .Q(\n_0_mi_be_d1_reg[15] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[16] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[16] ),
        .Q(\n_0_mi_be_d1_reg[16] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[17] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[17] ),
        .Q(\n_0_mi_be_d1_reg[17] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[18] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[18] ),
        .Q(\n_0_mi_be_d1_reg[18] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[19] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[19] ),
        .Q(\n_0_mi_be_d1_reg[19] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[1] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[1] ),
        .Q(\n_0_mi_be_d1_reg[1] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[20] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[20] ),
        .Q(\n_0_mi_be_d1_reg[20] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[21] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[21] ),
        .Q(\n_0_mi_be_d1_reg[21] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[22] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[22] ),
        .Q(\n_0_mi_be_d1_reg[22] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[23] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[23] ),
        .Q(\n_0_mi_be_d1_reg[23] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[24] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[24] ),
        .Q(\n_0_mi_be_d1_reg[24] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[25] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[25] ),
        .Q(\n_0_mi_be_d1_reg[25] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[26] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[26] ),
        .Q(\n_0_mi_be_d1_reg[26] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[27] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[27] ),
        .Q(\n_0_mi_be_d1_reg[27] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[28] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[28] ),
        .Q(\n_0_mi_be_d1_reg[28] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[29] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[29] ),
        .Q(\n_0_mi_be_d1_reg[29] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[2] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[2] ),
        .Q(\n_0_mi_be_d1_reg[2] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[30] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[30] ),
        .Q(\n_0_mi_be_d1_reg[30] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[31] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[31] ),
        .Q(\n_0_mi_be_d1_reg[31] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[32] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[32] ),
        .Q(\n_0_mi_be_d1_reg[32] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[33] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[33] ),
        .Q(\n_0_mi_be_d1_reg[33] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[34] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[34] ),
        .Q(\n_0_mi_be_d1_reg[34] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[35] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[35] ),
        .Q(\n_0_mi_be_d1_reg[35] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[36] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[36] ),
        .Q(\n_0_mi_be_d1_reg[36] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[37] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[37] ),
        .Q(\n_0_mi_be_d1_reg[37] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[38] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[38] ),
        .Q(\n_0_mi_be_d1_reg[38] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[39] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[39] ),
        .Q(\n_0_mi_be_d1_reg[39] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[3] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[3] ),
        .Q(\n_0_mi_be_d1_reg[3] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[40] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[40] ),
        .Q(\n_0_mi_be_d1_reg[40] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[41] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[41] ),
        .Q(\n_0_mi_be_d1_reg[41] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[42] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[42] ),
        .Q(\n_0_mi_be_d1_reg[42] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[43] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[43] ),
        .Q(\n_0_mi_be_d1_reg[43] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[44] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[44] ),
        .Q(\n_0_mi_be_d1_reg[44] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[45] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[45] ),
        .Q(\n_0_mi_be_d1_reg[45] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[46] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[46] ),
        .Q(\n_0_mi_be_d1_reg[46] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[47] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[47] ),
        .Q(\n_0_mi_be_d1_reg[47] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[48] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[48] ),
        .Q(\n_0_mi_be_d1_reg[48] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[49] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[49] ),
        .Q(\n_0_mi_be_d1_reg[49] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[4] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[4] ),
        .Q(\n_0_mi_be_d1_reg[4] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[50] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[50] ),
        .Q(\n_0_mi_be_d1_reg[50] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[51] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[51] ),
        .Q(\n_0_mi_be_d1_reg[51] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[52] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[52] ),
        .Q(\n_0_mi_be_d1_reg[52] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[53] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[53] ),
        .Q(\n_0_mi_be_d1_reg[53] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[54] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[54] ),
        .Q(\n_0_mi_be_d1_reg[54] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[55] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[55] ),
        .Q(\n_0_mi_be_d1_reg[55] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[56] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[56] ),
        .Q(\n_0_mi_be_d1_reg[56] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[57] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[57] ),
        .Q(\n_0_mi_be_d1_reg[57] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[58] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[58] ),
        .Q(\n_0_mi_be_d1_reg[58] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[59] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[59] ),
        .Q(\n_0_mi_be_d1_reg[59] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[5] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[5] ),
        .Q(\n_0_mi_be_d1_reg[5] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[60] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[60] ),
        .Q(\n_0_mi_be_d1_reg[60] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[61] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[61] ),
        .Q(\n_0_mi_be_d1_reg[61] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[62] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[62] ),
        .Q(\n_0_mi_be_d1_reg[62] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[63] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[63] ),
        .Q(\n_0_mi_be_d1_reg[63] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[6] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[6] ),
        .Q(\n_0_mi_be_d1_reg[6] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[7] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[7] ),
        .Q(\n_0_mi_be_d1_reg[7] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[8] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[8] ),
        .Q(\n_0_mi_be_d1_reg[8] ),
        .R(1'b0));
FDRE \mi_be_d1_reg[9] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_be_reg[9] ),
        .Q(\n_0_mi_be_d1_reg[9] ),
        .R(1'b0));
FDRE \mi_be_reg[0] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[0]_i_1 ),
        .Q(\n_0_mi_be_reg[0] ),
        .R(1'b0));
FDRE \mi_be_reg[10] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[10]_i_1 ),
        .Q(\n_0_mi_be_reg[10] ),
        .R(1'b0));
FDRE \mi_be_reg[11] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[11]_i_1 ),
        .Q(\n_0_mi_be_reg[11] ),
        .R(1'b0));
FDRE \mi_be_reg[12] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[12]_i_1 ),
        .Q(\n_0_mi_be_reg[12] ),
        .R(1'b0));
FDRE \mi_be_reg[13] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[13]_i_1 ),
        .Q(\n_0_mi_be_reg[13] ),
        .R(1'b0));
FDRE \mi_be_reg[14] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[14]_i_1 ),
        .Q(\n_0_mi_be_reg[14] ),
        .R(1'b0));
FDRE \mi_be_reg[15] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[15]_i_1 ),
        .Q(\n_0_mi_be_reg[15] ),
        .R(1'b0));
FDRE \mi_be_reg[16] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[16]_i_1 ),
        .Q(\n_0_mi_be_reg[16] ),
        .R(1'b0));
FDRE \mi_be_reg[17] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[17]_i_1 ),
        .Q(\n_0_mi_be_reg[17] ),
        .R(1'b0));
FDRE \mi_be_reg[18] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[18]_i_1 ),
        .Q(\n_0_mi_be_reg[18] ),
        .R(1'b0));
FDRE \mi_be_reg[19] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[19]_i_1 ),
        .Q(\n_0_mi_be_reg[19] ),
        .R(1'b0));
FDRE \mi_be_reg[1] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[1]_i_1 ),
        .Q(\n_0_mi_be_reg[1] ),
        .R(1'b0));
FDRE \mi_be_reg[20] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[20]_i_1 ),
        .Q(\n_0_mi_be_reg[20] ),
        .R(1'b0));
FDRE \mi_be_reg[21] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[21]_i_1 ),
        .Q(\n_0_mi_be_reg[21] ),
        .R(1'b0));
FDRE \mi_be_reg[22] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[22]_i_1 ),
        .Q(\n_0_mi_be_reg[22] ),
        .R(1'b0));
FDRE \mi_be_reg[23] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[23]_i_1 ),
        .Q(\n_0_mi_be_reg[23] ),
        .R(1'b0));
FDRE \mi_be_reg[24] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[24]_i_1 ),
        .Q(\n_0_mi_be_reg[24] ),
        .R(1'b0));
FDRE \mi_be_reg[25] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[25]_i_1 ),
        .Q(\n_0_mi_be_reg[25] ),
        .R(1'b0));
FDRE \mi_be_reg[26] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[26]_i_1 ),
        .Q(\n_0_mi_be_reg[26] ),
        .R(1'b0));
FDRE \mi_be_reg[27] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[27]_i_1 ),
        .Q(\n_0_mi_be_reg[27] ),
        .R(1'b0));
FDRE \mi_be_reg[28] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[28]_i_1 ),
        .Q(\n_0_mi_be_reg[28] ),
        .R(1'b0));
FDRE \mi_be_reg[29] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[29]_i_1 ),
        .Q(\n_0_mi_be_reg[29] ),
        .R(1'b0));
FDRE \mi_be_reg[2] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[2]_i_1 ),
        .Q(\n_0_mi_be_reg[2] ),
        .R(1'b0));
FDRE \mi_be_reg[30] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[30]_i_1 ),
        .Q(\n_0_mi_be_reg[30] ),
        .R(1'b0));
FDRE \mi_be_reg[31] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[31]_i_1 ),
        .Q(\n_0_mi_be_reg[31] ),
        .R(1'b0));
FDRE \mi_be_reg[32] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[32]_i_1 ),
        .Q(\n_0_mi_be_reg[32] ),
        .R(1'b0));
FDRE \mi_be_reg[33] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[33]_i_1 ),
        .Q(\n_0_mi_be_reg[33] ),
        .R(1'b0));
FDRE \mi_be_reg[34] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[34]_i_1 ),
        .Q(\n_0_mi_be_reg[34] ),
        .R(1'b0));
FDRE \mi_be_reg[35] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[35]_i_1 ),
        .Q(\n_0_mi_be_reg[35] ),
        .R(1'b0));
FDRE \mi_be_reg[36] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[36]_i_1 ),
        .Q(\n_0_mi_be_reg[36] ),
        .R(1'b0));
FDRE \mi_be_reg[37] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[37]_i_1 ),
        .Q(\n_0_mi_be_reg[37] ),
        .R(1'b0));
FDRE \mi_be_reg[38] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[38]_i_1 ),
        .Q(\n_0_mi_be_reg[38] ),
        .R(1'b0));
FDRE \mi_be_reg[39] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[39]_i_1 ),
        .Q(\n_0_mi_be_reg[39] ),
        .R(1'b0));
FDRE \mi_be_reg[3] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[3]_i_1 ),
        .Q(\n_0_mi_be_reg[3] ),
        .R(1'b0));
FDRE \mi_be_reg[40] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[40]_i_1 ),
        .Q(\n_0_mi_be_reg[40] ),
        .R(1'b0));
FDRE \mi_be_reg[41] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[41]_i_1 ),
        .Q(\n_0_mi_be_reg[41] ),
        .R(1'b0));
FDRE \mi_be_reg[42] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[42]_i_1 ),
        .Q(\n_0_mi_be_reg[42] ),
        .R(1'b0));
FDRE \mi_be_reg[43] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[43]_i_1 ),
        .Q(\n_0_mi_be_reg[43] ),
        .R(1'b0));
FDRE \mi_be_reg[44] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[44]_i_1 ),
        .Q(\n_0_mi_be_reg[44] ),
        .R(1'b0));
FDRE \mi_be_reg[45] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[45]_i_1 ),
        .Q(\n_0_mi_be_reg[45] ),
        .R(1'b0));
FDRE \mi_be_reg[46] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[46]_i_1 ),
        .Q(\n_0_mi_be_reg[46] ),
        .R(1'b0));
FDRE \mi_be_reg[47] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[47]_i_1 ),
        .Q(\n_0_mi_be_reg[47] ),
        .R(1'b0));
FDRE \mi_be_reg[48] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[48]_i_1 ),
        .Q(\n_0_mi_be_reg[48] ),
        .R(1'b0));
FDRE \mi_be_reg[49] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[49]_i_1 ),
        .Q(\n_0_mi_be_reg[49] ),
        .R(1'b0));
FDRE \mi_be_reg[4] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[4]_i_1 ),
        .Q(\n_0_mi_be_reg[4] ),
        .R(1'b0));
FDRE \mi_be_reg[50] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[50]_i_1 ),
        .Q(\n_0_mi_be_reg[50] ),
        .R(1'b0));
FDRE \mi_be_reg[51] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[51]_i_1 ),
        .Q(\n_0_mi_be_reg[51] ),
        .R(1'b0));
FDRE \mi_be_reg[52] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[52]_i_1 ),
        .Q(\n_0_mi_be_reg[52] ),
        .R(1'b0));
FDRE \mi_be_reg[53] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[53]_i_1 ),
        .Q(\n_0_mi_be_reg[53] ),
        .R(1'b0));
FDRE \mi_be_reg[54] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[54]_i_1 ),
        .Q(\n_0_mi_be_reg[54] ),
        .R(1'b0));
FDRE \mi_be_reg[55] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[55]_i_1 ),
        .Q(\n_0_mi_be_reg[55] ),
        .R(1'b0));
FDRE \mi_be_reg[56] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[56]_i_1 ),
        .Q(\n_0_mi_be_reg[56] ),
        .R(1'b0));
FDRE \mi_be_reg[57] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[57]_i_1 ),
        .Q(\n_0_mi_be_reg[57] ),
        .R(1'b0));
FDRE \mi_be_reg[58] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[58]_i_1 ),
        .Q(\n_0_mi_be_reg[58] ),
        .R(1'b0));
FDRE \mi_be_reg[59] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[59]_i_1 ),
        .Q(\n_0_mi_be_reg[59] ),
        .R(1'b0));
FDRE \mi_be_reg[5] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[5]_i_1 ),
        .Q(\n_0_mi_be_reg[5] ),
        .R(1'b0));
FDRE \mi_be_reg[60] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[60]_i_1 ),
        .Q(\n_0_mi_be_reg[60] ),
        .R(1'b0));
FDRE \mi_be_reg[61] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[61]_i_1 ),
        .Q(\n_0_mi_be_reg[61] ),
        .R(1'b0));
FDRE \mi_be_reg[62] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[62]_i_1 ),
        .Q(\n_0_mi_be_reg[62] ),
        .R(1'b0));
FDRE \mi_be_reg[63] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[63]_i_2 ),
        .Q(\n_0_mi_be_reg[63] ),
        .R(1'b0));
FDRE \mi_be_reg[6] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[6]_i_1 ),
        .Q(\n_0_mi_be_reg[6] ),
        .R(1'b0));
FDRE \mi_be_reg[7] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[7]_i_1 ),
        .Q(\n_0_mi_be_reg[7] ),
        .R(1'b0));
FDRE \mi_be_reg[8] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[8]_i_1 ),
        .Q(\n_0_mi_be_reg[8] ),
        .R(1'b0));
FDRE \mi_be_reg[9] 
       (.C(I4),
        .CE(\n_0_mi_be[63]_i_1 ),
        .D(\n_0_mi_be[9]_i_1 ),
        .Q(\n_0_mi_be_reg[9] ),
        .R(1'b0));
(* SOFT_HLUTNM = "soft_lutpair260" *) 
   LUT1 #(
    .INIT(2'h1)) 
     \mi_buf[0]_i_1 
       (.I0(mi_buf_addr[7]),
        .O(\n_0_mi_buf[0]_i_1 ));
LUT5 #(
    .INIT(32'hAAAAAA80)) 
     \mi_buf[1]_i_1 
       (.I0(mi_last),
        .I1(O4),
        .I2(m_axi_wready),
        .I3(load_mi_d2),
        .I4(load_mi_d1),
        .O(mi_buf0));
(* SOFT_HLUTNM = "soft_lutpair260" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \mi_buf[1]_i_2 
       (.I0(mi_buf_addr[7]),
        .I1(mi_buf_addr[8]),
        .O(\n_0_mi_buf[1]_i_2 ));
FDRE \mi_buf_reg[0] 
       (.C(I4),
        .CE(mi_buf0),
        .D(\n_0_mi_buf[0]_i_1 ),
        .Q(mi_buf_addr[7]),
        .R(m_fifo_rst));
FDRE \mi_buf_reg[1] 
       (.C(I4),
        .CE(mi_buf0),
        .D(\n_0_mi_buf[1]_i_2 ),
        .Q(mi_buf_addr[8]),
        .R(m_fifo_rst));
LUT6 #(
    .INIT(64'hEEEFFFFF22200000)) 
     \mi_burst[0]_i_1 
       (.I0(O2[0]),
        .I1(mi_state[1]),
        .I2(mi_awvalid),
        .I3(mi_state[2]),
        .I4(n_0_M_AXI_WLAST_i_i_3),
        .I5(next_mi_burst[0]),
        .O(\n_0_mi_burst[0]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFEEE0000)) 
     \mi_burst[1]_i_1 
       (.I0(load_mi_d1),
        .I1(load_mi_d2),
        .I2(m_axi_wready),
        .I3(O4),
        .I4(mi_last),
        .I5(load_mi_ptr),
        .O(\n_0_mi_burst[1]_i_1 ));
LUT6 #(
    .INIT(64'hEEEFFFFF22200000)) 
     \mi_burst[1]_i_2 
       (.I0(O2[1]),
        .I1(mi_state[1]),
        .I2(mi_awvalid),
        .I3(mi_state[2]),
        .I4(n_0_M_AXI_WLAST_i_i_3),
        .I5(next_mi_burst[1]),
        .O(\n_0_mi_burst[1]_i_2 ));
FDRE \mi_burst_reg[0] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_burst[0]_i_1 ),
        .Q(\n_0_mi_burst_reg[0] ),
        .R(1'b0));
FDRE \mi_burst_reg[1] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_burst[1]_i_2 ),
        .Q(\n_0_mi_burst_reg[1] ),
        .R(1'b0));
FDRE mi_first_d1_reg
       (.C(I4),
        .CE(1'b1),
        .D(I40),
        .Q(mi_first_d1),
        .R(1'b0));
FDRE mi_first_reg
       (.C(I4),
        .CE(1'b1),
        .D(I39),
        .Q(mi_first),
        .R(1'b0));
FDRE mi_last_d1_reg
       (.C(I4),
        .CE(1'b1),
        .D(I36),
        .Q(O5),
        .R(m_fifo_rst));
LUT6 #(
    .INIT(64'h1110000000000000)) 
     mi_last_i_2
       (.I0(D[3]),
        .I1(D[2]),
        .I2(\n_0_mi_wcnt[7]_i_5 ),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(n_0_mi_last_i_5),
        .I5(n_0_M_AXI_WLAST_i_i_2),
        .O(O8));
(* SOFT_HLUTNM = "soft_lutpair158" *) 
   LUT5 #(
    .INIT(32'h00000002)) 
     mi_last_i_3
       (.I0(n_0_mi_last_i_6),
        .I1(\n_0_next_mi_len_reg[6] ),
        .I2(\n_0_next_mi_len_reg[4] ),
        .I3(p_6_in),
        .I4(\n_0_next_mi_len_reg[2] ),
        .O(O10));
LUT6 #(
    .INIT(64'h0000000000000100)) 
     mi_last_i_4
       (.I0(mi_wcnt[6]),
        .I1(mi_wcnt[7]),
        .I2(mi_wcnt[1]),
        .I3(mi_wcnt[0]),
        .I4(mi_last),
        .I5(\n_0_mi_wcnt[7]_i_6 ),
        .O(O15));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     mi_last_i_5
       (.I0(D[1]),
        .I1(D[0]),
        .I2(D[6]),
        .I3(D[7]),
        .I4(D[4]),
        .I5(D[5]),
        .O(n_0_mi_last_i_5));
LUT6 #(
    .INIT(64'h0000000000001000)) 
     mi_last_i_6
       (.I0(\n_0_next_mi_len_reg[5] ),
        .I1(\n_0_next_mi_len_reg[7] ),
        .I2(next_valid),
        .I3(mi_last),
        .I4(\n_0_next_mi_len_reg[0] ),
        .I5(\n_0_next_mi_len_reg[1] ),
        .O(n_0_mi_last_i_6));
LUT6 #(
    .INIT(64'hEEEFFFFF22200000)) 
     \mi_last_index_reg_d0[0]_i_1 
       (.I0(mi_last_index_reg[0]),
        .I1(mi_state[1]),
        .I2(mi_awvalid),
        .I3(mi_state[2]),
        .I4(n_0_M_AXI_WLAST_i_i_3),
        .I5(next_mi_last_index_reg[0]),
        .O(\n_0_mi_last_index_reg_d0[0]_i_1 ));
LUT6 #(
    .INIT(64'hEEEFFFFF22200000)) 
     \mi_last_index_reg_d0[1]_i_1 
       (.I0(mi_last_index_reg[1]),
        .I1(mi_state[1]),
        .I2(mi_awvalid),
        .I3(mi_state[2]),
        .I4(n_0_M_AXI_WLAST_i_i_3),
        .I5(next_mi_last_index_reg[1]),
        .O(\n_0_mi_last_index_reg_d0[1]_i_1 ));
LUT6 #(
    .INIT(64'hEEEFFFFF22200000)) 
     \mi_last_index_reg_d0[2]_i_1 
       (.I0(mi_last_index_reg[2]),
        .I1(mi_state[1]),
        .I2(mi_awvalid),
        .I3(mi_state[2]),
        .I4(n_0_M_AXI_WLAST_i_i_3),
        .I5(next_mi_last_index_reg[2]),
        .O(\n_0_mi_last_index_reg_d0[2]_i_1 ));
LUT6 #(
    .INIT(64'hEEEFFFFF22200000)) 
     \mi_last_index_reg_d0[3]_i_1 
       (.I0(mi_last_index_reg[3]),
        .I1(mi_state[1]),
        .I2(mi_awvalid),
        .I3(mi_state[2]),
        .I4(n_0_M_AXI_WLAST_i_i_3),
        .I5(next_mi_last_index_reg[3]),
        .O(\n_0_mi_last_index_reg_d0[3]_i_1 ));
LUT6 #(
    .INIT(64'hEEEFFFFF22200000)) 
     \mi_last_index_reg_d0[4]_i_1 
       (.I0(mi_last_index_reg[4]),
        .I1(mi_state[1]),
        .I2(mi_awvalid),
        .I3(mi_state[2]),
        .I4(n_0_M_AXI_WLAST_i_i_3),
        .I5(next_mi_last_index_reg[4]),
        .O(\n_0_mi_last_index_reg_d0[4]_i_1 ));
LUT6 #(
    .INIT(64'hEEEFFFFF22200000)) 
     \mi_last_index_reg_d0[5]_i_1 
       (.I0(mi_last_index_reg[5]),
        .I1(mi_state[1]),
        .I2(mi_awvalid),
        .I3(mi_state[2]),
        .I4(n_0_M_AXI_WLAST_i_i_3),
        .I5(next_mi_last_index_reg[5]),
        .O(\n_0_mi_last_index_reg_d0[5]_i_1 ));
FDRE \mi_last_index_reg_d0_reg[0] 
       (.C(I4),
        .CE(\n_0_mi_addr[5]_i_1 ),
        .D(\n_0_mi_last_index_reg_d0[0]_i_1 ),
        .Q(\n_0_mi_last_index_reg_d0_reg[0] ),
        .R(1'b0));
FDRE \mi_last_index_reg_d0_reg[1] 
       (.C(I4),
        .CE(\n_0_mi_addr[5]_i_1 ),
        .D(\n_0_mi_last_index_reg_d0[1]_i_1 ),
        .Q(\n_0_mi_last_index_reg_d0_reg[1] ),
        .R(1'b0));
FDRE \mi_last_index_reg_d0_reg[2] 
       (.C(I4),
        .CE(\n_0_mi_addr[5]_i_1 ),
        .D(\n_0_mi_last_index_reg_d0[2]_i_1 ),
        .Q(\n_0_mi_last_index_reg_d0_reg[2] ),
        .R(1'b0));
FDRE \mi_last_index_reg_d0_reg[3] 
       (.C(I4),
        .CE(\n_0_mi_addr[5]_i_1 ),
        .D(\n_0_mi_last_index_reg_d0[3]_i_1 ),
        .Q(\n_0_mi_last_index_reg_d0_reg[3] ),
        .R(1'b0));
FDRE \mi_last_index_reg_d0_reg[4] 
       (.C(I4),
        .CE(\n_0_mi_addr[5]_i_1 ),
        .D(\n_0_mi_last_index_reg_d0[4]_i_1 ),
        .Q(\n_0_mi_last_index_reg_d0_reg[4] ),
        .R(1'b0));
FDRE \mi_last_index_reg_d0_reg[5] 
       (.C(I4),
        .CE(\n_0_mi_addr[5]_i_1 ),
        .D(\n_0_mi_last_index_reg_d0[5]_i_1 ),
        .Q(\n_0_mi_last_index_reg_d0_reg[5] ),
        .R(1'b0));
FDRE \mi_last_index_reg_d1_reg[0] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_last_index_reg_d0_reg[0] ),
        .Q(index[0]),
        .R(1'b0));
FDRE \mi_last_index_reg_d1_reg[1] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_last_index_reg_d0_reg[1] ),
        .Q(index[1]),
        .R(1'b0));
FDRE \mi_last_index_reg_d1_reg[2] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_last_index_reg_d0_reg[2] ),
        .Q(index[2]),
        .R(1'b0));
FDRE \mi_last_index_reg_d1_reg[3] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_last_index_reg_d0_reg[3] ),
        .Q(index[3]),
        .R(1'b0));
FDRE \mi_last_index_reg_d1_reg[4] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_last_index_reg_d0_reg[4] ),
        .Q(index[4]),
        .R(1'b0));
FDRE \mi_last_index_reg_d1_reg[5] 
       (.C(I4),
        .CE(\n_0_mi_addr_d1[5]_i_1 ),
        .D(\n_0_mi_last_index_reg_d0_reg[5] ),
        .Q(index[5]),
        .R(1'b0));
FDRE mi_last_reg
       (.C(I4),
        .CE(1'b1),
        .D(I35),
        .Q(mi_last),
        .R(m_fifo_rst));
LUT6 #(
    .INIT(64'hBABBAAABAAABAAAB)) 
     \mi_ptr[0]_i_1 
       (.I0(\n_0_mi_ptr[0]_i_2 ),
        .I1(load_mi_ptr),
        .I2(mi_last),
        .I3(mi_buf_addr[0]),
        .I4(\n_0_next_mi_addr_reg[6] ),
        .I5(\n_0_mi_ptr[0]_i_3 ),
        .O(\n_0_mi_ptr[0]_i_1 ));
LUT6 #(
    .INIT(64'hFFFF800080008000)) 
     \mi_ptr[0]_i_2 
       (.I0(\n_0_mi_ptr[0]_i_4 ),
        .I1(M_AXI_AWADDR[6]),
        .I2(D[3]),
        .I3(\n_0_mi_ptr[0]_i_5 ),
        .I4(\n_0_mi_ptr[2]_i_2 ),
        .I5(\n_0_mi_ptr[0]_i_6 ),
        .O(\n_0_mi_ptr[0]_i_2 ));
LUT6 #(
    .INIT(64'h0FA0F0C000A0F0C0)) 
     \mi_ptr[0]_i_3 
       (.I0(\n_0_next_mi_len_reg[1] ),
        .I1(\n_0_next_mi_len_reg[2] ),
        .I2(size[2]),
        .I3(size[1]),
        .I4(size[0]),
        .I5(p_6_in),
        .O(\n_0_mi_ptr[0]_i_3 ));
LUT6 #(
    .INIT(64'h000000000E0E0E00)) 
     \mi_ptr[0]_i_4 
       (.I0(\n_0_mi_wcnt[7]_i_4 ),
        .I1(\n_0_mi_wcnt[7]_i_5 ),
        .I2(O1[2]),
        .I3(mi_awvalid),
        .I4(mi_state[2]),
        .I5(\n_0_mi_wrap_be_next[3]_i_5 ),
        .O(\n_0_mi_ptr[0]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair188" *) 
   LUT3 #(
    .INIT(8'hF8)) 
     \mi_ptr[0]_i_5 
       (.I0(O1[0]),
        .I1(O1[1]),
        .I2(O1[2]),
        .O(\n_0_mi_ptr[0]_i_5 ));
LUT6 #(
    .INIT(64'h00AAA08800000000)) 
     \mi_ptr[0]_i_6 
       (.I0(M_AXI_AWADDR[6]),
        .I1(D[2]),
        .I2(D[1]),
        .I3(O1[0]),
        .I4(O1[1]),
        .I5(O1[2]),
        .O(\n_0_mi_ptr[0]_i_6 ));
LUT6 #(
    .INIT(64'hFFFFFFFFF4000000)) 
     \mi_ptr[1]_i_1 
       (.I0(O1[1]),
        .I1(load_mi_ptr),
        .I2(\n_0_mi_size[2]_i_2 ),
        .I3(M_AXI_AWADDR[7]),
        .I4(\n_0_mi_ptr[1]_i_2 ),
        .I5(\n_0_mi_ptr[1]_i_3 ),
        .O(\n_0_mi_ptr[1]_i_1 ));
LUT6 #(
    .INIT(64'h20AA202220882000)) 
     \mi_ptr[1]_i_2 
       (.I0(O1[2]),
        .I1(O1[0]),
        .I2(D[1]),
        .I3(O1[1]),
        .I4(D[2]),
        .I5(D[3]),
        .O(\n_0_mi_ptr[1]_i_2 ));
LUT6 #(
    .INIT(64'h0000000088880FF0)) 
     \mi_ptr[1]_i_3 
       (.I0(\n_0_mi_ptr[1]_i_4 ),
        .I1(\n_0_next_mi_addr_reg[7] ),
        .I2(mi_buf_addr[0]),
        .I3(mi_buf_addr[1]),
        .I4(mi_last),
        .I5(load_mi_ptr),
        .O(\n_0_mi_ptr[1]_i_3 ));
LUT6 #(
    .INIT(64'h0C0CFA0A00000000)) 
     \mi_ptr[1]_i_4 
       (.I0(p_6_in),
        .I1(\n_0_next_mi_len_reg[2] ),
        .I2(size[1]),
        .I3(\n_0_next_mi_len_reg[1] ),
        .I4(size[0]),
        .I5(size[2]),
        .O(\n_0_mi_ptr[1]_i_4 ));
LUT6 #(
    .INIT(64'hFFF8F8F8F8F8F8F8)) 
     \mi_ptr[2]_i_1 
       (.I0(\n_0_mi_ptr[2]_i_2 ),
        .I1(\n_0_mi_ptr[2]_i_3 ),
        .I2(\n_0_mi_ptr[2]_i_4 ),
        .I3(\n_0_next_mi_addr_reg[8] ),
        .I4(\n_0_mi_ptr[2]_i_5 ),
        .I5(\n_0_mi_ptr[2]_i_6 ),
        .O(\n_0_mi_ptr[2]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFFFFF11100000)) 
     \mi_ptr[2]_i_2 
       (.I0(O1[1]),
        .I1(mi_state[1]),
        .I2(mi_awvalid),
        .I3(mi_state[2]),
        .I4(n_0_M_AXI_WLAST_i_i_3),
        .I5(\n_0_mi_size[2]_i_2 ),
        .O(\n_0_mi_ptr[2]_i_2 ));
LUT6 #(
    .INIT(64'h0A80008000000000)) 
     \mi_ptr[2]_i_3 
       (.I0(M_AXI_AWADDR[8]),
        .I1(D[2]),
        .I2(O1[1]),
        .I3(O1[0]),
        .I4(D[3]),
        .I5(O1[2]),
        .O(\n_0_mi_ptr[2]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair144" *) 
   LUT5 #(
    .INIT(32'h01101010)) 
     \mi_ptr[2]_i_4 
       (.I0(load_mi_ptr),
        .I1(mi_last),
        .I2(mi_buf_addr[2]),
        .I3(mi_buf_addr[1]),
        .I4(mi_buf_addr[0]),
        .O(\n_0_mi_ptr[2]_i_4 ));
LUT5 #(
    .INIT(32'hAAAA222A)) 
     \mi_ptr[2]_i_5 
       (.I0(mi_last),
        .I1(n_0_M_AXI_WLAST_i_i_3),
        .I2(mi_state[2]),
        .I3(mi_awvalid),
        .I4(mi_state[1]),
        .O(\n_0_mi_ptr[2]_i_5 ));
(* SOFT_HLUTNM = "soft_lutpair150" *) 
   LUT5 #(
    .INIT(32'h38080000)) 
     \mi_ptr[2]_i_6 
       (.I0(\n_0_next_mi_len_reg[2] ),
        .I1(size[1]),
        .I2(size[0]),
        .I3(p_6_in),
        .I4(size[2]),
        .O(\n_0_mi_ptr[2]_i_6 ));
LUT6 #(
    .INIT(64'h0110101010101010)) 
     \mi_ptr[3]_i_1 
       (.I0(load_mi_ptr),
        .I1(mi_last),
        .I2(mi_buf_addr[3]),
        .I3(mi_buf_addr[0]),
        .I4(mi_buf_addr[1]),
        .I5(mi_buf_addr[2]),
        .O(\n_0_mi_ptr[3]_i_1 ));
LUT6 #(
    .INIT(64'h2888888888888888)) 
     \mi_ptr[4]_i_1 
       (.I0(\n_0_mi_ptr[6]_i_5 ),
        .I1(mi_buf_addr[4]),
        .I2(mi_buf_addr[2]),
        .I3(mi_buf_addr[1]),
        .I4(mi_buf_addr[0]),
        .I5(mi_buf_addr[3]),
        .O(\n_0_mi_ptr[4]_i_1 ));
LUT6 #(
    .INIT(64'h0110101010101010)) 
     \mi_ptr[5]_i_1 
       (.I0(load_mi_ptr),
        .I1(mi_last),
        .I2(mi_buf_addr[5]),
        .I3(mi_buf_addr[4]),
        .I4(mi_buf_addr[3]),
        .I5(\n_0_mi_ptr[6]_i_6 ),
        .O(\n_0_mi_ptr[5]_i_1 ));
LUT4 #(
    .INIT(16'hFFA2)) 
     \mi_ptr[6]_i_1 
       (.I0(load_mi_ptr),
        .I1(O2[1]),
        .I2(O2[0]),
        .I3(\n_0_mi_ptr[6]_i_4 ),
        .O(\n_0_mi_ptr[6]_i_1 ));
LUT5 #(
    .INIT(32'hEEEFAAAA)) 
     \mi_ptr[6]_i_2 
       (.I0(\n_0_mi_burst[1]_i_1 ),
        .I1(\n_0_mi_be_reg[63] ),
        .I2(\n_0_mi_burst_reg[0] ),
        .I3(\n_0_mi_burst_reg[1] ),
        .I4(mi_buf_en),
        .O(\n_0_mi_ptr[6]_i_2 ));
LUT6 #(
    .INIT(64'h2888888888888888)) 
     \mi_ptr[6]_i_3 
       (.I0(\n_0_mi_ptr[6]_i_5 ),
        .I1(mi_buf_addr[6]),
        .I2(mi_buf_addr[3]),
        .I3(mi_buf_addr[4]),
        .I4(mi_buf_addr[5]),
        .I5(\n_0_mi_ptr[6]_i_6 ),
        .O(\n_0_mi_ptr[6]_i_3 ));
LUT6 #(
    .INIT(64'hFFD00000D0D00000)) 
     \mi_ptr[6]_i_4 
       (.I0(next_mi_burst[1]),
        .I1(next_mi_burst[0]),
        .I2(\n_0_mi_ptr[2]_i_5 ),
        .I3(\n_0_mi_be[63]_i_4 ),
        .I4(mi_buf_en),
        .I5(\n_0_mi_ptr[6]_i_7 ),
        .O(\n_0_mi_ptr[6]_i_4 ));
LUT5 #(
    .INIT(32'h55551115)) 
     \mi_ptr[6]_i_5 
       (.I0(mi_last),
        .I1(n_0_M_AXI_WLAST_i_i_3),
        .I2(mi_state[2]),
        .I3(mi_awvalid),
        .I4(mi_state[1]),
        .O(\n_0_mi_ptr[6]_i_5 ));
(* SOFT_HLUTNM = "soft_lutpair144" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \mi_ptr[6]_i_6 
       (.I0(mi_buf_addr[0]),
        .I1(mi_buf_addr[1]),
        .I2(mi_buf_addr[2]),
        .O(\n_0_mi_ptr[6]_i_6 ));
LUT2 #(
    .INIT(4'hE)) 
     \mi_ptr[6]_i_7 
       (.I0(\n_0_mi_burst_reg[0] ),
        .I1(\n_0_mi_burst_reg[1] ),
        .O(\n_0_mi_ptr[6]_i_7 ));
FDRE \mi_ptr_reg[0] 
       (.C(I4),
        .CE(\n_0_mi_ptr[6]_i_2 ),
        .D(\n_0_mi_ptr[0]_i_1 ),
        .Q(mi_buf_addr[0]),
        .R(\n_0_mi_ptr[6]_i_1 ));
FDRE \mi_ptr_reg[1] 
       (.C(I4),
        .CE(\n_0_mi_ptr[6]_i_2 ),
        .D(\n_0_mi_ptr[1]_i_1 ),
        .Q(mi_buf_addr[1]),
        .R(\n_0_mi_ptr[6]_i_1 ));
FDRE \mi_ptr_reg[2] 
       (.C(I4),
        .CE(\n_0_mi_ptr[6]_i_2 ),
        .D(\n_0_mi_ptr[2]_i_1 ),
        .Q(mi_buf_addr[2]),
        .R(\n_0_mi_ptr[6]_i_1 ));
FDRE \mi_ptr_reg[3] 
       (.C(I4),
        .CE(\n_0_mi_ptr[6]_i_2 ),
        .D(\n_0_mi_ptr[3]_i_1 ),
        .Q(mi_buf_addr[3]),
        .R(\n_0_mi_ptr[6]_i_1 ));
FDRE \mi_ptr_reg[4] 
       (.C(I4),
        .CE(\n_0_mi_ptr[6]_i_2 ),
        .D(\n_0_mi_ptr[4]_i_1 ),
        .Q(mi_buf_addr[4]),
        .R(\n_0_mi_ptr[6]_i_1 ));
FDRE \mi_ptr_reg[5] 
       (.C(I4),
        .CE(\n_0_mi_ptr[6]_i_2 ),
        .D(\n_0_mi_ptr[5]_i_1 ),
        .Q(mi_buf_addr[5]),
        .R(\n_0_mi_ptr[6]_i_1 ));
FDRE \mi_ptr_reg[6] 
       (.C(I4),
        .CE(\n_0_mi_ptr[6]_i_2 ),
        .D(\n_0_mi_ptr[6]_i_3 ),
        .Q(mi_buf_addr[6]),
        .R(\n_0_mi_ptr[6]_i_1 ));
LUT5 #(
    .INIT(32'h4F4F4FCC)) 
     \mi_size[0]_i_1 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(size[0]),
        .I2(\n_0_mi_size[0]_i_2 ),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .O(\n_0_mi_size[0]_i_1 ));
LUT4 #(
    .INIT(16'hFF1F)) 
     \mi_size[0]_i_2 
       (.I0(mi_awvalid),
        .I1(mi_state[2]),
        .I2(O1[0]),
        .I3(mi_state[1]),
        .O(\n_0_mi_size[0]_i_2 ));
LUT5 #(
    .INIT(32'h4F4F4FCC)) 
     \mi_size[1]_i_1 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(size[1]),
        .I2(\n_0_mi_size[1]_i_2 ),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .O(\n_0_mi_size[1]_i_1 ));
LUT4 #(
    .INIT(16'hFF1F)) 
     \mi_size[1]_i_2 
       (.I0(mi_awvalid),
        .I1(mi_state[2]),
        .I2(O1[1]),
        .I3(mi_state[1]),
        .O(\n_0_mi_size[1]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFABFF0000)) 
     \mi_size[2]_i_1 
       (.I0(mi_state[1]),
        .I1(mi_awvalid),
        .I2(mi_state[2]),
        .I3(n_0_M_AXI_WLAST_i_i_3),
        .I4(size[2]),
        .I5(\n_0_mi_size[2]_i_2 ),
        .O(\n_0_mi_size[2]_i_1 ));
LUT6 #(
    .INIT(64'h0E000E000E000000)) 
     \mi_size[2]_i_2 
       (.I0(\n_0_mi_wcnt[7]_i_5 ),
        .I1(\n_0_mi_wcnt[7]_i_4 ),
        .I2(mi_state[1]),
        .I3(O1[2]),
        .I4(mi_state[2]),
        .I5(mi_awvalid),
        .O(\n_0_mi_size[2]_i_2 ));
FDRE \mi_size_reg[0] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_size[0]_i_1 ),
        .Q(size__0[0]),
        .R(1'b0));
FDRE \mi_size_reg[1] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_size[1]_i_1 ),
        .Q(size__0[1]),
        .R(1'b0));
FDRE \mi_size_reg[2] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_size[2]_i_1 ),
        .Q(size__0[2]),
        .R(1'b0));
LUT5 #(
    .INIT(32'hD1D1D155)) 
     \mi_wcnt[0]_i_1 
       (.I0(\n_0_mi_wcnt[0]_i_2 ),
        .I1(n_0_M_AXI_WLAST_i_i_2),
        .I2(D[0]),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .O(\n_0_mi_wcnt[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair174" *) 
   LUT3 #(
    .INIT(8'h3A)) 
     \mi_wcnt[0]_i_2 
       (.I0(mi_wcnt[0]),
        .I1(\n_0_next_mi_len_reg[0] ),
        .I2(mi_last),
        .O(\n_0_mi_wcnt[0]_i_2 ));
LUT5 #(
    .INIT(32'hD1D1D155)) 
     \mi_wcnt[1]_i_1 
       (.I0(\n_0_mi_wcnt[1]_i_2 ),
        .I1(n_0_M_AXI_WLAST_i_i_2),
        .I2(D[1]),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .O(\n_0_mi_wcnt[1]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair174" *) 
   LUT4 #(
    .INIT(16'h0F66)) 
     \mi_wcnt[1]_i_2 
       (.I0(mi_wcnt[0]),
        .I1(mi_wcnt[1]),
        .I2(\n_0_next_mi_len_reg[1] ),
        .I3(mi_last),
        .O(\n_0_mi_wcnt[1]_i_2 ));
LUT5 #(
    .INIT(32'hD1D1D155)) 
     \mi_wcnt[2]_i_1 
       (.I0(\n_0_mi_wcnt[2]_i_2 ),
        .I1(n_0_M_AXI_WLAST_i_i_2),
        .I2(D[2]),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .O(\n_0_mi_wcnt[2]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair132" *) 
   LUT5 #(
    .INIT(32'h00FF1E1E)) 
     \mi_wcnt[2]_i_2 
       (.I0(mi_wcnt[1]),
        .I1(mi_wcnt[0]),
        .I2(mi_wcnt[2]),
        .I3(\n_0_next_mi_len_reg[2] ),
        .I4(mi_last),
        .O(\n_0_mi_wcnt[2]_i_2 ));
LUT5 #(
    .INIT(32'hD1D1D155)) 
     \mi_wcnt[3]_i_1 
       (.I0(\n_0_mi_wcnt[3]_i_2 ),
        .I1(n_0_M_AXI_WLAST_i_i_2),
        .I2(D[3]),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .O(\n_0_mi_wcnt[3]_i_1 ));
LUT6 #(
    .INIT(64'h0000FFFF01FE01FE)) 
     \mi_wcnt[3]_i_2 
       (.I0(mi_wcnt[2]),
        .I1(mi_wcnt[0]),
        .I2(mi_wcnt[1]),
        .I3(mi_wcnt[3]),
        .I4(p_6_in),
        .I5(mi_last),
        .O(\n_0_mi_wcnt[3]_i_2 ));
LUT5 #(
    .INIT(32'hD1D1D155)) 
     \mi_wcnt[4]_i_1 
       (.I0(\n_0_mi_wcnt[4]_i_2 ),
        .I1(n_0_M_AXI_WLAST_i_i_2),
        .I2(D[4]),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .O(\n_0_mi_wcnt[4]_i_1 ));
LUT6 #(
    .INIT(64'h0000FFFF01FE01FE)) 
     \mi_wcnt[4]_i_2 
       (.I0(\n_0_mi_wcnt[7]_i_7 ),
        .I1(mi_wcnt[2]),
        .I2(mi_wcnt[3]),
        .I3(mi_wcnt[4]),
        .I4(\n_0_next_mi_len_reg[4] ),
        .I5(mi_last),
        .O(\n_0_mi_wcnt[4]_i_2 ));
LUT5 #(
    .INIT(32'hD1D1D155)) 
     \mi_wcnt[5]_i_1 
       (.I0(\n_0_mi_wcnt[5]_i_2 ),
        .I1(n_0_M_AXI_WLAST_i_i_2),
        .I2(D[5]),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .O(\n_0_mi_wcnt[5]_i_1 ));
LUT6 #(
    .INIT(64'h4444444777777774)) 
     \mi_wcnt[5]_i_2 
       (.I0(\n_0_next_mi_len_reg[5] ),
        .I1(mi_last),
        .I2(\n_0_mi_wcnt[7]_i_7 ),
        .I3(\n_0_mi_wcnt[5]_i_3 ),
        .I4(mi_wcnt[4]),
        .I5(mi_wcnt[5]),
        .O(\n_0_mi_wcnt[5]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair173" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \mi_wcnt[5]_i_3 
       (.I0(mi_wcnt[2]),
        .I1(mi_wcnt[3]),
        .O(\n_0_mi_wcnt[5]_i_3 ));
LUT5 #(
    .INIT(32'hD1D1D155)) 
     \mi_wcnt[6]_i_1 
       (.I0(\n_0_mi_wcnt[6]_i_2 ),
        .I1(n_0_M_AXI_WLAST_i_i_2),
        .I2(D[6]),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .O(\n_0_mi_wcnt[6]_i_1 ));
LUT6 #(
    .INIT(64'h4444444777777774)) 
     \mi_wcnt[6]_i_2 
       (.I0(\n_0_next_mi_len_reg[6] ),
        .I1(mi_last),
        .I2(mi_wcnt[0]),
        .I3(mi_wcnt[1]),
        .I4(\n_0_mi_wcnt[7]_i_6 ),
        .I5(mi_wcnt[6]),
        .O(\n_0_mi_wcnt[6]_i_2 ));
LUT5 #(
    .INIT(32'hF888F8F8)) 
     \mi_wcnt[7]_i_1 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(n_0_M_AXI_WLAST_i_i_3),
        .I2(mi_buf_en),
        .I3(next_valid),
        .I4(mi_last),
        .O(\n_0_mi_wcnt[7]_i_1 ));
LUT5 #(
    .INIT(32'hD1D1D155)) 
     \mi_wcnt[7]_i_2 
       (.I0(\n_0_mi_wcnt[7]_i_3 ),
        .I1(n_0_M_AXI_WLAST_i_i_2),
        .I2(D[7]),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .O(\n_0_mi_wcnt[7]_i_2 ));
LUT6 #(
    .INIT(64'h4444444777777774)) 
     \mi_wcnt[7]_i_3 
       (.I0(\n_0_next_mi_len_reg[7] ),
        .I1(mi_last),
        .I2(\n_0_mi_wcnt[7]_i_6 ),
        .I3(mi_wcnt[6]),
        .I4(\n_0_mi_wcnt[7]_i_7 ),
        .I5(mi_wcnt[7]),
        .O(\n_0_mi_wcnt[7]_i_3 ));
LUT5 #(
    .INIT(32'h80000000)) 
     \mi_wcnt[7]_i_4 
       (.I0(mi_state[2]),
        .I1(m_axi_wready),
        .I2(O4),
        .I3(mi_state[0]),
        .I4(O6),
        .O(\n_0_mi_wcnt[7]_i_4 ));
LUT6 #(
    .INIT(64'h00000000D5555555)) 
     \mi_wcnt[7]_i_5 
       (.I0(mi_state[2]),
        .I1(O6),
        .I2(mi_awvalid),
        .I3(m_axi_wready),
        .I4(O4),
        .I5(mi_state[0]),
        .O(\n_0_mi_wcnt[7]_i_5 ));
(* SOFT_HLUTNM = "soft_lutpair173" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \mi_wcnt[7]_i_6 
       (.I0(mi_wcnt[5]),
        .I1(mi_wcnt[4]),
        .I2(mi_wcnt[2]),
        .I3(mi_wcnt[3]),
        .O(\n_0_mi_wcnt[7]_i_6 ));
(* SOFT_HLUTNM = "soft_lutpair132" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \mi_wcnt[7]_i_7 
       (.I0(mi_wcnt[0]),
        .I1(mi_wcnt[1]),
        .O(\n_0_mi_wcnt[7]_i_7 ));
FDRE \mi_wcnt_reg[0] 
       (.C(I4),
        .CE(\n_0_mi_wcnt[7]_i_1 ),
        .D(\n_0_mi_wcnt[0]_i_1 ),
        .Q(mi_wcnt[0]),
        .R(1'b0));
FDRE \mi_wcnt_reg[1] 
       (.C(I4),
        .CE(\n_0_mi_wcnt[7]_i_1 ),
        .D(\n_0_mi_wcnt[1]_i_1 ),
        .Q(mi_wcnt[1]),
        .R(1'b0));
FDRE \mi_wcnt_reg[2] 
       (.C(I4),
        .CE(\n_0_mi_wcnt[7]_i_1 ),
        .D(\n_0_mi_wcnt[2]_i_1 ),
        .Q(mi_wcnt[2]),
        .R(1'b0));
FDRE \mi_wcnt_reg[3] 
       (.C(I4),
        .CE(\n_0_mi_wcnt[7]_i_1 ),
        .D(\n_0_mi_wcnt[3]_i_1 ),
        .Q(mi_wcnt[3]),
        .R(1'b0));
FDRE \mi_wcnt_reg[4] 
       (.C(I4),
        .CE(\n_0_mi_wcnt[7]_i_1 ),
        .D(\n_0_mi_wcnt[4]_i_1 ),
        .Q(mi_wcnt[4]),
        .R(1'b0));
FDRE \mi_wcnt_reg[5] 
       (.C(I4),
        .CE(\n_0_mi_wcnt[7]_i_1 ),
        .D(\n_0_mi_wcnt[5]_i_1 ),
        .Q(mi_wcnt[5]),
        .R(1'b0));
FDRE \mi_wcnt_reg[6] 
       (.C(I4),
        .CE(\n_0_mi_wcnt[7]_i_1 ),
        .D(\n_0_mi_wcnt[6]_i_1 ),
        .Q(mi_wcnt[6]),
        .R(1'b0));
FDRE \mi_wcnt_reg[7] 
       (.C(I4),
        .CE(\n_0_mi_wcnt[7]_i_1 ),
        .D(\n_0_mi_wcnt[7]_i_2 ),
        .Q(mi_wcnt[7]),
        .R(1'b0));
LUT6 #(
    .INIT(64'hBBBBABBBBBBAABBA)) 
     \mi_wrap_be_next[0]_i_1 
       (.I0(\n_0_mi_wrap_be_next[0]_i_2 ),
        .I1(load_mi_ptr),
        .I2(\n_0_mi_wrap_be_next[36]_i_5 ),
        .I3(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I4(\n_0_mi_wrap_be_next[0]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[15]_i_3 ),
        .O(\n_0_mi_wrap_be_next[0]_i_1 ));
LUT6 #(
    .INIT(64'hFFF0FFFFF0F0D0D0)) 
     \mi_wrap_be_next[0]_i_2 
       (.I0(M_AXI_AWADDR[5]),
        .I1(D[1]),
        .I2(\n_0_mi_wrap_be_next[16]_i_4 ),
        .I3(\n_0_mi_wrap_be_next[0]_i_4 ),
        .I4(\n_0_mi_wrap_be_next[34]_i_5 ),
        .I5(\n_0_mi_wrap_be_next[34]_i_2 ),
        .O(\n_0_mi_wrap_be_next[0]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAEAFFAAAAEAFA)) 
     \mi_wrap_be_next[0]_i_3 
       (.I0(\n_0_mi_wrap_be_next[2]_i_6 ),
        .I1(size[0]),
        .I2(\n_0_mi_wrap_be_next[0]_i_5 ),
        .I3(\n_0_next_mi_addr_reg[4] ),
        .I4(\n_0_next_mi_addr_reg[5] ),
        .I5(\n_0_mi_wrap_be_next[32]_i_9 ),
        .O(\n_0_mi_wrap_be_next[0]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFF020202)) 
     \mi_wrap_be_next[0]_i_4 
       (.I0(\n_0_mi_wrap_be_next[32]_i_3 ),
        .I1(M_AXI_AWADDR[5]),
        .I2(M_AXI_AWADDR[4]),
        .I3(\n_0_mi_wrap_be_next[2]_i_4 ),
        .I4(O1[1]),
        .I5(\n_0_mi_wrap_be_next[0]_i_6 ),
        .O(\n_0_mi_wrap_be_next[0]_i_4 ));
LUT2 #(
    .INIT(4'h2)) 
     \mi_wrap_be_next[0]_i_5 
       (.I0(p_6_in),
        .I1(size[1]),
        .O(\n_0_mi_wrap_be_next[0]_i_5 ));
(* SOFT_HLUTNM = "soft_lutpair159" *) 
   LUT4 #(
    .INIT(16'h0400)) 
     \mi_wrap_be_next[0]_i_6 
       (.I0(M_AXI_AWADDR[5]),
        .I1(D[3]),
        .I2(O1[1]),
        .I3(O1[0]),
        .O(\n_0_mi_wrap_be_next[0]_i_6 ));
LUT6 #(
    .INIT(64'hEFEEEEEEEEEEEEEE)) 
     \mi_wrap_be_next[10]_i_1 
       (.I0(\n_0_mi_wrap_be_next[10]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[14]_i_2 ),
        .I2(\n_0_mi_wrap_be_next[18]_i_4 ),
        .I3(M_AXI_AWADDR[3]),
        .I4(\n_0_mi_wrap_be_next[14]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[18]_i_5 ),
        .O(\n_0_mi_wrap_be_next[10]_i_1 ));
LUT6 #(
    .INIT(64'h8F8F8F8F8F8F8F88)) 
     \mi_wrap_be_next[10]_i_2 
       (.I0(f_mi_wrap_be0103_out),
        .I1(\n_0_mi_wrap_be_next[3]_i_4 ),
        .I2(load_mi_ptr),
        .I3(\n_0_mi_wrap_be_next[14]_i_5 ),
        .I4(\n_0_mi_wrap_be_next[10]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[10]_i_5 ),
        .O(\n_0_mi_wrap_be_next[10]_i_2 ));
LUT6 #(
    .INIT(64'h0000000000000010)) 
     \mi_wrap_be_next[10]_i_3 
       (.I0(D[2]),
        .I1(D[3]),
        .I2(M_AXI_AWADDR[3]),
        .I3(D[1]),
        .I4(M_AXI_AWADDR[5]),
        .I5(M_AXI_AWADDR[4]),
        .O(f_mi_wrap_be0103_out));
LUT6 #(
    .INIT(64'h0000000000000002)) 
     \mi_wrap_be_next[10]_i_4 
       (.I0(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I1(size[2]),
        .I2(\n_0_next_mi_addr_reg[2] ),
        .I3(size[0]),
        .I4(\n_0_mi_wrap_be_next[48]_i_8 ),
        .I5(\n_0_mi_wrap_be_next[44]_i_6 ),
        .O(\n_0_mi_wrap_be_next[10]_i_4 ));
LUT6 #(
    .INIT(64'h0000000000000004)) 
     \mi_wrap_be_next[10]_i_5 
       (.I0(\n_0_next_mi_addr_reg[5] ),
        .I1(size[1]),
        .I2(size[0]),
        .I3(\n_0_next_mi_addr_reg[4] ),
        .I4(\n_0_mi_wrap_be_next[5]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[56]_i_10 ),
        .O(\n_0_mi_wrap_be_next[10]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFEA)) 
     \mi_wrap_be_next[11]_i_1 
       (.I0(\n_0_mi_wrap_be_next[11]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[15]_i_2 ),
        .I2(\n_0_mi_size[2]_i_2 ),
        .I3(\n_0_mi_wrap_be_next[31]_i_1 ),
        .I4(\n_0_mi_wrap_be_next[11]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[11]_i_4 ),
        .O(\n_0_mi_wrap_be_next[11]_i_1 ));
LUT6 #(
    .INIT(64'h0000000000000800)) 
     \mi_wrap_be_next[11]_i_2 
       (.I0(\n_0_mi_wrap_be_next[3]_i_4 ),
        .I1(\n_0_mi_wrap_be_next[14]_i_3 ),
        .I2(D[1]),
        .I3(M_AXI_AWADDR[3]),
        .I4(D[3]),
        .I5(D[2]),
        .O(\n_0_mi_wrap_be_next[11]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair169" *) 
   LUT4 #(
    .INIT(16'h4404)) 
     \mi_wrap_be_next[11]_i_3 
       (.I0(load_mi_ptr),
        .I1(size[2]),
        .I2(\n_0_next_mi_addr_reg[5] ),
        .I3(\n_0_next_mi_len_reg[1] ),
        .O(\n_0_mi_wrap_be_next[11]_i_3 ));
LUT6 #(
    .INIT(64'h0000000400000000)) 
     \mi_wrap_be_next[11]_i_4 
       (.I0(\n_0_next_mi_addr_reg[5] ),
        .I1(size[1]),
        .I2(load_mi_ptr),
        .I3(size[0]),
        .I4(\n_0_next_mi_addr_reg[4] ),
        .I5(\n_0_mi_wrap_be_next[24]_i_4 ),
        .O(\n_0_mi_wrap_be_next[11]_i_4 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF9000)) 
     \mi_wrap_be_next[12]_i_1 
       (.I0(O1[2]),
        .I1(O1[1]),
        .I2(load_mi_ptr),
        .I3(\n_0_mi_wrap_be_next[12]_i_2 ),
        .I4(\n_0_mi_wrap_be_next[12]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[12]_i_4 ),
        .O(\n_0_mi_wrap_be_next[12]_i_1 ));
LUT6 #(
    .INIT(64'hBBBBBBFBAAAAAAAA)) 
     \mi_wrap_be_next[12]_i_2 
       (.I0(O1[1]),
        .I1(\n_0_mi_wrap_be_next[44]_i_4 ),
        .I2(O1[0]),
        .I3(\n_0_mi_wrap_be_next[61]_i_5 ),
        .I4(\n_0_mi_wrap_be_next[58]_i_9 ),
        .I5(\n_0_mi_wrap_be_next[14]_i_3 ),
        .O(\n_0_mi_wrap_be_next[12]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFFFF3F002A00)) 
     \mi_wrap_be_next[12]_i_3 
       (.I0(\n_0_mi_wrap_be_next[15]_i_3 ),
        .I1(n_0_M_AXI_WLAST_i_i_2),
        .I2(n_0_M_AXI_WLAST_i_i_3),
        .I3(size[2]),
        .I4(size[0]),
        .I5(\n_0_mi_wrap_be_next[28]_i_6 ),
        .O(\n_0_mi_wrap_be_next[12]_i_3 ));
LUT6 #(
    .INIT(64'h88888888F88888F8)) 
     \mi_wrap_be_next[12]_i_4 
       (.I0(\n_0_mi_wrap_be_next[15]_i_2 ),
        .I1(\n_0_mi_size[2]_i_2 ),
        .I2(\n_0_mi_wrap_be_next[12]_i_5 ),
        .I3(size[1]),
        .I4(size[2]),
        .I5(load_mi_ptr),
        .O(\n_0_mi_wrap_be_next[12]_i_4 ));
LUT6 #(
    .INIT(64'hFFABAAAAABABAAAA)) 
     \mi_wrap_be_next[12]_i_5 
       (.I0(size[1]),
        .I1(\n_0_mi_wrap_be_next[44]_i_6 ),
        .I2(\n_0_mi_wrap_be_next[52]_i_5 ),
        .I3(\n_0_mi_wrap_be_next[13]_i_3 ),
        .I4(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I5(size[0]),
        .O(\n_0_mi_wrap_be_next[12]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFEAAAEAAAEAAA)) 
     \mi_wrap_be_next[13]_i_1 
       (.I0(\n_0_mi_wrap_be_next[15]_i_1 ),
        .I1(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I2(\n_0_mi_wrap_be_next[17]_i_3 ),
        .I3(\n_0_mi_wrap_be_next[13]_i_3 ),
        .I4(\n_0_mi_wrap_be_next[13]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[13]_i_5 ),
        .O(\n_0_mi_wrap_be_next[13]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair187" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \mi_wrap_be_next[13]_i_2 
       (.I0(\n_0_next_mi_addr_reg[4] ),
        .I1(\n_0_next_mi_addr_reg[5] ),
        .O(\n_0_mi_wrap_be_next[13]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair138" *) 
   LUT5 #(
    .INIT(32'h00040000)) 
     \mi_wrap_be_next[13]_i_3 
       (.I0(\n_0_next_mi_len_reg[1] ),
        .I1(\n_0_next_mi_addr_reg[3] ),
        .I2(\n_0_next_mi_len_reg[2] ),
        .I3(p_6_in),
        .I4(\n_0_next_mi_addr_reg[2] ),
        .O(\n_0_mi_wrap_be_next[13]_i_3 ));
LUT6 #(
    .INIT(64'h0004000000000000)) 
     \mi_wrap_be_next[13]_i_4 
       (.I0(D[1]),
        .I1(M_AXI_AWADDR[2]),
        .I2(D[2]),
        .I3(D[3]),
        .I4(M_AXI_AWADDR[3]),
        .I5(\n_0_mi_wrap_be_next[14]_i_3 ),
        .O(\n_0_mi_wrap_be_next[13]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair175" *) 
   LUT4 #(
    .INIT(16'h000E)) 
     \mi_wrap_be_next[13]_i_5 
       (.I0(\n_0_mi_wcnt[7]_i_4 ),
        .I1(\n_0_mi_wcnt[7]_i_5 ),
        .I2(O1[1]),
        .I3(\n_0_mi_size[0]_i_2 ),
        .O(\n_0_mi_wrap_be_next[13]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFBBBAAAAA)) 
     \mi_wrap_be_next[14]_i_1 
       (.I0(\n_0_mi_wrap_be_next[14]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[62]_i_4 ),
        .I2(\n_0_mi_wcnt[7]_i_4 ),
        .I3(\n_0_mi_wcnt[7]_i_5 ),
        .I4(\n_0_mi_wrap_be_next[14]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[14]_i_4 ),
        .O(\n_0_mi_wrap_be_next[14]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair172" *) 
   LUT4 #(
    .INIT(16'hFFB0)) 
     \mi_wrap_be_next[14]_i_2 
       (.I0(D[1]),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_size[2]_i_2 ),
        .I3(\n_0_mi_wrap_be_next[30]_i_6 ),
        .O(\n_0_mi_wrap_be_next[14]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair252" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \mi_wrap_be_next[14]_i_3 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .O(\n_0_mi_wrap_be_next[14]_i_3 ));
LUT6 #(
    .INIT(64'h00000000AAAEAAAA)) 
     \mi_wrap_be_next[14]_i_4 
       (.I0(\n_0_mi_wrap_be_next[14]_i_5 ),
        .I1(\n_0_next_mi_addr_reg[3] ),
        .I2(\n_0_next_mi_addr_reg[4] ),
        .I3(\n_0_next_mi_addr_reg[5] ),
        .I4(\n_0_mi_wrap_be_next[30]_i_3 ),
        .I5(load_mi_ptr),
        .O(\n_0_mi_wrap_be_next[14]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair133" *) 
   LUT5 #(
    .INIT(32'hF0F0F0B0)) 
     \mi_wrap_be_next[14]_i_5 
       (.I0(\n_0_next_mi_len_reg[1] ),
        .I1(\n_0_next_mi_addr_reg[5] ),
        .I2(size[2]),
        .I3(size[1]),
        .I4(size[0]),
        .O(\n_0_mi_wrap_be_next[14]_i_5 ));
LUT6 #(
    .INIT(64'hF8FFF8F8F8F8F8F8)) 
     \mi_wrap_be_next[15]_i_1 
       (.I0(\n_0_mi_wrap_be_next[15]_i_2 ),
        .I1(\n_0_mi_size[2]_i_2 ),
        .I2(\n_0_mi_wrap_be_next[31]_i_1 ),
        .I3(load_mi_ptr),
        .I4(size[2]),
        .I5(\n_0_mi_wrap_be_next[15]_i_3 ),
        .O(\n_0_mi_wrap_be_next[15]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair166" *) 
   LUT2 #(
    .INIT(4'hB)) 
     \mi_wrap_be_next[15]_i_2 
       (.I0(D[1]),
        .I1(M_AXI_AWADDR[5]),
        .O(\n_0_mi_wrap_be_next[15]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair164" *) 
   LUT2 #(
    .INIT(4'hB)) 
     \mi_wrap_be_next[15]_i_3 
       (.I0(\n_0_next_mi_len_reg[1] ),
        .I1(\n_0_next_mi_addr_reg[5] ),
        .O(\n_0_mi_wrap_be_next[15]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFFFFFEEEEAAA2)) 
     \mi_wrap_be_next[16]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[34]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[16]_i_2 ),
        .I3(\n_0_mi_wrap_be_next[16]_i_3 ),
        .I4(\n_0_mi_wrap_be_next[16]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[16]_i_5 ),
        .O(\n_0_mi_wrap_be_next[16]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair165" *) 
   LUT4 #(
    .INIT(16'h0F02)) 
     \mi_wrap_be_next[16]_i_10 
       (.I0(\n_0_next_mi_len_reg[2] ),
        .I1(\n_0_next_mi_addr_reg[3] ),
        .I2(size[1]),
        .I3(p_6_in),
        .O(\n_0_mi_wrap_be_next[16]_i_10 ));
LUT6 #(
    .INIT(64'hAA000000AA0C0000)) 
     \mi_wrap_be_next[16]_i_2 
       (.I0(f_mi_wrap_be097_out),
        .I1(\n_0_mi_wrap_be_next[49]_i_6 ),
        .I2(\n_0_mi_wrap_be_next[18]_i_3 ),
        .I3(O1[1]),
        .I4(O1[0]),
        .I5(D[3]),
        .O(\n_0_mi_wrap_be_next[16]_i_2 ));
LUT6 #(
    .INIT(64'h222222220000F000)) 
     \mi_wrap_be_next[16]_i_3 
       (.I0(f_mi_wrap_be095_out),
        .I1(O1[0]),
        .I2(\n_0_mi_wrap_be_next[48]_i_12 ),
        .I3(M_AXI_AWADDR[4]),
        .I4(M_AXI_AWADDR[5]),
        .I5(O1[1]),
        .O(\n_0_mi_wrap_be_next[16]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair134" *) 
   LUT5 #(
    .INIT(32'h00E00000)) 
     \mi_wrap_be_next[16]_i_4 
       (.I0(\n_0_mi_wcnt[7]_i_5 ),
        .I1(\n_0_mi_wcnt[7]_i_4 ),
        .I2(n_0_M_AXI_WLAST_i_i_2),
        .I3(O1[1]),
        .I4(O1[2]),
        .O(\n_0_mi_wrap_be_next[16]_i_4 ));
LUT6 #(
    .INIT(64'h00000000FEFFFF00)) 
     \mi_wrap_be_next[16]_i_5 
       (.I0(\n_0_mi_wrap_be_next[16]_i_6 ),
        .I1(\n_0_mi_wrap_be_next[16]_i_7 ),
        .I2(\n_0_mi_wrap_be_next[16]_i_8 ),
        .I3(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I4(\n_0_mi_wrap_be_next[36]_i_5 ),
        .I5(load_mi_ptr),
        .O(\n_0_mi_wrap_be_next[16]_i_5 ));
LUT6 #(
    .INIT(64'h0000000100000000)) 
     \mi_wrap_be_next[16]_i_6 
       (.I0(size[0]),
        .I1(\n_0_next_mi_addr_reg[2] ),
        .I2(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I3(size[1]),
        .I4(\n_0_next_mi_addr_reg[3] ),
        .I5(\n_0_mi_wrap_be_next[48]_i_8 ),
        .O(\n_0_mi_wrap_be_next[16]_i_6 ));
LUT6 #(
    .INIT(64'hAAAA000000300000)) 
     \mi_wrap_be_next[16]_i_7 
       (.I0(f_mi_wrap_be00148_out),
        .I1(\n_0_mi_wrap_be_next[5]_i_3 ),
        .I2(\n_0_mi_wrap_be_next[56]_i_10 ),
        .I3(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I4(size[1]),
        .I5(size[0]),
        .O(\n_0_mi_wrap_be_next[16]_i_7 ));
LUT6 #(
    .INIT(64'h080808080808FF08)) 
     \mi_wrap_be_next[16]_i_8 
       (.I0(\n_0_mi_wrap_be_next[16]_i_9 ),
        .I1(\n_0_mi_wrap_be_next[48]_i_6 ),
        .I2(p_6_in),
        .I3(\n_0_mi_wrap_be_next[16]_i_10 ),
        .I4(\n_0_mi_wrap_be_next[48]_i_15 ),
        .I5(\n_0_next_mi_addr_reg[5] ),
        .O(\n_0_mi_wrap_be_next[16]_i_8 ));
LUT6 #(
    .INIT(64'h00000000AAFB0000)) 
     \mi_wrap_be_next[16]_i_9 
       (.I0(\n_0_next_mi_len_reg[2] ),
        .I1(\n_0_next_mi_addr_reg[2] ),
        .I2(\n_0_next_mi_len_reg[1] ),
        .I3(\n_0_next_mi_addr_reg[3] ),
        .I4(\n_0_next_mi_addr_reg[4] ),
        .I5(\n_0_next_mi_addr_reg[5] ),
        .O(\n_0_mi_wrap_be_next[16]_i_9 ));
LUT6 #(
    .INIT(64'hEEEEEFEEEEEEEEEE)) 
     \mi_wrap_be_next[17]_i_1 
       (.I0(\n_0_mi_wrap_be_next[17]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[23]_i_1 ),
        .I2(p_6_in),
        .I3(\n_0_mi_wrap_be_next[17]_i_3 ),
        .I4(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[17]_i_4 ),
        .O(\n_0_mi_wrap_be_next[17]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFFFFF00000800)) 
     \mi_wrap_be_next[17]_i_2 
       (.I0(\n_0_mi_wrap_be_next[49]_i_6 ),
        .I1(M_AXI_AWADDR[4]),
        .I2(M_AXI_AWADDR[5]),
        .I3(\n_0_mi_wrap_be_next[13]_i_5 ),
        .I4(D[3]),
        .I5(\n_0_mi_wrap_be_next[19]_i_2 ),
        .O(\n_0_mi_wrap_be_next[17]_i_2 ));
LUT6 #(
    .INIT(64'h00000000F1FF0000)) 
     \mi_wrap_be_next[17]_i_3 
       (.I0(mi_state[2]),
        .I1(mi_awvalid),
        .I2(mi_state[1]),
        .I3(n_0_M_AXI_WLAST_i_i_3),
        .I4(size[0]),
        .I5(size[1]),
        .O(\n_0_mi_wrap_be_next[17]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair163" *) 
   LUT4 #(
    .INIT(16'hFF45)) 
     \mi_wrap_be_next[17]_i_4 
       (.I0(\n_0_next_mi_addr_reg[3] ),
        .I1(\n_0_next_mi_len_reg[1] ),
        .I2(\n_0_next_mi_addr_reg[2] ),
        .I3(\n_0_next_mi_len_reg[2] ),
        .O(\n_0_mi_wrap_be_next[17]_i_4 ));
LUT6 #(
    .INIT(64'hEEEEEEEFEEEEEEEE)) 
     \mi_wrap_be_next[18]_i_1 
       (.I0(\n_0_mi_wrap_be_next[18]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[22]_i_2 ),
        .I2(\n_0_mi_wrap_be_next[18]_i_3 ),
        .I3(\n_0_mi_wrap_be_next[18]_i_4 ),
        .I4(M_AXI_AWADDR[3]),
        .I5(\n_0_mi_wrap_be_next[18]_i_5 ),
        .O(\n_0_mi_wrap_be_next[18]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFFFFF000D0000)) 
     \mi_wrap_be_next[18]_i_2 
       (.I0(M_AXI_AWADDR[3]),
        .I1(D[1]),
        .I2(\n_0_mi_wrap_be_next[18]_i_3 ),
        .I3(\n_0_mi_wrap_be_next[18]_i_4 ),
        .I4(\n_0_mi_wrap_be_next[3]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[18]_i_6 ),
        .O(\n_0_mi_wrap_be_next[18]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair255" *) 
   LUT2 #(
    .INIT(4'hB)) 
     \mi_wrap_be_next[18]_i_3 
       (.I0(M_AXI_AWADDR[5]),
        .I1(M_AXI_AWADDR[4]),
        .O(\n_0_mi_wrap_be_next[18]_i_3 ));
LUT2 #(
    .INIT(4'hE)) 
     \mi_wrap_be_next[18]_i_4 
       (.I0(D[3]),
        .I1(D[2]),
        .O(\n_0_mi_wrap_be_next[18]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair140" *) 
   LUT5 #(
    .INIT(32'h0000000E)) 
     \mi_wrap_be_next[18]_i_5 
       (.I0(\n_0_mi_wcnt[7]_i_5 ),
        .I1(\n_0_mi_wcnt[7]_i_4 ),
        .I2(O1[0]),
        .I3(M_AXI_AWADDR[2]),
        .I4(\n_0_mi_wrap_be_next[62]_i_6 ),
        .O(\n_0_mi_wrap_be_next[18]_i_5 ));
LUT6 #(
    .INIT(64'h00000000FFFFFF10)) 
     \mi_wrap_be_next[18]_i_6 
       (.I0(\n_0_next_mi_addr_reg[3] ),
        .I1(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I2(\n_0_mi_wrap_be_next[58]_i_6 ),
        .I3(\n_0_mi_wrap_be_next[30]_i_5 ),
        .I4(\n_0_mi_wrap_be_next[16]_i_7 ),
        .I5(load_mi_ptr),
        .O(\n_0_mi_wrap_be_next[18]_i_6 ));
LUT2 #(
    .INIT(4'hE)) 
     \mi_wrap_be_next[19]_i_1 
       (.I0(\n_0_mi_wrap_be_next[19]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[23]_i_1 ),
        .O(\n_0_mi_wrap_be_next[19]_i_1 ));
LUT6 #(
    .INIT(64'h444F444F444F0F0F)) 
     \mi_wrap_be_next[19]_i_2 
       (.I0(\n_0_mi_wrap_be_next[58]_i_4 ),
        .I1(f_mi_wrap_be095_out),
        .I2(\n_0_mi_wrap_be_next[19]_i_4 ),
        .I3(n_0_M_AXI_WLAST_i_i_2),
        .I4(\n_0_mi_wcnt[7]_i_4 ),
        .I5(\n_0_mi_wcnt[7]_i_5 ),
        .O(\n_0_mi_wrap_be_next[19]_i_2 ));
LUT6 #(
    .INIT(64'h0000000000000D00)) 
     \mi_wrap_be_next[19]_i_3 
       (.I0(M_AXI_AWADDR[3]),
        .I1(D[1]),
        .I2(M_AXI_AWADDR[5]),
        .I3(M_AXI_AWADDR[4]),
        .I4(D[2]),
        .I5(D[3]),
        .O(f_mi_wrap_be095_out));
LUT6 #(
    .INIT(64'hFFFFFFFFFDFDFFFD)) 
     \mi_wrap_be_next[19]_i_4 
       (.I0(size[1]),
        .I1(size[0]),
        .I2(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I3(\n_0_next_mi_addr_reg[3] ),
        .I4(\n_0_next_mi_len_reg[1] ),
        .I5(\n_0_mi_wrap_be_next[5]_i_3 ),
        .O(\n_0_mi_wrap_be_next[19]_i_4 ));
LUT6 #(
    .INIT(64'hFFFFFFFFEEEEEAEE)) 
     \mi_wrap_be_next[1]_i_1 
       (.I0(\n_0_mi_wrap_be_next[1]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[16]_i_4 ),
        .I2(D[1]),
        .I3(M_AXI_AWADDR[5]),
        .I4(\n_0_mi_wrap_be_next[34]_i_5 ),
        .I5(\n_0_mi_wrap_be_next[1]_i_3 ),
        .O(\n_0_mi_wrap_be_next[1]_i_1 ));
LUT6 #(
    .INIT(64'hAAA8AA208A888A00)) 
     \mi_wrap_be_next[1]_i_2 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(O1[1]),
        .I2(O1[0]),
        .I3(O1[2]),
        .I4(\n_0_mi_wrap_be_next[2]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[1]_i_4 ),
        .O(\n_0_mi_wrap_be_next[1]_i_2 ));
LUT6 #(
    .INIT(64'h00000000FCFFFFAA)) 
     \mi_wrap_be_next[1]_i_3 
       (.I0(\n_0_mi_wrap_be_next[15]_i_3 ),
        .I1(\n_0_mi_wrap_be_next[2]_i_6 ),
        .I2(\n_0_mi_wrap_be_next[1]_i_5 ),
        .I3(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I4(\n_0_mi_wrap_be_next[36]_i_5 ),
        .I5(load_mi_ptr),
        .O(\n_0_mi_wrap_be_next[1]_i_3 ));
LUT6 #(
    .INIT(64'h0000FFFF00005510)) 
     \mi_wrap_be_next[1]_i_4 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[3]),
        .I2(\n_0_mi_wrap_be_next[61]_i_5 ),
        .I3(D[2]),
        .I4(M_AXI_AWADDR[5]),
        .I5(D[3]),
        .O(\n_0_mi_wrap_be_next[1]_i_4 ));
LUT6 #(
    .INIT(64'h000000000F040000)) 
     \mi_wrap_be_next[1]_i_5 
       (.I0(\n_0_next_mi_addr_reg[4] ),
        .I1(\n_0_mi_wrap_be_next[17]_i_4 ),
        .I2(\n_0_next_mi_addr_reg[5] ),
        .I3(p_6_in),
        .I4(size[0]),
        .I5(size[1]),
        .O(\n_0_mi_wrap_be_next[1]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFABBB)) 
     \mi_wrap_be_next[20]_i_1 
       (.I0(\n_0_mi_wrap_be_next[21]_i_3 ),
        .I1(\n_0_mi_wrap_be_next[20]_i_2 ),
        .I2(n_0_M_AXI_WLAST_i_i_3),
        .I3(n_0_M_AXI_WLAST_i_i_2),
        .I4(\n_0_mi_wrap_be_next[20]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[21]_i_2 ),
        .O(\n_0_mi_wrap_be_next[20]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
     \mi_wrap_be_next[20]_i_2 
       (.I0(size[0]),
        .I1(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I2(\n_0_mi_wrap_be_next[5]_i_3 ),
        .I3(\n_0_mi_wrap_be_next[52]_i_6 ),
        .I4(\n_0_mi_wrap_be_next[20]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[48]_i_8 ),
        .O(\n_0_mi_wrap_be_next[20]_i_2 ));
LUT6 #(
    .INIT(64'h0202020000000000)) 
     \mi_wrap_be_next[20]_i_3 
       (.I0(M_AXI_AWADDR[2]),
        .I1(M_AXI_AWADDR[3]),
        .I2(\n_0_mi_wrap_be_next[18]_i_3 ),
        .I3(\n_0_mi_wcnt[7]_i_5 ),
        .I4(\n_0_mi_wcnt[7]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[20]_i_5 ),
        .O(\n_0_mi_wrap_be_next[20]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair251" *) 
   LUT2 #(
    .INIT(4'hB)) 
     \mi_wrap_be_next[20]_i_4 
       (.I0(\n_0_next_mi_addr_reg[3] ),
        .I1(\n_0_next_mi_addr_reg[2] ),
        .O(\n_0_mi_wrap_be_next[20]_i_4 ));
LUT6 #(
    .INIT(64'h0000000000000045)) 
     \mi_wrap_be_next[20]_i_5 
       (.I0(\n_0_mi_wrap_be_next[20]_i_6 ),
        .I1(D[1]),
        .I2(M_AXI_AWADDR[1]),
        .I3(\n_0_mi_wrap_be_next[18]_i_4 ),
        .I4(O1[2]),
        .I5(O1[1]),
        .O(\n_0_mi_wrap_be_next[20]_i_5 ));
LUT4 #(
    .INIT(16'hFFF1)) 
     \mi_wrap_be_next[20]_i_6 
       (.I0(mi_awvalid),
        .I1(mi_state[2]),
        .I2(O1[0]),
        .I3(mi_state[1]),
        .O(\n_0_mi_wrap_be_next[20]_i_6 ));
LUT2 #(
    .INIT(4'hE)) 
     \mi_wrap_be_next[21]_i_1 
       (.I0(\n_0_mi_wrap_be_next[21]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[21]_i_3 ),
        .O(\n_0_mi_wrap_be_next[21]_i_1 ));
LUT6 #(
    .INIT(64'hAAAAEAFFEAFFEAFF)) 
     \mi_wrap_be_next[21]_i_2 
       (.I0(\n_0_mi_wrap_be_next[31]_i_2 ),
        .I1(size[0]),
        .I2(size[2]),
        .I3(\n_0_mi_wrap_be_next[21]_i_4 ),
        .I4(n_0_M_AXI_WLAST_i_i_2),
        .I5(n_0_M_AXI_WLAST_i_i_3),
        .O(\n_0_mi_wrap_be_next[21]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0002)) 
     \mi_wrap_be_next[21]_i_3 
       (.I0(\n_0_mi_wrap_be_next[21]_i_5 ),
        .I1(\n_0_mi_wrap_be_next[61]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[18]_i_4 ),
        .I3(M_AXI_AWADDR[3]),
        .I4(\n_0_mi_wrap_be_next[25]_i_6 ),
        .I5(\n_0_mi_wrap_be_next[23]_i_2 ),
        .O(\n_0_mi_wrap_be_next[21]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFD)) 
     \mi_wrap_be_next[21]_i_4 
       (.I0(size[0]),
        .I1(size[1]),
        .I2(\n_0_mi_wrap_be_next[5]_i_3 ),
        .I3(\n_0_next_mi_addr_reg[3] ),
        .I4(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[53]_i_6 ),
        .O(\n_0_mi_wrap_be_next[21]_i_4 ));
LUT6 #(
    .INIT(64'h0000000000000E00)) 
     \mi_wrap_be_next[21]_i_5 
       (.I0(\n_0_mi_wcnt[7]_i_5 ),
        .I1(\n_0_mi_wcnt[7]_i_4 ),
        .I2(M_AXI_AWADDR[5]),
        .I3(M_AXI_AWADDR[4]),
        .I4(\n_0_mi_size[0]_i_2 ),
        .I5(O1[1]),
        .O(\n_0_mi_wrap_be_next[21]_i_5 ));
LUT6 #(
    .INIT(64'hAAEAFFFFAAEAAAEA)) 
     \mi_wrap_be_next[22]_i_1 
       (.I0(\n_0_mi_wrap_be_next[22]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[22]_i_3 ),
        .I2(M_AXI_AWADDR[4]),
        .I3(M_AXI_AWADDR[5]),
        .I4(load_mi_ptr),
        .I5(\n_0_mi_wrap_be_next[22]_i_4 ),
        .O(\n_0_mi_wrap_be_next[22]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFFFFF20202000)) 
     \mi_wrap_be_next[22]_i_2 
       (.I0(O1[1]),
        .I1(\n_0_mi_size[0]_i_2 ),
        .I2(f_mi_wrap_be097_out),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .I5(\n_0_mi_wrap_be_next[30]_i_6 ),
        .O(\n_0_mi_wrap_be_next[22]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair170" *) 
   LUT3 #(
    .INIT(8'h0E)) 
     \mi_wrap_be_next[22]_i_3 
       (.I0(\n_0_mi_wcnt[7]_i_5 ),
        .I1(\n_0_mi_wcnt[7]_i_4 ),
        .I2(\n_0_mi_wrap_be_next[54]_i_3 ),
        .O(\n_0_mi_wrap_be_next[22]_i_3 ));
LUT6 #(
    .INIT(64'hEAEAEAEAEAEAFFEA)) 
     \mi_wrap_be_next[22]_i_4 
       (.I0(\n_0_mi_wrap_be_next[30]_i_5 ),
        .I1(\n_0_mi_wrap_be_next[54]_i_8 ),
        .I2(f_mi_wrap_be00148_out),
        .I3(\n_0_mi_wrap_be_next[30]_i_3 ),
        .I4(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I5(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_wrap_be_next[22]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair161" *) 
   LUT4 #(
    .INIT(16'h0010)) 
     \mi_wrap_be_next[22]_i_5 
       (.I0(\n_0_next_mi_len_reg[2] ),
        .I1(\n_0_next_mi_len_reg[1] ),
        .I2(\n_0_next_mi_addr_reg[4] ),
        .I3(\n_0_next_mi_addr_reg[5] ),
        .O(f_mi_wrap_be00148_out));
LUT2 #(
    .INIT(4'hE)) 
     \mi_wrap_be_next[23]_i_1 
       (.I0(\n_0_mi_wrap_be_next[23]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[31]_i_1 ),
        .O(\n_0_mi_wrap_be_next[23]_i_1 ));
LUT6 #(
    .INIT(64'h444F444F444F0F0F)) 
     \mi_wrap_be_next[23]_i_2 
       (.I0(\n_0_mi_wrap_be_next[6]_i_3 ),
        .I1(f_mi_wrap_be097_out),
        .I2(\n_0_mi_wrap_be_next[23]_i_4 ),
        .I3(n_0_M_AXI_WLAST_i_i_2),
        .I4(\n_0_mi_wcnt[7]_i_4 ),
        .I5(\n_0_mi_wcnt[7]_i_5 ),
        .O(\n_0_mi_wrap_be_next[23]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair160" *) 
   LUT4 #(
    .INIT(16'h0010)) 
     \mi_wrap_be_next[23]_i_3 
       (.I0(D[2]),
        .I1(D[1]),
        .I2(M_AXI_AWADDR[4]),
        .I3(M_AXI_AWADDR[5]),
        .O(f_mi_wrap_be097_out));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF7FF)) 
     \mi_wrap_be_next[23]_i_4 
       (.I0(size[0]),
        .I1(size[1]),
        .I2(\n_0_next_mi_addr_reg[5] ),
        .I3(\n_0_next_mi_addr_reg[4] ),
        .I4(\n_0_next_mi_len_reg[1] ),
        .I5(\n_0_next_mi_len_reg[2] ),
        .O(\n_0_mi_wrap_be_next[23]_i_4 ));
LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     \mi_wrap_be_next[24]_i_1 
       (.I0(\n_0_mi_wrap_be_next[24]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[25]_i_2 ),
        .I2(\n_0_mi_wrap_be_next[25]_i_4 ),
        .I3(\n_0_mi_wrap_be_next[24]_i_3 ),
        .I4(\n_0_mi_wrap_be_next[25]_i_3 ),
        .O(\n_0_mi_wrap_be_next[24]_i_1 ));
LUT6 #(
    .INIT(64'h0777070700000000)) 
     \mi_wrap_be_next[24]_i_2 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(n_0_M_AXI_WLAST_i_i_3),
        .I2(size[1]),
        .I3(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I4(\n_0_mi_wrap_be_next[24]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[24]_i_5 ),
        .O(\n_0_mi_wrap_be_next[24]_i_2 ));
LUT6 #(
    .INIT(64'h0000A8000000A8A8)) 
     \mi_wrap_be_next[24]_i_3 
       (.I0(\n_0_mi_wrap_be_next[24]_i_6 ),
        .I1(\n_0_mi_wcnt[7]_i_5 ),
        .I2(\n_0_mi_wcnt[7]_i_4 ),
        .I3(\n_0_mi_wrap_be_next[43]_i_4 ),
        .I4(\n_0_mi_wrap_be_next[18]_i_3 ),
        .I5(O1[1]),
        .O(\n_0_mi_wrap_be_next[24]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair138" *) 
   LUT4 #(
    .INIT(16'h0010)) 
     \mi_wrap_be_next[24]_i_4 
       (.I0(p_6_in),
        .I1(\n_0_next_mi_len_reg[2] ),
        .I2(\n_0_next_mi_addr_reg[3] ),
        .I3(\n_0_next_mi_len_reg[1] ),
        .O(\n_0_mi_wrap_be_next[24]_i_4 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAA2202)) 
     \mi_wrap_be_next[24]_i_5 
       (.I0(\n_0_mi_wrap_be_next[24]_i_7 ),
        .I1(\n_0_next_mi_addr_reg[2] ),
        .I2(\n_0_next_mi_addr_reg[1] ),
        .I3(\n_0_next_mi_len_reg[1] ),
        .I4(size[1]),
        .I5(\n_0_next_mi_len_reg[2] ),
        .O(\n_0_mi_wrap_be_next[24]_i_5 ));
LUT6 #(
    .INIT(64'h0000000000002220)) 
     \mi_wrap_be_next[24]_i_6 
       (.I0(\n_0_mi_wrap_be_next[24]_i_8 ),
        .I1(O1[2]),
        .I2(mi_awvalid),
        .I3(mi_state[2]),
        .I4(O1[0]),
        .I5(mi_state[1]),
        .O(\n_0_mi_wrap_be_next[24]_i_6 ));
LUT6 #(
    .INIT(64'h000000000000F1F0)) 
     \mi_wrap_be_next[24]_i_7 
       (.I0(p_6_in),
        .I1(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I2(size[1]),
        .I3(\n_0_next_mi_addr_reg[3] ),
        .I4(size[0]),
        .I5(size[2]),
        .O(\n_0_mi_wrap_be_next[24]_i_7 ));
LUT6 #(
    .INIT(64'hFF00FFF4FF00FF00)) 
     \mi_wrap_be_next[24]_i_8 
       (.I0(M_AXI_AWADDR[2]),
        .I1(\n_0_mi_wrap_be_next[60]_i_9 ),
        .I2(D[2]),
        .I3(O1[1]),
        .I4(D[3]),
        .I5(M_AXI_AWADDR[3]),
        .O(\n_0_mi_wrap_be_next[24]_i_8 ));
(* SOFT_HLUTNM = "soft_lutpair176" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \mi_wrap_be_next[25]_i_1 
       (.I0(\n_0_mi_wrap_be_next[27]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[25]_i_2 ),
        .I2(\n_0_mi_wrap_be_next[25]_i_3 ),
        .I3(\n_0_mi_wrap_be_next[25]_i_4 ),
        .O(\n_0_mi_wrap_be_next[25]_i_1 ));
LUT6 #(
    .INIT(64'h0000000000000700)) 
     \mi_wrap_be_next[25]_i_2 
       (.I0(n_0_M_AXI_WLAST_i_i_3),
        .I1(n_0_M_AXI_WLAST_i_i_2),
        .I2(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I3(\n_0_mi_wrap_be_next[53]_i_6 ),
        .I4(\n_0_mi_wrap_be_next[44]_i_6 ),
        .I5(\n_0_mi_wrap_be_next[25]_i_5 ),
        .O(\n_0_mi_wrap_be_next[25]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAABBBA)) 
     \mi_wrap_be_next[25]_i_3 
       (.I0(\n_0_mi_wrap_be_next[25]_i_6 ),
        .I1(\n_0_mi_wrap_be_next[9]_i_3 ),
        .I2(\n_0_mi_wcnt[7]_i_5 ),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(\n_0_mi_wrap_be_next[18]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[25]_i_7 ),
        .O(\n_0_mi_wrap_be_next[25]_i_3 ));
LUT5 #(
    .INIT(32'hAAEAEAEA)) 
     \mi_wrap_be_next[25]_i_4 
       (.I0(\n_0_mi_wrap_be_next[31]_i_2 ),
        .I1(size[2]),
        .I2(size[0]),
        .I3(n_0_M_AXI_WLAST_i_i_3),
        .I4(n_0_M_AXI_WLAST_i_i_2),
        .O(\n_0_mi_wrap_be_next[25]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair189" *) 
   LUT2 #(
    .INIT(4'hB)) 
     \mi_wrap_be_next[25]_i_5 
       (.I0(size[1]),
        .I1(size[0]),
        .O(\n_0_mi_wrap_be_next[25]_i_5 ));
LUT6 #(
    .INIT(64'hF1FF000000000000)) 
     \mi_wrap_be_next[25]_i_6 
       (.I0(mi_state[2]),
        .I1(mi_awvalid),
        .I2(mi_state[1]),
        .I3(n_0_M_AXI_WLAST_i_i_3),
        .I4(size[2]),
        .I5(size[1]),
        .O(\n_0_mi_wrap_be_next[25]_i_6 ));
LUT5 #(
    .INIT(32'hFFFFBBBF)) 
     \mi_wrap_be_next[25]_i_7 
       (.I0(mi_state[1]),
        .I1(O1[0]),
        .I2(mi_state[2]),
        .I3(mi_awvalid),
        .I4(O1[1]),
        .O(\n_0_mi_wrap_be_next[25]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFFAAAAFEAA)) 
     \mi_wrap_be_next[26]_i_1 
       (.I0(\n_0_mi_wrap_be_next[26]_i_2 ),
        .I1(\n_0_mi_wcnt[7]_i_5 ),
        .I2(\n_0_mi_wcnt[7]_i_4 ),
        .I3(f_mi_wrap_be089_out),
        .I4(\n_0_mi_wrap_be_next[58]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[26]_i_4 ),
        .O(\n_0_mi_wrap_be_next[26]_i_1 ));
LUT6 #(
    .INIT(64'h00000000FFFF4000)) 
     \mi_wrap_be_next[26]_i_2 
       (.I0(\n_0_next_mi_addr_reg[5] ),
        .I1(\n_0_next_mi_addr_reg[4] ),
        .I2(\n_0_next_mi_addr_reg[3] ),
        .I3(\n_0_mi_wrap_be_next[58]_i_6 ),
        .I4(\n_0_mi_wrap_be_next[26]_i_5 ),
        .I5(load_mi_ptr),
        .O(\n_0_mi_wrap_be_next[26]_i_2 ));
LUT6 #(
    .INIT(64'h0000000000100000)) 
     \mi_wrap_be_next[26]_i_3 
       (.I0(D[2]),
        .I1(D[3]),
        .I2(M_AXI_AWADDR[3]),
        .I3(D[1]),
        .I4(M_AXI_AWADDR[4]),
        .I5(M_AXI_AWADDR[5]),
        .O(f_mi_wrap_be089_out));
LUT6 #(
    .INIT(64'hFFFFFFFF00000008)) 
     \mi_wrap_be_next[26]_i_4 
       (.I0(\n_0_mi_wrap_be_next[18]_i_5 ),
        .I1(M_AXI_AWADDR[3]),
        .I2(D[3]),
        .I3(D[2]),
        .I4(\n_0_mi_wrap_be_next[18]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[30]_i_6 ),
        .O(\n_0_mi_wrap_be_next[26]_i_4 ));
LUT6 #(
    .INIT(64'hFF00FF00FF010000)) 
     \mi_wrap_be_next[26]_i_5 
       (.I0(\n_0_mi_wrap_be_next[56]_i_10 ),
        .I1(\n_0_mi_wrap_be_next[5]_i_3 ),
        .I2(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I3(size[2]),
        .I4(size[1]),
        .I5(size[0]),
        .O(\n_0_mi_wrap_be_next[26]_i_5 ));
(* SOFT_HLUTNM = "soft_lutpair176" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \mi_wrap_be_next[27]_i_1 
       (.I0(\n_0_mi_wrap_be_next[27]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[31]_i_1 ),
        .O(\n_0_mi_wrap_be_next[27]_i_1 ));
LUT6 #(
    .INIT(64'h444F444F444F0F0F)) 
     \mi_wrap_be_next[27]_i_2 
       (.I0(\n_0_mi_wrap_be_next[58]_i_4 ),
        .I1(f_mi_wrap_be089_out),
        .I2(\n_0_mi_wrap_be_next[27]_i_3 ),
        .I3(n_0_M_AXI_WLAST_i_i_2),
        .I4(\n_0_mi_wcnt[7]_i_4 ),
        .I5(\n_0_mi_wcnt[7]_i_5 ),
        .O(\n_0_mi_wrap_be_next[27]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFDFFFF)) 
     \mi_wrap_be_next[27]_i_3 
       (.I0(size[1]),
        .I1(size[0]),
        .I2(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I3(\n_0_mi_wrap_be_next[5]_i_3 ),
        .I4(\n_0_next_mi_addr_reg[3] ),
        .I5(\n_0_next_mi_len_reg[1] ),
        .O(\n_0_mi_wrap_be_next[27]_i_3 ));
LUT6 #(
    .INIT(64'hEEEEEFFFEFFFEFFF)) 
     \mi_wrap_be_next[28]_i_1 
       (.I0(\n_0_mi_wrap_be_next[28]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[28]_i_3 ),
        .I2(n_0_M_AXI_WLAST_i_i_2),
        .I3(n_0_M_AXI_WLAST_i_i_3),
        .I4(\n_0_mi_wrap_be_next[28]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[28]_i_5 ),
        .O(\n_0_mi_wrap_be_next[28]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair157" *) 
   LUT5 #(
    .INIT(32'h00C8C8C8)) 
     \mi_wrap_be_next[28]_i_2 
       (.I0(size[0]),
        .I1(size[2]),
        .I2(size[1]),
        .I3(n_0_M_AXI_WLAST_i_i_3),
        .I4(n_0_M_AXI_WLAST_i_i_2),
        .O(\n_0_mi_wrap_be_next[28]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAEEEAAAAA)) 
     \mi_wrap_be_next[28]_i_3 
       (.I0(\n_0_mi_wrap_be_next[28]_i_6 ),
        .I1(\n_0_mi_wrap_be_next[28]_i_7 ),
        .I2(\n_0_mi_wcnt[7]_i_5 ),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(n_0_M_AXI_WLAST_i_i_2),
        .I5(\n_0_mi_wrap_be_next[60]_i_4 ),
        .O(\n_0_mi_wrap_be_next[28]_i_3 ));
LUT6 #(
    .INIT(64'hFFEFFFFFFFFFFFEF)) 
     \mi_wrap_be_next[28]_i_4 
       (.I0(\n_0_mi_wrap_be_next[52]_i_5 ),
        .I1(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I2(\n_0_next_mi_addr_reg[3] ),
        .I3(\n_0_mi_wrap_be_next[5]_i_3 ),
        .I4(size[1]),
        .I5(size[2]),
        .O(\n_0_mi_wrap_be_next[28]_i_4 ));
LUT6 #(
    .INIT(64'hF7FFFFFFFFFFF7FF)) 
     \mi_wrap_be_next[28]_i_5 
       (.I0(\n_0_mi_wrap_be_next[13]_i_3 ),
        .I1(\n_0_next_mi_addr_reg[4] ),
        .I2(\n_0_next_mi_addr_reg[5] ),
        .I3(size[0]),
        .I4(size[1]),
        .I5(size[2]),
        .O(\n_0_mi_wrap_be_next[28]_i_5 ));
(* SOFT_HLUTNM = "soft_lutpair136" *) 
   LUT4 #(
    .INIT(16'h00E0)) 
     \mi_wrap_be_next[28]_i_6 
       (.I0(\n_0_mi_wcnt[7]_i_4 ),
        .I1(\n_0_mi_wcnt[7]_i_5 ),
        .I2(O1[2]),
        .I3(\n_0_mi_size[0]_i_2 ),
        .O(\n_0_mi_wrap_be_next[28]_i_6 ));
LUT6 #(
    .INIT(64'hFFFFAABAAABAAABA)) 
     \mi_wrap_be_next[28]_i_7 
       (.I0(O1[1]),
        .I1(\n_0_mi_wrap_be_next[44]_i_4 ),
        .I2(M_AXI_AWADDR[4]),
        .I3(M_AXI_AWADDR[5]),
        .I4(O1[0]),
        .I5(\n_0_mi_wrap_be_next[29]_i_3 ),
        .O(\n_0_mi_wrap_be_next[28]_i_7 ));
LUT6 #(
    .INIT(64'hABAAABAAABAAAAAA)) 
     \mi_wrap_be_next[29]_i_1 
       (.I0(\n_0_mi_wrap_be_next[29]_i_2 ),
        .I1(O1[1]),
        .I2(\n_0_mi_size[0]_i_2 ),
        .I3(\n_0_mi_wrap_be_next[29]_i_3 ),
        .I4(\n_0_mi_wcnt[7]_i_4 ),
        .I5(\n_0_mi_wcnt[7]_i_5 ),
        .O(\n_0_mi_wrap_be_next[29]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0777)) 
     \mi_wrap_be_next[29]_i_2 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(n_0_M_AXI_WLAST_i_i_3),
        .I2(\n_0_mi_wrap_be_next[29]_i_4 ),
        .I3(\n_0_mi_wrap_be_next[61]_i_2 ),
        .I4(\n_0_mi_wrap_be_next[29]_i_5 ),
        .I5(\n_0_mi_wrap_be_next[31]_i_2 ),
        .O(\n_0_mi_wrap_be_next[29]_i_2 ));
LUT6 #(
    .INIT(64'h0000000000000400)) 
     \mi_wrap_be_next[29]_i_3 
       (.I0(\n_0_mi_wrap_be_next[18]_i_3 ),
        .I1(M_AXI_AWADDR[3]),
        .I2(D[1]),
        .I3(M_AXI_AWADDR[2]),
        .I4(D[3]),
        .I5(D[2]),
        .O(\n_0_mi_wrap_be_next[29]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEFFF)) 
     \mi_wrap_be_next[29]_i_4 
       (.I0(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I1(size[1]),
        .I2(size[0]),
        .I3(\n_0_next_mi_addr_reg[2] ),
        .I4(\n_0_mi_wrap_be_next[5]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[56]_i_10 ),
        .O(\n_0_mi_wrap_be_next[29]_i_4 ));
LUT6 #(
    .INIT(64'hF1FF000000000000)) 
     \mi_wrap_be_next[29]_i_5 
       (.I0(mi_state[2]),
        .I1(mi_awvalid),
        .I2(mi_state[1]),
        .I3(n_0_M_AXI_WLAST_i_i_3),
        .I4(size[0]),
        .I5(size[2]),
        .O(\n_0_mi_wrap_be_next[29]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFEEEEEAEE)) 
     \mi_wrap_be_next[2]_i_1 
       (.I0(\n_0_mi_wrap_be_next[2]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[16]_i_4 ),
        .I2(D[1]),
        .I3(M_AXI_AWADDR[5]),
        .I4(\n_0_mi_wrap_be_next[34]_i_5 ),
        .I5(\n_0_mi_wrap_be_next[2]_i_3 ),
        .O(\n_0_mi_wrap_be_next[2]_i_1 ));
LUT6 #(
    .INIT(64'h8A8A8A028A888A00)) 
     \mi_wrap_be_next[2]_i_2 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(O1[1]),
        .I2(O1[0]),
        .I3(O1[2]),
        .I4(\n_0_mi_wrap_be_next[2]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[2]_i_5 ),
        .O(\n_0_mi_wrap_be_next[2]_i_2 ));
LUT6 #(
    .INIT(64'h00000000FCFFFFAA)) 
     \mi_wrap_be_next[2]_i_3 
       (.I0(\n_0_mi_wrap_be_next[15]_i_3 ),
        .I1(\n_0_mi_wrap_be_next[2]_i_6 ),
        .I2(\n_0_mi_wrap_be_next[2]_i_7 ),
        .I3(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I4(\n_0_mi_wrap_be_next[36]_i_5 ),
        .I5(load_mi_ptr),
        .O(\n_0_mi_wrap_be_next[2]_i_3 ));
LUT6 #(
    .INIT(64'hAFABFFFFAFAB0000)) 
     \mi_wrap_be_next[2]_i_4 
       (.I0(D[2]),
        .I1(M_AXI_AWADDR[4]),
        .I2(M_AXI_AWADDR[5]),
        .I3(D[1]),
        .I4(O1[0]),
        .I5(\n_0_mi_wrap_be_next[3]_i_3 ),
        .O(\n_0_mi_wrap_be_next[2]_i_4 ));
LUT6 #(
    .INIT(64'h0000000000001000)) 
     \mi_wrap_be_next[2]_i_5 
       (.I0(\n_0_mi_wrap_be_next[18]_i_4 ),
        .I1(D[1]),
        .I2(M_AXI_AWADDR[1]),
        .I3(\n_0_mi_wrap_be_next[14]_i_3 ),
        .I4(M_AXI_AWADDR[2]),
        .I5(M_AXI_AWADDR[3]),
        .O(\n_0_mi_wrap_be_next[2]_i_5 ));
(* SOFT_HLUTNM = "soft_lutpair168" *) 
   LUT4 #(
    .INIT(16'hE0A0)) 
     \mi_wrap_be_next[2]_i_6 
       (.I0(\n_0_mi_wrap_be_next[3]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[7]_i_4 ),
        .I2(size[1]),
        .I3(size[0]),
        .O(\n_0_mi_wrap_be_next[2]_i_6 ));
LUT6 #(
    .INIT(64'h0000000000100000)) 
     \mi_wrap_be_next[2]_i_7 
       (.I0(size[0]),
        .I1(\n_0_mi_wrap_be_next[48]_i_8 ),
        .I2(\n_0_mi_wrap_be_next[2]_i_8 ),
        .I3(\n_0_mi_wrap_be_next[5]_i_3 ),
        .I4(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I5(size[1]),
        .O(\n_0_mi_wrap_be_next[2]_i_7 ));
(* SOFT_HLUTNM = "soft_lutpair251" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \mi_wrap_be_next[2]_i_8 
       (.I0(\n_0_next_mi_addr_reg[2] ),
        .I1(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_wrap_be_next[2]_i_8 ));
LUT6 #(
    .INIT(64'hBBBBBBBBAAAABAAA)) 
     \mi_wrap_be_next[30]_i_1 
       (.I0(\n_0_mi_wrap_be_next[30]_i_2 ),
        .I1(load_mi_ptr),
        .I2(\n_0_mi_wrap_be_next[30]_i_3 ),
        .I3(\n_0_next_mi_addr_reg[3] ),
        .I4(\n_0_mi_wrap_be_next[30]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[30]_i_5 ),
        .O(\n_0_mi_wrap_be_next[30]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFFFFF00004440)) 
     \mi_wrap_be_next[30]_i_2 
       (.I0(M_AXI_AWADDR[5]),
        .I1(M_AXI_AWADDR[4]),
        .I2(\n_0_mi_wcnt[7]_i_5 ),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(\n_0_mi_wrap_be_next[62]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[30]_i_6 ),
        .O(\n_0_mi_wrap_be_next[30]_i_2 ));
LUT6 #(
    .INIT(64'h0000000000000004)) 
     \mi_wrap_be_next[30]_i_3 
       (.I0(size[0]),
        .I1(\n_0_next_mi_addr_reg[2] ),
        .I2(\n_0_mi_wrap_be_next[48]_i_8 ),
        .I3(size[2]),
        .I4(size[1]),
        .I5(\n_0_mi_wrap_be_next[5]_i_3 ),
        .O(\n_0_mi_wrap_be_next[30]_i_3 ));
LUT2 #(
    .INIT(4'hB)) 
     \mi_wrap_be_next[30]_i_4 
       (.I0(\n_0_next_mi_addr_reg[5] ),
        .I1(\n_0_next_mi_addr_reg[4] ),
        .O(\n_0_mi_wrap_be_next[30]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair146" *) 
   LUT3 #(
    .INIT(8'hE0)) 
     \mi_wrap_be_next[30]_i_5 
       (.I0(size[0]),
        .I1(size[1]),
        .I2(size[2]),
        .O(\n_0_mi_wrap_be_next[30]_i_5 ));
LUT5 #(
    .INIT(32'h0E00EE00)) 
     \mi_wrap_be_next[30]_i_6 
       (.I0(\n_0_mi_wcnt[7]_i_5 ),
        .I1(\n_0_mi_wcnt[7]_i_4 ),
        .I2(\n_0_mi_size[0]_i_2 ),
        .I3(O1[2]),
        .I4(\n_0_mi_size[1]_i_2 ),
        .O(\n_0_mi_wrap_be_next[30]_i_6 ));
LUT6 #(
    .INIT(64'hCFFFCEEECCCCCCCC)) 
     \mi_wrap_be_next[31]_i_1 
       (.I0(size[1]),
        .I1(\n_0_mi_wrap_be_next[31]_i_2 ),
        .I2(n_0_M_AXI_WLAST_i_i_2),
        .I3(n_0_M_AXI_WLAST_i_i_3),
        .I4(size[0]),
        .I5(size[2]),
        .O(\n_0_mi_wrap_be_next[31]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair136" *) 
   LUT5 #(
    .INIT(32'h75757500)) 
     \mi_wrap_be_next[31]_i_2 
       (.I0(\n_0_mi_wrap_be_next[63]_i_2 ),
        .I1(\n_0_mi_size[0]_i_2 ),
        .I2(O1[2]),
        .I3(\n_0_mi_wcnt[7]_i_5 ),
        .I4(\n_0_mi_wcnt[7]_i_4 ),
        .O(\n_0_mi_wrap_be_next[31]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF88A8)) 
     \mi_wrap_be_next[32]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[32]_i_2 ),
        .I2(\n_0_mi_wrap_be_next[32]_i_3 ),
        .I3(\n_0_mi_wrap_be_next[46]_i_3 ),
        .I4(\n_0_mi_wrap_be_next[32]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[32]_i_5 ),
        .O(\n_0_mi_wrap_be_next[32]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFFFFF00C08800)) 
     \mi_wrap_be_next[32]_i_10 
       (.I0(\n_0_mi_wrap_be_next[33]_i_8 ),
        .I1(\n_0_next_mi_addr_reg[5] ),
        .I2(\n_0_mi_wrap_be_next[48]_i_15 ),
        .I3(size[1]),
        .I4(p_6_in),
        .I5(\n_0_mi_wrap_be_next[38]_i_4 ),
        .O(\n_0_mi_wrap_be_next[32]_i_10 ));
LUT6 #(
    .INIT(64'h00000000FF110101)) 
     \mi_wrap_be_next[32]_i_11 
       (.I0(\n_0_next_mi_addr_reg[2] ),
        .I1(\n_0_next_mi_addr_reg[3] ),
        .I2(\n_0_next_mi_addr_reg[1] ),
        .I3(\n_0_next_mi_len_reg[2] ),
        .I4(size[0]),
        .I5(size[1]),
        .O(\n_0_mi_wrap_be_next[32]_i_11 ));
LUT6 #(
    .INIT(64'hFFB8CF88CF88CF88)) 
     \mi_wrap_be_next[32]_i_2 
       (.I0(\n_0_mi_wrap_be_next[34]_i_4 ),
        .I1(O1[1]),
        .I2(O1[0]),
        .I3(O1[2]),
        .I4(D[3]),
        .I5(M_AXI_AWADDR[5]),
        .O(\n_0_mi_wrap_be_next[32]_i_2 ));
LUT6 #(
    .INIT(64'h0F0F0F0E0E0E0E0E)) 
     \mi_wrap_be_next[32]_i_3 
       (.I0(\n_0_mi_wrap_be_next[32]_i_6 ),
        .I1(D[3]),
        .I2(O1[1]),
        .I3(D[2]),
        .I4(\n_0_mi_wrap_be_next[32]_i_7 ),
        .I5(O1[0]),
        .O(\n_0_mi_wrap_be_next[32]_i_3 ));
LUT6 #(
    .INIT(64'h0000000000000E00)) 
     \mi_wrap_be_next[32]_i_4 
       (.I0(\n_0_mi_wcnt[7]_i_4 ),
        .I1(\n_0_mi_wcnt[7]_i_5 ),
        .I2(D[1]),
        .I3(M_AXI_AWADDR[5]),
        .I4(\n_0_mi_wrap_be_next[34]_i_5 ),
        .I5(\n_0_mi_wrap_be_next[36]_i_8 ),
        .O(\n_0_mi_wrap_be_next[32]_i_4 ));
LUT6 #(
    .INIT(64'hFFFFBAFFAAAAAAAA)) 
     \mi_wrap_be_next[32]_i_5 
       (.I0(\n_0_mi_wrap_be_next[32]_i_8 ),
        .I1(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I2(\n_0_mi_wrap_be_next[32]_i_9 ),
        .I3(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I4(\n_0_mi_wrap_be_next[32]_i_10 ),
        .I5(\n_0_mi_wrap_be_next[40]_i_3 ),
        .O(\n_0_mi_wrap_be_next[32]_i_5 ));
LUT6 #(
    .INIT(64'h3333333330003131)) 
     \mi_wrap_be_next[32]_i_6 
       (.I0(M_AXI_AWADDR[1]),
        .I1(M_AXI_AWADDR[3]),
        .I2(D[1]),
        .I3(O1[0]),
        .I4(M_AXI_AWADDR[2]),
        .I5(D[2]),
        .O(\n_0_mi_wrap_be_next[32]_i_6 ));
LUT2 #(
    .INIT(4'h1)) 
     \mi_wrap_be_next[32]_i_7 
       (.I0(M_AXI_AWADDR[2]),
        .I1(M_AXI_AWADDR[3]),
        .O(\n_0_mi_wrap_be_next[32]_i_7 ));
LUT6 #(
    .INIT(64'h0000000000000700)) 
     \mi_wrap_be_next[32]_i_8 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(n_0_M_AXI_WLAST_i_i_3),
        .I2(\n_0_next_mi_len_reg[1] ),
        .I3(\n_0_next_mi_addr_reg[5] ),
        .I4(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[36]_i_5 ),
        .O(\n_0_mi_wrap_be_next[32]_i_8 ));
LUT6 #(
    .INIT(64'hFFFFFFFFAAAA8088)) 
     \mi_wrap_be_next[32]_i_9 
       (.I0(\n_0_mi_wrap_be_next[36]_i_9 ),
        .I1(\n_0_next_mi_len_reg[1] ),
        .I2(size[0]),
        .I3(\n_0_next_mi_addr_reg[2] ),
        .I4(\n_0_next_mi_len_reg[2] ),
        .I5(\n_0_mi_wrap_be_next[32]_i_11 ),
        .O(\n_0_mi_wrap_be_next[32]_i_9 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFEFEFEFE)) 
     \mi_wrap_be_next[33]_i_1 
       (.I0(\n_0_mi_wrap_be_next[33]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[33]_i_3 ),
        .I2(\n_0_mi_wrap_be_next[33]_i_4 ),
        .I3(\n_0_mi_wrap_be_next[33]_i_5 ),
        .I4(\n_0_mi_wrap_be_next[33]_i_6 ),
        .I5(\n_0_mi_wrap_be_next[40]_i_3 ),
        .O(\n_0_mi_wrap_be_next[33]_i_1 ));
LUT6 #(
    .INIT(64'hFEF4BAB000000000)) 
     \mi_wrap_be_next[33]_i_2 
       (.I0(O1[1]),
        .I1(O1[0]),
        .I2(O1[2]),
        .I3(\n_0_mi_wrap_be_next[34]_i_4 ),
        .I4(\n_0_mi_wrap_be_next[33]_i_7 ),
        .I5(\n_0_mi_wrap_be_next[34]_i_2 ),
        .O(\n_0_mi_wrap_be_next[33]_i_2 ));
LUT6 #(
    .INIT(64'h0007000000000000)) 
     \mi_wrap_be_next[33]_i_3 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(n_0_M_AXI_WLAST_i_i_3),
        .I2(size[1]),
        .I3(size[0]),
        .I4(f_mi_wrap_be00136_out),
        .I5(size[2]),
        .O(\n_0_mi_wrap_be_next[33]_i_3 ));
LUT6 #(
    .INIT(64'h0000000000000E00)) 
     \mi_wrap_be_next[33]_i_4 
       (.I0(\n_0_mi_wcnt[7]_i_4 ),
        .I1(\n_0_mi_wcnt[7]_i_5 ),
        .I2(D[1]),
        .I3(M_AXI_AWADDR[5]),
        .I4(\n_0_mi_wrap_be_next[34]_i_5 ),
        .I5(\n_0_mi_wrap_be_next[36]_i_8 ),
        .O(\n_0_mi_wrap_be_next[33]_i_4 ));
LUT6 #(
    .INIT(64'hFFFFFFFF4000FFFF)) 
     \mi_wrap_be_next[33]_i_5 
       (.I0(p_6_in),
        .I1(\n_0_next_mi_addr_reg[5] ),
        .I2(size[1]),
        .I3(\n_0_mi_wrap_be_next[33]_i_8 ),
        .I4(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[38]_i_4 ),
        .O(\n_0_mi_wrap_be_next[33]_i_5 ));
LUT6 #(
    .INIT(64'h00000000CC080000)) 
     \mi_wrap_be_next[33]_i_6 
       (.I0(\n_0_mi_wrap_be_next[17]_i_4 ),
        .I1(\n_0_next_mi_addr_reg[5] ),
        .I2(\n_0_next_mi_addr_reg[4] ),
        .I3(p_6_in),
        .I4(size[0]),
        .I5(size[1]),
        .O(\n_0_mi_wrap_be_next[33]_i_6 ));
LUT6 #(
    .INIT(64'hFFFF000055100000)) 
     \mi_wrap_be_next[33]_i_7 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[3]),
        .I2(\n_0_mi_wrap_be_next[61]_i_5 ),
        .I3(D[2]),
        .I4(M_AXI_AWADDR[5]),
        .I5(D[3]),
        .O(\n_0_mi_wrap_be_next[33]_i_7 ));
(* SOFT_HLUTNM = "soft_lutpair145" *) 
   LUT5 #(
    .INIT(32'h23222323)) 
     \mi_wrap_be_next[33]_i_8 
       (.I0(\n_0_next_mi_len_reg[2] ),
        .I1(size[0]),
        .I2(\n_0_next_mi_addr_reg[4] ),
        .I3(\n_0_next_mi_len_reg[1] ),
        .I4(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_wrap_be_next[33]_i_8 ));
LUT6 #(
    .INIT(64'hFFFFFFFFA808AAAA)) 
     \mi_wrap_be_next[34]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[34]_i_3 ),
        .I2(O1[1]),
        .I3(\n_0_mi_wrap_be_next[34]_i_4 ),
        .I4(\n_0_mi_wrap_be_next[34]_i_5 ),
        .I5(\n_0_mi_wrap_be_next[34]_i_6 ),
        .O(\n_0_mi_wrap_be_next[34]_i_1 ));
LUT6 #(
    .INIT(64'h0000000000010000)) 
     \mi_wrap_be_next[34]_i_10 
       (.I0(\n_0_mi_wrap_be_next[5]_i_3 ),
        .I1(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I2(size[0]),
        .I3(size[1]),
        .I4(\n_0_mi_wrap_be_next[2]_i_8 ),
        .I5(\n_0_mi_wrap_be_next[48]_i_8 ),
        .O(\n_0_mi_wrap_be_next[34]_i_10 ));
(* SOFT_HLUTNM = "soft_lutpair243" *) 
   LUT3 #(
    .INIT(8'hBF)) 
     \mi_wrap_be_next[34]_i_11 
       (.I0(p_6_in),
        .I1(\n_0_next_mi_addr_reg[5] ),
        .I2(size[1]),
        .O(\n_0_mi_wrap_be_next[34]_i_11 ));
LUT5 #(
    .INIT(32'hE0EE0000)) 
     \mi_wrap_be_next[34]_i_2 
       (.I0(\n_0_mi_wcnt[7]_i_5 ),
        .I1(\n_0_mi_wcnt[7]_i_4 ),
        .I2(O1[1]),
        .I3(O1[2]),
        .I4(n_0_M_AXI_WLAST_i_i_2),
        .O(\n_0_mi_wrap_be_next[34]_i_2 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \mi_wrap_be_next[34]_i_3 
       (.I0(M_AXI_AWADDR[3]),
        .I1(M_AXI_AWADDR[2]),
        .I2(\n_0_mi_wrap_be_next[18]_i_4 ),
        .I3(\n_0_mi_wrap_be_next[46]_i_3 ),
        .I4(\n_0_mi_wrap_be_next[60]_i_9 ),
        .I5(O1[0]),
        .O(\n_0_mi_wrap_be_next[34]_i_3 ));
LUT6 #(
    .INIT(64'h2300FFFF23000000)) 
     \mi_wrap_be_next[34]_i_4 
       (.I0(D[1]),
        .I1(D[2]),
        .I2(M_AXI_AWADDR[4]),
        .I3(M_AXI_AWADDR[5]),
        .I4(O1[0]),
        .I5(f_mi_wrap_be081_out),
        .O(\n_0_mi_wrap_be_next[34]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair154" *) 
   LUT3 #(
    .INIT(8'h4F)) 
     \mi_wrap_be_next[34]_i_5 
       (.I0(O1[1]),
        .I1(O1[0]),
        .I2(O1[2]),
        .O(\n_0_mi_wrap_be_next[34]_i_5 ));
LUT6 #(
    .INIT(64'hAAFEAAFEABFFFFFF)) 
     \mi_wrap_be_next[34]_i_6 
       (.I0(\n_0_mi_wrap_be_next[34]_i_7 ),
        .I1(\n_0_mi_wcnt[7]_i_4 ),
        .I2(\n_0_mi_wcnt[7]_i_5 ),
        .I3(\n_0_mi_wrap_be_next[34]_i_8 ),
        .I4(n_0_M_AXI_WLAST_i_i_2),
        .I5(\n_0_mi_wrap_be_next[34]_i_9 ),
        .O(\n_0_mi_wrap_be_next[34]_i_6 ));
LUT6 #(
    .INIT(64'hFBFBFFFB00000000)) 
     \mi_wrap_be_next[34]_i_7 
       (.I0(\n_0_mi_wrap_be_next[34]_i_10 ),
        .I1(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I2(\n_0_mi_wrap_be_next[38]_i_4 ),
        .I3(\n_0_mi_wrap_be_next[33]_i_8 ),
        .I4(\n_0_mi_wrap_be_next[34]_i_11 ),
        .I5(\n_0_mi_wrap_be_next[40]_i_3 ),
        .O(\n_0_mi_wrap_be_next[34]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFDFFFFFF)) 
     \mi_wrap_be_next[34]_i_8 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(O1[1]),
        .I2(O1[0]),
        .I3(O1[2]),
        .I4(M_AXI_AWADDR[5]),
        .I5(D[1]),
        .O(\n_0_mi_wrap_be_next[34]_i_8 ));
(* SOFT_HLUTNM = "soft_lutpair133" *) 
   LUT5 #(
    .INIT(32'hFFFFFFF7)) 
     \mi_wrap_be_next[34]_i_9 
       (.I0(size[2]),
        .I1(\n_0_next_mi_addr_reg[5] ),
        .I2(\n_0_next_mi_len_reg[1] ),
        .I3(size[0]),
        .I4(size[1]),
        .O(\n_0_mi_wrap_be_next[34]_i_9 ));
LUT6 #(
    .INIT(64'hFAFBFBFBFAFFFFFF)) 
     \mi_wrap_be_next[35]_i_1 
       (.I0(\n_0_mi_wrap_be_next[35]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[61]_i_2 ),
        .I2(\n_0_mi_wrap_be_next[39]_i_2 ),
        .I3(n_0_M_AXI_WLAST_i_i_3),
        .I4(n_0_M_AXI_WLAST_i_i_2),
        .I5(\n_0_mi_wrap_be_next[35]_i_3 ),
        .O(\n_0_mi_wrap_be_next[35]_i_1 ));
LUT5 #(
    .INIT(32'hBABABAAA)) 
     \mi_wrap_be_next[35]_i_2 
       (.I0(\n_0_mi_wrap_be_next[47]_i_3 ),
        .I1(\n_0_mi_wrap_be_next[58]_i_4 ),
        .I2(f_mi_wrap_be081_out),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .O(\n_0_mi_wrap_be_next[35]_i_2 ));
LUT6 #(
    .INIT(64'h7777F7FF00000000)) 
     \mi_wrap_be_next[35]_i_3 
       (.I0(\n_0_mi_wrap_be_next[40]_i_13 ),
        .I1(size[1]),
        .I2(size[0]),
        .I3(\n_0_next_mi_len_reg[2] ),
        .I4(\n_0_mi_wrap_be_next[35]_i_5 ),
        .I5(\n_0_mi_wrap_be_next[47]_i_2 ),
        .O(\n_0_mi_wrap_be_next[35]_i_3 ));
LUT6 #(
    .INIT(64'h00FF000000510000)) 
     \mi_wrap_be_next[35]_i_4 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[3]),
        .I2(D[1]),
        .I3(D[3]),
        .I4(M_AXI_AWADDR[5]),
        .I5(D[2]),
        .O(f_mi_wrap_be081_out));
(* SOFT_HLUTNM = "soft_lutpair145" *) 
   LUT4 #(
    .INIT(16'h000D)) 
     \mi_wrap_be_next[35]_i_5 
       (.I0(\n_0_next_mi_addr_reg[3] ),
        .I1(\n_0_next_mi_len_reg[1] ),
        .I2(\n_0_next_mi_addr_reg[4] ),
        .I3(size[0]),
        .O(\n_0_mi_wrap_be_next[35]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFEEEEFEEE)) 
     \mi_wrap_be_next[36]_i_1 
       (.I0(\n_0_mi_wrap_be_next[36]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[36]_i_3 ),
        .I2(\n_0_mi_wrap_be_next[36]_i_4 ),
        .I3(\n_0_mi_wrap_be_next[36]_i_5 ),
        .I4(load_mi_ptr),
        .I5(\n_0_mi_wrap_be_next[36]_i_6 ),
        .O(\n_0_mi_wrap_be_next[36]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair167" *) 
   LUT4 #(
    .INIT(16'h30D0)) 
     \mi_wrap_be_next[36]_i_10 
       (.I0(\n_0_next_mi_addr_reg[1] ),
        .I1(\n_0_next_mi_len_reg[1] ),
        .I2(\n_0_next_mi_addr_reg[2] ),
        .I3(size[0]),
        .O(\n_0_mi_wrap_be_next[36]_i_10 ));
LUT6 #(
    .INIT(64'h0000C40000000000)) 
     \mi_wrap_be_next[36]_i_11 
       (.I0(\n_0_next_mi_addr_reg[4] ),
        .I1(\n_0_next_mi_addr_reg[5] ),
        .I2(\n_0_next_mi_len_reg[1] ),
        .I3(size[1]),
        .I4(\n_0_next_mi_len_reg[2] ),
        .I5(size[0]),
        .O(\n_0_mi_wrap_be_next[36]_i_11 ));
LUT6 #(
    .INIT(64'h0000C40000000000)) 
     \mi_wrap_be_next[36]_i_12 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .I2(D[1]),
        .I3(O1[1]),
        .I4(D[2]),
        .I5(O1[0]),
        .O(\n_0_mi_wrap_be_next[36]_i_12 ));
LUT6 #(
    .INIT(64'h8888888888888A88)) 
     \mi_wrap_be_next[36]_i_2 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[36]_i_7 ),
        .I2(\n_0_mi_wrap_be_next[46]_i_3 ),
        .I3(\n_0_mi_wrap_be_next[60]_i_9 ),
        .I4(O1[1]),
        .I5(\n_0_mi_wrap_be_next[52]_i_4 ),
        .O(\n_0_mi_wrap_be_next[36]_i_2 ));
LUT6 #(
    .INIT(64'h0000000000000E00)) 
     \mi_wrap_be_next[36]_i_3 
       (.I0(\n_0_mi_wcnt[7]_i_4 ),
        .I1(\n_0_mi_wcnt[7]_i_5 ),
        .I2(D[1]),
        .I3(M_AXI_AWADDR[5]),
        .I4(\n_0_mi_wrap_be_next[34]_i_5 ),
        .I5(\n_0_mi_wrap_be_next[36]_i_8 ),
        .O(\n_0_mi_wrap_be_next[36]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFFFFF1000FFFF)) 
     \mi_wrap_be_next[36]_i_4 
       (.I0(\n_0_mi_wrap_be_next[5]_i_3 ),
        .I1(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I2(\n_0_mi_wrap_be_next[36]_i_9 ),
        .I3(\n_0_mi_wrap_be_next[36]_i_10 ),
        .I4(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[36]_i_11 ),
        .O(\n_0_mi_wrap_be_next[36]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair244" *) 
   LUT2 #(
    .INIT(4'hB)) 
     \mi_wrap_be_next[36]_i_5 
       (.I0(size[1]),
        .I1(size[2]),
        .O(\n_0_mi_wrap_be_next[36]_i_5 ));
LUT6 #(
    .INIT(64'h0007000000000000)) 
     \mi_wrap_be_next[36]_i_6 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(n_0_M_AXI_WLAST_i_i_3),
        .I2(size[1]),
        .I3(size[0]),
        .I4(f_mi_wrap_be00136_out),
        .I5(size[2]),
        .O(\n_0_mi_wrap_be_next[36]_i_6 ));
(* SOFT_HLUTNM = "soft_lutpair154" *) 
   LUT5 #(
    .INIT(32'hFFFFEF20)) 
     \mi_wrap_be_next[36]_i_7 
       (.I0(\n_0_mi_wrap_be_next[37]_i_4 ),
        .I1(O1[1]),
        .I2(O1[0]),
        .I3(O1[2]),
        .I4(\n_0_mi_wrap_be_next[36]_i_12 ),
        .O(\n_0_mi_wrap_be_next[36]_i_7 ));
LUT5 #(
    .INIT(32'hFDFDFDFF)) 
     \mi_wrap_be_next[36]_i_8 
       (.I0(O1[2]),
        .I1(O1[1]),
        .I2(mi_state[1]),
        .I3(mi_awvalid),
        .I4(mi_state[2]),
        .O(\n_0_mi_wrap_be_next[36]_i_8 ));
(* SOFT_HLUTNM = "soft_lutpair258" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \mi_wrap_be_next[36]_i_9 
       (.I0(size[1]),
        .I1(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_wrap_be_next[36]_i_9 ));
LUT6 #(
    .INIT(64'hFAFBFBFBFAFFFFFF)) 
     \mi_wrap_be_next[37]_i_1 
       (.I0(\n_0_mi_wrap_be_next[37]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[61]_i_2 ),
        .I2(\n_0_mi_wrap_be_next[39]_i_2 ),
        .I3(n_0_M_AXI_WLAST_i_i_2),
        .I4(n_0_M_AXI_WLAST_i_i_3),
        .I5(\n_0_mi_wrap_be_next[37]_i_3 ),
        .O(\n_0_mi_wrap_be_next[37]_i_1 ));
LUT6 #(
    .INIT(64'hABAAABAAABAAAAAA)) 
     \mi_wrap_be_next[37]_i_2 
       (.I0(\n_0_mi_wrap_be_next[47]_i_3 ),
        .I1(\n_0_mi_wrap_cnt[3]_i_9 ),
        .I2(\n_0_mi_size[0]_i_2 ),
        .I3(\n_0_mi_wrap_be_next[37]_i_4 ),
        .I4(\n_0_mi_wcnt[7]_i_4 ),
        .I5(\n_0_mi_wcnt[7]_i_5 ),
        .O(\n_0_mi_wrap_be_next[37]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFFEF00000000)) 
     \mi_wrap_be_next[37]_i_3 
       (.I0(\n_0_next_mi_addr_reg[3] ),
        .I1(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I2(\n_0_next_mi_addr_reg[2] ),
        .I3(\n_0_next_mi_len_reg[1] ),
        .I4(\n_0_mi_wrap_be_next[61]_i_7 ),
        .I5(\n_0_mi_wrap_be_next[47]_i_2 ),
        .O(\n_0_mi_wrap_be_next[37]_i_3 ));
LUT6 #(
    .INIT(64'h0000000000000100)) 
     \mi_wrap_be_next[37]_i_4 
       (.I0(\n_0_mi_wrap_be_next[46]_i_3 ),
        .I1(M_AXI_AWADDR[3]),
        .I2(D[1]),
        .I3(M_AXI_AWADDR[2]),
        .I4(D[3]),
        .I5(D[2]),
        .O(\n_0_mi_wrap_be_next[37]_i_4 ));
LUT6 #(
    .INIT(64'hAAFEAAFEAAFEFEFE)) 
     \mi_wrap_be_next[38]_i_1 
       (.I0(\n_0_mi_wrap_be_next[38]_i_2 ),
        .I1(\n_0_mi_wcnt[7]_i_4 ),
        .I2(\n_0_mi_wcnt[7]_i_5 ),
        .I3(\n_0_mi_wrap_be_next[38]_i_3 ),
        .I4(\n_0_mi_wrap_be_next[46]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[54]_i_3 ),
        .O(\n_0_mi_wrap_be_next[38]_i_1 ));
LUT6 #(
    .INIT(64'h00000000FFFFFF10)) 
     \mi_wrap_be_next[38]_i_2 
       (.I0(\n_0_next_mi_addr_reg[3] ),
        .I1(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I2(\n_0_mi_wrap_be_next[30]_i_3 ),
        .I3(\n_0_mi_wrap_be_next[38]_i_4 ),
        .I4(\n_0_mi_wrap_be_next[46]_i_5 ),
        .I5(load_mi_ptr),
        .O(\n_0_mi_wrap_be_next[38]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAA2A0AAAA)) 
     \mi_wrap_be_next[38]_i_3 
       (.I0(\n_0_mi_wrap_be_next[46]_i_2 ),
        .I1(D[1]),
        .I2(D[2]),
        .I3(M_AXI_AWADDR[4]),
        .I4(M_AXI_AWADDR[5]),
        .I5(\n_0_mi_wrap_be_next[6]_i_3 ),
        .O(\n_0_mi_wrap_be_next[38]_i_3 ));
LUT6 #(
    .INIT(64'h00000000C4000000)) 
     \mi_wrap_be_next[38]_i_4 
       (.I0(\n_0_next_mi_addr_reg[4] ),
        .I1(\n_0_next_mi_addr_reg[5] ),
        .I2(\n_0_next_mi_len_reg[1] ),
        .I3(size[1]),
        .I4(size[0]),
        .I5(\n_0_next_mi_len_reg[2] ),
        .O(\n_0_mi_wrap_be_next[38]_i_4 ));
LUT6 #(
    .INIT(64'hFFFFABBBFFFFAFFF)) 
     \mi_wrap_be_next[39]_i_1 
       (.I0(\n_0_mi_wrap_be_next[39]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[61]_i_2 ),
        .I2(n_0_M_AXI_WLAST_i_i_3),
        .I3(n_0_M_AXI_WLAST_i_i_2),
        .I4(\n_0_mi_wrap_be_next[47]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[47]_i_2 ),
        .O(\n_0_mi_wrap_be_next[39]_i_1 ));
LUT6 #(
    .INIT(64'h444F444F444F0F0F)) 
     \mi_wrap_be_next[39]_i_2 
       (.I0(\n_0_mi_wrap_be_next[6]_i_3 ),
        .I1(f_mi_wrap_be083_out),
        .I2(\n_0_mi_wrap_be_next[39]_i_4 ),
        .I3(n_0_M_AXI_WLAST_i_i_2),
        .I4(\n_0_mi_wcnt[7]_i_4 ),
        .I5(\n_0_mi_wcnt[7]_i_5 ),
        .O(\n_0_mi_wrap_be_next[39]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair160" *) 
   LUT4 #(
    .INIT(16'h2300)) 
     \mi_wrap_be_next[39]_i_3 
       (.I0(D[1]),
        .I1(D[2]),
        .I2(M_AXI_AWADDR[4]),
        .I3(M_AXI_AWADDR[5]),
        .O(f_mi_wrap_be083_out));
LUT6 #(
    .INIT(64'hFFFFFFFF75FFFFFF)) 
     \mi_wrap_be_next[39]_i_4 
       (.I0(\n_0_next_mi_addr_reg[5] ),
        .I1(\n_0_next_mi_len_reg[1] ),
        .I2(\n_0_next_mi_addr_reg[4] ),
        .I3(size[1]),
        .I4(size[0]),
        .I5(\n_0_next_mi_len_reg[2] ),
        .O(\n_0_mi_wrap_be_next[39]_i_4 ));
LUT6 #(
    .INIT(64'hFFFFAEAAAEAAAEAA)) 
     \mi_wrap_be_next[3]_i_1 
       (.I0(\n_0_mi_wrap_be_next[7]_i_1 ),
        .I1(\n_0_mi_wrap_be_next[3]_i_2 ),
        .I2(load_mi_ptr),
        .I3(size[1]),
        .I4(\n_0_mi_wrap_be_next[3]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[3]_i_4 ),
        .O(\n_0_mi_wrap_be_next[3]_i_1 ));
LUT6 #(
    .INIT(64'h0000BBBB0000ABAA)) 
     \mi_wrap_be_next[3]_i_2 
       (.I0(p_6_in),
        .I1(\n_0_next_mi_addr_reg[5] ),
        .I2(\n_0_next_mi_addr_reg[4] ),
        .I3(\n_0_mi_wrap_be_next[56]_i_10 ),
        .I4(size[0]),
        .I5(\n_0_next_mi_len_reg[2] ),
        .O(\n_0_mi_wrap_be_next[3]_i_2 ));
LUT6 #(
    .INIT(64'hAAEFAAEEAAEFAAEF)) 
     \mi_wrap_be_next[3]_i_3 
       (.I0(D[3]),
        .I1(D[2]),
        .I2(M_AXI_AWADDR[4]),
        .I3(M_AXI_AWADDR[5]),
        .I4(D[1]),
        .I5(M_AXI_AWADDR[3]),
        .O(\n_0_mi_wrap_be_next[3]_i_3 ));
LUT6 #(
    .INIT(64'h000000000E0E0E00)) 
     \mi_wrap_be_next[3]_i_4 
       (.I0(\n_0_mi_wcnt[7]_i_4 ),
        .I1(\n_0_mi_wcnt[7]_i_5 ),
        .I2(O1[0]),
        .I3(mi_awvalid),
        .I4(mi_state[2]),
        .I5(\n_0_mi_wrap_be_next[3]_i_5 ),
        .O(\n_0_mi_wrap_be_next[3]_i_4 ));
LUT2 #(
    .INIT(4'hB)) 
     \mi_wrap_be_next[3]_i_5 
       (.I0(mi_state[1]),
        .I1(O1[1]),
        .O(\n_0_mi_wrap_be_next[3]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFEEEEEEAE)) 
     \mi_wrap_be_next[40]_i_1 
       (.I0(\n_0_mi_wrap_be_next[40]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[40]_i_3 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I3(\n_0_mi_wrap_be_next[40]_i_5 ),
        .I4(\n_0_mi_wrap_be_next[40]_i_6 ),
        .I5(\n_0_mi_wrap_be_next[40]_i_7 ),
        .O(\n_0_mi_wrap_be_next[40]_i_1 ));
LUT6 #(
    .INIT(64'hFFFF002000000020)) 
     \mi_wrap_be_next[40]_i_10 
       (.I0(\n_0_mi_wrap_be_next[40]_i_16 ),
        .I1(D[3]),
        .I2(M_AXI_AWADDR[3]),
        .I3(\n_0_mi_wrap_be_next[46]_i_3 ),
        .I4(O1[1]),
        .I5(\n_0_mi_wrap_be_next[40]_i_17 ),
        .O(\n_0_mi_wrap_be_next[40]_i_10 ));
(* SOFT_HLUTNM = "soft_lutpair254" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \mi_wrap_be_next[40]_i_11 
       (.I0(size[0]),
        .I1(\n_0_next_mi_addr_reg[4] ),
        .O(\n_0_mi_wrap_be_next[40]_i_11 ));
(* SOFT_HLUTNM = "soft_lutpair258" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \mi_wrap_be_next[40]_i_12 
       (.I0(\n_0_next_mi_addr_reg[3] ),
        .I1(size[1]),
        .O(\n_0_mi_wrap_be_next[40]_i_12 ));
(* SOFT_HLUTNM = "soft_lutpair243" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \mi_wrap_be_next[40]_i_13 
       (.I0(\n_0_next_mi_addr_reg[5] ),
        .I1(p_6_in),
        .O(\n_0_mi_wrap_be_next[40]_i_13 ));
LUT6 #(
    .INIT(64'h0000000000000020)) 
     \mi_wrap_be_next[40]_i_14 
       (.I0(\n_0_next_mi_addr_reg[3] ),
        .I1(size[1]),
        .I2(\n_0_mi_wrap_be_next[48]_i_8 ),
        .I3(\n_0_mi_wrap_be_next[48]_i_9 ),
        .I4(p_6_in),
        .I5(\n_0_mi_wrap_be_next[45]_i_7 ),
        .O(\n_0_mi_wrap_be_next[40]_i_14 ));
(* SOFT_HLUTNM = "soft_lutpair169" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \mi_wrap_be_next[40]_i_15 
       (.I0(\n_0_next_mi_addr_reg[5] ),
        .I1(\n_0_next_mi_len_reg[1] ),
        .O(f_mi_wrap_be00136_out));
(* SOFT_HLUTNM = "soft_lutpair155" *) 
   LUT5 #(
    .INIT(32'h00FF0045)) 
     \mi_wrap_be_next[40]_i_16 
       (.I0(M_AXI_AWADDR[2]),
        .I1(D[1]),
        .I2(M_AXI_AWADDR[1]),
        .I3(O1[0]),
        .I4(D[2]),
        .O(\n_0_mi_wrap_be_next[40]_i_16 ));
LUT6 #(
    .INIT(64'h0000000000000010)) 
     \mi_wrap_be_next[40]_i_17 
       (.I0(O1[0]),
        .I1(\n_0_mi_wrap_be_next[46]_i_3 ),
        .I2(M_AXI_AWADDR[3]),
        .I3(D[1]),
        .I4(D[2]),
        .I5(D[3]),
        .O(\n_0_mi_wrap_be_next[40]_i_17 ));
LUT6 #(
    .INIT(64'hFFFFFBBBAAAAAAAA)) 
     \mi_wrap_be_next[40]_i_2 
       (.I0(\n_0_mi_wrap_be_next[40]_i_8 ),
        .I1(\n_0_mi_wrap_be_next[34]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_9 ),
        .I3(\n_0_mi_wrap_be_next[41]_i_4 ),
        .I4(\n_0_mi_wrap_be_next[40]_i_10 ),
        .I5(\n_0_mi_wrap_be_next[34]_i_2 ),
        .O(\n_0_mi_wrap_be_next[40]_i_2 ));
LUT6 #(
    .INIT(64'hDDDDDDDD0D0D0DDD)) 
     \mi_wrap_be_next[40]_i_3 
       (.I0(size[2]),
        .I1(size[1]),
        .I2(n_0_M_AXI_WLAST_i_i_3),
        .I3(mi_state[2]),
        .I4(mi_awvalid),
        .I5(mi_state[1]),
        .O(\n_0_mi_wrap_be_next[40]_i_3 ));
LUT3 #(
    .INIT(8'h4F)) 
     \mi_wrap_be_next[40]_i_4 
       (.I0(size[1]),
        .I1(size[0]),
        .I2(size[2]),
        .O(\n_0_mi_wrap_be_next[40]_i_4 ));
LUT6 #(
    .INIT(64'hFFFF200020002000)) 
     \mi_wrap_be_next[40]_i_5 
       (.I0(\n_0_next_mi_len_reg[2] ),
        .I1(\n_0_mi_wrap_be_next[40]_i_11 ),
        .I2(\n_0_mi_wrap_be_next[40]_i_12 ),
        .I3(\n_0_mi_wrap_be_next[40]_i_13 ),
        .I4(\n_0_mi_wrap_be_next[41]_i_5 ),
        .I5(\n_0_mi_wrap_be_next[48]_i_6 ),
        .O(\n_0_mi_wrap_be_next[40]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFF00000002)) 
     \mi_wrap_be_next[40]_i_6 
       (.I0(size[1]),
        .I1(size[0]),
        .I2(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I3(\n_0_mi_wrap_be_next[5]_i_3 ),
        .I4(\n_0_mi_wrap_be_next[56]_i_10 ),
        .I5(\n_0_mi_wrap_be_next[40]_i_14 ),
        .O(\n_0_mi_wrap_be_next[40]_i_6 ));
LUT6 #(
    .INIT(64'h0007000000000000)) 
     \mi_wrap_be_next[40]_i_7 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(n_0_M_AXI_WLAST_i_i_3),
        .I2(size[1]),
        .I3(size[0]),
        .I4(f_mi_wrap_be00136_out),
        .I5(size[2]),
        .O(\n_0_mi_wrap_be_next[40]_i_7 ));
LUT6 #(
    .INIT(64'h0000000000000E00)) 
     \mi_wrap_be_next[40]_i_8 
       (.I0(\n_0_mi_wcnt[7]_i_4 ),
        .I1(\n_0_mi_wcnt[7]_i_5 ),
        .I2(D[1]),
        .I3(M_AXI_AWADDR[5]),
        .I4(\n_0_mi_wrap_be_next[34]_i_5 ),
        .I5(\n_0_mi_wrap_be_next[36]_i_8 ),
        .O(\n_0_mi_wrap_be_next[40]_i_8 ));
(* SOFT_HLUTNM = "soft_lutpair159" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \mi_wrap_be_next[40]_i_9 
       (.I0(O1[0]),
        .I1(O1[1]),
        .O(\n_0_mi_wrap_be_next[40]_i_9 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFAABF)) 
     \mi_wrap_be_next[41]_i_1 
       (.I0(\n_0_mi_wrap_be_next[41]_i_2 ),
        .I1(n_0_M_AXI_WLAST_i_i_2),
        .I2(n_0_M_AXI_WLAST_i_i_3),
        .I3(\n_0_mi_wrap_be_next[61]_i_2 ),
        .I4(\n_0_mi_wrap_be_next[43]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[41]_i_3 ),
        .O(\n_0_mi_wrap_be_next[41]_i_1 ));
LUT6 #(
    .INIT(64'hABAAABAAABAAAAAA)) 
     \mi_wrap_be_next[41]_i_2 
       (.I0(\n_0_mi_wrap_be_next[47]_i_3 ),
        .I1(\n_0_mi_wrap_cnt[3]_i_9 ),
        .I2(\n_0_mi_size[0]_i_2 ),
        .I3(\n_0_mi_wrap_be_next[41]_i_4 ),
        .I4(\n_0_mi_wcnt[7]_i_4 ),
        .I5(\n_0_mi_wcnt[7]_i_5 ),
        .O(\n_0_mi_wrap_be_next[41]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAEAAAEAAAEAA)) 
     \mi_wrap_be_next[41]_i_3 
       (.I0(\n_0_mi_wrap_be_next[43]_i_2 ),
        .I1(size[0]),
        .I2(\n_0_mi_wrap_be_next[52]_i_6 ),
        .I3(\n_0_mi_wrap_be_next[41]_i_5 ),
        .I4(n_0_M_AXI_WLAST_i_i_2),
        .I5(n_0_M_AXI_WLAST_i_i_3),
        .O(\n_0_mi_wrap_be_next[41]_i_3 ));
LUT6 #(
    .INIT(64'h0000000000004044)) 
     \mi_wrap_be_next[41]_i_4 
       (.I0(\n_0_mi_wrap_be_next[46]_i_3 ),
        .I1(M_AXI_AWADDR[3]),
        .I2(D[1]),
        .I3(M_AXI_AWADDR[2]),
        .I4(D[3]),
        .I5(D[2]),
        .O(\n_0_mi_wrap_be_next[41]_i_4 ));
LUT6 #(
    .INIT(64'h00000000000000B0)) 
     \mi_wrap_be_next[41]_i_5 
       (.I0(\n_0_next_mi_len_reg[1] ),
        .I1(\n_0_next_mi_addr_reg[2] ),
        .I2(\n_0_next_mi_addr_reg[3] ),
        .I3(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I4(\n_0_next_mi_len_reg[2] ),
        .I5(p_6_in),
        .O(\n_0_mi_wrap_be_next[41]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF07)) 
     \mi_wrap_be_next[42]_i_1 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(n_0_M_AXI_WLAST_i_i_3),
        .I2(\n_0_mi_wrap_be_next[61]_i_2 ),
        .I3(\n_0_mi_wrap_be_next[47]_i_3 ),
        .I4(\n_0_mi_wrap_be_next[42]_i_2 ),
        .I5(\n_0_mi_wrap_be_next[43]_i_3 ),
        .O(\n_0_mi_wrap_be_next[42]_i_1 ));
LUT6 #(
    .INIT(64'h11111155F1F1F155)) 
     \mi_wrap_be_next[42]_i_2 
       (.I0(\n_0_mi_wrap_be_next[42]_i_3 ),
        .I1(n_0_M_AXI_WLAST_i_i_2),
        .I2(\n_0_mi_wrap_be_next[42]_i_4 ),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .I5(\n_0_mi_wrap_be_next[42]_i_5 ),
        .O(\n_0_mi_wrap_be_next[42]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \mi_wrap_be_next[42]_i_3 
       (.I0(size[0]),
        .I1(\n_0_next_mi_addr_reg[2] ),
        .I2(size[2]),
        .I3(\n_0_mi_wrap_be_next[48]_i_8 ),
        .I4(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I5(\n_0_mi_wrap_be_next[44]_i_6 ),
        .O(\n_0_mi_wrap_be_next[42]_i_3 ));
LUT6 #(
    .INIT(64'h0000000055005503)) 
     \mi_wrap_be_next[42]_i_4 
       (.I0(\n_0_mi_wrap_be_next[42]_i_6 ),
        .I1(\n_0_mi_wrap_be_next[58]_i_9 ),
        .I2(\n_0_mi_wrap_be_next[60]_i_9 ),
        .I3(O1[1]),
        .I4(M_AXI_AWADDR[2]),
        .I5(\n_0_mi_wrap_be_next[46]_i_3 ),
        .O(\n_0_mi_wrap_be_next[42]_i_4 ));
LUT5 #(
    .INIT(32'hFFFFEEEF)) 
     \mi_wrap_be_next[42]_i_5 
       (.I0(mi_state[1]),
        .I1(O1[0]),
        .I2(mi_state[2]),
        .I3(mi_awvalid),
        .I4(O1[2]),
        .O(\n_0_mi_wrap_be_next[42]_i_5 ));
(* SOFT_HLUTNM = "soft_lutpair171" *) 
   LUT4 #(
    .INIT(16'hFEFF)) 
     \mi_wrap_be_next[42]_i_6 
       (.I0(D[3]),
        .I1(D[2]),
        .I2(D[1]),
        .I3(M_AXI_AWADDR[3]),
        .O(\n_0_mi_wrap_be_next[42]_i_6 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF15)) 
     \mi_wrap_be_next[43]_i_1 
       (.I0(\n_0_mi_wrap_be_next[61]_i_2 ),
        .I1(n_0_M_AXI_WLAST_i_i_3),
        .I2(n_0_M_AXI_WLAST_i_i_2),
        .I3(\n_0_mi_wrap_be_next[47]_i_3 ),
        .I4(\n_0_mi_wrap_be_next[43]_i_2 ),
        .I5(\n_0_mi_wrap_be_next[43]_i_3 ),
        .O(\n_0_mi_wrap_be_next[43]_i_1 ));
LUT6 #(
    .INIT(64'h000000000000E000)) 
     \mi_wrap_be_next[43]_i_2 
       (.I0(\n_0_mi_wcnt[7]_i_5 ),
        .I1(\n_0_mi_wcnt[7]_i_4 ),
        .I2(\n_0_mi_wrap_be_next[43]_i_4 ),
        .I3(M_AXI_AWADDR[5]),
        .I4(M_AXI_AWADDR[4]),
        .I5(\n_0_mi_wrap_be_next[58]_i_4 ),
        .O(\n_0_mi_wrap_be_next[43]_i_2 ));
LUT6 #(
    .INIT(64'h0000F1FFF1FFF1FF)) 
     \mi_wrap_be_next[43]_i_3 
       (.I0(mi_state[2]),
        .I1(mi_awvalid),
        .I2(mi_state[1]),
        .I3(n_0_M_AXI_WLAST_i_i_3),
        .I4(\n_0_mi_wrap_be_next[47]_i_2 ),
        .I5(\n_0_mi_wrap_be_next[43]_i_5 ),
        .O(\n_0_mi_wrap_be_next[43]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair151" *) 
   LUT4 #(
    .INIT(16'h0004)) 
     \mi_wrap_be_next[43]_i_4 
       (.I0(D[1]),
        .I1(M_AXI_AWADDR[3]),
        .I2(D[3]),
        .I3(D[2]),
        .O(\n_0_mi_wrap_be_next[43]_i_4 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF7)) 
     \mi_wrap_be_next[43]_i_5 
       (.I0(size[1]),
        .I1(\n_0_next_mi_addr_reg[5] ),
        .I2(size[0]),
        .I3(\n_0_next_mi_addr_reg[4] ),
        .I4(\n_0_mi_wrap_be_next[5]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[56]_i_10 ),
        .O(\n_0_mi_wrap_be_next[43]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \mi_wrap_be_next[44]_i_1 
       (.I0(\n_0_mi_wrap_be_next[45]_i_4 ),
        .I1(\n_0_mi_wrap_be_next[45]_i_2 ),
        .I2(\n_0_mi_wrap_be_next[47]_i_3 ),
        .I3(\n_0_mi_wrap_be_next[45]_i_5 ),
        .I4(\n_0_mi_wrap_be_next[44]_i_2 ),
        .I5(\n_0_mi_wrap_be_next[44]_i_3 ),
        .O(\n_0_mi_wrap_be_next[44]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFFFFF01010100)) 
     \mi_wrap_be_next[44]_i_2 
       (.I0(\n_0_mi_wrap_be_next[57]_i_4 ),
        .I1(\n_0_mi_wrap_be_next[46]_i_3 ),
        .I2(\n_0_mi_wrap_be_next[44]_i_4 ),
        .I3(\n_0_mi_wcnt[7]_i_5 ),
        .I4(\n_0_mi_wcnt[7]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[44]_i_5 ),
        .O(\n_0_mi_wrap_be_next[44]_i_2 ));
LUT6 #(
    .INIT(64'h0000000000000007)) 
     \mi_wrap_be_next[44]_i_3 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(n_0_M_AXI_WLAST_i_i_3),
        .I2(\n_0_mi_wrap_be_next[52]_i_5 ),
        .I3(\n_0_mi_wrap_be_next[52]_i_6 ),
        .I4(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I5(\n_0_mi_wrap_be_next[44]_i_6 ),
        .O(\n_0_mi_wrap_be_next[44]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFF4FFFFF)) 
     \mi_wrap_be_next[44]_i_4 
       (.I0(D[1]),
        .I1(M_AXI_AWADDR[1]),
        .I2(M_AXI_AWADDR[3]),
        .I3(O1[0]),
        .I4(M_AXI_AWADDR[2]),
        .I5(\n_0_mi_wrap_be_next[18]_i_4 ),
        .O(\n_0_mi_wrap_be_next[44]_i_4 ));
LUT6 #(
    .INIT(64'h0000000000000700)) 
     \mi_wrap_be_next[44]_i_5 
       (.I0(n_0_M_AXI_WLAST_i_i_3),
        .I1(n_0_M_AXI_WLAST_i_i_2),
        .I2(\n_0_mi_wrap_be_next[56]_i_10 ),
        .I3(\n_0_next_mi_addr_reg[2] ),
        .I4(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I5(\n_0_mi_wrap_be_next[61]_i_7 ),
        .O(\n_0_mi_wrap_be_next[44]_i_5 ));
(* SOFT_HLUTNM = "soft_lutpair165" *) 
   LUT3 #(
    .INIT(8'hEF)) 
     \mi_wrap_be_next[44]_i_6 
       (.I0(p_6_in),
        .I1(\n_0_next_mi_len_reg[2] ),
        .I2(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_wrap_be_next[44]_i_6 ));
LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     \mi_wrap_be_next[45]_i_1 
       (.I0(\n_0_mi_wrap_be_next[47]_i_3 ),
        .I1(\n_0_mi_wrap_be_next[45]_i_2 ),
        .I2(\n_0_mi_wrap_be_next[45]_i_3 ),
        .I3(\n_0_mi_wrap_be_next[45]_i_4 ),
        .I4(\n_0_mi_wrap_be_next[45]_i_5 ),
        .O(\n_0_mi_wrap_be_next[45]_i_1 ));
LUT6 #(
    .INIT(64'h00000000000000E0)) 
     \mi_wrap_be_next[45]_i_2 
       (.I0(\n_0_mi_wcnt[7]_i_5 ),
        .I1(\n_0_mi_wcnt[7]_i_4 ),
        .I2(\n_0_mi_wrap_be_next[45]_i_6 ),
        .I3(\n_0_mi_size[0]_i_2 ),
        .I4(O1[1]),
        .I5(O1[2]),
        .O(\n_0_mi_wrap_be_next[45]_i_2 ));
LUT6 #(
    .INIT(64'h0000000000000700)) 
     \mi_wrap_be_next[45]_i_3 
       (.I0(n_0_M_AXI_WLAST_i_i_3),
        .I1(n_0_M_AXI_WLAST_i_i_2),
        .I2(\n_0_mi_wrap_be_next[56]_i_10 ),
        .I3(\n_0_next_mi_addr_reg[2] ),
        .I4(\n_0_mi_wrap_be_next[45]_i_7 ),
        .I5(\n_0_mi_wrap_be_next[61]_i_7 ),
        .O(\n_0_mi_wrap_be_next[45]_i_3 ));
LUT6 #(
    .INIT(64'h0000070000000000)) 
     \mi_wrap_be_next[45]_i_4 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(n_0_M_AXI_WLAST_i_i_3),
        .I2(\n_0_next_mi_len_reg[1] ),
        .I3(\n_0_next_mi_addr_reg[5] ),
        .I4(size[0]),
        .I5(size[2]),
        .O(\n_0_mi_wrap_be_next[45]_i_4 ));
LUT6 #(
    .INIT(64'hF1FF000000000000)) 
     \mi_wrap_be_next[45]_i_5 
       (.I0(mi_state[2]),
        .I1(mi_awvalid),
        .I2(mi_state[1]),
        .I3(n_0_M_AXI_WLAST_i_i_3),
        .I4(size[2]),
        .I5(size[1]),
        .O(\n_0_mi_wrap_be_next[45]_i_5 ));
LUT6 #(
    .INIT(64'h0000000000000400)) 
     \mi_wrap_be_next[45]_i_6 
       (.I0(\n_0_mi_wrap_be_next[46]_i_3 ),
        .I1(M_AXI_AWADDR[3]),
        .I2(D[1]),
        .I3(M_AXI_AWADDR[2]),
        .I4(D[3]),
        .I5(D[2]),
        .O(\n_0_mi_wrap_be_next[45]_i_6 ));
(* SOFT_HLUTNM = "soft_lutpair250" *) 
   LUT2 #(
    .INIT(4'hB)) 
     \mi_wrap_be_next[45]_i_7 
       (.I0(\n_0_next_mi_addr_reg[4] ),
        .I1(\n_0_next_mi_addr_reg[5] ),
        .O(\n_0_mi_wrap_be_next[45]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFF0E0E0EEE)) 
     \mi_wrap_be_next[46]_i_1 
       (.I0(\n_0_mi_wcnt[7]_i_5 ),
        .I1(\n_0_mi_wcnt[7]_i_4 ),
        .I2(\n_0_mi_wrap_be_next[46]_i_2 ),
        .I3(\n_0_mi_wrap_be_next[46]_i_3 ),
        .I4(\n_0_mi_wrap_be_next[62]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[46]_i_4 ),
        .O(\n_0_mi_wrap_be_next[46]_i_1 ));
LUT6 #(
    .INIT(64'hDDDDDDDDDDDDD0DD)) 
     \mi_wrap_be_next[46]_i_2 
       (.I0(O1[2]),
        .I1(\n_0_mi_size[1]_i_2 ),
        .I2(D[1]),
        .I3(M_AXI_AWADDR[5]),
        .I4(O1[0]),
        .I5(\n_0_mi_wrap_be_next[47]_i_4 ),
        .O(\n_0_mi_wrap_be_next[46]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair252" *) 
   LUT2 #(
    .INIT(4'hB)) 
     \mi_wrap_be_next[46]_i_3 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .O(\n_0_mi_wrap_be_next[46]_i_3 ));
LUT6 #(
    .INIT(64'h00000000BAAAAAAA)) 
     \mi_wrap_be_next[46]_i_4 
       (.I0(\n_0_mi_wrap_be_next[46]_i_5 ),
        .I1(\n_0_next_mi_addr_reg[4] ),
        .I2(\n_0_next_mi_addr_reg[5] ),
        .I3(\n_0_next_mi_addr_reg[3] ),
        .I4(\n_0_mi_wrap_be_next[30]_i_3 ),
        .I5(load_mi_ptr),
        .O(\n_0_mi_wrap_be_next[46]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair137" *) 
   LUT5 #(
    .INIT(32'hFF020000)) 
     \mi_wrap_be_next[46]_i_5 
       (.I0(\n_0_next_mi_addr_reg[5] ),
        .I1(\n_0_next_mi_len_reg[1] ),
        .I2(size[0]),
        .I3(size[1]),
        .I4(size[2]),
        .O(\n_0_mi_wrap_be_next[46]_i_5 ));
LUT6 #(
    .INIT(64'hCFFFCDDDCDDDCDDD)) 
     \mi_wrap_be_next[47]_i_1 
       (.I0(\n_0_mi_wrap_be_next[47]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[47]_i_3 ),
        .I2(n_0_M_AXI_WLAST_i_i_2),
        .I3(n_0_M_AXI_WLAST_i_i_3),
        .I4(size[2]),
        .I5(size[1]),
        .O(\n_0_mi_wrap_be_next[47]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair137" *) 
   LUT4 #(
    .INIT(16'hFFDF)) 
     \mi_wrap_be_next[47]_i_2 
       (.I0(size[2]),
        .I1(size[0]),
        .I2(\n_0_next_mi_addr_reg[5] ),
        .I3(\n_0_next_mi_len_reg[1] ),
        .O(\n_0_mi_wrap_be_next[47]_i_2 ));
LUT6 #(
    .INIT(64'h0E0E0EEE0E0E0E0E)) 
     \mi_wrap_be_next[47]_i_3 
       (.I0(\n_0_mi_wcnt[7]_i_5 ),
        .I1(\n_0_mi_wcnt[7]_i_4 ),
        .I2(\n_0_mi_wrap_be_next[63]_i_2 ),
        .I3(\n_0_mi_wrap_be_next[47]_i_4 ),
        .I4(O1[0]),
        .I5(f_mi_wrap_be085_out),
        .O(\n_0_mi_wrap_be_next[47]_i_3 ));
LUT4 #(
    .INIT(16'hFF1F)) 
     \mi_wrap_be_next[47]_i_4 
       (.I0(mi_awvalid),
        .I1(mi_state[2]),
        .I2(O1[2]),
        .I3(mi_state[1]),
        .O(\n_0_mi_wrap_be_next[47]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair172" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \mi_wrap_be_next[47]_i_5 
       (.I0(M_AXI_AWADDR[5]),
        .I1(D[1]),
        .O(f_mi_wrap_be085_out));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF000E)) 
     \mi_wrap_be_next[48]_i_1 
       (.I0(\n_0_mi_wrap_be_next[48]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[48]_i_3 ),
        .I2(size[2]),
        .I3(load_mi_ptr),
        .I4(\n_0_mi_wrap_be_next[48]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[48]_i_5 ),
        .O(\n_0_mi_wrap_be_next[48]_i_1 ));
LUT6 #(
    .INIT(64'h4F444F444F440000)) 
     \mi_wrap_be_next[48]_i_10 
       (.I0(\n_0_mi_wrap_cnt[2]_i_10 ),
        .I1(f_mi_wrap_be068_out),
        .I2(\n_0_mi_wrap_be_next[47]_i_4 ),
        .I3(O1[1]),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .I5(\n_0_mi_wcnt[7]_i_4 ),
        .O(\n_0_mi_wrap_be_next[48]_i_10 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEEEF)) 
     \mi_wrap_be_next[48]_i_11 
       (.I0(\n_0_mi_wrap_be_next[62]_i_3 ),
        .I1(mi_state[1]),
        .I2(mi_awvalid),
        .I3(mi_state[2]),
        .I4(O1[2]),
        .I5(O1[1]),
        .O(\n_0_mi_wrap_be_next[48]_i_11 ));
LUT6 #(
    .INIT(64'h0000BBBB0000ABAA)) 
     \mi_wrap_be_next[48]_i_12 
       (.I0(D[3]),
        .I1(M_AXI_AWADDR[3]),
        .I2(M_AXI_AWADDR[2]),
        .I3(\n_0_mi_wrap_be_next[60]_i_9 ),
        .I4(O1[0]),
        .I5(D[2]),
        .O(\n_0_mi_wrap_be_next[48]_i_12 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEEFE)) 
     \mi_wrap_be_next[48]_i_13 
       (.I0(\n_0_mi_wrap_cnt[2]_i_12 ),
        .I1(\n_0_mi_wrap_be_next[62]_i_3 ),
        .I2(M_AXI_AWADDR[3]),
        .I3(D[1]),
        .I4(D[3]),
        .I5(D[2]),
        .O(\n_0_mi_wrap_be_next[48]_i_13 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
     \mi_wrap_be_next[48]_i_14 
       (.I0(\n_0_mi_wrap_be_next[49]_i_5 ),
        .I1(\n_0_mi_wrap_cnt[3]_i_10 ),
        .I2(\n_0_mi_wrap_cnt[3]_i_9 ),
        .I3(D[3]),
        .I4(\n_0_mi_wrap_be_next[62]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[49]_i_6 ),
        .O(\n_0_mi_wrap_be_next[48]_i_14 ));
(* SOFT_HLUTNM = "soft_lutpair254" *) 
   LUT2 #(
    .INIT(4'hB)) 
     \mi_wrap_be_next[48]_i_15 
       (.I0(size[0]),
        .I1(\n_0_next_mi_addr_reg[4] ),
        .O(\n_0_mi_wrap_be_next[48]_i_15 ));
LUT6 #(
    .INIT(64'hFFFFFFFF10101000)) 
     \mi_wrap_be_next[48]_i_2 
       (.I0(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I1(p_6_in),
        .I2(\n_0_mi_wrap_be_next[48]_i_6 ),
        .I3(\n_0_next_mi_len_reg[2] ),
        .I4(\n_0_mi_wrap_be_next[49]_i_7 ),
        .I5(\n_0_mi_wrap_be_next[48]_i_7 ),
        .O(\n_0_mi_wrap_be_next[48]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFFFF00000002)) 
     \mi_wrap_be_next[48]_i_3 
       (.I0(\n_0_mi_wrap_be_next[48]_i_8 ),
        .I1(\n_0_next_mi_addr_reg[3] ),
        .I2(size[1]),
        .I3(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I4(\n_0_mi_wrap_be_next[48]_i_9 ),
        .I5(\n_0_mi_wrap_be_next[50]_i_5 ),
        .O(\n_0_mi_wrap_be_next[48]_i_3 ));
LUT6 #(
    .INIT(64'hBBBAAAAAFFFAFFFA)) 
     \mi_wrap_be_next[48]_i_4 
       (.I0(\n_0_mi_wrap_be_next[48]_i_10 ),
        .I1(\n_0_mi_wrap_be_next[48]_i_11 ),
        .I2(\n_0_mi_wcnt[7]_i_5 ),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(\n_0_mi_wrap_be_next[48]_i_12 ),
        .I5(\n_0_mi_wrap_be_next[48]_i_13 ),
        .O(\n_0_mi_wrap_be_next[48]_i_4 ));
LUT6 #(
    .INIT(64'h08FF08FF08FF8888)) 
     \mi_wrap_be_next[48]_i_5 
       (.I0(size[2]),
        .I1(size[1]),
        .I2(n_0_M_AXI_WLAST_i_i_2),
        .I3(\n_0_mi_wrap_be_next[48]_i_14 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .I5(\n_0_mi_wcnt[7]_i_4 ),
        .O(\n_0_mi_wrap_be_next[48]_i_5 ));
(* SOFT_HLUTNM = "soft_lutpair257" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \mi_wrap_be_next[48]_i_6 
       (.I0(size[0]),
        .I1(size[1]),
        .O(\n_0_mi_wrap_be_next[48]_i_6 ));
LUT6 #(
    .INIT(64'h0040004400400040)) 
     \mi_wrap_be_next[48]_i_7 
       (.I0(\n_0_mi_wrap_be_next[48]_i_15 ),
        .I1(\n_0_next_mi_addr_reg[5] ),
        .I2(p_6_in),
        .I3(size[1]),
        .I4(\n_0_next_mi_addr_reg[3] ),
        .I5(\n_0_next_mi_len_reg[2] ),
        .O(\n_0_mi_wrap_be_next[48]_i_7 ));
LUT2 #(
    .INIT(4'hB)) 
     \mi_wrap_be_next[48]_i_8 
       (.I0(\n_0_next_mi_len_reg[1] ),
        .I1(\n_0_next_mi_addr_reg[1] ),
        .O(\n_0_mi_wrap_be_next[48]_i_8 ));
LUT2 #(
    .INIT(4'hE)) 
     \mi_wrap_be_next[48]_i_9 
       (.I0(size[0]),
        .I1(\n_0_next_mi_addr_reg[2] ),
        .O(\n_0_mi_wrap_be_next[48]_i_9 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF0E)) 
     \mi_wrap_be_next[49]_i_1 
       (.I0(\n_0_mi_wcnt[7]_i_4 ),
        .I1(\n_0_mi_wcnt[7]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[49]_i_2 ),
        .I3(\n_0_mi_wrap_be_next[49]_i_3 ),
        .I4(\n_0_mi_wrap_be_next[51]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[49]_i_4 ),
        .O(\n_0_mi_wrap_be_next[49]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
     \mi_wrap_be_next[49]_i_2 
       (.I0(\n_0_mi_wrap_be_next[49]_i_5 ),
        .I1(\n_0_mi_wrap_cnt[3]_i_10 ),
        .I2(\n_0_mi_wrap_cnt[3]_i_9 ),
        .I3(D[3]),
        .I4(\n_0_mi_wrap_be_next[62]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[49]_i_6 ),
        .O(\n_0_mi_wrap_be_next[49]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair141" *) 
   LUT5 #(
    .INIT(32'h70007777)) 
     \mi_wrap_be_next[49]_i_3 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(n_0_M_AXI_WLAST_i_i_3),
        .I2(size[1]),
        .I3(size[2]),
        .I4(\n_0_mi_wrap_be_next[55]_i_3 ),
        .O(\n_0_mi_wrap_be_next[49]_i_3 ));
LUT6 #(
    .INIT(64'h0707070777777707)) 
     \mi_wrap_be_next[49]_i_4 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(n_0_M_AXI_WLAST_i_i_3),
        .I2(\n_0_mi_wrap_be_next[51]_i_2 ),
        .I3(\n_0_mi_wrap_be_next[49]_i_7 ),
        .I4(\n_0_next_mi_len_reg[2] ),
        .I5(\n_0_mi_wrap_be_next[49]_i_8 ),
        .O(\n_0_mi_wrap_be_next[49]_i_4 ));
LUT2 #(
    .INIT(4'hB)) 
     \mi_wrap_be_next[49]_i_5 
       (.I0(mi_state[1]),
        .I1(O1[0]),
        .O(\n_0_mi_wrap_be_next[49]_i_5 ));
(* SOFT_HLUTNM = "soft_lutpair171" *) 
   LUT4 #(
    .INIT(16'hFF45)) 
     \mi_wrap_be_next[49]_i_6 
       (.I0(M_AXI_AWADDR[3]),
        .I1(D[1]),
        .I2(M_AXI_AWADDR[2]),
        .I3(D[2]),
        .O(\n_0_mi_wrap_be_next[49]_i_6 ));
(* SOFT_HLUTNM = "soft_lutpair163" *) 
   LUT3 #(
    .INIT(8'h0D)) 
     \mi_wrap_be_next[49]_i_7 
       (.I0(\n_0_next_mi_addr_reg[2] ),
        .I1(\n_0_next_mi_len_reg[1] ),
        .I2(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_wrap_be_next[49]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFF7FFFFFFFF)) 
     \mi_wrap_be_next[49]_i_8 
       (.I0(\n_0_next_mi_addr_reg[5] ),
        .I1(\n_0_next_mi_addr_reg[4] ),
        .I2(size[1]),
        .I3(size[2]),
        .I4(p_6_in),
        .I5(size[0]),
        .O(\n_0_mi_wrap_be_next[49]_i_8 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFA2EEA2)) 
     \mi_wrap_be_next[4]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[34]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[4]_i_2 ),
        .I3(\n_0_mi_wrap_be_next[16]_i_4 ),
        .I4(\n_0_mi_wrap_be_next[15]_i_2 ),
        .I5(\n_0_mi_wrap_be_next[4]_i_3 ),
        .O(\n_0_mi_wrap_be_next[4]_i_1 ));
LUT6 #(
    .INIT(64'hAAABAAAAAAAAAAAA)) 
     \mi_wrap_be_next[4]_i_2 
       (.I0(\n_0_mi_wrap_be_next[4]_i_4 ),
        .I1(\n_0_mi_wrap_be_next[61]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[18]_i_4 ),
        .I3(M_AXI_AWADDR[3]),
        .I4(\n_0_mi_wrap_be_next[14]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[40]_i_9 ),
        .O(\n_0_mi_wrap_be_next[4]_i_2 ));
LUT6 #(
    .INIT(64'h00000000F0FFFFDD)) 
     \mi_wrap_be_next[4]_i_3 
       (.I0(\n_0_next_mi_addr_reg[5] ),
        .I1(\n_0_next_mi_len_reg[1] ),
        .I2(\n_0_mi_wrap_be_next[4]_i_5 ),
        .I3(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I4(\n_0_mi_wrap_be_next[36]_i_5 ),
        .I5(load_mi_ptr),
        .O(\n_0_mi_wrap_be_next[4]_i_3 ));
LUT6 #(
    .INIT(64'h880F880088008800)) 
     \mi_wrap_be_next[4]_i_4 
       (.I0(O1[0]),
        .I1(\n_0_mi_wrap_be_next[6]_i_4 ),
        .I2(\n_0_mi_wrap_be_next[52]_i_4 ),
        .I3(O1[1]),
        .I4(\n_0_mi_wrap_be_next[14]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[60]_i_9 ),
        .O(\n_0_mi_wrap_be_next[4]_i_4 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAEAA)) 
     \mi_wrap_be_next[4]_i_5 
       (.I0(\n_0_mi_wrap_be_next[4]_i_6 ),
        .I1(\n_0_mi_wrap_be_next[36]_i_10 ),
        .I2(\n_0_mi_wrap_be_next[5]_i_3 ),
        .I3(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I4(\n_0_next_mi_addr_reg[3] ),
        .I5(size[1]),
        .O(\n_0_mi_wrap_be_next[4]_i_5 ));
LUT6 #(
    .INIT(64'hAFAB000000000000)) 
     \mi_wrap_be_next[4]_i_6 
       (.I0(\n_0_next_mi_len_reg[2] ),
        .I1(\n_0_next_mi_addr_reg[4] ),
        .I2(\n_0_next_mi_addr_reg[5] ),
        .I3(\n_0_next_mi_len_reg[1] ),
        .I4(size[0]),
        .I5(size[1]),
        .O(\n_0_mi_wrap_be_next[4]_i_6 ));
LUT6 #(
    .INIT(64'hFBFBFBFAFFFFFFFA)) 
     \mi_wrap_be_next[50]_i_1 
       (.I0(\n_0_mi_wrap_be_next[50]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[50]_i_3 ),
        .I2(\n_0_mi_wrap_be_next[54]_i_2 ),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .I5(\n_0_mi_wrap_be_next[50]_i_4 ),
        .O(\n_0_mi_wrap_be_next[50]_i_1 ));
LUT6 #(
    .INIT(64'h00000000FFFFFF02)) 
     \mi_wrap_be_next[50]_i_2 
       (.I0(\n_0_mi_wrap_be_next[58]_i_6 ),
        .I1(\n_0_next_mi_addr_reg[3] ),
        .I2(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I3(\n_0_mi_wrap_be_next[50]_i_5 ),
        .I4(\n_0_mi_wrap_be_next[54]_i_9 ),
        .I5(load_mi_ptr),
        .O(\n_0_mi_wrap_be_next[50]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFBF)) 
     \mi_wrap_be_next[50]_i_3 
       (.I0(\n_0_mi_wrap_be_next[58]_i_8 ),
        .I1(M_AXI_AWADDR[4]),
        .I2(M_AXI_AWADDR[5]),
        .I3(D[2]),
        .I4(D[3]),
        .I5(M_AXI_AWADDR[3]),
        .O(\n_0_mi_wrap_be_next[50]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFFFF)) 
     \mi_wrap_be_next[50]_i_4 
       (.I0(\n_0_mi_wrap_be_next[50]_i_6 ),
        .I1(D[3]),
        .I2(O1[0]),
        .I3(mi_state[1]),
        .I4(O1[1]),
        .I5(\n_0_mi_wrap_be_next[51]_i_5 ),
        .O(\n_0_mi_wrap_be_next[50]_i_4 ));
LUT6 #(
    .INIT(64'hFF00000004040000)) 
     \mi_wrap_be_next[50]_i_5 
       (.I0(\n_0_mi_wrap_be_next[5]_i_3 ),
        .I1(\n_0_mi_wrap_be_next[56]_i_10 ),
        .I2(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I3(f_mi_wrap_be00119_out),
        .I4(size[1]),
        .I5(size[0]),
        .O(\n_0_mi_wrap_be_next[50]_i_5 ));
LUT2 #(
    .INIT(4'h1)) 
     \mi_wrap_be_next[50]_i_6 
       (.I0(mi_state[2]),
        .I1(mi_awvalid),
        .O(\n_0_mi_wrap_be_next[50]_i_6 ));
LUT6 #(
    .INIT(64'hFFFFFFFF153F3F3F)) 
     \mi_wrap_be_next[51]_i_1 
       (.I0(\n_0_mi_wrap_be_next[51]_i_2 ),
        .I1(n_0_M_AXI_WLAST_i_i_2),
        .I2(n_0_M_AXI_WLAST_i_i_3),
        .I3(\n_0_mi_wrap_be_next[61]_i_2 ),
        .I4(\n_0_mi_wrap_be_next[55]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[51]_i_3 ),
        .O(\n_0_mi_wrap_be_next[51]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFBFFFBFB)) 
     \mi_wrap_be_next[51]_i_2 
       (.I0(size[0]),
        .I1(size[1]),
        .I2(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I3(\n_0_next_mi_len_reg[1] ),
        .I4(\n_0_next_mi_addr_reg[3] ),
        .I5(\n_0_mi_wrap_be_next[5]_i_3 ),
        .O(\n_0_mi_wrap_be_next[51]_i_2 ));
LUT6 #(
    .INIT(64'h1FFF1FFF1FFF0000)) 
     \mi_wrap_be_next[51]_i_3 
       (.I0(\n_0_mi_wrap_be_next[51]_i_4 ),
        .I1(\n_0_mi_wrap_be_next[51]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[55]_i_2 ),
        .I3(\n_0_mi_wrap_be_next[63]_i_2 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .I5(\n_0_mi_wcnt[7]_i_4 ),
        .O(\n_0_mi_wrap_be_next[51]_i_3 ));
LUT6 #(
    .INIT(64'hFFFDFFFDFFFDFFFF)) 
     \mi_wrap_be_next[51]_i_4 
       (.I0(O1[1]),
        .I1(mi_state[1]),
        .I2(O1[0]),
        .I3(D[3]),
        .I4(mi_state[2]),
        .I5(mi_awvalid),
        .O(\n_0_mi_wrap_be_next[51]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair149" *) 
   LUT5 #(
    .INIT(32'hBFBFFFBF)) 
     \mi_wrap_be_next[51]_i_5 
       (.I0(D[2]),
        .I1(M_AXI_AWADDR[4]),
        .I2(M_AXI_AWADDR[5]),
        .I3(M_AXI_AWADDR[3]),
        .I4(D[1]),
        .O(\n_0_mi_wrap_be_next[51]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \mi_wrap_be_next[52]_i_1 
       (.I0(\n_0_mi_wrap_be_next[52]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[53]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[53]_i_2 ),
        .I3(\n_0_mi_wrap_be_next[53]_i_3 ),
        .I4(\n_0_mi_wrap_be_next[53]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[52]_i_3 ),
        .O(\n_0_mi_wrap_be_next[52]_i_1 ));
LUT6 #(
    .INIT(64'h00000000000000E0)) 
     \mi_wrap_be_next[52]_i_2 
       (.I0(\n_0_mi_wcnt[7]_i_4 ),
        .I1(\n_0_mi_wcnt[7]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[60]_i_9 ),
        .I3(\n_0_mi_wrap_be_next[62]_i_3 ),
        .I4(\n_0_mi_wrap_be_next[52]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[57]_i_4 ),
        .O(\n_0_mi_wrap_be_next[52]_i_2 ));
LUT6 #(
    .INIT(64'h0000000000000007)) 
     \mi_wrap_be_next[52]_i_3 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(n_0_M_AXI_WLAST_i_i_3),
        .I2(\n_0_mi_wrap_be_next[52]_i_5 ),
        .I3(\n_0_mi_wrap_be_next[52]_i_6 ),
        .I4(\n_0_mi_wrap_be_next[5]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[54]_i_6 ),
        .O(\n_0_mi_wrap_be_next[52]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair148" *) 
   LUT5 #(
    .INIT(32'hFFFFFEFF)) 
     \mi_wrap_be_next[52]_i_4 
       (.I0(M_AXI_AWADDR[3]),
        .I1(D[3]),
        .I2(D[2]),
        .I3(M_AXI_AWADDR[2]),
        .I4(O1[0]),
        .O(\n_0_mi_wrap_be_next[52]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair167" *) 
   LUT4 #(
    .INIT(16'hDDFD)) 
     \mi_wrap_be_next[52]_i_5 
       (.I0(\n_0_next_mi_addr_reg[2] ),
        .I1(size[0]),
        .I2(\n_0_next_mi_addr_reg[1] ),
        .I3(\n_0_next_mi_len_reg[1] ),
        .O(\n_0_mi_wrap_be_next[52]_i_5 ));
(* SOFT_HLUTNM = "soft_lutpair244" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \mi_wrap_be_next[52]_i_6 
       (.I0(size[2]),
        .I1(size[1]),
        .O(\n_0_mi_wrap_be_next[52]_i_6 ));
LUT4 #(
    .INIT(16'hFFFE)) 
     \mi_wrap_be_next[53]_i_1 
       (.I0(\n_0_mi_wrap_be_next[53]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[53]_i_3 ),
        .I2(\n_0_mi_wrap_be_next[53]_i_4 ),
        .I3(\n_0_mi_wrap_be_next[53]_i_5 ),
        .O(\n_0_mi_wrap_be_next[53]_i_1 ));
LUT6 #(
    .INIT(64'h0000000000000007)) 
     \mi_wrap_be_next[53]_i_2 
       (.I0(n_0_M_AXI_WLAST_i_i_3),
        .I1(n_0_M_AXI_WLAST_i_i_2),
        .I2(\n_0_next_mi_addr_reg[3] ),
        .I3(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I4(\n_0_mi_wrap_be_next[53]_i_6 ),
        .I5(\n_0_mi_wrap_be_next[61]_i_7 ),
        .O(\n_0_mi_wrap_be_next[53]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair170" *) 
   LUT4 #(
    .INIT(16'h0EEE)) 
     \mi_wrap_be_next[53]_i_3 
       (.I0(\n_0_mi_wcnt[7]_i_4 ),
        .I1(\n_0_mi_wcnt[7]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[63]_i_2 ),
        .I3(\n_0_mi_wrap_be_next[55]_i_2 ),
        .O(\n_0_mi_wrap_be_next[53]_i_3 ));
LUT6 #(
    .INIT(64'h00000000000000E0)) 
     \mi_wrap_be_next[53]_i_4 
       (.I0(\n_0_mi_wcnt[7]_i_5 ),
        .I1(\n_0_mi_wcnt[7]_i_4 ),
        .I2(\n_0_mi_wrap_be_next[53]_i_7 ),
        .I3(\n_0_mi_size[0]_i_2 ),
        .I4(O1[1]),
        .I5(O1[2]),
        .O(\n_0_mi_wrap_be_next[53]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair141" *) 
   LUT5 #(
    .INIT(32'h70007777)) 
     \mi_wrap_be_next[53]_i_5 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(n_0_M_AXI_WLAST_i_i_3),
        .I2(size[1]),
        .I3(size[2]),
        .I4(\n_0_mi_wrap_be_next[55]_i_3 ),
        .O(\n_0_mi_wrap_be_next[53]_i_5 ));
(* SOFT_HLUTNM = "soft_lutpair253" *) 
   LUT2 #(
    .INIT(4'hB)) 
     \mi_wrap_be_next[53]_i_6 
       (.I0(\n_0_next_mi_len_reg[1] ),
        .I1(\n_0_next_mi_addr_reg[2] ),
        .O(\n_0_mi_wrap_be_next[53]_i_6 ));
LUT6 #(
    .INIT(64'h0000000000000100)) 
     \mi_wrap_be_next[53]_i_7 
       (.I0(\n_0_mi_wrap_be_next[62]_i_3 ),
        .I1(M_AXI_AWADDR[3]),
        .I2(D[1]),
        .I3(M_AXI_AWADDR[2]),
        .I4(D[3]),
        .I5(D[2]),
        .O(\n_0_mi_wrap_be_next[53]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFFAAAAAAFE)) 
     \mi_wrap_be_next[54]_i_1 
       (.I0(\n_0_mi_wrap_be_next[54]_i_2 ),
        .I1(\n_0_mi_wcnt[7]_i_4 ),
        .I2(\n_0_mi_wcnt[7]_i_5 ),
        .I3(\n_0_mi_wrap_be_next[62]_i_3 ),
        .I4(\n_0_mi_wrap_be_next[54]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[54]_i_4 ),
        .O(\n_0_mi_wrap_be_next[54]_i_1 ));
LUT6 #(
    .INIT(64'h0E00EEEE0E000E00)) 
     \mi_wrap_be_next[54]_i_2 
       (.I0(\n_0_mi_wcnt[7]_i_5 ),
        .I1(\n_0_mi_wcnt[7]_i_4 ),
        .I2(\n_0_mi_wrap_be_next[6]_i_3 ),
        .I3(f_mi_wrap_be068_out),
        .I4(\n_0_mi_size[1]_i_2 ),
        .I5(O1[2]),
        .O(\n_0_mi_wrap_be_next[54]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFEF)) 
     \mi_wrap_be_next[54]_i_3 
       (.I0(\n_0_mi_wrap_be_next[62]_i_6 ),
        .I1(O1[0]),
        .I2(M_AXI_AWADDR[2]),
        .I3(D[2]),
        .I4(D[3]),
        .I5(M_AXI_AWADDR[3]),
        .O(\n_0_mi_wrap_be_next[54]_i_3 ));
LUT6 #(
    .INIT(64'h00000000FFFFF222)) 
     \mi_wrap_be_next[54]_i_4 
       (.I0(\n_0_mi_wrap_be_next[30]_i_3 ),
        .I1(\n_0_mi_wrap_be_next[54]_i_6 ),
        .I2(f_mi_wrap_be00119_out),
        .I3(\n_0_mi_wrap_be_next[54]_i_8 ),
        .I4(\n_0_mi_wrap_be_next[54]_i_9 ),
        .I5(load_mi_ptr),
        .O(\n_0_mi_wrap_be_next[54]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair166" *) 
   LUT4 #(
    .INIT(16'h1000)) 
     \mi_wrap_be_next[54]_i_5 
       (.I0(D[2]),
        .I1(D[1]),
        .I2(M_AXI_AWADDR[5]),
        .I3(M_AXI_AWADDR[4]),
        .O(f_mi_wrap_be068_out));
(* SOFT_HLUTNM = "soft_lutpair187" *) 
   LUT3 #(
    .INIT(8'hF7)) 
     \mi_wrap_be_next[54]_i_6 
       (.I0(\n_0_next_mi_addr_reg[5] ),
        .I1(\n_0_next_mi_addr_reg[4] ),
        .I2(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_wrap_be_next[54]_i_6 ));
(* SOFT_HLUTNM = "soft_lutpair164" *) 
   LUT4 #(
    .INIT(16'h1000)) 
     \mi_wrap_be_next[54]_i_7 
       (.I0(\n_0_next_mi_len_reg[2] ),
        .I1(\n_0_next_mi_len_reg[1] ),
        .I2(\n_0_next_mi_addr_reg[5] ),
        .I3(\n_0_next_mi_addr_reg[4] ),
        .O(f_mi_wrap_be00119_out));
(* SOFT_HLUTNM = "soft_lutpair257" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \mi_wrap_be_next[54]_i_8 
       (.I0(size[1]),
        .I1(size[0]),
        .O(\n_0_mi_wrap_be_next[54]_i_8 ));
(* SOFT_HLUTNM = "soft_lutpair249" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \mi_wrap_be_next[54]_i_9 
       (.I0(size[2]),
        .I1(size[1]),
        .O(\n_0_mi_wrap_be_next[54]_i_9 ));
LUT6 #(
    .INIT(64'hFFFFFFFF0E0E1FFF)) 
     \mi_wrap_be_next[55]_i_1 
       (.I0(\n_0_mi_wcnt[7]_i_5 ),
        .I1(\n_0_mi_wcnt[7]_i_4 ),
        .I2(\n_0_mi_wrap_be_next[55]_i_2 ),
        .I3(n_0_M_AXI_WLAST_i_i_2),
        .I4(\n_0_mi_wrap_be_next[55]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[63]_i_1 ),
        .O(\n_0_mi_wrap_be_next[55]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFDFFF)) 
     \mi_wrap_be_next[55]_i_2 
       (.I0(O1[1]),
        .I1(\n_0_mi_size[0]_i_2 ),
        .I2(M_AXI_AWADDR[4]),
        .I3(M_AXI_AWADDR[5]),
        .I4(D[1]),
        .I5(D[2]),
        .O(\n_0_mi_wrap_be_next[55]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF7FFF)) 
     \mi_wrap_be_next[55]_i_3 
       (.I0(size[0]),
        .I1(size[1]),
        .I2(\n_0_next_mi_addr_reg[4] ),
        .I3(\n_0_next_mi_addr_reg[5] ),
        .I4(\n_0_next_mi_len_reg[1] ),
        .I5(\n_0_next_mi_len_reg[2] ),
        .O(\n_0_mi_wrap_be_next[55]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFFFFFABBBAFFF)) 
     \mi_wrap_be_next[56]_i_1 
       (.I0(\n_0_mi_wrap_be_next[56]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[56]_i_3 ),
        .I2(n_0_M_AXI_WLAST_i_i_2),
        .I3(n_0_M_AXI_WLAST_i_i_3),
        .I4(\n_0_mi_wrap_be_next[56]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[56]_i_5 ),
        .O(\n_0_mi_wrap_be_next[56]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair253" *) 
   LUT2 #(
    .INIT(4'hB)) 
     \mi_wrap_be_next[56]_i_10 
       (.I0(\n_0_next_mi_len_reg[1] ),
        .I1(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_wrap_be_next[56]_i_10 ));
LUT6 #(
    .INIT(64'hFFFFEEFEFFFFFFFF)) 
     \mi_wrap_be_next[56]_i_11 
       (.I0(\n_0_mi_wrap_be_next[44]_i_6 ),
        .I1(\n_0_mi_wrap_be_next[52]_i_6 ),
        .I2(\n_0_next_mi_addr_reg[2] ),
        .I3(\n_0_next_mi_len_reg[1] ),
        .I4(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I5(size[0]),
        .O(\n_0_mi_wrap_be_next[56]_i_11 ));
LUT6 #(
    .INIT(64'h5D5D5D0055555500)) 
     \mi_wrap_be_next[56]_i_2 
       (.I0(\n_0_mi_wrap_be_next[56]_i_6 ),
        .I1(\n_0_mi_wrap_be_next[56]_i_7 ),
        .I2(\n_0_mi_wrap_cnt[3]_i_9 ),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .I5(\n_0_mi_wrap_be_next[56]_i_8 ),
        .O(\n_0_mi_wrap_be_next[56]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair146" *) 
   LUT5 #(
    .INIT(32'hFFFEFFFF)) 
     \mi_wrap_be_next[56]_i_3 
       (.I0(size[0]),
        .I1(p_6_in),
        .I2(size[2]),
        .I3(size[1]),
        .I4(\n_0_mi_wrap_be_next[56]_i_9 ),
        .O(\n_0_mi_wrap_be_next[56]_i_3 ));
LUT6 #(
    .INIT(64'h0000FFFEFFFFFFFF)) 
     \mi_wrap_be_next[56]_i_4 
       (.I0(\n_0_mi_wrap_be_next[56]_i_10 ),
        .I1(\n_0_mi_wrap_be_next[5]_i_3 ),
        .I2(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I3(size[0]),
        .I4(size[2]),
        .I5(size[1]),
        .O(\n_0_mi_wrap_be_next[56]_i_4 ));
LUT6 #(
    .INIT(64'h1FFF1FFF1FFF5555)) 
     \mi_wrap_be_next[56]_i_5 
       (.I0(\n_0_mi_wrap_be_next[56]_i_11 ),
        .I1(n_0_M_AXI_WLAST_i_i_2),
        .I2(\n_0_mi_wrap_be_next[59]_i_2 ),
        .I3(\n_0_mi_wrap_be_next[63]_i_2 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .I5(\n_0_mi_wcnt[7]_i_4 ),
        .O(\n_0_mi_wrap_be_next[56]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFDFFFFFFFF)) 
     \mi_wrap_be_next[56]_i_6 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(O1[2]),
        .I2(O1[1]),
        .I3(\n_0_mi_wrap_be_next[9]_i_3 ),
        .I4(\n_0_mi_wrap_be_next[62]_i_3 ),
        .I5(O1[0]),
        .O(\n_0_mi_wrap_be_next[56]_i_6 ));
LUT6 #(
    .INIT(64'h2300230022002300)) 
     \mi_wrap_be_next[56]_i_7 
       (.I0(D[2]),
        .I1(\n_0_mi_wrap_be_next[62]_i_3 ),
        .I2(M_AXI_AWADDR[2]),
        .I3(M_AXI_AWADDR[3]),
        .I4(M_AXI_AWADDR[1]),
        .I5(D[1]),
        .O(\n_0_mi_wrap_be_next[56]_i_7 ));
LUT5 #(
    .INIT(32'h0000000E)) 
     \mi_wrap_be_next[56]_i_8 
       (.I0(mi_state[2]),
        .I1(mi_awvalid),
        .I2(mi_state[1]),
        .I3(O1[0]),
        .I4(D[3]),
        .O(\n_0_mi_wrap_be_next[56]_i_8 ));
LUT6 #(
    .INIT(64'h80C0000080800000)) 
     \mi_wrap_be_next[56]_i_9 
       (.I0(\n_0_next_mi_len_reg[2] ),
        .I1(\n_0_next_mi_addr_reg[4] ),
        .I2(\n_0_next_mi_addr_reg[5] ),
        .I3(\n_0_next_mi_addr_reg[2] ),
        .I4(\n_0_next_mi_addr_reg[3] ),
        .I5(\n_0_mi_wrap_be_next[48]_i_8 ),
        .O(\n_0_mi_wrap_be_next[56]_i_9 ));
LUT6 #(
    .INIT(64'hCDDDCFFFCFFFCFFF)) 
     \mi_wrap_be_next[57]_i_1 
       (.I0(\n_0_mi_wrap_be_next[57]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[57]_i_3 ),
        .I2(n_0_M_AXI_WLAST_i_i_2),
        .I3(n_0_M_AXI_WLAST_i_i_3),
        .I4(\n_0_mi_wrap_be_next[61]_i_2 ),
        .I5(\n_0_mi_wrap_be_next[59]_i_3 ),
        .O(\n_0_mi_wrap_be_next[57]_i_1 ));
LUT6 #(
    .INIT(64'hBAFFFFFFFFFFFFFF)) 
     \mi_wrap_be_next[57]_i_2 
       (.I0(\n_0_mi_wrap_be_next[61]_i_7 ),
        .I1(\n_0_next_mi_len_reg[1] ),
        .I2(\n_0_next_mi_addr_reg[2] ),
        .I3(\n_0_next_mi_addr_reg[3] ),
        .I4(\n_0_next_mi_addr_reg[5] ),
        .I5(\n_0_next_mi_addr_reg[4] ),
        .O(\n_0_mi_wrap_be_next[57]_i_2 ));
LUT6 #(
    .INIT(64'h777F777F777F0000)) 
     \mi_wrap_be_next[57]_i_3 
       (.I0(\n_0_mi_wrap_be_next[59]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[63]_i_2 ),
        .I2(\n_0_mi_wrap_be_next[57]_i_4 ),
        .I3(\n_0_mi_wrap_be_next[57]_i_5 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .I5(\n_0_mi_wcnt[7]_i_4 ),
        .O(\n_0_mi_wrap_be_next[57]_i_3 ));
LUT5 #(
    .INIT(32'hFEFEFEFF)) 
     \mi_wrap_be_next[57]_i_4 
       (.I0(O1[1]),
        .I1(O1[2]),
        .I2(mi_state[1]),
        .I3(mi_awvalid),
        .I4(mi_state[2]),
        .O(\n_0_mi_wrap_be_next[57]_i_4 ));
LUT6 #(
    .INIT(64'hFFFFDFDDFFFFFFFF)) 
     \mi_wrap_be_next[57]_i_5 
       (.I0(O1[0]),
        .I1(\n_0_mi_wrap_be_next[62]_i_3 ),
        .I2(D[1]),
        .I3(M_AXI_AWADDR[2]),
        .I4(\n_0_mi_wrap_be_next[18]_i_4 ),
        .I5(M_AXI_AWADDR[3]),
        .O(\n_0_mi_wrap_be_next[57]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFAAAAFEAA)) 
     \mi_wrap_be_next[58]_i_1 
       (.I0(\n_0_mi_wrap_be_next[58]_i_2 ),
        .I1(\n_0_mi_wcnt[7]_i_5 ),
        .I2(\n_0_mi_wcnt[7]_i_4 ),
        .I3(f_mi_wrap_be059_out),
        .I4(\n_0_mi_wrap_be_next[58]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[58]_i_5 ),
        .O(\n_0_mi_wrap_be_next[58]_i_1 ));
LUT6 #(
    .INIT(64'h00000000FFFF8000)) 
     \mi_wrap_be_next[58]_i_2 
       (.I0(\n_0_mi_wrap_be_next[58]_i_6 ),
        .I1(\n_0_next_mi_addr_reg[4] ),
        .I2(\n_0_next_mi_addr_reg[5] ),
        .I3(\n_0_next_mi_addr_reg[3] ),
        .I4(\n_0_mi_wrap_be_next[58]_i_7 ),
        .I5(load_mi_ptr),
        .O(\n_0_mi_wrap_be_next[58]_i_2 ));
LUT6 #(
    .INIT(64'h0010000000000000)) 
     \mi_wrap_be_next[58]_i_3 
       (.I0(D[2]),
        .I1(D[3]),
        .I2(M_AXI_AWADDR[3]),
        .I3(D[1]),
        .I4(M_AXI_AWADDR[5]),
        .I5(M_AXI_AWADDR[4]),
        .O(f_mi_wrap_be059_out));
LUT5 #(
    .INIT(32'hFFFFBBBF)) 
     \mi_wrap_be_next[58]_i_4 
       (.I0(mi_state[1]),
        .I1(O1[1]),
        .I2(mi_state[2]),
        .I3(mi_awvalid),
        .I4(O1[0]),
        .O(\n_0_mi_wrap_be_next[58]_i_4 ));
LUT6 #(
    .INIT(64'h01FF01FF01FF0000)) 
     \mi_wrap_be_next[58]_i_5 
       (.I0(\n_0_mi_wrap_be_next[58]_i_8 ),
        .I1(\n_0_mi_wrap_be_next[62]_i_3 ),
        .I2(\n_0_mi_wrap_be_next[58]_i_9 ),
        .I3(\n_0_mi_wrap_be_next[62]_i_2 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .I5(\n_0_mi_wcnt[7]_i_4 ),
        .O(\n_0_mi_wrap_be_next[58]_i_5 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \mi_wrap_be_next[58]_i_6 
       (.I0(size[0]),
        .I1(\n_0_next_mi_addr_reg[2] ),
        .I2(\n_0_mi_wrap_be_next[48]_i_8 ),
        .I3(size[2]),
        .I4(size[1]),
        .I5(\n_0_mi_wrap_be_next[5]_i_3 ),
        .O(\n_0_mi_wrap_be_next[58]_i_6 ));
LUT6 #(
    .INIT(64'hFFFF000000010000)) 
     \mi_wrap_be_next[58]_i_7 
       (.I0(\n_0_mi_wrap_be_next[56]_i_10 ),
        .I1(\n_0_mi_wrap_be_next[5]_i_3 ),
        .I2(size[0]),
        .I3(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I4(size[1]),
        .I5(size[2]),
        .O(\n_0_mi_wrap_be_next[58]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFB)) 
     \mi_wrap_be_next[58]_i_8 
       (.I0(\n_0_mi_wrap_cnt[3]_i_9 ),
        .I1(\n_0_mi_wrap_cnt[0]_i_14 ),
        .I2(mi_state[1]),
        .I3(\n_0_mi_wrap_be_next[60]_i_9 ),
        .I4(M_AXI_AWADDR[2]),
        .I5(O1[0]),
        .O(\n_0_mi_wrap_be_next[58]_i_8 ));
(* SOFT_HLUTNM = "soft_lutpair148" *) 
   LUT3 #(
    .INIT(8'hEF)) 
     \mi_wrap_be_next[58]_i_9 
       (.I0(D[2]),
        .I1(D[3]),
        .I2(M_AXI_AWADDR[3]),
        .O(\n_0_mi_wrap_be_next[58]_i_9 ));
LUT6 #(
    .INIT(64'hFFFFFFFF0E0E1FFF)) 
     \mi_wrap_be_next[59]_i_1 
       (.I0(\n_0_mi_wcnt[7]_i_5 ),
        .I1(\n_0_mi_wcnt[7]_i_4 ),
        .I2(\n_0_mi_wrap_be_next[59]_i_2 ),
        .I3(n_0_M_AXI_WLAST_i_i_2),
        .I4(\n_0_mi_wrap_be_next[59]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[63]_i_1 ),
        .O(\n_0_mi_wrap_be_next[59]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
     \mi_wrap_be_next[59]_i_2 
       (.I0(\n_0_mi_wrap_be_next[58]_i_4 ),
        .I1(\n_0_mi_wrap_be_next[62]_i_3 ),
        .I2(D[1]),
        .I3(M_AXI_AWADDR[3]),
        .I4(D[3]),
        .I5(D[2]),
        .O(\n_0_mi_wrap_be_next[59]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFFFBFFFFFFFF)) 
     \mi_wrap_be_next[59]_i_3 
       (.I0(size[0]),
        .I1(size[1]),
        .I2(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I3(\n_0_mi_wrap_be_next[5]_i_3 ),
        .I4(\n_0_next_mi_len_reg[1] ),
        .I5(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_wrap_be_next[59]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAEAAAEAAAEAA)) 
     \mi_wrap_be_next[5]_i_1 
       (.I0(\n_0_mi_wrap_be_next[7]_i_1 ),
        .I1(\n_0_mi_wrap_be_next[5]_i_2 ),
        .I2(\n_0_mi_wrap_be_next[5]_i_3 ),
        .I3(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I4(\n_0_mi_wrap_be_next[5]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[13]_i_5 ),
        .O(\n_0_mi_wrap_be_next[5]_i_1 ));
LUT6 #(
    .INIT(64'h0000000400000000)) 
     \mi_wrap_be_next[5]_i_2 
       (.I0(\n_0_next_mi_len_reg[1] ),
        .I1(\n_0_next_mi_addr_reg[2] ),
        .I2(size[1]),
        .I3(\n_0_next_mi_addr_reg[3] ),
        .I4(load_mi_ptr),
        .I5(size[0]),
        .O(\n_0_mi_wrap_be_next[5]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair158" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \mi_wrap_be_next[5]_i_3 
       (.I0(\n_0_next_mi_len_reg[2] ),
        .I1(p_6_in),
        .O(\n_0_mi_wrap_be_next[5]_i_3 ));
LUT6 #(
    .INIT(64'h0000000400000000)) 
     \mi_wrap_be_next[5]_i_4 
       (.I0(D[1]),
        .I1(M_AXI_AWADDR[2]),
        .I2(D[2]),
        .I3(D[3]),
        .I4(M_AXI_AWADDR[3]),
        .I5(\n_0_mi_wrap_be_next[14]_i_3 ),
        .O(\n_0_mi_wrap_be_next[5]_i_4 ));
LUT6 #(
    .INIT(64'hEEEEEEEEEEEEFFFE)) 
     \mi_wrap_be_next[60]_i_1 
       (.I0(\n_0_mi_wrap_be_next[60]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[60]_i_3 ),
        .I2(\n_0_mi_wcnt[7]_i_4 ),
        .I3(\n_0_mi_wcnt[7]_i_5 ),
        .I4(\n_0_mi_wrap_be_next[60]_i_4 ),
        .I5(\n_0_mi_size[1]_i_2 ),
        .O(\n_0_mi_wrap_be_next[60]_i_1 ));
LUT6 #(
    .INIT(64'h000000000000FF40)) 
     \mi_wrap_be_next[60]_i_2 
       (.I0(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I1(size[0]),
        .I2(\n_0_mi_wrap_be_next[13]_i_3 ),
        .I3(\n_0_mi_wrap_be_next[60]_i_5 ),
        .I4(load_mi_ptr),
        .I5(\n_0_mi_wrap_be_next[60]_i_6 ),
        .O(\n_0_mi_wrap_be_next[60]_i_2 ));
LUT6 #(
    .INIT(64'h5550DDD055505550)) 
     \mi_wrap_be_next[60]_i_3 
       (.I0(\n_0_mi_wrap_be_next[60]_i_7 ),
        .I1(\n_0_mi_wrap_be_next[60]_i_8 ),
        .I2(\n_0_mi_wcnt[7]_i_4 ),
        .I3(\n_0_mi_wcnt[7]_i_5 ),
        .I4(\n_0_mi_wrap_be_next[60]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[60]_i_9 ),
        .O(\n_0_mi_wrap_be_next[60]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair188" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \mi_wrap_be_next[60]_i_4 
       (.I0(O1[2]),
        .I1(O1[1]),
        .O(\n_0_mi_wrap_be_next[60]_i_4 ));
LUT6 #(
    .INIT(64'hFFFFFFFF00001000)) 
     \mi_wrap_be_next[60]_i_5 
       (.I0(\n_0_mi_wrap_be_next[44]_i_6 ),
        .I1(size[0]),
        .I2(\n_0_next_mi_addr_reg[2] ),
        .I3(\n_0_mi_wrap_be_next[48]_i_8 ),
        .I4(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I5(size[1]),
        .O(\n_0_mi_wrap_be_next[60]_i_5 ));
(* SOFT_HLUTNM = "soft_lutpair249" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \mi_wrap_be_next[60]_i_6 
       (.I0(size[2]),
        .I1(size[1]),
        .O(\n_0_mi_wrap_be_next[60]_i_6 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFFFF)) 
     \mi_wrap_be_next[60]_i_7 
       (.I0(\n_0_mi_wrap_be_next[60]_i_4 ),
        .I1(\n_0_mi_size[0]_i_2 ),
        .I2(\n_0_mi_wrap_be_next[18]_i_4 ),
        .I3(\n_0_mi_wrap_be_next[61]_i_5 ),
        .I4(M_AXI_AWADDR[3]),
        .I5(\n_0_mi_wrap_be_next[62]_i_3 ),
        .O(\n_0_mi_wrap_be_next[60]_i_7 ));
LUT6 #(
    .INIT(64'h0000001000000000)) 
     \mi_wrap_be_next[60]_i_8 
       (.I0(\n_0_mi_wrap_be_next[62]_i_3 ),
        .I1(\n_0_mi_wrap_be_next[58]_i_9 ),
        .I2(M_AXI_AWADDR[2]),
        .I3(O1[0]),
        .I4(mi_state[1]),
        .I5(\n_0_mi_wrap_cnt[0]_i_14 ),
        .O(\n_0_mi_wrap_be_next[60]_i_8 ));
LUT2 #(
    .INIT(4'hB)) 
     \mi_wrap_be_next[60]_i_9 
       (.I0(D[1]),
        .I1(M_AXI_AWADDR[1]),
        .O(\n_0_mi_wrap_be_next[60]_i_9 ));
LUT6 #(
    .INIT(64'h01FD55FD03FFFFFF)) 
     \mi_wrap_be_next[61]_i_1 
       (.I0(\n_0_mi_wrap_be_next[61]_i_2 ),
        .I1(\n_0_mi_wcnt[7]_i_4 ),
        .I2(\n_0_mi_wcnt[7]_i_5 ),
        .I3(\n_0_mi_wrap_be_next[61]_i_3 ),
        .I4(n_0_M_AXI_WLAST_i_i_2),
        .I5(\n_0_mi_wrap_be_next[61]_i_4 ),
        .O(\n_0_mi_wrap_be_next[61]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair157" *) 
   LUT2 #(
    .INIT(4'h7)) 
     \mi_wrap_be_next[61]_i_2 
       (.I0(size[1]),
        .I1(size[2]),
        .O(\n_0_mi_wrap_be_next[61]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFFFB00000000)) 
     \mi_wrap_be_next[61]_i_3 
       (.I0(\n_0_mi_wrap_be_next[62]_i_3 ),
        .I1(M_AXI_AWADDR[3]),
        .I2(\n_0_mi_wrap_be_next[61]_i_5 ),
        .I3(\n_0_mi_wrap_be_next[18]_i_4 ),
        .I4(\n_0_mi_wrap_be_next[61]_i_6 ),
        .I5(\n_0_mi_wrap_be_next[63]_i_2 ),
        .O(\n_0_mi_wrap_be_next[61]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFFFFFBFFFFFFF)) 
     \mi_wrap_be_next[61]_i_4 
       (.I0(\n_0_mi_wrap_be_next[61]_i_7 ),
        .I1(\n_0_next_mi_addr_reg[4] ),
        .I2(\n_0_next_mi_addr_reg[5] ),
        .I3(\n_0_next_mi_addr_reg[2] ),
        .I4(\n_0_next_mi_addr_reg[3] ),
        .I5(\n_0_next_mi_len_reg[1] ),
        .O(\n_0_mi_wrap_be_next[61]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair155" *) 
   LUT2 #(
    .INIT(4'hB)) 
     \mi_wrap_be_next[61]_i_5 
       (.I0(D[1]),
        .I1(M_AXI_AWADDR[2]),
        .O(\n_0_mi_wrap_be_next[61]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFBBBF)) 
     \mi_wrap_be_next[61]_i_6 
       (.I0(mi_state[1]),
        .I1(O1[0]),
        .I2(mi_state[2]),
        .I3(mi_awvalid),
        .I4(O1[1]),
        .I5(O1[2]),
        .O(\n_0_mi_wrap_be_next[61]_i_6 ));
(* SOFT_HLUTNM = "soft_lutpair150" *) 
   LUT5 #(
    .INIT(32'hFFFEFFFF)) 
     \mi_wrap_be_next[61]_i_7 
       (.I0(\n_0_next_mi_len_reg[2] ),
        .I1(p_6_in),
        .I2(size[2]),
        .I3(size[1]),
        .I4(size[0]),
        .O(\n_0_mi_wrap_be_next[61]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFF0E0E0EEE)) 
     \mi_wrap_be_next[62]_i_1 
       (.I0(\n_0_mi_wcnt[7]_i_4 ),
        .I1(\n_0_mi_wcnt[7]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[62]_i_2 ),
        .I3(\n_0_mi_wrap_be_next[62]_i_3 ),
        .I4(\n_0_mi_wrap_be_next[62]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[62]_i_5 ),
        .O(\n_0_mi_wrap_be_next[62]_i_1 ));
LUT5 #(
    .INIT(32'hBBBFFFFF)) 
     \mi_wrap_be_next[62]_i_2 
       (.I0(mi_state[1]),
        .I1(O1[1]),
        .I2(mi_state[2]),
        .I3(mi_awvalid),
        .I4(O1[2]),
        .O(\n_0_mi_wrap_be_next[62]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair255" *) 
   LUT2 #(
    .INIT(4'h7)) 
     \mi_wrap_be_next[62]_i_3 
       (.I0(M_AXI_AWADDR[4]),
        .I1(M_AXI_AWADDR[5]),
        .O(\n_0_mi_wrap_be_next[62]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFFFEFFFFFFFFF)) 
     \mi_wrap_be_next[62]_i_4 
       (.I0(\n_0_mi_wrap_be_next[62]_i_6 ),
        .I1(O1[0]),
        .I2(M_AXI_AWADDR[2]),
        .I3(D[2]),
        .I4(D[3]),
        .I5(M_AXI_AWADDR[3]),
        .O(\n_0_mi_wrap_be_next[62]_i_4 ));
LUT6 #(
    .INIT(64'h000000008F888888)) 
     \mi_wrap_be_next[62]_i_5 
       (.I0(size[2]),
        .I1(size[1]),
        .I2(\n_0_mi_wrap_be_next[62]_i_7 ),
        .I3(\n_0_next_mi_addr_reg[3] ),
        .I4(\n_0_mi_wrap_be_next[30]_i_3 ),
        .I5(load_mi_ptr),
        .O(\n_0_mi_wrap_be_next[62]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFBFBFBFF)) 
     \mi_wrap_be_next[62]_i_6 
       (.I0(D[1]),
        .I1(M_AXI_AWADDR[1]),
        .I2(mi_state[1]),
        .I3(mi_awvalid),
        .I4(mi_state[2]),
        .I5(\n_0_mi_wrap_cnt[3]_i_9 ),
        .O(\n_0_mi_wrap_be_next[62]_i_6 ));
(* SOFT_HLUTNM = "soft_lutpair250" *) 
   LUT2 #(
    .INIT(4'h7)) 
     \mi_wrap_be_next[62]_i_7 
       (.I0(\n_0_next_mi_addr_reg[4] ),
        .I1(\n_0_next_mi_addr_reg[5] ),
        .O(\n_0_mi_wrap_be_next[62]_i_7 ));
LUT6 #(
    .INIT(64'h555555C0D5D5D5C0)) 
     \mi_wrap_be_next[63]_i_1 
       (.I0(\n_0_mi_wrap_be_next[63]_i_2 ),
        .I1(size[1]),
        .I2(size[2]),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .I5(n_0_M_AXI_WLAST_i_i_2),
        .O(\n_0_mi_wrap_be_next[63]_i_1 ));
LUT5 #(
    .INIT(32'hBBBFFFFF)) 
     \mi_wrap_be_next[63]_i_2 
       (.I0(mi_state[1]),
        .I1(O1[1]),
        .I2(mi_state[2]),
        .I3(mi_awvalid),
        .I4(O1[2]),
        .O(\n_0_mi_wrap_be_next[63]_i_2 ));
LUT6 #(
    .INIT(64'hEFEFEFEEEEEEEEEE)) 
     \mi_wrap_be_next[6]_i_1 
       (.I0(\n_0_mi_wrap_be_next[6]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[14]_i_2 ),
        .I2(\n_0_mi_wrap_be_next[6]_i_3 ),
        .I3(\n_0_mi_wcnt[7]_i_5 ),
        .I4(\n_0_mi_wcnt[7]_i_4 ),
        .I5(\n_0_mi_wrap_be_next[6]_i_4 ),
        .O(\n_0_mi_wrap_be_next[6]_i_1 ));
LUT6 #(
    .INIT(64'h2F2F2FFF22222200)) 
     \mi_wrap_be_next[6]_i_2 
       (.I0(\n_0_mi_wrap_be_next[14]_i_3 ),
        .I1(\n_0_mi_wrap_be_next[54]_i_3 ),
        .I2(n_0_M_AXI_WLAST_i_i_2),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .I5(\n_0_mi_wrap_be_next[6]_i_5 ),
        .O(\n_0_mi_wrap_be_next[6]_i_2 ));
LUT5 #(
    .INIT(32'hBBBFFFFF)) 
     \mi_wrap_be_next[6]_i_3 
       (.I0(mi_state[1]),
        .I1(O1[0]),
        .I2(mi_state[2]),
        .I3(mi_awvalid),
        .I4(O1[1]),
        .O(\n_0_mi_wrap_be_next[6]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair149" *) 
   LUT4 #(
    .INIT(16'hAFAB)) 
     \mi_wrap_be_next[6]_i_4 
       (.I0(D[2]),
        .I1(M_AXI_AWADDR[4]),
        .I2(M_AXI_AWADDR[5]),
        .I3(D[1]),
        .O(\n_0_mi_wrap_be_next[6]_i_4 ));
LUT6 #(
    .INIT(64'hEAEAEAEAFFEAEAEA)) 
     \mi_wrap_be_next[6]_i_5 
       (.I0(\n_0_mi_wrap_be_next[14]_i_5 ),
        .I1(\n_0_mi_wrap_be_next[54]_i_8 ),
        .I2(\n_0_mi_wrap_be_next[7]_i_4 ),
        .I3(\n_0_mi_wrap_be_next[30]_i_3 ),
        .I4(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I5(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_wrap_be_next[6]_i_5 ));
LUT6 #(
    .INIT(64'hFFFEFFFEFEFEFFFE)) 
     \mi_wrap_be_next[7]_i_1 
       (.I0(\n_0_mi_wrap_be_next[7]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[11]_i_3 ),
        .I2(\n_0_mi_wrap_be_next[31]_i_1 ),
        .I3(\n_0_mi_size[2]_i_2 ),
        .I4(M_AXI_AWADDR[5]),
        .I5(D[1]),
        .O(\n_0_mi_wrap_be_next[7]_i_1 ));
LUT6 #(
    .INIT(64'h8888888888F8F8F8)) 
     \mi_wrap_be_next[7]_i_2 
       (.I0(\n_0_mi_wrap_be_next[6]_i_4 ),
        .I1(\n_0_mi_wrap_be_next[7]_i_3 ),
        .I2(\n_0_mi_wrap_be_next[7]_i_4 ),
        .I3(n_0_M_AXI_WLAST_i_i_2),
        .I4(n_0_M_AXI_WLAST_i_i_3),
        .I5(\n_0_mi_wrap_be_next[7]_i_5 ),
        .O(\n_0_mi_wrap_be_next[7]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair175" *) 
   LUT4 #(
    .INIT(16'h00E0)) 
     \mi_wrap_be_next[7]_i_3 
       (.I0(\n_0_mi_wcnt[7]_i_4 ),
        .I1(\n_0_mi_wcnt[7]_i_5 ),
        .I2(O1[1]),
        .I3(\n_0_mi_size[0]_i_2 ),
        .O(\n_0_mi_wrap_be_next[7]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair161" *) 
   LUT4 #(
    .INIT(16'hAFAB)) 
     \mi_wrap_be_next[7]_i_4 
       (.I0(\n_0_next_mi_len_reg[2] ),
        .I1(\n_0_next_mi_addr_reg[4] ),
        .I2(\n_0_next_mi_addr_reg[5] ),
        .I3(\n_0_next_mi_len_reg[1] ),
        .O(\n_0_mi_wrap_be_next[7]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair168" *) 
   LUT2 #(
    .INIT(4'h7)) 
     \mi_wrap_be_next[7]_i_5 
       (.I0(size[1]),
        .I1(size[0]),
        .O(\n_0_mi_wrap_be_next[7]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFA2EEA2)) 
     \mi_wrap_be_next[8]_i_1 
       (.I0(\n_0_mi_wrap_be_next[34]_i_2 ),
        .I1(\n_0_mi_wrap_be_next[34]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[8]_i_2 ),
        .I3(\n_0_mi_wrap_be_next[16]_i_4 ),
        .I4(\n_0_mi_wrap_be_next[15]_i_2 ),
        .I5(\n_0_mi_wrap_be_next[8]_i_3 ),
        .O(\n_0_mi_wrap_be_next[8]_i_1 ));
LUT6 #(
    .INIT(64'hAAAAEAEAAAFAAAAA)) 
     \mi_wrap_be_next[8]_i_2 
       (.I0(\n_0_mi_wrap_be_next[8]_i_4 ),
        .I1(\n_0_mi_wrap_be_next[43]_i_4 ),
        .I2(\n_0_mi_wrap_be_next[14]_i_3 ),
        .I3(\n_0_mi_wrap_be_next[9]_i_3 ),
        .I4(O1[0]),
        .I5(O1[1]),
        .O(\n_0_mi_wrap_be_next[8]_i_2 ));
LUT6 #(
    .INIT(64'h00000000FCFFFFAA)) 
     \mi_wrap_be_next[8]_i_3 
       (.I0(\n_0_mi_wrap_be_next[15]_i_3 ),
        .I1(\n_0_mi_wrap_be_next[8]_i_5 ),
        .I2(\n_0_mi_wrap_be_next[8]_i_6 ),
        .I3(\n_0_mi_wrap_be_next[40]_i_4 ),
        .I4(\n_0_mi_wrap_be_next[36]_i_5 ),
        .I5(load_mi_ptr),
        .O(\n_0_mi_wrap_be_next[8]_i_3 ));
LUT6 #(
    .INIT(64'h0000000400000000)) 
     \mi_wrap_be_next[8]_i_4 
       (.I0(D[3]),
        .I1(M_AXI_AWADDR[3]),
        .I2(M_AXI_AWADDR[5]),
        .I3(M_AXI_AWADDR[4]),
        .I4(O1[1]),
        .I5(\n_0_mi_wrap_be_next[40]_i_16 ),
        .O(\n_0_mi_wrap_be_next[8]_i_4 ));
LUT6 #(
    .INIT(64'hFFFFFFFF00000008)) 
     \mi_wrap_be_next[8]_i_5 
       (.I0(size[1]),
        .I1(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I2(\n_0_mi_wrap_be_next[5]_i_3 ),
        .I3(\n_0_mi_wrap_be_next[56]_i_10 ),
        .I4(size[0]),
        .I5(\n_0_mi_wrap_be_next[8]_i_7 ),
        .O(\n_0_mi_wrap_be_next[8]_i_5 ));
LUT6 #(
    .INIT(64'h2000FF0020002000)) 
     \mi_wrap_be_next[8]_i_6 
       (.I0(\n_0_mi_wrap_be_next[53]_i_6 ),
        .I1(\n_0_mi_wrap_be_next[44]_i_6 ),
        .I2(\n_0_mi_wrap_be_next[48]_i_6 ),
        .I3(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I4(p_6_in),
        .I5(\n_0_mi_wrap_be_next[8]_i_8 ),
        .O(\n_0_mi_wrap_be_next[8]_i_6 ));
LUT6 #(
    .INIT(64'h0000000000040000)) 
     \mi_wrap_be_next[8]_i_7 
       (.I0(\n_0_mi_wrap_be_next[40]_i_11 ),
        .I1(\n_0_next_mi_addr_reg[3] ),
        .I2(size[1]),
        .I3(p_6_in),
        .I4(\n_0_next_mi_len_reg[2] ),
        .I5(\n_0_next_mi_addr_reg[5] ),
        .O(\n_0_mi_wrap_be_next[8]_i_7 ));
LUT6 #(
    .INIT(64'h0000101100000000)) 
     \mi_wrap_be_next[8]_i_8 
       (.I0(size[0]),
        .I1(\n_0_next_mi_addr_reg[2] ),
        .I2(\n_0_next_mi_len_reg[1] ),
        .I3(\n_0_next_mi_addr_reg[1] ),
        .I4(size[1]),
        .I5(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_wrap_be_next[8]_i_8 ));
LUT6 #(
    .INIT(64'hEAEAFFEAEAEAEAEA)) 
     \mi_wrap_be_next[9]_i_1 
       (.I0(\n_0_mi_wrap_be_next[11]_i_1 ),
        .I1(\n_0_mi_wrap_be_next[17]_i_3 ),
        .I2(\n_0_mi_wrap_be_next[9]_i_2 ),
        .I3(\n_0_mi_wrap_be_next[14]_i_3 ),
        .I4(\n_0_mi_wrap_be_next[9]_i_3 ),
        .I5(\n_0_mi_wrap_be_next[13]_i_5 ),
        .O(\n_0_mi_wrap_be_next[9]_i_1 ));
LUT6 #(
    .INIT(64'h0000000000008A00)) 
     \mi_wrap_be_next[9]_i_2 
       (.I0(\n_0_mi_wrap_be_next[13]_i_2 ),
        .I1(\n_0_next_mi_len_reg[1] ),
        .I2(\n_0_next_mi_addr_reg[2] ),
        .I3(\n_0_next_mi_addr_reg[3] ),
        .I4(\n_0_next_mi_len_reg[2] ),
        .I5(p_6_in),
        .O(\n_0_mi_wrap_be_next[9]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair151" *) 
   LUT5 #(
    .INIT(32'hFDFDFFFD)) 
     \mi_wrap_be_next[9]_i_3 
       (.I0(M_AXI_AWADDR[3]),
        .I1(D[3]),
        .I2(D[2]),
        .I3(M_AXI_AWADDR[2]),
        .I4(D[1]),
        .O(\n_0_mi_wrap_be_next[9]_i_3 ));
FDRE \mi_wrap_be_next_reg[0] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[0]_i_1 ),
        .Q(mi_wrap_be_next[0]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[10] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[10]_i_1 ),
        .Q(mi_wrap_be_next[10]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[11] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[11]_i_1 ),
        .Q(mi_wrap_be_next[11]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[12] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[12]_i_1 ),
        .Q(mi_wrap_be_next[12]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[13] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[13]_i_1 ),
        .Q(mi_wrap_be_next[13]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[14] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[14]_i_1 ),
        .Q(mi_wrap_be_next[14]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[15] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[15]_i_1 ),
        .Q(mi_wrap_be_next[15]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[16] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[16]_i_1 ),
        .Q(mi_wrap_be_next[16]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[17] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[17]_i_1 ),
        .Q(mi_wrap_be_next[17]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[18] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[18]_i_1 ),
        .Q(mi_wrap_be_next[18]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[19] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[19]_i_1 ),
        .Q(mi_wrap_be_next[19]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[1] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[1]_i_1 ),
        .Q(mi_wrap_be_next[1]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[20] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[20]_i_1 ),
        .Q(mi_wrap_be_next[20]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[21] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[21]_i_1 ),
        .Q(mi_wrap_be_next[21]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[22] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[22]_i_1 ),
        .Q(mi_wrap_be_next[22]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[23] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[23]_i_1 ),
        .Q(mi_wrap_be_next[23]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[24] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[24]_i_1 ),
        .Q(mi_wrap_be_next[24]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[25] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[25]_i_1 ),
        .Q(mi_wrap_be_next[25]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[26] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[26]_i_1 ),
        .Q(mi_wrap_be_next[26]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[27] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[27]_i_1 ),
        .Q(mi_wrap_be_next[27]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[28] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[28]_i_1 ),
        .Q(mi_wrap_be_next[28]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[29] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[29]_i_1 ),
        .Q(mi_wrap_be_next[29]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[2] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[2]_i_1 ),
        .Q(mi_wrap_be_next[2]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[30] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[30]_i_1 ),
        .Q(mi_wrap_be_next[30]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[31] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[31]_i_1 ),
        .Q(mi_wrap_be_next[31]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[32] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[32]_i_1 ),
        .Q(mi_wrap_be_next[32]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[33] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[33]_i_1 ),
        .Q(mi_wrap_be_next[33]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[34] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[34]_i_1 ),
        .Q(mi_wrap_be_next[34]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[35] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[35]_i_1 ),
        .Q(mi_wrap_be_next[35]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[36] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[36]_i_1 ),
        .Q(mi_wrap_be_next[36]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[37] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[37]_i_1 ),
        .Q(mi_wrap_be_next[37]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[38] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[38]_i_1 ),
        .Q(mi_wrap_be_next[38]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[39] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[39]_i_1 ),
        .Q(mi_wrap_be_next[39]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[3] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[3]_i_1 ),
        .Q(mi_wrap_be_next[3]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[40] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[40]_i_1 ),
        .Q(mi_wrap_be_next[40]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[41] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[41]_i_1 ),
        .Q(mi_wrap_be_next[41]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[42] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[42]_i_1 ),
        .Q(mi_wrap_be_next[42]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[43] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[43]_i_1 ),
        .Q(mi_wrap_be_next[43]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[44] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[44]_i_1 ),
        .Q(mi_wrap_be_next[44]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[45] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[45]_i_1 ),
        .Q(mi_wrap_be_next[45]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[46] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[46]_i_1 ),
        .Q(mi_wrap_be_next[46]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[47] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[47]_i_1 ),
        .Q(mi_wrap_be_next[47]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[48] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[48]_i_1 ),
        .Q(mi_wrap_be_next[48]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[49] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[49]_i_1 ),
        .Q(mi_wrap_be_next[49]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[4] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[4]_i_1 ),
        .Q(mi_wrap_be_next[4]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[50] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[50]_i_1 ),
        .Q(mi_wrap_be_next[50]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[51] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[51]_i_1 ),
        .Q(mi_wrap_be_next[51]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[52] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[52]_i_1 ),
        .Q(mi_wrap_be_next[52]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[53] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[53]_i_1 ),
        .Q(mi_wrap_be_next[53]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[54] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[54]_i_1 ),
        .Q(mi_wrap_be_next[54]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[55] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[55]_i_1 ),
        .Q(mi_wrap_be_next[55]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[56] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[56]_i_1 ),
        .Q(mi_wrap_be_next[56]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[57] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[57]_i_1 ),
        .Q(mi_wrap_be_next[57]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[58] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[58]_i_1 ),
        .Q(mi_wrap_be_next[58]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[59] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[59]_i_1 ),
        .Q(mi_wrap_be_next[59]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[5] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[5]_i_1 ),
        .Q(mi_wrap_be_next[5]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[60] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[60]_i_1 ),
        .Q(mi_wrap_be_next[60]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[61] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[61]_i_1 ),
        .Q(mi_wrap_be_next[61]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[62] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[62]_i_1 ),
        .Q(mi_wrap_be_next[62]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[63] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[63]_i_1 ),
        .Q(mi_wrap_be_next[63]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[6] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[6]_i_1 ),
        .Q(mi_wrap_be_next[6]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[7] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[7]_i_1 ),
        .Q(mi_wrap_be_next[7]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[8] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[8]_i_1 ),
        .Q(mi_wrap_be_next[8]),
        .R(1'b0));
FDRE \mi_wrap_be_next_reg[9] 
       (.C(I4),
        .CE(\n_0_mi_burst[1]_i_1 ),
        .D(\n_0_mi_wrap_be_next[9]_i_1 ),
        .Q(mi_wrap_be_next[9]),
        .R(1'b0));
LUT6 #(
    .INIT(64'hFFFFFFFFAAAAAABF)) 
     \mi_wrap_cnt[0]_i_1 
       (.I0(\n_0_mi_wrap_cnt[0]_i_2 ),
        .I1(n_0_M_AXI_WLAST_i_i_2),
        .I2(n_0_M_AXI_WLAST_i_i_3),
        .I3(mi_wrap_cnt[0]),
        .I4(mi_last),
        .I5(\n_0_mi_wrap_cnt[0]_i_3 ),
        .O(\n_0_mi_wrap_cnt[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair246" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \mi_wrap_cnt[0]_i_10 
       (.I0(O1[1]),
        .I1(M_AXI_AWADDR[3]),
        .O(\n_0_mi_wrap_cnt[0]_i_10 ));
LUT6 #(
    .INIT(64'h00FF050500001111)) 
     \mi_wrap_cnt[0]_i_11 
       (.I0(size[0]),
        .I1(\n_0_next_mi_addr_reg[0] ),
        .I2(\n_0_next_mi_addr_reg[2] ),
        .I3(\n_0_next_mi_addr_reg[6] ),
        .I4(size[2]),
        .I5(size[1]),
        .O(\n_0_mi_wrap_cnt[0]_i_11 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEF2)) 
     \mi_wrap_cnt[0]_i_12 
       (.I0(M_AXI_AWADDR[1]),
        .I1(O1[2]),
        .I2(O1[1]),
        .I3(M_AXI_AWADDR[5]),
        .I4(\n_0_mi_wrap_cnt[3]_i_10 ),
        .I5(\n_0_mi_wrap_be_next[49]_i_5 ),
        .O(\n_0_mi_wrap_cnt[0]_i_12 ));
(* SOFT_HLUTNM = "soft_lutpair246" *) 
   LUT2 #(
    .INIT(4'hB)) 
     \mi_wrap_cnt[0]_i_13 
       (.I0(O1[1]),
        .I1(O1[2]),
        .O(\n_0_mi_wrap_cnt[0]_i_13 ));
LUT2 #(
    .INIT(4'hE)) 
     \mi_wrap_cnt[0]_i_14 
       (.I0(mi_awvalid),
        .I1(mi_state[2]),
        .O(\n_0_mi_wrap_cnt[0]_i_14 ));
LUT5 #(
    .INIT(32'h7F7F7F00)) 
     \mi_wrap_cnt[0]_i_2 
       (.I0(\n_0_mi_wrap_cnt[0]_i_4 ),
        .I1(\n_0_mi_wrap_cnt[0]_i_5 ),
        .I2(\n_0_mi_wrap_cnt[0]_i_6 ),
        .I3(\n_0_mi_wcnt[7]_i_5 ),
        .I4(\n_0_mi_wcnt[7]_i_4 ),
        .O(\n_0_mi_wrap_cnt[0]_i_2 ));
LUT6 #(
    .INIT(64'h20FF20FF20FFA0A0)) 
     \mi_wrap_cnt[0]_i_3 
       (.I0(mi_last),
        .I1(n_0_M_AXI_WLAST_i_i_2),
        .I2(f_mi_wrap_cnt0_return),
        .I3(\n_0_mi_wrap_cnt[0]_i_8 ),
        .I4(\n_0_mi_wcnt[7]_i_4 ),
        .I5(\n_0_mi_wcnt[7]_i_5 ),
        .O(\n_0_mi_wrap_cnt[0]_i_3 ));
LUT6 #(
    .INIT(64'hFDFFFDFFFDFFFFFF)) 
     \mi_wrap_cnt[0]_i_4 
       (.I0(O1[1]),
        .I1(mi_state[1]),
        .I2(M_AXI_AWADDR[6]),
        .I3(O1[2]),
        .I4(mi_state[2]),
        .I5(mi_awvalid),
        .O(\n_0_mi_wrap_cnt[0]_i_4 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFEFEFEFF)) 
     \mi_wrap_cnt[0]_i_5 
       (.I0(M_AXI_AWADDR[0]),
        .I1(O1[0]),
        .I2(mi_state[1]),
        .I3(mi_awvalid),
        .I4(mi_state[2]),
        .I5(\n_0_mi_wrap_cnt[3]_i_9 ),
        .O(\n_0_mi_wrap_cnt[0]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFEFEFFFF00FE)) 
     \mi_wrap_cnt[0]_i_6 
       (.I0(\n_0_mi_wrap_be_next[3]_i_5 ),
        .I1(\n_0_mi_wrap_be_next[50]_i_6 ),
        .I2(\n_0_mi_wrap_cnt[0]_i_9 ),
        .I3(\n_0_mi_wrap_cnt[0]_i_10 ),
        .I4(O1[2]),
        .I5(\n_0_mi_size[0]_i_2 ),
        .O(\n_0_mi_wrap_cnt[0]_i_6 ));
LUT6 #(
    .INIT(64'hEAEAEAEAEAEFFAFF)) 
     \mi_wrap_cnt[0]_i_7 
       (.I0(\n_0_mi_wrap_cnt[0]_i_11 ),
        .I1(\n_0_mi_wrap_cnt[1]_i_5 ),
        .I2(size[0]),
        .I3(\n_0_next_mi_addr_reg[4] ),
        .I4(\n_0_next_mi_addr_reg[5] ),
        .I5(\n_0_mi_wrap_be_next[36]_i_5 ),
        .O(f_mi_wrap_cnt0_return));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAA8A)) 
     \mi_wrap_cnt[0]_i_8 
       (.I0(\n_0_mi_wrap_cnt[0]_i_12 ),
        .I1(\n_0_mi_wrap_cnt[0]_i_13 ),
        .I2(\n_0_mi_wrap_cnt[0]_i_14 ),
        .I3(mi_state[1]),
        .I4(M_AXI_AWADDR[4]),
        .I5(O1[0]),
        .O(\n_0_mi_wrap_cnt[0]_i_8 ));
(* SOFT_HLUTNM = "soft_lutpair140" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \mi_wrap_cnt[0]_i_9 
       (.I0(O1[0]),
        .I1(M_AXI_AWADDR[2]),
        .O(\n_0_mi_wrap_cnt[0]_i_9 ));
LUT6 #(
    .INIT(64'hFFFFFFFF2A000000)) 
     \mi_wrap_cnt[1]_i_1 
       (.I0(\n_0_mi_wrap_cnt[1]_i_2 ),
        .I1(n_0_M_AXI_WLAST_i_i_2),
        .I2(n_0_M_AXI_WLAST_i_i_3),
        .I3(\n_0_next_mi_len_reg[1] ),
        .I4(mi_last),
        .I5(\n_0_mi_wrap_cnt[1]_i_3 ),
        .O(\n_0_mi_wrap_cnt[1]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair189" *) 
   LUT3 #(
    .INIT(8'h47)) 
     \mi_wrap_cnt[1]_i_10 
       (.I0(\n_0_next_mi_addr_reg[6] ),
        .I1(size[0]),
        .I2(\n_0_next_mi_addr_reg[5] ),
        .O(\n_0_mi_wrap_cnt[1]_i_10 ));
LUT6 #(
    .INIT(64'hFFFFFFFDFFFFFFFF)) 
     \mi_wrap_cnt[1]_i_11 
       (.I0(D[1]),
        .I1(M_AXI_AWADDR[2]),
        .I2(\n_0_mi_wrap_cnt[3]_i_9 ),
        .I3(\n_0_mi_wrap_cnt[3]_i_10 ),
        .I4(mi_state[1]),
        .I5(O1[0]),
        .O(\n_0_mi_wrap_cnt[1]_i_11 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFDFF)) 
     \mi_wrap_cnt[1]_i_12 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(O1[2]),
        .I2(O1[1]),
        .I3(D[1]),
        .I4(O1[0]),
        .I5(M_AXI_AWADDR[1]),
        .O(\n_0_mi_wrap_cnt[1]_i_12 ));
LUT6 #(
    .INIT(64'hFEFFFEFFFEFF00FF)) 
     \mi_wrap_cnt[1]_i_13 
       (.I0(\n_0_mi_wrap_cnt[0]_i_13 ),
        .I1(M_AXI_AWADDR[5]),
        .I2(\n_0_mi_wrap_be_next[20]_i_6 ),
        .I3(D[1]),
        .I4(M_AXI_AWADDR[3]),
        .I5(\n_0_mi_wrap_cnt[2]_i_12 ),
        .O(\n_0_mi_wrap_cnt[1]_i_13 ));
LUT6 #(
    .INIT(64'hAEAEAEAEAEAEAEFE)) 
     \mi_wrap_cnt[1]_i_2 
       (.I0(\n_0_mi_wrap_cnt[1]_i_4 ),
        .I1(\n_0_mi_wrap_cnt[1]_i_5 ),
        .I2(size[0]),
        .I3(\n_0_next_mi_addr_reg[2] ),
        .I4(size[1]),
        .I5(size[2]),
        .O(\n_0_mi_wrap_cnt[1]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF7770)) 
     \mi_wrap_cnt[1]_i_3 
       (.I0(\n_0_mi_wrap_cnt[1]_i_6 ),
        .I1(\n_0_mi_wrap_cnt[1]_i_7 ),
        .I2(\n_0_mi_wcnt[7]_i_4 ),
        .I3(\n_0_mi_wcnt[7]_i_5 ),
        .I4(\n_0_mi_wrap_cnt[1]_i_8 ),
        .I5(\n_0_mi_wrap_cnt[1]_i_9 ),
        .O(\n_0_mi_wrap_cnt[1]_i_3 ));
LUT6 #(
    .INIT(64'h20E02CEC20E020E0)) 
     \mi_wrap_cnt[1]_i_4 
       (.I0(\n_0_mi_wrap_cnt[1]_i_10 ),
        .I1(size[1]),
        .I2(size[2]),
        .I3(\n_0_next_mi_addr_reg[7] ),
        .I4(\n_0_next_mi_addr_reg[4] ),
        .I5(size[0]),
        .O(\n_0_mi_wrap_cnt[1]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair162" *) 
   LUT4 #(
    .INIT(16'h0503)) 
     \mi_wrap_cnt[1]_i_5 
       (.I0(\n_0_next_mi_addr_reg[3] ),
        .I1(\n_0_next_mi_addr_reg[1] ),
        .I2(size[2]),
        .I3(size[1]),
        .O(\n_0_mi_wrap_cnt[1]_i_5 ));
LUT6 #(
    .INIT(64'hFFEFFFFF00000000)) 
     \mi_wrap_cnt[1]_i_6 
       (.I0(\n_0_mi_wrap_be_next[3]_i_5 ),
        .I1(\n_0_mi_wrap_be_next[50]_i_6 ),
        .I2(O1[2]),
        .I3(M_AXI_AWADDR[7]),
        .I4(D[1]),
        .I5(\n_0_mi_wrap_cnt[1]_i_11 ),
        .O(\n_0_mi_wrap_cnt[1]_i_6 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAA8AAA)) 
     \mi_wrap_cnt[1]_i_7 
       (.I0(\n_0_mi_wrap_cnt[1]_i_12 ),
        .I1(M_AXI_AWADDR[6]),
        .I2(D[1]),
        .I3(O1[2]),
        .I4(O1[1]),
        .I5(\n_0_mi_size[0]_i_2 ),
        .O(\n_0_mi_wrap_cnt[1]_i_7 ));
(* SOFT_HLUTNM = "soft_lutpair156" *) 
   LUT5 #(
    .INIT(32'h00007007)) 
     \mi_wrap_cnt[1]_i_8 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(n_0_M_AXI_WLAST_i_i_3),
        .I2(mi_wrap_cnt[0]),
        .I3(mi_wrap_cnt[1]),
        .I4(mi_last),
        .O(\n_0_mi_wrap_cnt[1]_i_8 ));
LUT6 #(
    .INIT(64'h5755575557550000)) 
     \mi_wrap_cnt[1]_i_9 
       (.I0(\n_0_mi_wrap_cnt[1]_i_13 ),
        .I1(\n_0_mi_wrap_cnt[2]_i_10 ),
        .I2(M_AXI_AWADDR[4]),
        .I3(D[1]),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .I5(\n_0_mi_wcnt[7]_i_4 ),
        .O(\n_0_mi_wrap_cnt[1]_i_9 ));
LUT6 #(
    .INIT(64'hFEFFFEFFFEFFFEFE)) 
     \mi_wrap_cnt[2]_i_1 
       (.I0(\n_0_mi_wrap_cnt[2]_i_2 ),
        .I1(\n_0_mi_wrap_cnt[2]_i_3 ),
        .I2(\n_0_mi_wrap_cnt[2]_i_4 ),
        .I3(\n_0_mi_wrap_cnt[2]_i_5 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .I5(\n_0_mi_wcnt[7]_i_4 ),
        .O(\n_0_mi_wrap_cnt[2]_i_1 ));
LUT6 #(
    .INIT(64'hFDFFFDFFFDFFFFFF)) 
     \mi_wrap_cnt[2]_i_10 
       (.I0(O1[0]),
        .I1(mi_state[1]),
        .I2(O1[2]),
        .I3(O1[1]),
        .I4(mi_state[2]),
        .I5(mi_awvalid),
        .O(\n_0_mi_wrap_cnt[2]_i_10 ));
LUT6 #(
    .INIT(64'h7770000000000000)) 
     \mi_wrap_cnt[2]_i_11 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(n_0_M_AXI_WLAST_i_i_3),
        .I2(\n_0_mi_wrap_cnt[2]_i_14 ),
        .I3(\n_0_mi_wrap_cnt[2]_i_15 ),
        .I4(mi_last),
        .I5(\n_0_next_mi_len_reg[2] ),
        .O(\n_0_mi_wrap_cnt[2]_i_11 ));
LUT6 #(
    .INIT(64'hFFFDFFFDFFFDFFFF)) 
     \mi_wrap_cnt[2]_i_12 
       (.I0(O1[1]),
        .I1(mi_state[1]),
        .I2(O1[0]),
        .I3(O1[2]),
        .I4(mi_state[2]),
        .I5(mi_awvalid),
        .O(\n_0_mi_wrap_cnt[2]_i_12 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFDFFF)) 
     \mi_wrap_cnt[2]_i_13 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(O1[1]),
        .I2(O1[2]),
        .I3(D[2]),
        .I4(O1[0]),
        .I5(M_AXI_AWADDR[6]),
        .O(\n_0_mi_wrap_cnt[2]_i_13 ));
LUT6 #(
    .INIT(64'h00FF000003031111)) 
     \mi_wrap_cnt[2]_i_14 
       (.I0(\n_0_next_mi_addr_reg[2] ),
        .I1(size[0]),
        .I2(\n_0_next_mi_addr_reg[6] ),
        .I3(\n_0_next_mi_addr_reg[8] ),
        .I4(size[2]),
        .I5(size[1]),
        .O(\n_0_mi_wrap_cnt[2]_i_14 ));
LUT6 #(
    .INIT(64'h1111050500FF0000)) 
     \mi_wrap_cnt[2]_i_15 
       (.I0(size[2]),
        .I1(\n_0_next_mi_addr_reg[5] ),
        .I2(\n_0_next_mi_addr_reg[4] ),
        .I3(\n_0_mi_wrap_cnt[3]_i_14 ),
        .I4(size[0]),
        .I5(size[1]),
        .O(\n_0_mi_wrap_cnt[2]_i_15 ));
LUT6 #(
    .INIT(64'h1FFF1FFF1FFF5555)) 
     \mi_wrap_cnt[2]_i_2 
       (.I0(\n_0_mi_wrap_cnt[2]_i_6 ),
        .I1(n_0_M_AXI_WLAST_i_i_2),
        .I2(\n_0_mi_wrap_cnt[2]_i_7 ),
        .I3(\n_0_mi_wrap_cnt[2]_i_8 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .I5(\n_0_mi_wcnt[7]_i_4 ),
        .O(\n_0_mi_wrap_cnt[2]_i_2 ));
LUT6 #(
    .INIT(64'h5755575557550000)) 
     \mi_wrap_cnt[2]_i_3 
       (.I0(\n_0_mi_wrap_cnt[2]_i_9 ),
        .I1(\n_0_mi_wrap_cnt[2]_i_10 ),
        .I2(M_AXI_AWADDR[5]),
        .I3(D[2]),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .I5(\n_0_mi_wcnt[7]_i_4 ),
        .O(\n_0_mi_wrap_cnt[2]_i_3 ));
LUT6 #(
    .INIT(64'hABAAABAAABAAAAAA)) 
     \mi_wrap_cnt[2]_i_4 
       (.I0(\n_0_mi_wrap_cnt[2]_i_11 ),
        .I1(\n_0_mi_wrap_cnt[2]_i_12 ),
        .I2(M_AXI_AWADDR[4]),
        .I3(D[2]),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .I5(\n_0_mi_wcnt[7]_i_4 ),
        .O(\n_0_mi_wrap_cnt[2]_i_4 ));
LUT6 #(
    .INIT(64'hFFFFFFFDFFFFFFFF)) 
     \mi_wrap_cnt[2]_i_5 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(O1[2]),
        .I2(O1[1]),
        .I3(O1[0]),
        .I4(M_AXI_AWADDR[2]),
        .I5(D[2]),
        .O(\n_0_mi_wrap_cnt[2]_i_5 ));
LUT4 #(
    .INIT(16'hBBBE)) 
     \mi_wrap_cnt[2]_i_6 
       (.I0(mi_last),
        .I1(mi_wrap_cnt[2]),
        .I2(mi_wrap_cnt[0]),
        .I3(mi_wrap_cnt[1]),
        .O(\n_0_mi_wrap_cnt[2]_i_6 ));
LUT6 #(
    .INIT(64'hFFFFFFDFFFFFFFFF)) 
     \mi_wrap_cnt[2]_i_7 
       (.I0(D[2]),
        .I1(M_AXI_AWADDR[8]),
        .I2(O1[2]),
        .I3(\n_0_mi_wrap_be_next[50]_i_6 ),
        .I4(mi_state[1]),
        .I5(O1[1]),
        .O(\n_0_mi_wrap_cnt[2]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFDFFFFFFFF)) 
     \mi_wrap_cnt[2]_i_8 
       (.I0(D[2]),
        .I1(M_AXI_AWADDR[3]),
        .I2(\n_0_mi_wrap_cnt[3]_i_9 ),
        .I3(\n_0_mi_wrap_cnt[3]_i_10 ),
        .I4(mi_state[1]),
        .I5(O1[0]),
        .O(\n_0_mi_wrap_cnt[2]_i_8 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAA8AAA)) 
     \mi_wrap_cnt[2]_i_9 
       (.I0(\n_0_mi_wrap_cnt[2]_i_13 ),
        .I1(M_AXI_AWADDR[7]),
        .I2(D[2]),
        .I3(O1[2]),
        .I4(O1[1]),
        .I5(\n_0_mi_size[0]_i_2 ),
        .O(\n_0_mi_wrap_cnt[2]_i_9 ));
LUT5 #(
    .INIT(32'hFFFFFFEA)) 
     \mi_wrap_cnt[3]_i_1 
       (.I0(load_mi_ptr),
        .I1(O4),
        .I2(m_axi_wready),
        .I3(load_mi_d2),
        .I4(load_mi_d1),
        .O(\n_0_mi_wrap_cnt[3]_i_1 ));
LUT2 #(
    .INIT(4'h1)) 
     \mi_wrap_cnt[3]_i_10 
       (.I0(mi_state[2]),
        .I1(mi_awvalid),
        .O(\n_0_mi_wrap_cnt[3]_i_10 ));
LUT6 #(
    .INIT(64'hFFFFFFDFFFFFFFFF)) 
     \mi_wrap_cnt[3]_i_11 
       (.I0(D[3]),
        .I1(M_AXI_AWADDR[9]),
        .I2(O1[2]),
        .I3(\n_0_mi_wrap_be_next[50]_i_6 ),
        .I4(mi_state[1]),
        .I5(O1[1]),
        .O(\n_0_mi_wrap_cnt[3]_i_11 ));
(* SOFT_HLUTNM = "soft_lutpair156" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \mi_wrap_cnt[3]_i_12 
       (.I0(mi_wrap_cnt[0]),
        .I1(mi_wrap_cnt[1]),
        .O(\n_0_mi_wrap_cnt[3]_i_12 ));
LUT6 #(
    .INIT(64'h08C838F808C808C8)) 
     \mi_wrap_cnt[3]_i_13 
       (.I0(\n_0_mi_wrap_cnt[1]_i_10 ),
        .I1(size[1]),
        .I2(size[2]),
        .I3(data6),
        .I4(\n_0_next_mi_addr_reg[8] ),
        .I5(size[0]),
        .O(\n_0_mi_wrap_cnt[3]_i_13 ));
(* SOFT_HLUTNM = "soft_lutpair162" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \mi_wrap_cnt[3]_i_14 
       (.I0(\n_0_next_mi_addr_reg[7] ),
        .I1(size[2]),
        .I2(\n_0_next_mi_addr_reg[3] ),
        .O(\n_0_mi_wrap_cnt[3]_i_14 ));
LUT6 #(
    .INIT(64'hFFFFFEF2FFFFFFFF)) 
     \mi_wrap_cnt[3]_i_15 
       (.I0(M_AXI_AWADDR[3]),
        .I1(O1[2]),
        .I2(O1[1]),
        .I3(M_AXI_AWADDR[7]),
        .I4(mi_state[1]),
        .I5(\n_0_mi_wrap_cnt[0]_i_14 ),
        .O(\n_0_mi_wrap_cnt[3]_i_15 ));
LUT5 #(
    .INIT(32'hEFEFEF0F)) 
     \mi_wrap_cnt[3]_i_16 
       (.I0(M_AXI_AWADDR[5]),
        .I1(\n_0_mi_wrap_cnt[2]_i_12 ),
        .I2(D[3]),
        .I3(M_AXI_AWADDR[6]),
        .I4(\n_0_mi_wrap_cnt[2]_i_10 ),
        .O(\n_0_mi_wrap_cnt[3]_i_16 ));
LUT6 #(
    .INIT(64'hFFFFFFFFBFBFBFAA)) 
     \mi_wrap_cnt[3]_i_2 
       (.I0(\n_0_mi_wrap_cnt[3]_i_3 ),
        .I1(\n_0_mi_wrap_cnt[3]_i_4 ),
        .I2(\n_0_mi_wrap_cnt[3]_i_5 ),
        .I3(\n_0_mi_wcnt[7]_i_4 ),
        .I4(\n_0_mi_wcnt[7]_i_5 ),
        .I5(\n_0_mi_wrap_cnt[3]_i_6 ),
        .O(\n_0_mi_wrap_cnt[3]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFFFF70000000)) 
     \mi_wrap_cnt[3]_i_3 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(n_0_M_AXI_WLAST_i_i_3),
        .I2(p_6_in),
        .I3(mi_last),
        .I4(\n_0_mi_wrap_cnt[3]_i_7 ),
        .I5(\n_0_mi_wrap_cnt[3]_i_8 ),
        .O(\n_0_mi_wrap_cnt[3]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFFFFDFFFFFFFF)) 
     \mi_wrap_cnt[3]_i_4 
       (.I0(D[3]),
        .I1(M_AXI_AWADDR[4]),
        .I2(\n_0_mi_wrap_cnt[3]_i_9 ),
        .I3(\n_0_mi_wrap_cnt[3]_i_10 ),
        .I4(mi_state[1]),
        .I5(O1[0]),
        .O(\n_0_mi_wrap_cnt[3]_i_4 ));
LUT6 #(
    .INIT(64'hFFFFFFBF00000000)) 
     \mi_wrap_cnt[3]_i_5 
       (.I0(M_AXI_AWADDR[8]),
        .I1(D[3]),
        .I2(O1[2]),
        .I3(O1[1]),
        .I4(\n_0_mi_size[0]_i_2 ),
        .I5(\n_0_mi_wrap_cnt[3]_i_11 ),
        .O(\n_0_mi_wrap_cnt[3]_i_5 ));
LUT6 #(
    .INIT(64'h0000000077700007)) 
     \mi_wrap_cnt[3]_i_6 
       (.I0(n_0_M_AXI_WLAST_i_i_2),
        .I1(n_0_M_AXI_WLAST_i_i_3),
        .I2(mi_wrap_cnt[2]),
        .I3(\n_0_mi_wrap_cnt[3]_i_12 ),
        .I4(mi_wrap_cnt[3]),
        .I5(mi_last),
        .O(\n_0_mi_wrap_cnt[3]_i_6 ));
LUT6 #(
    .INIT(64'hAAABAAABAAABAEAF)) 
     \mi_wrap_cnt[3]_i_7 
       (.I0(\n_0_mi_wrap_cnt[3]_i_13 ),
        .I1(size[0]),
        .I2(size[1]),
        .I3(\n_0_mi_wrap_cnt[3]_i_14 ),
        .I4(\n_0_next_mi_addr_reg[4] ),
        .I5(size[2]),
        .O(\n_0_mi_wrap_cnt[3]_i_7 ));
LUT6 #(
    .INIT(64'h10FF10FF10FF0000)) 
     \mi_wrap_cnt[3]_i_8 
       (.I0(\n_0_mi_wrap_cnt[3]_i_15 ),
        .I1(O1[0]),
        .I2(D[3]),
        .I3(\n_0_mi_wrap_cnt[3]_i_16 ),
        .I4(\n_0_mi_wcnt[7]_i_4 ),
        .I5(\n_0_mi_wcnt[7]_i_5 ),
        .O(\n_0_mi_wrap_cnt[3]_i_8 ));
(* SOFT_HLUTNM = "soft_lutpair134" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \mi_wrap_cnt[3]_i_9 
       (.I0(O1[2]),
        .I1(O1[1]),
        .O(\n_0_mi_wrap_cnt[3]_i_9 ));
FDRE \mi_wrap_cnt_reg[0] 
       (.C(I4),
        .CE(\n_0_mi_wrap_cnt[3]_i_1 ),
        .D(\n_0_mi_wrap_cnt[0]_i_1 ),
        .Q(mi_wrap_cnt[0]),
        .R(1'b0));
FDRE \mi_wrap_cnt_reg[1] 
       (.C(I4),
        .CE(\n_0_mi_wrap_cnt[3]_i_1 ),
        .D(\n_0_mi_wrap_cnt[1]_i_1 ),
        .Q(mi_wrap_cnt[1]),
        .R(1'b0));
FDRE \mi_wrap_cnt_reg[2] 
       (.C(I4),
        .CE(\n_0_mi_wrap_cnt[3]_i_1 ),
        .D(\n_0_mi_wrap_cnt[2]_i_1 ),
        .Q(mi_wrap_cnt[2]),
        .R(1'b0));
FDRE \mi_wrap_cnt_reg[3] 
       (.C(I4),
        .CE(\n_0_mi_wrap_cnt[3]_i_1 ),
        .D(\n_0_mi_wrap_cnt[3]_i_2 ),
        .Q(mi_wrap_cnt[3]),
        .R(1'b0));
LUT6 #(
    .INIT(64'h0200FFFF00000000)) 
     \mi_wstrb_mask_d2[0]_i_1 
       (.I0(\n_0_mi_wstrb_mask_d2[39]_i_2 ),
        .I1(\n_0_mi_addr_d1_reg[5] ),
        .I2(\n_0_mi_addr_d1_reg[0] ),
        .I3(\n_0_mi_wstrb_mask_d2[57]_i_2 ),
        .I4(mi_first_d1),
        .I5(\n_0_mi_be_d1_reg[0] ),
        .O(mi_wstrb_mask_d20[0]));
LUT6 #(
    .INIT(64'hA8A8A800A800A800)) 
     \mi_wstrb_mask_d2[10]_i_1 
       (.I0(\n_0_mi_be_d1_reg[10] ),
        .I1(\n_0_mi_wstrb_mask_d2[58]_i_4 ),
        .I2(\n_0_mi_wstrb_mask_d2[12]_i_2 ),
        .I3(\n_0_mi_wstrb_mask_d2[10]_i_2 ),
        .I4(\n_0_mi_wstrb_mask_d2[14]_i_2 ),
        .I5(\n_0_mi_wstrb_mask_d2[58]_i_2 ),
        .O(mi_wstrb_mask_d20[10]));
(* SOFT_HLUTNM = "soft_lutpair182" *) 
   LUT4 #(
    .INIT(16'h01FF)) 
     \mi_wstrb_mask_d2[10]_i_2 
       (.I0(\n_0_mi_addr_d1_reg[5] ),
        .I1(\n_0_mi_addr_d1_reg[4] ),
        .I2(\n_0_mi_addr_d1_reg[3] ),
        .I3(mi_first_d1),
        .O(\n_0_mi_wstrb_mask_d2[10]_i_2 ));
LUT6 #(
    .INIT(64'hAAA8A8A888888888)) 
     \mi_wstrb_mask_d2[11]_i_1 
       (.I0(\n_0_mi_wstrb_mask_d2[11]_i_2 ),
        .I1(\n_0_mi_wstrb_mask_d2[16]_i_2 ),
        .I2(index[2]),
        .I3(index[0]),
        .I4(index[1]),
        .I5(index[3]),
        .O(mi_wstrb_mask_d20[11]));
LUT6 #(
    .INIT(64'h5557575700000000)) 
     \mi_wstrb_mask_d2[11]_i_2 
       (.I0(mi_first_d1),
        .I1(\n_0_mi_addr_d1_reg[5] ),
        .I2(\n_0_mi_addr_d1_reg[4] ),
        .I3(\n_0_mi_addr_d1_reg[2] ),
        .I4(\n_0_mi_addr_d1_reg[3] ),
        .I5(\n_0_mi_be_d1_reg[11] ),
        .O(\n_0_mi_wstrb_mask_d2[11]_i_2 ));
LUT6 #(
    .INIT(64'h0808088808080808)) 
     \mi_wstrb_mask_d2[12]_i_1 
       (.I0(\n_0_mi_be_d1_reg[12] ),
        .I1(\n_0_mi_wstrb_mask_d2[12]_i_2 ),
        .I2(mi_first_d1),
        .I3(\n_0_mi_addr_d1_reg[5] ),
        .I4(\n_0_mi_addr_d1_reg[4] ),
        .I5(\n_0_mi_wstrb_mask_d2[44]_i_3 ),
        .O(mi_wstrb_mask_d20[12]));
(* SOFT_HLUTNM = "soft_lutpair135" *) 
   LUT5 #(
    .INIT(32'hFFF8FFFF)) 
     \mi_wstrb_mask_d2[12]_i_2 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(index[4]),
        .I3(index[5]),
        .I4(O5),
        .O(\n_0_mi_wstrb_mask_d2[12]_i_2 ));
LUT6 #(
    .INIT(64'hA8A800A800A800A8)) 
     \mi_wstrb_mask_d2[13]_i_1 
       (.I0(\n_0_mi_be_d1_reg[13] ),
        .I1(\n_0_mi_wstrb_mask_d2[61]_i_3 ),
        .I2(\n_0_mi_wstrb_mask_d2[16]_i_2 ),
        .I3(mi_first_d1),
        .I4(\n_0_mi_wstrb_mask_d2[14]_i_2 ),
        .I5(\n_0_mi_wstrb_mask_d2[61]_i_2 ),
        .O(mi_wstrb_mask_d20[13]));
LUT6 #(
    .INIT(64'hA8A800A800A800A8)) 
     \mi_wstrb_mask_d2[14]_i_1 
       (.I0(\n_0_mi_be_d1_reg[14] ),
        .I1(\n_0_mi_wstrb_mask_d2[63]_i_3 ),
        .I2(\n_0_mi_wstrb_mask_d2[16]_i_2 ),
        .I3(mi_first_d1),
        .I4(\n_0_mi_wstrb_mask_d2[14]_i_2 ),
        .I5(\n_0_mi_wstrb_mask_d2[62]_i_2 ),
        .O(mi_wstrb_mask_d20[14]));
(* SOFT_HLUTNM = "soft_lutpair245" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \mi_wstrb_mask_d2[14]_i_2 
       (.I0(\n_0_mi_addr_d1_reg[4] ),
        .I1(\n_0_mi_addr_d1_reg[5] ),
        .O(\n_0_mi_wstrb_mask_d2[14]_i_2 ));
LUT6 #(
    .INIT(64'h8888888888888808)) 
     \mi_wstrb_mask_d2[15]_i_1 
       (.I0(\n_0_mi_be_d1_reg[15] ),
        .I1(\n_0_mi_wstrb_mask_d2[27]_i_2 ),
        .I2(O5),
        .I3(index[5]),
        .I4(index[4]),
        .I5(\n_0_mi_wstrb_mask_d2[47]_i_2 ),
        .O(mi_wstrb_mask_d20[15]));
LUT6 #(
    .INIT(64'h8080808080808880)) 
     \mi_wstrb_mask_d2[16]_i_1 
       (.I0(\n_0_mi_be_d1_reg[16] ),
        .I1(\n_0_mi_wstrb_mask_d2[16]_i_2 ),
        .I2(\n_0_mi_wstrb_mask_d2[27]_i_2 ),
        .I3(\n_0_mi_wstrb_mask_d2[16]_i_3 ),
        .I4(\n_0_mi_addr_d1_reg[5] ),
        .I5(\n_0_mi_addr_d1_reg[3] ),
        .O(mi_wstrb_mask_d20[16]));
(* SOFT_HLUTNM = "soft_lutpair227" *) 
   LUT3 #(
    .INIT(8'hFD)) 
     \mi_wstrb_mask_d2[16]_i_2 
       (.I0(O5),
        .I1(index[5]),
        .I2(index[4]),
        .O(\n_0_mi_wstrb_mask_d2[16]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair242" *) 
   LUT3 #(
    .INIT(8'h01)) 
     \mi_wstrb_mask_d2[16]_i_3 
       (.I0(\n_0_mi_addr_d1_reg[1] ),
        .I1(\n_0_mi_addr_d1_reg[2] ),
        .I2(\n_0_mi_addr_d1_reg[0] ),
        .O(\n_0_mi_wstrb_mask_d2[16]_i_3 ));
LUT6 #(
    .INIT(64'h8888808880888088)) 
     \mi_wstrb_mask_d2[17]_i_1 
       (.I0(\n_0_mi_be_d1_reg[17] ),
        .I1(\n_0_mi_wstrb_mask_d2[17]_i_2 ),
        .I2(index[5]),
        .I3(O5),
        .I4(\n_0_mi_wstrb_mask_d2[33]_i_3 ),
        .I5(index[4]),
        .O(mi_wstrb_mask_d20[17]));
LUT6 #(
    .INIT(64'h00FF00FF01FFFFFF)) 
     \mi_wstrb_mask_d2[17]_i_2 
       (.I0(\n_0_mi_addr_d1_reg[2] ),
        .I1(\n_0_mi_addr_d1_reg[1] ),
        .I2(\n_0_mi_addr_d1_reg[3] ),
        .I3(mi_first_d1),
        .I4(\n_0_mi_addr_d1_reg[4] ),
        .I5(\n_0_mi_addr_d1_reg[5] ),
        .O(\n_0_mi_wstrb_mask_d2[17]_i_2 ));
LUT6 #(
    .INIT(64'h8080808880808080)) 
     \mi_wstrb_mask_d2[18]_i_1 
       (.I0(\n_0_mi_be_d1_reg[18] ),
        .I1(\n_0_mi_wstrb_mask_d2[18]_i_2 ),
        .I2(\n_0_mi_wstrb_mask_d2[27]_i_2 ),
        .I3(\n_0_mi_addr_d1_reg[5] ),
        .I4(\n_0_mi_addr_d1_reg[3] ),
        .I5(\n_0_mi_wstrb_mask_d2[58]_i_2 ),
        .O(mi_wstrb_mask_d20[18]));
LUT6 #(
    .INIT(64'hFFFFFFEFCFCFCFCF)) 
     \mi_wstrb_mask_d2[18]_i_2 
       (.I0(index[1]),
        .I1(index[5]),
        .I2(O5),
        .I3(index[3]),
        .I4(index[2]),
        .I5(index[4]),
        .O(\n_0_mi_wstrb_mask_d2[18]_i_2 ));
LUT6 #(
    .INIT(64'h8888808880888088)) 
     \mi_wstrb_mask_d2[19]_i_1 
       (.I0(\n_0_mi_be_d1_reg[19] ),
        .I1(\n_0_mi_wstrb_mask_d2[19]_i_2 ),
        .I2(index[5]),
        .I3(O5),
        .I4(\n_0_mi_wstrb_mask_d2[51]_i_3 ),
        .I5(index[4]),
        .O(mi_wstrb_mask_d20[19]));
(* SOFT_HLUTNM = "soft_lutpair139" *) 
   LUT5 #(
    .INIT(32'h0F0F1FFF)) 
     \mi_wstrb_mask_d2[19]_i_2 
       (.I0(\n_0_mi_addr_d1_reg[2] ),
        .I1(\n_0_mi_addr_d1_reg[3] ),
        .I2(mi_first_d1),
        .I3(\n_0_mi_addr_d1_reg[4] ),
        .I4(\n_0_mi_addr_d1_reg[5] ),
        .O(\n_0_mi_wstrb_mask_d2[19]_i_2 ));
LUT6 #(
    .INIT(64'h2222222A22222222)) 
     \mi_wstrb_mask_d2[1]_i_1 
       (.I0(\n_0_mi_wstrb_mask_d2[1]_i_2 ),
        .I1(mi_first_d1),
        .I2(\n_0_mi_addr_d1_reg[5] ),
        .I3(\n_0_mi_addr_d1_reg[2] ),
        .I4(\n_0_mi_addr_d1_reg[1] ),
        .I5(\n_0_mi_wstrb_mask_d2[39]_i_2 ),
        .O(mi_wstrb_mask_d20[1]));
LUT6 #(
    .INIT(64'hFFFFFFFE00000000)) 
     \mi_wstrb_mask_d2[1]_i_2 
       (.I0(\n_0_mi_wstrb_mask_d2[16]_i_2 ),
        .I1(index[1]),
        .I2(index[0]),
        .I3(index[3]),
        .I4(index[2]),
        .I5(\n_0_mi_be_d1_reg[1] ),
        .O(\n_0_mi_wstrb_mask_d2[1]_i_2 ));
LUT6 #(
    .INIT(64'h8080808880808080)) 
     \mi_wstrb_mask_d2[20]_i_1 
       (.I0(\n_0_mi_be_d1_reg[20] ),
        .I1(\n_0_mi_wstrb_mask_d2[20]_i_2 ),
        .I2(\n_0_mi_wstrb_mask_d2[27]_i_2 ),
        .I3(\n_0_mi_addr_d1_reg[5] ),
        .I4(\n_0_mi_addr_d1_reg[3] ),
        .I5(\n_0_mi_wstrb_mask_d2[52]_i_3 ),
        .O(mi_wstrb_mask_d20[20]));
(* SOFT_HLUTNM = "soft_lutpair143" *) 
   LUT5 #(
    .INIT(32'hFFFFA8FF)) 
     \mi_wstrb_mask_d2[20]_i_2 
       (.I0(index[4]),
        .I1(index[2]),
        .I2(index[3]),
        .I3(O5),
        .I4(index[5]),
        .O(\n_0_mi_wstrb_mask_d2[20]_i_2 ));
LUT6 #(
    .INIT(64'hAAA0A8A000000000)) 
     \mi_wstrb_mask_d2[21]_i_1 
       (.I0(\n_0_mi_be_d1_reg[21] ),
        .I1(\n_0_mi_wstrb_mask_d2[21]_i_2 ),
        .I2(\n_0_mi_wstrb_mask_d2[32]_i_2 ),
        .I3(index[4]),
        .I4(index[3]),
        .I5(\n_0_mi_wstrb_mask_d2[21]_i_3 ),
        .O(mi_wstrb_mask_d20[21]));
(* SOFT_HLUTNM = "soft_lutpair241" *) 
   LUT3 #(
    .INIT(8'hE0)) 
     \mi_wstrb_mask_d2[21]_i_2 
       (.I0(index[1]),
        .I1(index[0]),
        .I2(index[2]),
        .O(\n_0_mi_wstrb_mask_d2[21]_i_2 ));
LUT6 #(
    .INIT(64'h03FF13FF03FF33FF)) 
     \mi_wstrb_mask_d2[21]_i_3 
       (.I0(\n_0_mi_addr_d1_reg[1] ),
        .I1(\n_0_mi_addr_d1_reg[5] ),
        .I2(\n_0_mi_addr_d1_reg[4] ),
        .I3(mi_first_d1),
        .I4(\n_0_mi_addr_d1_reg[3] ),
        .I5(\n_0_mi_addr_d1_reg[2] ),
        .O(\n_0_mi_wstrb_mask_d2[21]_i_3 ));
LUT6 #(
    .INIT(64'hAAAA000AAAAA0002)) 
     \mi_wstrb_mask_d2[22]_i_1 
       (.I0(\n_0_mi_wstrb_mask_d2[22]_i_2 ),
        .I1(\n_0_mi_addr_d1_reg[2] ),
        .I2(\n_0_mi_addr_d1_reg[3] ),
        .I3(\n_0_mi_addr_d1_reg[5] ),
        .I4(\n_0_mi_wstrb_mask_d2[27]_i_2 ),
        .I5(\n_0_mi_wstrb_mask_d2[22]_i_3 ),
        .O(mi_wstrb_mask_d20[22]));
LUT6 #(
    .INIT(64'hFCF8F8F800000000)) 
     \mi_wstrb_mask_d2[22]_i_2 
       (.I0(index[3]),
        .I1(index[4]),
        .I2(\n_0_mi_wstrb_mask_d2[32]_i_2 ),
        .I3(index[1]),
        .I4(index[2]),
        .I5(\n_0_mi_be_d1_reg[22] ),
        .O(\n_0_mi_wstrb_mask_d2[22]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair247" *) 
   LUT2 #(
    .INIT(4'h7)) 
     \mi_wstrb_mask_d2[22]_i_3 
       (.I0(\n_0_mi_addr_d1_reg[0] ),
        .I1(\n_0_mi_addr_d1_reg[1] ),
        .O(\n_0_mi_wstrb_mask_d2[22]_i_3 ));
LUT6 #(
    .INIT(64'h8888808880888088)) 
     \mi_wstrb_mask_d2[23]_i_1 
       (.I0(\n_0_mi_be_d1_reg[23] ),
        .I1(\n_0_mi_wstrb_mask_d2[23]_i_2 ),
        .I2(index[5]),
        .I3(O5),
        .I4(\n_0_mi_wstrb_mask_d2[39]_i_3 ),
        .I5(index[4]),
        .O(mi_wstrb_mask_d20[23]));
(* SOFT_HLUTNM = "soft_lutpair179" *) 
   LUT4 #(
    .INIT(16'h337F)) 
     \mi_wstrb_mask_d2[23]_i_2 
       (.I0(\n_0_mi_addr_d1_reg[3] ),
        .I1(mi_first_d1),
        .I2(\n_0_mi_addr_d1_reg[4] ),
        .I3(\n_0_mi_addr_d1_reg[5] ),
        .O(\n_0_mi_wstrb_mask_d2[23]_i_2 ));
LUT6 #(
    .INIT(64'h0808888800088888)) 
     \mi_wstrb_mask_d2[24]_i_1 
       (.I0(\n_0_mi_be_d1_reg[24] ),
        .I1(\n_0_mi_wstrb_mask_d2[24]_i_2 ),
        .I2(\n_0_mi_addr_d1_reg[5] ),
        .I3(\n_0_mi_addr_d1_reg[4] ),
        .I4(mi_first_d1),
        .I5(\n_0_mi_wstrb_mask_d2[56]_i_3 ),
        .O(mi_wstrb_mask_d20[24]));
(* SOFT_HLUTNM = "soft_lutpair180" *) 
   LUT4 #(
    .INIT(16'hFF8F)) 
     \mi_wstrb_mask_d2[24]_i_2 
       (.I0(index[3]),
        .I1(index[4]),
        .I2(O5),
        .I3(index[5]),
        .O(\n_0_mi_wstrb_mask_d2[24]_i_2 ));
LUT6 #(
    .INIT(64'h8888080888880008)) 
     \mi_wstrb_mask_d2[25]_i_1 
       (.I0(\n_0_mi_be_d1_reg[25] ),
        .I1(\n_0_mi_wstrb_mask_d2[25]_i_2 ),
        .I2(\n_0_mi_addr_d1_reg[5] ),
        .I3(\n_0_mi_addr_d1_reg[3] ),
        .I4(\n_0_mi_wstrb_mask_d2[27]_i_2 ),
        .I5(\n_0_mi_wstrb_mask_d2[57]_i_2 ),
        .O(mi_wstrb_mask_d20[25]));
LUT6 #(
    .INIT(64'hFFF0FEF0F0F0F0F0)) 
     \mi_wstrb_mask_d2[25]_i_2 
       (.I0(index[1]),
        .I1(index[0]),
        .I2(\n_0_mi_wstrb_mask_d2[32]_i_2 ),
        .I3(index[3]),
        .I4(index[2]),
        .I5(index[4]),
        .O(\n_0_mi_wstrb_mask_d2[25]_i_2 ));
LUT6 #(
    .INIT(64'h8888080888880008)) 
     \mi_wstrb_mask_d2[26]_i_1 
       (.I0(\n_0_mi_be_d1_reg[26] ),
        .I1(\n_0_mi_wstrb_mask_d2[26]_i_2 ),
        .I2(\n_0_mi_addr_d1_reg[5] ),
        .I3(\n_0_mi_addr_d1_reg[3] ),
        .I4(\n_0_mi_wstrb_mask_d2[27]_i_2 ),
        .I5(\n_0_mi_wstrb_mask_d2[58]_i_2 ),
        .O(mi_wstrb_mask_d20[26]));
LUT6 #(
    .INIT(64'hFFCFEFCFCFCFCFCF)) 
     \mi_wstrb_mask_d2[26]_i_2 
       (.I0(index[1]),
        .I1(index[5]),
        .I2(O5),
        .I3(index[3]),
        .I4(index[2]),
        .I5(index[4]),
        .O(\n_0_mi_wstrb_mask_d2[26]_i_2 ));
LUT6 #(
    .INIT(64'hAAAA022200000000)) 
     \mi_wstrb_mask_d2[27]_i_1 
       (.I0(\n_0_mi_be_d1_reg[27] ),
        .I1(\n_0_mi_addr_d1_reg[5] ),
        .I2(\n_0_mi_addr_d1_reg[3] ),
        .I3(\n_0_mi_addr_d1_reg[2] ),
        .I4(\n_0_mi_wstrb_mask_d2[27]_i_2 ),
        .I5(\n_0_mi_wstrb_mask_d2[27]_i_3 ),
        .O(mi_wstrb_mask_d20[27]));
(* SOFT_HLUTNM = "soft_lutpair222" *) 
   LUT3 #(
    .INIT(8'h1F)) 
     \mi_wstrb_mask_d2[27]_i_2 
       (.I0(\n_0_mi_addr_d1_reg[5] ),
        .I1(\n_0_mi_addr_d1_reg[4] ),
        .I2(mi_first_d1),
        .O(\n_0_mi_wstrb_mask_d2[27]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFF8000000)) 
     \mi_wstrb_mask_d2[27]_i_3 
       (.I0(index[1]),
        .I1(index[0]),
        .I2(index[2]),
        .I3(index[3]),
        .I4(index[4]),
        .I5(\n_0_mi_wstrb_mask_d2[32]_i_2 ),
        .O(\n_0_mi_wstrb_mask_d2[27]_i_3 ));
LUT6 #(
    .INIT(64'h0808888800088888)) 
     \mi_wstrb_mask_d2[28]_i_1 
       (.I0(\n_0_mi_be_d1_reg[28] ),
        .I1(\n_0_mi_wstrb_mask_d2[28]_i_2 ),
        .I2(\n_0_mi_addr_d1_reg[5] ),
        .I3(\n_0_mi_addr_d1_reg[4] ),
        .I4(mi_first_d1),
        .I5(\n_0_mi_wstrb_mask_d2[44]_i_3 ),
        .O(mi_wstrb_mask_d20[28]));
(* SOFT_HLUTNM = "soft_lutpair142" *) 
   LUT5 #(
    .INIT(32'hFFFF80FF)) 
     \mi_wstrb_mask_d2[28]_i_2 
       (.I0(index[4]),
        .I1(index[2]),
        .I2(index[3]),
        .I3(O5),
        .I4(index[5]),
        .O(\n_0_mi_wstrb_mask_d2[28]_i_2 ));
LUT6 #(
    .INIT(64'hAAAA80AA00000000)) 
     \mi_wstrb_mask_d2[29]_i_1 
       (.I0(\n_0_mi_be_d1_reg[29] ),
        .I1(index[4]),
        .I2(\n_0_mi_wstrb_mask_d2[61]_i_3 ),
        .I3(O5),
        .I4(index[5]),
        .I5(\n_0_mi_wstrb_mask_d2[29]_i_2 ),
        .O(mi_wstrb_mask_d20[29]));
LUT6 #(
    .INIT(64'h00FF00FF7FFFFFFF)) 
     \mi_wstrb_mask_d2[29]_i_2 
       (.I0(\n_0_mi_addr_d1_reg[2] ),
        .I1(\n_0_mi_addr_d1_reg[3] ),
        .I2(\n_0_mi_addr_d1_reg[1] ),
        .I3(mi_first_d1),
        .I4(\n_0_mi_addr_d1_reg[4] ),
        .I5(\n_0_mi_addr_d1_reg[5] ),
        .O(\n_0_mi_wstrb_mask_d2[29]_i_2 ));
LUT6 #(
    .INIT(64'hA8A800A800A800A8)) 
     \mi_wstrb_mask_d2[2]_i_1 
       (.I0(\n_0_mi_be_d1_reg[2] ),
        .I1(\n_0_mi_wstrb_mask_d2[2]_i_2 ),
        .I2(index[1]),
        .I3(mi_first_d1),
        .I4(\n_0_mi_wstrb_mask_d2[5]_i_4 ),
        .I5(\n_0_mi_wstrb_mask_d2[58]_i_2 ),
        .O(mi_wstrb_mask_d20[2]));
(* SOFT_HLUTNM = "soft_lutpair142" *) 
   LUT5 #(
    .INIT(32'hFFFFFFEF)) 
     \mi_wstrb_mask_d2[2]_i_2 
       (.I0(index[4]),
        .I1(index[5]),
        .I2(O5),
        .I3(index[3]),
        .I4(index[2]),
        .O(\n_0_mi_wstrb_mask_d2[2]_i_2 ));
LUT6 #(
    .INIT(64'h0808888800088888)) 
     \mi_wstrb_mask_d2[30]_i_1 
       (.I0(\n_0_mi_be_d1_reg[30] ),
        .I1(\n_0_mi_wstrb_mask_d2[30]_i_2 ),
        .I2(\n_0_mi_addr_d1_reg[5] ),
        .I3(\n_0_mi_addr_d1_reg[4] ),
        .I4(mi_first_d1),
        .I5(\n_0_mi_wstrb_mask_d2[62]_i_2 ),
        .O(mi_wstrb_mask_d20[30]));
LUT6 #(
    .INIT(64'hFFFFFFFF8000FFFF)) 
     \mi_wstrb_mask_d2[30]_i_2 
       (.I0(index[4]),
        .I1(index[3]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(O5),
        .I5(index[5]),
        .O(\n_0_mi_wstrb_mask_d2[30]_i_2 ));
LUT6 #(
    .INIT(64'h8888808880888088)) 
     \mi_wstrb_mask_d2[31]_i_1 
       (.I0(\n_0_mi_be_d1_reg[31] ),
        .I1(\n_0_mi_wstrb_mask_d2[53]_i_3 ),
        .I2(index[5]),
        .I3(O5),
        .I4(\n_0_mi_wstrb_mask_d2[47]_i_2 ),
        .I5(index[4]),
        .O(mi_wstrb_mask_d20[31]));
LUT6 #(
    .INIT(64'h8088808080808080)) 
     \mi_wstrb_mask_d2[32]_i_1 
       (.I0(\n_0_mi_be_d1_reg[32] ),
        .I1(\n_0_mi_wstrb_mask_d2[32]_i_2 ),
        .I2(\n_0_mi_wstrb_mask_d2[53]_i_3 ),
        .I3(\n_0_mi_addr_d1_reg[0] ),
        .I4(\n_0_mi_wstrb_mask_d2[57]_i_2 ),
        .I5(\n_0_mi_wstrb_mask_d2[39]_i_2 ),
        .O(mi_wstrb_mask_d20[32]));
(* SOFT_HLUTNM = "soft_lutpair248" *) 
   LUT2 #(
    .INIT(4'hB)) 
     \mi_wstrb_mask_d2[32]_i_2 
       (.I0(index[5]),
        .I1(O5),
        .O(\n_0_mi_wstrb_mask_d2[32]_i_2 ));
LUT6 #(
    .INIT(64'h8080888880008888)) 
     \mi_wstrb_mask_d2[33]_i_1 
       (.I0(\n_0_mi_be_d1_reg[33] ),
        .I1(\n_0_mi_wstrb_mask_d2[33]_i_2 ),
        .I2(index[5]),
        .I3(index[4]),
        .I4(O5),
        .I5(\n_0_mi_wstrb_mask_d2[33]_i_3 ),
        .O(mi_wstrb_mask_d20[33]));
LUT6 #(
    .INIT(64'h0001FFFFFFFFFFFF)) 
     \mi_wstrb_mask_d2[33]_i_2 
       (.I0(\n_0_mi_addr_d1_reg[4] ),
        .I1(\n_0_mi_addr_d1_reg[3] ),
        .I2(\n_0_mi_addr_d1_reg[2] ),
        .I3(\n_0_mi_addr_d1_reg[1] ),
        .I4(\n_0_mi_addr_d1_reg[5] ),
        .I5(mi_first_d1),
        .O(\n_0_mi_wstrb_mask_d2[33]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair181" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \mi_wstrb_mask_d2[33]_i_3 
       (.I0(index[1]),
        .I1(index[0]),
        .I2(index[3]),
        .I3(index[2]),
        .O(\n_0_mi_wstrb_mask_d2[33]_i_3 ));
LUT6 #(
    .INIT(64'hAAAA020000000000)) 
     \mi_wstrb_mask_d2[34]_i_1 
       (.I0(\n_0_mi_be_d1_reg[34] ),
        .I1(\n_0_mi_addr_d1_reg[4] ),
        .I2(\n_0_mi_addr_d1_reg[3] ),
        .I3(\n_0_mi_wstrb_mask_d2[58]_i_2 ),
        .I4(\n_0_mi_wstrb_mask_d2[53]_i_3 ),
        .I5(\n_0_mi_wstrb_mask_d2[34]_i_2 ),
        .O(mi_wstrb_mask_d20[34]));
LUT6 #(
    .INIT(64'hCCFFCCFFCCFFC8FF)) 
     \mi_wstrb_mask_d2[34]_i_2 
       (.I0(index[1]),
        .I1(index[5]),
        .I2(index[4]),
        .I3(O5),
        .I4(index[3]),
        .I5(index[2]),
        .O(\n_0_mi_wstrb_mask_d2[34]_i_2 ));
LUT6 #(
    .INIT(64'h8080888880008888)) 
     \mi_wstrb_mask_d2[35]_i_1 
       (.I0(\n_0_mi_be_d1_reg[35] ),
        .I1(\n_0_mi_wstrb_mask_d2[35]_i_2 ),
        .I2(index[5]),
        .I3(index[4]),
        .I4(O5),
        .I5(\n_0_mi_wstrb_mask_d2[51]_i_3 ),
        .O(mi_wstrb_mask_d20[35]));
(* SOFT_HLUTNM = "soft_lutpair131" *) 
   LUT5 #(
    .INIT(32'h01FFFFFF)) 
     \mi_wstrb_mask_d2[35]_i_2 
       (.I0(\n_0_mi_addr_d1_reg[2] ),
        .I1(\n_0_mi_addr_d1_reg[4] ),
        .I2(\n_0_mi_addr_d1_reg[3] ),
        .I3(\n_0_mi_addr_d1_reg[5] ),
        .I4(mi_first_d1),
        .O(\n_0_mi_wstrb_mask_d2[35]_i_2 ));
LUT6 #(
    .INIT(64'h8080808880808080)) 
     \mi_wstrb_mask_d2[36]_i_1 
       (.I0(\n_0_mi_be_d1_reg[36] ),
        .I1(\n_0_mi_wstrb_mask_d2[36]_i_2 ),
        .I2(\n_0_mi_wstrb_mask_d2[53]_i_3 ),
        .I3(\n_0_mi_addr_d1_reg[3] ),
        .I4(\n_0_mi_addr_d1_reg[4] ),
        .I5(\n_0_mi_wstrb_mask_d2[52]_i_3 ),
        .O(mi_wstrb_mask_d20[36]));
(* SOFT_HLUTNM = "soft_lutpair153" *) 
   LUT5 #(
    .INIT(32'hFFEF0F0F)) 
     \mi_wstrb_mask_d2[36]_i_2 
       (.I0(index[2]),
        .I1(index[3]),
        .I2(O5),
        .I3(index[4]),
        .I4(index[5]),
        .O(\n_0_mi_wstrb_mask_d2[36]_i_2 ));
LUT6 #(
    .INIT(64'hA2A0AAA000000000)) 
     \mi_wstrb_mask_d2[37]_i_1 
       (.I0(\n_0_mi_be_d1_reg[37] ),
        .I1(\n_0_mi_addr_d1_reg[1] ),
        .I2(\n_0_mi_wstrb_mask_d2[53]_i_3 ),
        .I3(\n_0_mi_wstrb_mask_d2[39]_i_2 ),
        .I4(\n_0_mi_addr_d1_reg[2] ),
        .I5(\n_0_mi_wstrb_mask_d2[37]_i_2 ),
        .O(mi_wstrb_mask_d20[37]));
LUT6 #(
    .INIT(64'hFFFFFFE0FF00FF00)) 
     \mi_wstrb_mask_d2[37]_i_2 
       (.I0(index[1]),
        .I1(index[0]),
        .I2(index[2]),
        .I3(\n_0_mi_wstrb_mask_d2[48]_i_2 ),
        .I4(index[3]),
        .I5(index[5]),
        .O(\n_0_mi_wstrb_mask_d2[37]_i_2 ));
LUT6 #(
    .INIT(64'hAA20AAA0AAA0AAA0)) 
     \mi_wstrb_mask_d2[38]_i_1 
       (.I0(\n_0_mi_wstrb_mask_d2[38]_i_2 ),
        .I1(\n_0_mi_addr_d1_reg[2] ),
        .I2(\n_0_mi_wstrb_mask_d2[39]_i_2 ),
        .I3(\n_0_mi_wstrb_mask_d2[53]_i_3 ),
        .I4(\n_0_mi_addr_d1_reg[1] ),
        .I5(\n_0_mi_addr_d1_reg[0] ),
        .O(mi_wstrb_mask_d20[38]));
LUT6 #(
    .INIT(64'hFAF8F8F800000000)) 
     \mi_wstrb_mask_d2[38]_i_2 
       (.I0(index[5]),
        .I1(index[3]),
        .I2(\n_0_mi_wstrb_mask_d2[48]_i_2 ),
        .I3(index[1]),
        .I4(index[2]),
        .I5(\n_0_mi_be_d1_reg[38] ),
        .O(\n_0_mi_wstrb_mask_d2[38]_i_2 ));
LUT6 #(
    .INIT(64'hA8A8A800A800A800)) 
     \mi_wstrb_mask_d2[39]_i_1 
       (.I0(\n_0_mi_be_d1_reg[39] ),
        .I1(\n_0_mi_wstrb_mask_d2[39]_i_2 ),
        .I2(\n_0_mi_wstrb_mask_d2[53]_i_3 ),
        .I3(\n_0_mi_wstrb_mask_d2[48]_i_2 ),
        .I4(\n_0_mi_wstrb_mask_d2[39]_i_3 ),
        .I5(index[5]),
        .O(mi_wstrb_mask_d20[39]));
(* SOFT_HLUTNM = "soft_lutpair245" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \mi_wstrb_mask_d2[39]_i_2 
       (.I0(\n_0_mi_addr_d1_reg[4] ),
        .I1(\n_0_mi_addr_d1_reg[3] ),
        .O(\n_0_mi_wstrb_mask_d2[39]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair181" *) 
   LUT4 #(
    .INIT(16'hFF80)) 
     \mi_wstrb_mask_d2[39]_i_3 
       (.I0(index[0]),
        .I1(index[1]),
        .I2(index[2]),
        .I3(index[3]),
        .O(\n_0_mi_wstrb_mask_d2[39]_i_3 ));
LUT6 #(
    .INIT(64'h8888888888888808)) 
     \mi_wstrb_mask_d2[3]_i_1 
       (.I0(\n_0_mi_be_d1_reg[3] ),
        .I1(\n_0_mi_wstrb_mask_d2[5]_i_3 ),
        .I2(O5),
        .I3(index[5]),
        .I4(index[4]),
        .I5(\n_0_mi_wstrb_mask_d2[51]_i_3 ),
        .O(mi_wstrb_mask_d20[3]));
LUT6 #(
    .INIT(64'h0888088888880888)) 
     \mi_wstrb_mask_d2[40]_i_1 
       (.I0(\n_0_mi_be_d1_reg[40] ),
        .I1(\n_0_mi_wstrb_mask_d2[40]_i_2 ),
        .I2(mi_first_d1),
        .I3(\n_0_mi_addr_d1_reg[5] ),
        .I4(\n_0_mi_wstrb_mask_d2[56]_i_3 ),
        .I5(\n_0_mi_addr_d1_reg[4] ),
        .O(mi_wstrb_mask_d20[40]));
(* SOFT_HLUTNM = "soft_lutpair177" *) 
   LUT4 #(
    .INIT(16'hFB33)) 
     \mi_wstrb_mask_d2[40]_i_2 
       (.I0(index[3]),
        .I1(O5),
        .I2(index[4]),
        .I3(index[5]),
        .O(\n_0_mi_wstrb_mask_d2[40]_i_2 ));
LUT6 #(
    .INIT(64'hA0A8A0AA00000000)) 
     \mi_wstrb_mask_d2[41]_i_1 
       (.I0(\n_0_mi_be_d1_reg[41] ),
        .I1(\n_0_mi_wstrb_mask_d2[57]_i_2 ),
        .I2(\n_0_mi_wstrb_mask_d2[53]_i_3 ),
        .I3(\n_0_mi_addr_d1_reg[4] ),
        .I4(\n_0_mi_addr_d1_reg[3] ),
        .I5(\n_0_mi_wstrb_mask_d2[41]_i_2 ),
        .O(mi_wstrb_mask_d20[41]));
LUT6 #(
    .INIT(64'hFFF0FEF0F0F0F0F0)) 
     \mi_wstrb_mask_d2[41]_i_2 
       (.I0(index[1]),
        .I1(index[0]),
        .I2(\n_0_mi_wstrb_mask_d2[48]_i_2 ),
        .I3(index[3]),
        .I4(index[2]),
        .I5(index[5]),
        .O(\n_0_mi_wstrb_mask_d2[41]_i_2 ));
LUT6 #(
    .INIT(64'h8888008888880008)) 
     \mi_wstrb_mask_d2[42]_i_1 
       (.I0(\n_0_mi_be_d1_reg[42] ),
        .I1(\n_0_mi_wstrb_mask_d2[42]_i_2 ),
        .I2(\n_0_mi_addr_d1_reg[3] ),
        .I3(\n_0_mi_addr_d1_reg[4] ),
        .I4(\n_0_mi_wstrb_mask_d2[53]_i_3 ),
        .I5(\n_0_mi_wstrb_mask_d2[58]_i_2 ),
        .O(mi_wstrb_mask_d20[42]));
LUT6 #(
    .INIT(64'hCCFFC0FFC8FFC0FF)) 
     \mi_wstrb_mask_d2[42]_i_2 
       (.I0(index[1]),
        .I1(index[5]),
        .I2(index[4]),
        .I3(O5),
        .I4(index[3]),
        .I5(index[2]),
        .O(\n_0_mi_wstrb_mask_d2[42]_i_2 ));
LUT6 #(
    .INIT(64'hAAAA022200000000)) 
     \mi_wstrb_mask_d2[43]_i_1 
       (.I0(\n_0_mi_be_d1_reg[43] ),
        .I1(\n_0_mi_addr_d1_reg[4] ),
        .I2(\n_0_mi_addr_d1_reg[3] ),
        .I3(\n_0_mi_addr_d1_reg[2] ),
        .I4(\n_0_mi_wstrb_mask_d2[53]_i_3 ),
        .I5(\n_0_mi_wstrb_mask_d2[43]_i_2 ),
        .O(mi_wstrb_mask_d20[43]));
LUT6 #(
    .INIT(64'hFFFFFFFFF8000000)) 
     \mi_wstrb_mask_d2[43]_i_2 
       (.I0(index[1]),
        .I1(index[0]),
        .I2(index[2]),
        .I3(index[3]),
        .I4(index[5]),
        .I5(\n_0_mi_wstrb_mask_d2[48]_i_2 ),
        .O(\n_0_mi_wstrb_mask_d2[43]_i_2 ));
LUT6 #(
    .INIT(64'h0888088888880888)) 
     \mi_wstrb_mask_d2[44]_i_1 
       (.I0(\n_0_mi_be_d1_reg[44] ),
        .I1(\n_0_mi_wstrb_mask_d2[44]_i_2 ),
        .I2(mi_first_d1),
        .I3(\n_0_mi_addr_d1_reg[5] ),
        .I4(\n_0_mi_wstrb_mask_d2[44]_i_3 ),
        .I5(\n_0_mi_addr_d1_reg[4] ),
        .O(mi_wstrb_mask_d20[44]));
(* SOFT_HLUTNM = "soft_lutpair143" *) 
   LUT5 #(
    .INIT(32'hFF8F0F0F)) 
     \mi_wstrb_mask_d2[44]_i_2 
       (.I0(index[2]),
        .I1(index[3]),
        .I2(O5),
        .I3(index[4]),
        .I4(index[5]),
        .O(\n_0_mi_wstrb_mask_d2[44]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair184" *) 
   LUT4 #(
    .INIT(16'h1FFF)) 
     \mi_wstrb_mask_d2[44]_i_3 
       (.I0(\n_0_mi_addr_d1_reg[1] ),
        .I1(\n_0_mi_addr_d1_reg[0] ),
        .I2(\n_0_mi_addr_d1_reg[2] ),
        .I3(\n_0_mi_addr_d1_reg[3] ),
        .O(\n_0_mi_wstrb_mask_d2[44]_i_3 ));
LUT6 #(
    .INIT(64'hAA8A0A0A00000000)) 
     \mi_wstrb_mask_d2[45]_i_1 
       (.I0(\n_0_mi_be_d1_reg[45] ),
        .I1(\n_0_mi_wstrb_mask_d2[61]_i_3 ),
        .I2(O5),
        .I3(index[4]),
        .I4(index[5]),
        .I5(\n_0_mi_wstrb_mask_d2[45]_i_2 ),
        .O(mi_wstrb_mask_d20[45]));
LUT6 #(
    .INIT(64'h1555FFFFFFFFFFFF)) 
     \mi_wstrb_mask_d2[45]_i_2 
       (.I0(\n_0_mi_addr_d1_reg[4] ),
        .I1(\n_0_mi_addr_d1_reg[2] ),
        .I2(\n_0_mi_addr_d1_reg[3] ),
        .I3(\n_0_mi_addr_d1_reg[1] ),
        .I4(\n_0_mi_addr_d1_reg[5] ),
        .I5(mi_first_d1),
        .O(\n_0_mi_wstrb_mask_d2[45]_i_2 ));
LUT6 #(
    .INIT(64'h0888088888880888)) 
     \mi_wstrb_mask_d2[46]_i_1 
       (.I0(\n_0_mi_be_d1_reg[46] ),
        .I1(\n_0_mi_wstrb_mask_d2[46]_i_2 ),
        .I2(mi_first_d1),
        .I3(\n_0_mi_addr_d1_reg[5] ),
        .I4(\n_0_mi_wstrb_mask_d2[62]_i_2 ),
        .I5(\n_0_mi_addr_d1_reg[4] ),
        .O(mi_wstrb_mask_d20[46]));
LUT6 #(
    .INIT(64'hFFFF80FF00FF00FF)) 
     \mi_wstrb_mask_d2[46]_i_2 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(O5),
        .I4(index[4]),
        .I5(index[5]),
        .O(\n_0_mi_wstrb_mask_d2[46]_i_2 ));
LUT6 #(
    .INIT(64'h8080888880008888)) 
     \mi_wstrb_mask_d2[47]_i_1 
       (.I0(\n_0_mi_be_d1_reg[47] ),
        .I1(\n_0_mi_wstrb_mask_d2[62]_i_3 ),
        .I2(index[5]),
        .I3(index[4]),
        .I4(O5),
        .I5(\n_0_mi_wstrb_mask_d2[47]_i_2 ),
        .O(mi_wstrb_mask_d20[47]));
(* SOFT_HLUTNM = "soft_lutpair178" *) 
   LUT4 #(
    .INIT(16'h8000)) 
     \mi_wstrb_mask_d2[47]_i_2 
       (.I0(index[1]),
        .I1(index[2]),
        .I2(index[3]),
        .I3(index[0]),
        .O(\n_0_mi_wstrb_mask_d2[47]_i_2 ));
LUT6 #(
    .INIT(64'h8080808080888080)) 
     \mi_wstrb_mask_d2[48]_i_1 
       (.I0(\n_0_mi_be_d1_reg[48] ),
        .I1(\n_0_mi_wstrb_mask_d2[48]_i_2 ),
        .I2(\n_0_mi_wstrb_mask_d2[62]_i_3 ),
        .I3(\n_0_mi_addr_d1_reg[0] ),
        .I4(\n_0_mi_wstrb_mask_d2[57]_i_2 ),
        .I5(\n_0_mi_addr_d1_reg[3] ),
        .O(mi_wstrb_mask_d20[48]));
(* SOFT_HLUTNM = "soft_lutpair227" *) 
   LUT3 #(
    .INIT(8'h8F)) 
     \mi_wstrb_mask_d2[48]_i_2 
       (.I0(index[5]),
        .I1(index[4]),
        .I2(O5),
        .O(\n_0_mi_wstrb_mask_d2[48]_i_2 ));
LUT6 #(
    .INIT(64'hAAAA000200000000)) 
     \mi_wstrb_mask_d2[49]_i_1 
       (.I0(\n_0_mi_be_d1_reg[49] ),
        .I1(\n_0_mi_addr_d1_reg[3] ),
        .I2(\n_0_mi_addr_d1_reg[2] ),
        .I3(\n_0_mi_addr_d1_reg[1] ),
        .I4(\n_0_mi_wstrb_mask_d2[62]_i_3 ),
        .I5(\n_0_mi_wstrb_mask_d2[49]_i_2 ),
        .O(mi_wstrb_mask_d20[49]));
LUT6 #(
    .INIT(64'hAAAAAAA8FFFFFFFF)) 
     \mi_wstrb_mask_d2[49]_i_2 
       (.I0(\n_0_mi_wstrb_mask_d2[62]_i_4 ),
        .I1(index[1]),
        .I2(index[0]),
        .I3(index[3]),
        .I4(index[2]),
        .I5(O5),
        .O(\n_0_mi_wstrb_mask_d2[49]_i_2 ));
LUT6 #(
    .INIT(64'hA8A800A800A800A8)) 
     \mi_wstrb_mask_d2[4]_i_1 
       (.I0(\n_0_mi_be_d1_reg[4] ),
        .I1(\n_0_mi_wstrb_mask_d2[16]_i_2 ),
        .I2(\n_0_mi_wstrb_mask_d2[4]_i_2 ),
        .I3(mi_first_d1),
        .I4(\n_0_mi_wstrb_mask_d2[5]_i_4 ),
        .I5(\n_0_mi_wstrb_mask_d2[52]_i_3 ),
        .O(mi_wstrb_mask_d20[4]));
(* SOFT_HLUTNM = "soft_lutpair194" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \mi_wstrb_mask_d2[4]_i_2 
       (.I0(index[2]),
        .I1(index[3]),
        .O(\n_0_mi_wstrb_mask_d2[4]_i_2 ));
LUT6 #(
    .INIT(64'h88888888888A8A8A)) 
     \mi_wstrb_mask_d2[50]_i_1 
       (.I0(\n_0_mi_wstrb_mask_d2[50]_i_2 ),
        .I1(\n_0_mi_wstrb_mask_d2[62]_i_3 ),
        .I2(\n_0_mi_addr_d1_reg[2] ),
        .I3(\n_0_mi_addr_d1_reg[0] ),
        .I4(\n_0_mi_addr_d1_reg[1] ),
        .I5(\n_0_mi_addr_d1_reg[3] ),
        .O(mi_wstrb_mask_d20[50]));
LUT6 #(
    .INIT(64'hF0FFE0FF00000000)) 
     \mi_wstrb_mask_d2[50]_i_2 
       (.I0(index[2]),
        .I1(index[3]),
        .I2(\n_0_mi_wstrb_mask_d2[62]_i_4 ),
        .I3(O5),
        .I4(index[1]),
        .I5(\n_0_mi_be_d1_reg[50] ),
        .O(\n_0_mi_wstrb_mask_d2[50]_i_2 ));
LUT6 #(
    .INIT(64'h8808080808080808)) 
     \mi_wstrb_mask_d2[51]_i_1 
       (.I0(\n_0_mi_be_d1_reg[51] ),
        .I1(\n_0_mi_wstrb_mask_d2[51]_i_2 ),
        .I2(O5),
        .I3(index[5]),
        .I4(index[4]),
        .I5(\n_0_mi_wstrb_mask_d2[51]_i_3 ),
        .O(mi_wstrb_mask_d20[51]));
(* SOFT_HLUTNM = "soft_lutpair139" *) 
   LUT5 #(
    .INIT(32'h1FFFFFFF)) 
     \mi_wstrb_mask_d2[51]_i_2 
       (.I0(\n_0_mi_addr_d1_reg[2] ),
        .I1(\n_0_mi_addr_d1_reg[3] ),
        .I2(\n_0_mi_addr_d1_reg[4] ),
        .I3(mi_first_d1),
        .I4(\n_0_mi_addr_d1_reg[5] ),
        .O(\n_0_mi_wstrb_mask_d2[51]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair183" *) 
   LUT4 #(
    .INIT(16'hFFF8)) 
     \mi_wstrb_mask_d2[51]_i_3 
       (.I0(index[1]),
        .I1(index[0]),
        .I2(index[3]),
        .I3(index[2]),
        .O(\n_0_mi_wstrb_mask_d2[51]_i_3 ));
LUT6 #(
    .INIT(64'h8088808888888088)) 
     \mi_wstrb_mask_d2[52]_i_1 
       (.I0(\n_0_mi_be_d1_reg[52] ),
        .I1(\n_0_mi_wstrb_mask_d2[52]_i_2 ),
        .I2(\n_0_mi_wstrb_mask_d2[53]_i_3 ),
        .I3(\n_0_mi_addr_d1_reg[4] ),
        .I4(\n_0_mi_wstrb_mask_d2[52]_i_3 ),
        .I5(\n_0_mi_addr_d1_reg[3] ),
        .O(mi_wstrb_mask_d20[52]));
(* SOFT_HLUTNM = "soft_lutpair135" *) 
   LUT5 #(
    .INIT(32'hE000FFFF)) 
     \mi_wstrb_mask_d2[52]_i_2 
       (.I0(index[2]),
        .I1(index[3]),
        .I2(index[4]),
        .I3(index[5]),
        .I4(O5),
        .O(\n_0_mi_wstrb_mask_d2[52]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair242" *) 
   LUT3 #(
    .INIT(8'h1F)) 
     \mi_wstrb_mask_d2[52]_i_3 
       (.I0(\n_0_mi_addr_d1_reg[1] ),
        .I1(\n_0_mi_addr_d1_reg[0] ),
        .I2(\n_0_mi_addr_d1_reg[2] ),
        .O(\n_0_mi_wstrb_mask_d2[52]_i_3 ));
LUT6 #(
    .INIT(64'hAAAA02AAAAAA0AAA)) 
     \mi_wstrb_mask_d2[53]_i_1 
       (.I0(\n_0_mi_wstrb_mask_d2[53]_i_2 ),
        .I1(\n_0_mi_addr_d1_reg[2] ),
        .I2(\n_0_mi_addr_d1_reg[3] ),
        .I3(\n_0_mi_addr_d1_reg[4] ),
        .I4(\n_0_mi_wstrb_mask_d2[53]_i_3 ),
        .I5(\n_0_mi_addr_d1_reg[1] ),
        .O(mi_wstrb_mask_d20[53]));
LUT6 #(
    .INIT(64'hC0FF80FF00000000)) 
     \mi_wstrb_mask_d2[53]_i_2 
       (.I0(index[3]),
        .I1(index[4]),
        .I2(index[5]),
        .I3(O5),
        .I4(\n_0_mi_wstrb_mask_d2[21]_i_2 ),
        .I5(\n_0_mi_be_d1_reg[53] ),
        .O(\n_0_mi_wstrb_mask_d2[53]_i_2 ));
LUT2 #(
    .INIT(4'h7)) 
     \mi_wstrb_mask_d2[53]_i_3 
       (.I0(mi_first_d1),
        .I1(\n_0_mi_addr_d1_reg[5] ),
        .O(\n_0_mi_wstrb_mask_d2[53]_i_3 ));
LUT6 #(
    .INIT(64'hAAAA800000000000)) 
     \mi_wstrb_mask_d2[54]_i_1 
       (.I0(\n_0_mi_be_d1_reg[54] ),
        .I1(\n_0_mi_wstrb_mask_d2[62]_i_4 ),
        .I2(index[1]),
        .I3(index[2]),
        .I4(\n_0_mi_wstrb_mask_d2[56]_i_2 ),
        .I5(\n_0_mi_wstrb_mask_d2[54]_i_2 ),
        .O(mi_wstrb_mask_d20[54]));
LUT6 #(
    .INIT(64'h3F3FBFFFFFFFFFFF)) 
     \mi_wstrb_mask_d2[54]_i_2 
       (.I0(\n_0_mi_wstrb_mask_d2[22]_i_3 ),
        .I1(\n_0_mi_addr_d1_reg[4] ),
        .I2(\n_0_mi_addr_d1_reg[5] ),
        .I3(\n_0_mi_addr_d1_reg[2] ),
        .I4(\n_0_mi_addr_d1_reg[3] ),
        .I5(mi_first_d1),
        .O(\n_0_mi_wstrb_mask_d2[54]_i_2 ));
LUT6 #(
    .INIT(64'h8880808080808080)) 
     \mi_wstrb_mask_d2[55]_i_1 
       (.I0(\n_0_mi_be_d1_reg[55] ),
        .I1(\n_0_mi_wstrb_mask_d2[58]_i_3 ),
        .I2(\n_0_mi_wstrb_mask_d2[56]_i_2 ),
        .I3(index[0]),
        .I4(\n_0_mi_wstrb_mask_d2[62]_i_4 ),
        .I5(\n_0_mi_wstrb_mask_d2[55]_i_2 ),
        .O(mi_wstrb_mask_d20[55]));
(* SOFT_HLUTNM = "soft_lutpair241" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \mi_wstrb_mask_d2[55]_i_2 
       (.I0(index[2]),
        .I1(index[1]),
        .O(\n_0_mi_wstrb_mask_d2[55]_i_2 ));
LUT6 #(
    .INIT(64'h8888888808888888)) 
     \mi_wstrb_mask_d2[56]_i_1 
       (.I0(\n_0_mi_be_d1_reg[56] ),
        .I1(\n_0_mi_wstrb_mask_d2[56]_i_2 ),
        .I2(\n_0_mi_addr_d1_reg[5] ),
        .I3(mi_first_d1),
        .I4(\n_0_mi_addr_d1_reg[4] ),
        .I5(\n_0_mi_wstrb_mask_d2[56]_i_3 ),
        .O(mi_wstrb_mask_d20[56]));
(* SOFT_HLUTNM = "soft_lutpair177" *) 
   LUT4 #(
    .INIT(16'h80FF)) 
     \mi_wstrb_mask_d2[56]_i_2 
       (.I0(index[3]),
        .I1(index[4]),
        .I2(index[5]),
        .I3(O5),
        .O(\n_0_mi_wstrb_mask_d2[56]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair185" *) 
   LUT4 #(
    .INIT(16'h01FF)) 
     \mi_wstrb_mask_d2[56]_i_3 
       (.I0(\n_0_mi_addr_d1_reg[0] ),
        .I1(\n_0_mi_addr_d1_reg[1] ),
        .I2(\n_0_mi_addr_d1_reg[2] ),
        .I3(\n_0_mi_addr_d1_reg[3] ),
        .O(\n_0_mi_wstrb_mask_d2[56]_i_3 ));
LUT6 #(
    .INIT(64'hA8A8A800A800A800)) 
     \mi_wstrb_mask_d2[57]_i_1 
       (.I0(\n_0_mi_be_d1_reg[57] ),
        .I1(\n_0_mi_wstrb_mask_d2[58]_i_3 ),
        .I2(\n_0_mi_wstrb_mask_d2[57]_i_2 ),
        .I3(\n_0_mi_wstrb_mask_d2[60]_i_2 ),
        .I4(\n_0_mi_wstrb_mask_d2[57]_i_3 ),
        .I5(\n_0_mi_wstrb_mask_d2[62]_i_4 ),
        .O(mi_wstrb_mask_d20[57]));
(* SOFT_HLUTNM = "soft_lutpair247" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \mi_wstrb_mask_d2[57]_i_2 
       (.I0(\n_0_mi_addr_d1_reg[2] ),
        .I1(\n_0_mi_addr_d1_reg[1] ),
        .O(\n_0_mi_wstrb_mask_d2[57]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair183" *) 
   LUT3 #(
    .INIT(8'hE0)) 
     \mi_wstrb_mask_d2[57]_i_3 
       (.I0(index[1]),
        .I1(index[0]),
        .I2(index[3]),
        .O(\n_0_mi_wstrb_mask_d2[57]_i_3 ));
LUT6 #(
    .INIT(64'hA8A8A800A800A800)) 
     \mi_wstrb_mask_d2[58]_i_1 
       (.I0(\n_0_mi_be_d1_reg[58] ),
        .I1(\n_0_mi_wstrb_mask_d2[58]_i_2 ),
        .I2(\n_0_mi_wstrb_mask_d2[58]_i_3 ),
        .I3(\n_0_mi_wstrb_mask_d2[60]_i_2 ),
        .I4(\n_0_mi_wstrb_mask_d2[58]_i_4 ),
        .I5(\n_0_mi_wstrb_mask_d2[62]_i_4 ),
        .O(mi_wstrb_mask_d20[58]));
(* SOFT_HLUTNM = "soft_lutpair185" *) 
   LUT3 #(
    .INIT(8'h07)) 
     \mi_wstrb_mask_d2[58]_i_2 
       (.I0(\n_0_mi_addr_d1_reg[1] ),
        .I1(\n_0_mi_addr_d1_reg[0] ),
        .I2(\n_0_mi_addr_d1_reg[2] ),
        .O(\n_0_mi_wstrb_mask_d2[58]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair179" *) 
   LUT4 #(
    .INIT(16'h7FFF)) 
     \mi_wstrb_mask_d2[58]_i_3 
       (.I0(\n_0_mi_addr_d1_reg[4] ),
        .I1(mi_first_d1),
        .I2(\n_0_mi_addr_d1_reg[5] ),
        .I3(\n_0_mi_addr_d1_reg[3] ),
        .O(\n_0_mi_wstrb_mask_d2[58]_i_3 ));
LUT2 #(
    .INIT(4'h8)) 
     \mi_wstrb_mask_d2[58]_i_4 
       (.I0(index[1]),
        .I1(index[3]),
        .O(\n_0_mi_wstrb_mask_d2[58]_i_4 ));
LUT6 #(
    .INIT(64'h8AAA8AAA00008AAA)) 
     \mi_wstrb_mask_d2[59]_i_1 
       (.I0(\n_0_mi_be_d1_reg[59] ),
        .I1(\n_0_mi_wstrb_mask_d2[62]_i_3 ),
        .I2(\n_0_mi_addr_d1_reg[2] ),
        .I3(\n_0_mi_addr_d1_reg[3] ),
        .I4(O5),
        .I5(\n_0_mi_wstrb_mask_d2[59]_i_2 ),
        .O(mi_wstrb_mask_d20[59]));
LUT6 #(
    .INIT(64'h8080800080008000)) 
     \mi_wstrb_mask_d2[59]_i_2 
       (.I0(index[3]),
        .I1(index[4]),
        .I2(index[5]),
        .I3(index[2]),
        .I4(index[0]),
        .I5(index[1]),
        .O(\n_0_mi_wstrb_mask_d2[59]_i_2 ));
LUT6 #(
    .INIT(64'hA800A800A8A8A800)) 
     \mi_wstrb_mask_d2[5]_i_1 
       (.I0(\n_0_mi_be_d1_reg[5] ),
        .I1(\n_0_mi_wstrb_mask_d2[21]_i_2 ),
        .I2(\n_0_mi_wstrb_mask_d2[5]_i_2 ),
        .I3(\n_0_mi_wstrb_mask_d2[5]_i_3 ),
        .I4(\n_0_mi_wstrb_mask_d2[5]_i_4 ),
        .I5(\n_0_mi_addr_d1_reg[1] ),
        .O(mi_wstrb_mask_d20[5]));
(* SOFT_HLUTNM = "soft_lutpair180" *) 
   LUT4 #(
    .INIT(16'hFFEF)) 
     \mi_wstrb_mask_d2[5]_i_2 
       (.I0(index[4]),
        .I1(index[5]),
        .I2(O5),
        .I3(index[3]),
        .O(\n_0_mi_wstrb_mask_d2[5]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair131" *) 
   LUT5 #(
    .INIT(32'h0001FFFF)) 
     \mi_wstrb_mask_d2[5]_i_3 
       (.I0(\n_0_mi_addr_d1_reg[4] ),
        .I1(\n_0_mi_addr_d1_reg[3] ),
        .I2(\n_0_mi_addr_d1_reg[2] ),
        .I3(\n_0_mi_addr_d1_reg[5] ),
        .I4(mi_first_d1),
        .O(\n_0_mi_wstrb_mask_d2[5]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair182" *) 
   LUT3 #(
    .INIT(8'h01)) 
     \mi_wstrb_mask_d2[5]_i_4 
       (.I0(\n_0_mi_addr_d1_reg[3] ),
        .I1(\n_0_mi_addr_d1_reg[4] ),
        .I2(\n_0_mi_addr_d1_reg[5] ),
        .O(\n_0_mi_wstrb_mask_d2[5]_i_4 ));
LUT6 #(
    .INIT(64'h8888888880808088)) 
     \mi_wstrb_mask_d2[60]_i_1 
       (.I0(\n_0_mi_be_d1_reg[60] ),
        .I1(\n_0_mi_wstrb_mask_d2[60]_i_2 ),
        .I2(\n_0_mi_wstrb_mask_d2[62]_i_3 ),
        .I3(\n_0_mi_addr_d1_reg[1] ),
        .I4(\n_0_mi_addr_d1_reg[0] ),
        .I5(\n_0_mi_wstrb_mask_d2[60]_i_3 ),
        .O(mi_wstrb_mask_d20[60]));
(* SOFT_HLUTNM = "soft_lutpair153" *) 
   LUT5 #(
    .INIT(32'h8000FFFF)) 
     \mi_wstrb_mask_d2[60]_i_2 
       (.I0(index[2]),
        .I1(index[3]),
        .I2(index[4]),
        .I3(index[5]),
        .I4(O5),
        .O(\n_0_mi_wstrb_mask_d2[60]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair229" *) 
   LUT2 #(
    .INIT(4'h7)) 
     \mi_wstrb_mask_d2[60]_i_3 
       (.I0(\n_0_mi_addr_d1_reg[3] ),
        .I1(\n_0_mi_addr_d1_reg[2] ),
        .O(\n_0_mi_wstrb_mask_d2[60]_i_3 ));
LUT6 #(
    .INIT(64'hA8A800A800A800A8)) 
     \mi_wstrb_mask_d2[61]_i_1 
       (.I0(\n_0_mi_be_d1_reg[61] ),
        .I1(\n_0_mi_wstrb_mask_d2[61]_i_2 ),
        .I2(\n_0_mi_wstrb_mask_d2[62]_i_3 ),
        .I3(O5),
        .I4(\n_0_mi_wstrb_mask_d2[61]_i_3 ),
        .I5(\n_0_mi_wstrb_mask_d2[62]_i_4 ),
        .O(mi_wstrb_mask_d20[61]));
(* SOFT_HLUTNM = "soft_lutpair229" *) 
   LUT3 #(
    .INIT(8'h7F)) 
     \mi_wstrb_mask_d2[61]_i_2 
       (.I0(\n_0_mi_addr_d1_reg[2] ),
        .I1(\n_0_mi_addr_d1_reg[3] ),
        .I2(\n_0_mi_addr_d1_reg[1] ),
        .O(\n_0_mi_wstrb_mask_d2[61]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair178" *) 
   LUT4 #(
    .INIT(16'h8880)) 
     \mi_wstrb_mask_d2[61]_i_3 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(index[0]),
        .O(\n_0_mi_wstrb_mask_d2[61]_i_3 ));
LUT6 #(
    .INIT(64'hA8A800A800A800A8)) 
     \mi_wstrb_mask_d2[62]_i_1 
       (.I0(\n_0_mi_be_d1_reg[62] ),
        .I1(\n_0_mi_wstrb_mask_d2[62]_i_2 ),
        .I2(\n_0_mi_wstrb_mask_d2[62]_i_3 ),
        .I3(O5),
        .I4(\n_0_mi_wstrb_mask_d2[63]_i_3 ),
        .I5(\n_0_mi_wstrb_mask_d2[62]_i_4 ),
        .O(mi_wstrb_mask_d20[62]));
(* SOFT_HLUTNM = "soft_lutpair184" *) 
   LUT4 #(
    .INIT(16'h7FFF)) 
     \mi_wstrb_mask_d2[62]_i_2 
       (.I0(\n_0_mi_addr_d1_reg[1] ),
        .I1(\n_0_mi_addr_d1_reg[0] ),
        .I2(\n_0_mi_addr_d1_reg[2] ),
        .I3(\n_0_mi_addr_d1_reg[3] ),
        .O(\n_0_mi_wstrb_mask_d2[62]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair222" *) 
   LUT3 #(
    .INIT(8'h7F)) 
     \mi_wstrb_mask_d2[62]_i_3 
       (.I0(\n_0_mi_addr_d1_reg[5] ),
        .I1(mi_first_d1),
        .I2(\n_0_mi_addr_d1_reg[4] ),
        .O(\n_0_mi_wstrb_mask_d2[62]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair248" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \mi_wstrb_mask_d2[62]_i_4 
       (.I0(index[4]),
        .I1(index[5]),
        .O(\n_0_mi_wstrb_mask_d2[62]_i_4 ));
LUT6 #(
    .INIT(64'h4444444444444000)) 
     \mi_wstrb_mask_d2[63]_i_1 
       (.I0(load_mi_ptr),
        .I1(first_load_mi_d1),
        .I2(O4),
        .I3(m_axi_wready),
        .I4(load_mi_d2),
        .I5(load_mi_d1),
        .O(\n_0_mi_wstrb_mask_d2[63]_i_1 ));
LUT6 #(
    .INIT(64'h8000FFFF00000000)) 
     \mi_wstrb_mask_d2[63]_i_2 
       (.I0(\n_0_mi_wstrb_mask_d2[63]_i_3 ),
        .I1(index[0]),
        .I2(index[5]),
        .I3(index[4]),
        .I4(O5),
        .I5(\n_0_mi_be_d1_reg[63] ),
        .O(mi_wstrb_mask_d20[63]));
(* SOFT_HLUTNM = "soft_lutpair194" *) 
   LUT3 #(
    .INIT(8'h80)) 
     \mi_wstrb_mask_d2[63]_i_3 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(index[1]),
        .O(\n_0_mi_wstrb_mask_d2[63]_i_3 ));
LUT6 #(
    .INIT(64'hAAAAAA8000000000)) 
     \mi_wstrb_mask_d2[6]_i_1 
       (.I0(\n_0_mi_be_d1_reg[6] ),
        .I1(index[1]),
        .I2(index[2]),
        .I3(index[3]),
        .I4(\n_0_mi_wstrb_mask_d2[16]_i_2 ),
        .I5(\n_0_mi_wstrb_mask_d2[6]_i_2 ),
        .O(mi_wstrb_mask_d20[6]));
LUT6 #(
    .INIT(64'h0F7F0FFF0F0F0F0F)) 
     \mi_wstrb_mask_d2[6]_i_2 
       (.I0(\n_0_mi_addr_d1_reg[0] ),
        .I1(\n_0_mi_addr_d1_reg[1] ),
        .I2(mi_first_d1),
        .I3(\n_0_mi_addr_d1_reg[5] ),
        .I4(\n_0_mi_addr_d1_reg[2] ),
        .I5(\n_0_mi_wstrb_mask_d2[39]_i_2 ),
        .O(\n_0_mi_wstrb_mask_d2[6]_i_2 ));
LUT6 #(
    .INIT(64'h20AA20AA20AA0000)) 
     \mi_wstrb_mask_d2[7]_i_1 
       (.I0(\n_0_mi_be_d1_reg[7] ),
        .I1(\n_0_mi_addr_d1_reg[5] ),
        .I2(\n_0_mi_wstrb_mask_d2[39]_i_2 ),
        .I3(mi_first_d1),
        .I4(\n_0_mi_wstrb_mask_d2[16]_i_2 ),
        .I5(\n_0_mi_wstrb_mask_d2[39]_i_3 ),
        .O(mi_wstrb_mask_d20[7]));
LUT6 #(
    .INIT(64'hA8A800A800A800A8)) 
     \mi_wstrb_mask_d2[8]_i_1 
       (.I0(\n_0_mi_be_d1_reg[8] ),
        .I1(\n_0_mi_wstrb_mask_d2[16]_i_2 ),
        .I2(index[3]),
        .I3(mi_first_d1),
        .I4(\n_0_mi_wstrb_mask_d2[14]_i_2 ),
        .I5(\n_0_mi_wstrb_mask_d2[56]_i_3 ),
        .O(mi_wstrb_mask_d20[8]));
LUT6 #(
    .INIT(64'hA8A8A800A800A800)) 
     \mi_wstrb_mask_d2[9]_i_1 
       (.I0(\n_0_mi_be_d1_reg[9] ),
        .I1(\n_0_mi_wstrb_mask_d2[57]_i_3 ),
        .I2(\n_0_mi_wstrb_mask_d2[12]_i_2 ),
        .I3(\n_0_mi_wstrb_mask_d2[10]_i_2 ),
        .I4(\n_0_mi_wstrb_mask_d2[14]_i_2 ),
        .I5(\n_0_mi_wstrb_mask_d2[57]_i_2 ),
        .O(mi_wstrb_mask_d20[9]));
FDSE \mi_wstrb_mask_d2_reg[0] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[0]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[0] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[10] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[10]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[10] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[11] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[11]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[11] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[12] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[12]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[12] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[13] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[13]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[13] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[14] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[14]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[14] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[15] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[15]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[15] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[16] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[16]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[16] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[17] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[17]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[17] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[18] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[18]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[18] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[19] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[19]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[19] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[1] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[1]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[1] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[20] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[20]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[20] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[21] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[21]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[21] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[22] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[22]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[22] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[23] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[23]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[23] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[24] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[24]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[24] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[25] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[25]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[25] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[26] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[26]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[26] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[27] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[27]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[27] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[28] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[28]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[28] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[29] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[29]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[29] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[2] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[2]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[2] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[30] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[30]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[30] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[31] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[31]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[31] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[32] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[32]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[32] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[33] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[33]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[33] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[34] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[34]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[34] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[35] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[35]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[35] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[36] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[36]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[36] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[37] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[37]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[37] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[38] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[38]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[38] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[39] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[39]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[39] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[3] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[3]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[3] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[40] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[40]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[40] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[41] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[41]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[41] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[42] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[42]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[42] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[43] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[43]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[43] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[44] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[44]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[44] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[45] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[45]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[45] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[46] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[46]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[46] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[47] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[47]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[47] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[48] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[48]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[48] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[49] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[49]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[49] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[4] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[4]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[4] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[50] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[50]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[50] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[51] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[51]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[51] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[52] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[52]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[52] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[53] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[53]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[53] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[54] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[54]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[54] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[55] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[55]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[55] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[56] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[56]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[56] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[57] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[57]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[57] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[58] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[58]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[58] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[59] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[59]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[59] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[5] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[5]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[5] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[60] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[60]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[60] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[61] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[61]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[61] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[62] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[62]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[62] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[63] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[63]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[63] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[6] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[6]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[6] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[7] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[7]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[7] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[8] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[8]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[8] ),
        .S(m_fifo_rst));
FDSE \mi_wstrb_mask_d2_reg[9] 
       (.C(I4),
        .CE(\n_0_mi_wstrb_mask_d2[63]_i_1 ),
        .D(mi_wstrb_mask_d20[9]),
        .Q(\n_0_mi_wstrb_mask_d2_reg[9] ),
        .S(m_fifo_rst));
FDRE \next_mi_addr_reg[0] 
       (.C(I4),
        .CE(load_mi_next),
        .D(M_AXI_AWADDR[0]),
        .Q(\n_0_next_mi_addr_reg[0] ),
        .R(1'b0));
FDRE \next_mi_addr_reg[1] 
       (.C(I4),
        .CE(load_mi_next),
        .D(M_AXI_AWADDR[1]),
        .Q(\n_0_next_mi_addr_reg[1] ),
        .R(1'b0));
FDRE \next_mi_addr_reg[2] 
       (.C(I4),
        .CE(load_mi_next),
        .D(M_AXI_AWADDR[2]),
        .Q(\n_0_next_mi_addr_reg[2] ),
        .R(1'b0));
FDRE \next_mi_addr_reg[3] 
       (.C(I4),
        .CE(load_mi_next),
        .D(M_AXI_AWADDR[3]),
        .Q(\n_0_next_mi_addr_reg[3] ),
        .R(1'b0));
FDRE \next_mi_addr_reg[4] 
       (.C(I4),
        .CE(load_mi_next),
        .D(M_AXI_AWADDR[4]),
        .Q(\n_0_next_mi_addr_reg[4] ),
        .R(1'b0));
FDRE \next_mi_addr_reg[5] 
       (.C(I4),
        .CE(load_mi_next),
        .D(M_AXI_AWADDR[5]),
        .Q(\n_0_next_mi_addr_reg[5] ),
        .R(1'b0));
FDRE \next_mi_addr_reg[6] 
       (.C(I4),
        .CE(load_mi_next),
        .D(M_AXI_AWADDR[6]),
        .Q(\n_0_next_mi_addr_reg[6] ),
        .R(1'b0));
FDRE \next_mi_addr_reg[7] 
       (.C(I4),
        .CE(load_mi_next),
        .D(M_AXI_AWADDR[7]),
        .Q(\n_0_next_mi_addr_reg[7] ),
        .R(1'b0));
FDRE \next_mi_addr_reg[8] 
       (.C(I4),
        .CE(load_mi_next),
        .D(M_AXI_AWADDR[8]),
        .Q(\n_0_next_mi_addr_reg[8] ),
        .R(1'b0));
FDRE \next_mi_addr_reg[9] 
       (.C(I4),
        .CE(load_mi_next),
        .D(M_AXI_AWADDR[9]),
        .Q(data6),
        .R(1'b0));
FDRE \next_mi_burst_reg[0] 
       (.C(I4),
        .CE(load_mi_next),
        .D(O2[0]),
        .Q(next_mi_burst[0]),
        .R(1'b0));
FDRE \next_mi_burst_reg[1] 
       (.C(I4),
        .CE(load_mi_next),
        .D(O2[1]),
        .Q(next_mi_burst[1]),
        .R(1'b0));
FDRE \next_mi_last_index_reg_reg[0] 
       (.C(I4),
        .CE(load_mi_next),
        .D(mi_last_index_reg[0]),
        .Q(next_mi_last_index_reg[0]),
        .R(1'b0));
FDRE \next_mi_last_index_reg_reg[1] 
       (.C(I4),
        .CE(load_mi_next),
        .D(mi_last_index_reg[1]),
        .Q(next_mi_last_index_reg[1]),
        .R(1'b0));
FDRE \next_mi_last_index_reg_reg[2] 
       (.C(I4),
        .CE(load_mi_next),
        .D(mi_last_index_reg[2]),
        .Q(next_mi_last_index_reg[2]),
        .R(1'b0));
FDRE \next_mi_last_index_reg_reg[3] 
       (.C(I4),
        .CE(load_mi_next),
        .D(mi_last_index_reg[3]),
        .Q(next_mi_last_index_reg[3]),
        .R(1'b0));
FDRE \next_mi_last_index_reg_reg[4] 
       (.C(I4),
        .CE(load_mi_next),
        .D(mi_last_index_reg[4]),
        .Q(next_mi_last_index_reg[4]),
        .R(1'b0));
FDRE \next_mi_last_index_reg_reg[5] 
       (.C(I4),
        .CE(load_mi_next),
        .D(mi_last_index_reg[5]),
        .Q(next_mi_last_index_reg[5]),
        .R(1'b0));
LUT2 #(
    .INIT(4'h2)) 
     \next_mi_len[7]_i_1 
       (.I0(\n_0_next_mi_len[7]_i_2 ),
        .I1(O5),
        .O(load_mi_next));
LUT6 #(
    .INIT(64'h0001000000000000)) 
     \next_mi_len[7]_i_2 
       (.I0(O6),
        .I1(mi_last),
        .I2(mi_state[0]),
        .I3(mi_state[1]),
        .I4(mi_awvalid),
        .I5(mi_state[2]),
        .O(\n_0_next_mi_len[7]_i_2 ));
FDRE \next_mi_len_reg[0] 
       (.C(I4),
        .CE(load_mi_next),
        .D(D[0]),
        .Q(\n_0_next_mi_len_reg[0] ),
        .R(1'b0));
FDRE \next_mi_len_reg[1] 
       (.C(I4),
        .CE(load_mi_next),
        .D(D[1]),
        .Q(\n_0_next_mi_len_reg[1] ),
        .R(1'b0));
FDRE \next_mi_len_reg[2] 
       (.C(I4),
        .CE(load_mi_next),
        .D(D[2]),
        .Q(\n_0_next_mi_len_reg[2] ),
        .R(1'b0));
FDRE \next_mi_len_reg[3] 
       (.C(I4),
        .CE(load_mi_next),
        .D(D[3]),
        .Q(p_6_in),
        .R(1'b0));
FDRE \next_mi_len_reg[4] 
       (.C(I4),
        .CE(load_mi_next),
        .D(D[4]),
        .Q(\n_0_next_mi_len_reg[4] ),
        .R(1'b0));
FDRE \next_mi_len_reg[5] 
       (.C(I4),
        .CE(load_mi_next),
        .D(D[5]),
        .Q(\n_0_next_mi_len_reg[5] ),
        .R(1'b0));
FDRE \next_mi_len_reg[6] 
       (.C(I4),
        .CE(load_mi_next),
        .D(D[6]),
        .Q(\n_0_next_mi_len_reg[6] ),
        .R(1'b0));
FDRE \next_mi_len_reg[7] 
       (.C(I4),
        .CE(load_mi_next),
        .D(D[7]),
        .Q(\n_0_next_mi_len_reg[7] ),
        .R(1'b0));
FDRE \next_mi_size_reg[0] 
       (.C(I4),
        .CE(load_mi_next),
        .D(O1[0]),
        .Q(size[0]),
        .R(1'b0));
FDRE \next_mi_size_reg[1] 
       (.C(I4),
        .CE(load_mi_next),
        .D(O1[1]),
        .Q(size[1]),
        .R(1'b0));
FDRE \next_mi_size_reg[2] 
       (.C(I4),
        .CE(load_mi_next),
        .D(O1[2]),
        .Q(size[2]),
        .R(1'b0));
LUT6 #(
    .INIT(64'h0000F200F200F200)) 
     next_valid_i_1
       (.I0(\n_0_next_mi_len[7]_i_2 ),
        .I1(O5),
        .I2(next_valid),
        .I3(I42),
        .I4(mi_last),
        .I5(mi_buf_en),
        .O(n_0_next_valid_i_1));
FDRE next_valid_reg
       (.C(I4),
        .CE(1'b1),
        .D(n_0_next_valid_i_1),
        .Q(next_valid),
        .R(1'b0));
axi_dwidth_converter_0_axi_register_slice_v2_1_axi_register_slice__parameterized0 s_aw_reg
       (.D(p_0_in),
        .E(load_si_ptr),
        .I1(O7),
        .I10(si_ptr_reg__0),
        .I11(\n_0_si_be[31]_i_3 ),
        .I12(\n_0_si_be[30]_i_2 ),
        .I13(\n_0_si_be[29]_i_2 ),
        .I14(\n_0_si_be[28]_i_2 ),
        .I15(\n_0_si_be[27]_i_2 ),
        .I16(\n_0_si_be[26]_i_2 ),
        .I17(\n_0_si_be[25]_i_2 ),
        .I18(\n_0_si_be[24]_i_2 ),
        .I19(\n_0_si_be[23]_i_2 ),
        .I2(si_state[1]),
        .I20(\n_0_si_be[22]_i_2 ),
        .I21(\n_0_si_be[21]_i_2 ),
        .I22(\n_0_si_be[20]_i_2 ),
        .I23(\n_0_si_be[19]_i_2 ),
        .I24(\n_0_si_be[18]_i_2 ),
        .I25(\n_0_si_be[17]_i_2 ),
        .I26(\n_0_si_be[16]_i_2 ),
        .I27(\n_0_si_be[15]_i_2 ),
        .I28(\n_0_si_be[14]_i_2 ),
        .I29(\n_0_si_be[13]_i_2 ),
        .I3(I3),
        .I30(\n_0_si_be[12]_i_2 ),
        .I31(\n_0_si_be[11]_i_2 ),
        .I32(\n_0_si_be[10]_i_2 ),
        .I33(\n_0_si_be[9]_i_2 ),
        .I34(\n_0_si_be[8]_i_2 ),
        .I35(\n_0_si_be[7]_i_2 ),
        .I36(\n_0_si_be[6]_i_2 ),
        .I37(\n_0_si_be[5]_i_2 ),
        .I38(\n_0_si_be[4]_i_2 ),
        .I39(\n_0_si_be[3]_i_2 ),
        .I4(si_state[0]),
        .I40(\n_0_si_be[2]_i_2 ),
        .I41(\n_0_si_be[1]_i_2 ),
        .I42(\n_0_si_be[0]_i_2 ),
        .I43(I43),
        .I44(I44),
        .I45(I45),
        .I46(I46),
        .I47(I47),
        .I48(I48),
        .I49(I49),
        .I5(si_burst),
        .I50(I50),
        .I51(I51),
        .I52(I52),
        .I53(I53),
        .I54(I54),
        .I55(I55),
        .I56(I56),
        .I57(I57),
        .I58(I58),
        .I59(I59),
        .I6(p_1_in),
        .I60(I60),
        .I61(I61),
        .I62(I62),
        .I63(I63),
        .I64(I64),
        .I65(I65),
        .I66(I66),
        .I67(I67),
        .I68(I68),
        .I69(I69),
        .I7(word),
        .I70(I70),
        .I71(I71),
        .I72(I72),
        .I73(I73),
        .I74(I74),
        .I75(I75),
        .I76(I76),
        .I77(I77),
        .I78(I78),
        .I79(I79),
        .I8(si_wrap_cnt_reg__0),
        .I80(I80),
        .I81(I81),
        .I82(\n_0_si_ptr[6]_i_4 ),
        .I83(I82),
        .I84(I83),
        .I85(I84),
        .I86(\n_0_si_ptr[2]_i_2 ),
        .I87(I85),
        .I88(I86),
        .I89(I87),
        .I9(\n_0_si_ptr[6]_i_5 ),
        .I90(I88),
        .I91(I89),
        .I92(SR),
        .I93(I91),
        .I94(I92),
        .O1(O9),
        .O10(n_56_s_aw_reg),
        .O11(O11),
        .O12(n_57_s_aw_reg),
        .O13({si_last_index_reg,s_awregion_reg,s_awqos_reg,s_awlock_reg,s_awlen_reg,s_awcache_reg,s_awburst_reg,s_awsize_reg[0],s_awprot_reg,s_awaddr_reg}),
        .O2(n_3_s_aw_reg),
        .O3(n_5_s_aw_reg),
        .O4(n_6_s_aw_reg),
        .O5(n_7_s_aw_reg),
        .O6(p_0_in__0),
        .O7({n_19_s_aw_reg,n_20_s_aw_reg,n_21_s_aw_reg,n_22_s_aw_reg,n_23_s_aw_reg,n_24_s_aw_reg,n_25_s_aw_reg,n_26_s_aw_reg,n_27_s_aw_reg,n_28_s_aw_reg,n_29_s_aw_reg,n_30_s_aw_reg,n_31_s_aw_reg,n_32_s_aw_reg,n_33_s_aw_reg,n_34_s_aw_reg,n_35_s_aw_reg,n_36_s_aw_reg,n_37_s_aw_reg,n_38_s_aw_reg,n_39_s_aw_reg,n_40_s_aw_reg,n_41_s_aw_reg,n_42_s_aw_reg,n_43_s_aw_reg,n_44_s_aw_reg,n_45_s_aw_reg,n_46_s_aw_reg,n_47_s_aw_reg,n_48_s_aw_reg,n_49_s_aw_reg,n_50_s_aw_reg}),
        .O8(n_54_s_aw_reg),
        .O9(n_55_s_aw_reg),
        .Q({Q[48:30],Q[28:0]}),
        .SR(n_51_s_aw_reg),
        .aw_pop_event(aw_pop_event),
        .aw_ready(aw_ready),
        .buf_cnt(buf_cnt),
        .cmd_push_block0(cmd_push_block0),
        .m_axi_awready_i(m_axi_awready_i),
        .p_176_in(p_176_in),
        .s_awready_reg(s_awready_reg),
        .s_axi_awsize(s_awsize_reg[2:1]),
        .s_axi_wlast(s_axi_wlast),
        .s_axi_wvalid(s_axi_wvalid),
        .si_wrap_be_next(si_wrap_be_next[1]),
        .sr_awvalid(sr_awvalid));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[0]_i_2 
       (.I0(si_wrap_be_next[0]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[16] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[0]_i_4 ),
        .I5(\n_0_si_be[0]_i_5 ),
        .O(\n_0_si_be[0]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[0]_i_4 
       (.I0(\n_0_si_be_reg[24] ),
        .I1(\n_0_si_be_reg[28] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[30] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(p_1_in),
        .O(\n_0_si_be[0]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair224" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[0]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[0]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[10]_i_2 
       (.I0(si_wrap_be_next[10]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[26] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[10]_i_4 ),
        .I5(\n_0_si_be[10]_i_5 ),
        .O(\n_0_si_be[10]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[10]_i_4 
       (.I0(\n_0_si_be_reg[2] ),
        .I1(\n_0_si_be_reg[6] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[8] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[9] ),
        .O(\n_0_si_be[10]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair237" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[10]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[10]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[11]_i_2 
       (.I0(si_wrap_be_next[11]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[27] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[11]_i_4 ),
        .I5(\n_0_si_be[11]_i_5 ),
        .O(\n_0_si_be[11]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[11]_i_4 
       (.I0(\n_0_si_be_reg[3] ),
        .I1(\n_0_si_be_reg[7] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[9] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[10] ),
        .O(\n_0_si_be[11]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair238" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[11]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[11]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[12]_i_2 
       (.I0(si_wrap_be_next[12]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[28] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[12]_i_4 ),
        .I5(\n_0_si_be[12]_i_5 ),
        .O(\n_0_si_be[12]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[12]_i_4 
       (.I0(\n_0_si_be_reg[4] ),
        .I1(\n_0_si_be_reg[8] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[10] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[11] ),
        .O(\n_0_si_be[12]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair239" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[12]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[12]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[13]_i_2 
       (.I0(si_wrap_be_next[13]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[29] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[13]_i_4 ),
        .I5(\n_0_si_be[13]_i_5 ),
        .O(\n_0_si_be[13]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[13]_i_4 
       (.I0(\n_0_si_be_reg[5] ),
        .I1(\n_0_si_be_reg[9] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[11] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[12] ),
        .O(\n_0_si_be[13]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair240" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[13]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[13]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[14]_i_2 
       (.I0(O3),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[30] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[14]_i_4 ),
        .I5(\n_0_si_be[14]_i_5 ),
        .O(\n_0_si_be[14]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[14]_i_4 
       (.I0(\n_0_si_be_reg[6] ),
        .I1(\n_0_si_be_reg[10] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[12] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[13] ),
        .O(\n_0_si_be[14]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair240" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[14]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[14]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[15]_i_2 
       (.I0(si_wrap_be_next[15]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(p_1_in),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[15]_i_4 ),
        .I5(\n_0_si_be[15]_i_5 ),
        .O(\n_0_si_be[15]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[15]_i_4 
       (.I0(\n_0_si_be_reg[7] ),
        .I1(\n_0_si_be_reg[11] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[13] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[14] ),
        .O(\n_0_si_be[15]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair239" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[15]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[15]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[16]_i_2 
       (.I0(si_wrap_be_next[16]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[0] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[16]_i_4 ),
        .I5(\n_0_si_be[16]_i_5 ),
        .O(\n_0_si_be[16]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[16]_i_4 
       (.I0(\n_0_si_be_reg[8] ),
        .I1(\n_0_si_be_reg[12] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[14] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[15] ),
        .O(\n_0_si_be[16]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair238" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[16]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[16]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[17]_i_2 
       (.I0(si_wrap_be_next[17]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[1] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[17]_i_4 ),
        .I5(\n_0_si_be[17]_i_5 ),
        .O(\n_0_si_be[17]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[17]_i_4 
       (.I0(\n_0_si_be_reg[9] ),
        .I1(\n_0_si_be_reg[13] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[15] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[16] ),
        .O(\n_0_si_be[17]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair237" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[17]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[17]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[18]_i_2 
       (.I0(si_wrap_be_next[18]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[2] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[18]_i_4 ),
        .I5(\n_0_si_be[18]_i_5 ),
        .O(\n_0_si_be[18]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[18]_i_4 
       (.I0(\n_0_si_be_reg[10] ),
        .I1(\n_0_si_be_reg[14] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[16] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[17] ),
        .O(\n_0_si_be[18]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair236" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[18]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[18]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[19]_i_2 
       (.I0(si_wrap_be_next[19]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[3] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[19]_i_4 ),
        .I5(\n_0_si_be[19]_i_5 ),
        .O(\n_0_si_be[19]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[19]_i_4 
       (.I0(\n_0_si_be_reg[11] ),
        .I1(\n_0_si_be_reg[15] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[17] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[18] ),
        .O(\n_0_si_be[19]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair235" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[19]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[19]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[1]_i_2 
       (.I0(si_wrap_be_next[1]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[17] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[1]_i_4 ),
        .I5(\n_0_si_be[1]_i_5 ),
        .O(\n_0_si_be[1]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[1]_i_4 
       (.I0(\n_0_si_be_reg[25] ),
        .I1(\n_0_si_be_reg[29] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(p_1_in),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[0] ),
        .O(\n_0_si_be[1]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair225" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[1]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[1]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[20]_i_2 
       (.I0(si_wrap_be_next[20]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[4] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[20]_i_4 ),
        .I5(\n_0_si_be[20]_i_5 ),
        .O(\n_0_si_be[20]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[20]_i_4 
       (.I0(\n_0_si_be_reg[12] ),
        .I1(\n_0_si_be_reg[16] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[18] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[19] ),
        .O(\n_0_si_be[20]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair234" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[20]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[20]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[21]_i_2 
       (.I0(si_wrap_be_next[21]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[5] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[21]_i_4 ),
        .I5(\n_0_si_be[21]_i_5 ),
        .O(\n_0_si_be[21]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[21]_i_4 
       (.I0(\n_0_si_be_reg[13] ),
        .I1(\n_0_si_be_reg[17] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[19] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[20] ),
        .O(\n_0_si_be[21]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair233" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[21]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[21]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[22]_i_2 
       (.I0(si_wrap_be_next[22]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[6] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[22]_i_4 ),
        .I5(\n_0_si_be[22]_i_5 ),
        .O(\n_0_si_be[22]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[22]_i_4 
       (.I0(\n_0_si_be_reg[14] ),
        .I1(\n_0_si_be_reg[18] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[20] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[21] ),
        .O(\n_0_si_be[22]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair232" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[22]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[22]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[23]_i_2 
       (.I0(si_wrap_be_next[23]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[7] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[23]_i_4 ),
        .I5(\n_0_si_be[23]_i_5 ),
        .O(\n_0_si_be[23]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[23]_i_4 
       (.I0(\n_0_si_be_reg[15] ),
        .I1(\n_0_si_be_reg[19] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[21] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[22] ),
        .O(\n_0_si_be[23]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair231" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[23]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[23]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[24]_i_2 
       (.I0(si_wrap_be_next[24]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[8] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[24]_i_4 ),
        .I5(\n_0_si_be[24]_i_5 ),
        .O(\n_0_si_be[24]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[24]_i_4 
       (.I0(\n_0_si_be_reg[16] ),
        .I1(\n_0_si_be_reg[20] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[22] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[23] ),
        .O(\n_0_si_be[24]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair228" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[24]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[24]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[25]_i_2 
       (.I0(si_wrap_be_next[25]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[9] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[25]_i_4 ),
        .I5(\n_0_si_be[25]_i_5 ),
        .O(\n_0_si_be[25]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[25]_i_4 
       (.I0(\n_0_si_be_reg[17] ),
        .I1(\n_0_si_be_reg[21] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[23] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[24] ),
        .O(\n_0_si_be[25]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair186" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[25]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[25]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[26]_i_2 
       (.I0(si_wrap_be_next[26]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[10] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[26]_i_4 ),
        .I5(\n_0_si_be[26]_i_5 ),
        .O(\n_0_si_be[26]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[26]_i_4 
       (.I0(\n_0_si_be_reg[18] ),
        .I1(\n_0_si_be_reg[22] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[24] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[25] ),
        .O(\n_0_si_be[26]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair226" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[26]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[26]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[27]_i_2 
       (.I0(si_wrap_be_next[27]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[11] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[27]_i_4 ),
        .I5(\n_0_si_be[27]_i_5 ),
        .O(\n_0_si_be[27]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[27]_i_4 
       (.I0(\n_0_si_be_reg[19] ),
        .I1(\n_0_si_be_reg[23] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[25] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[26] ),
        .O(\n_0_si_be[27]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair225" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[27]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[27]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[28]_i_2 
       (.I0(si_wrap_be_next[28]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[12] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[28]_i_4 ),
        .I5(\n_0_si_be[28]_i_5 ),
        .O(\n_0_si_be[28]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[28]_i_4 
       (.I0(\n_0_si_be_reg[20] ),
        .I1(\n_0_si_be_reg[24] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[26] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[27] ),
        .O(\n_0_si_be[28]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair224" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[28]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[28]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[29]_i_2 
       (.I0(si_wrap_be_next[29]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[13] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[29]_i_4 ),
        .I5(\n_0_si_be[29]_i_5 ),
        .O(\n_0_si_be[29]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[29]_i_4 
       (.I0(\n_0_si_be_reg[21] ),
        .I1(\n_0_si_be_reg[25] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[27] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[28] ),
        .O(\n_0_si_be[29]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair190" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[29]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[29]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[2]_i_2 
       (.I0(si_wrap_be_next[2]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[18] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[2]_i_4 ),
        .I5(\n_0_si_be[2]_i_5 ),
        .O(\n_0_si_be[2]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[2]_i_4 
       (.I0(\n_0_si_be_reg[26] ),
        .I1(\n_0_si_be_reg[30] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[0] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[1] ),
        .O(\n_0_si_be[2]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair226" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[2]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[2]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[30]_i_2 
       (.I0(si_wrap_be_next[30]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[14] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[30]_i_4 ),
        .I5(\n_0_si_be[30]_i_5 ),
        .O(\n_0_si_be[30]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[30]_i_4 
       (.I0(\n_0_si_be_reg[22] ),
        .I1(\n_0_si_be_reg[26] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[28] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[29] ),
        .O(\n_0_si_be[30]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair190" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[30]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[30]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[31]_i_3 
       (.I0(si_wrap_be_next[31]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[15] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[31]_i_7 ),
        .I5(\n_0_si_be[31]_i_8 ),
        .O(\n_0_si_be[31]_i_3 ));
LUT6 #(
    .INIT(64'h0000000000000004)) 
     \si_be[31]_i_5 
       (.I0(si_burst[0]),
        .I1(si_burst[1]),
        .I2(si_wrap_cnt_reg__0[0]),
        .I3(si_wrap_cnt_reg__0[1]),
        .I4(si_wrap_cnt_reg__0[3]),
        .I5(si_wrap_cnt_reg__0[2]),
        .O(\n_0_si_be[31]_i_5 ));
LUT2 #(
    .INIT(4'h2)) 
     \si_be[31]_i_6 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[31]_i_6 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[31]_i_7 
       (.I0(\n_0_si_be_reg[23] ),
        .I1(\n_0_si_be_reg[27] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[29] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[30] ),
        .O(\n_0_si_be[31]_i_7 ));
(* SOFT_HLUTNM = "soft_lutpair186" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[31]_i_8 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[31]_i_8 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[3]_i_2 
       (.I0(si_wrap_be_next[3]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[19] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[3]_i_4 ),
        .I5(\n_0_si_be[3]_i_5 ),
        .O(\n_0_si_be[3]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[3]_i_4 
       (.I0(\n_0_si_be_reg[27] ),
        .I1(p_1_in),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[1] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[2] ),
        .O(\n_0_si_be[3]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair228" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[3]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[3]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[4]_i_2 
       (.I0(si_wrap_be_next[4]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[20] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[4]_i_4 ),
        .I5(\n_0_si_be[4]_i_5 ),
        .O(\n_0_si_be[4]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[4]_i_4 
       (.I0(\n_0_si_be_reg[28] ),
        .I1(\n_0_si_be_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[2] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[3] ),
        .O(\n_0_si_be[4]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair231" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[4]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[4]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[5]_i_2 
       (.I0(si_wrap_be_next[5]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[21] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[5]_i_4 ),
        .I5(\n_0_si_be[5]_i_5 ),
        .O(\n_0_si_be[5]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[5]_i_4 
       (.I0(\n_0_si_be_reg[29] ),
        .I1(\n_0_si_be_reg[1] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[3] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[4] ),
        .O(\n_0_si_be[5]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair232" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[5]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[5]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[6]_i_2 
       (.I0(si_wrap_be_next[6]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[22] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[6]_i_4 ),
        .I5(\n_0_si_be[6]_i_5 ),
        .O(\n_0_si_be[6]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[6]_i_4 
       (.I0(\n_0_si_be_reg[30] ),
        .I1(\n_0_si_be_reg[2] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[4] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[5] ),
        .O(\n_0_si_be[6]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair233" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[6]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[6]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[7]_i_2 
       (.I0(si_wrap_be_next[7]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[23] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[7]_i_4 ),
        .I5(\n_0_si_be[7]_i_5 ),
        .O(\n_0_si_be[7]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[7]_i_4 
       (.I0(p_1_in),
        .I1(\n_0_si_be_reg[3] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[5] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[6] ),
        .O(\n_0_si_be[7]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair234" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[7]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[7]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[8]_i_2 
       (.I0(si_wrap_be_next[8]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[24] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[8]_i_4 ),
        .I5(\n_0_si_be[8]_i_5 ),
        .O(\n_0_si_be[8]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[8]_i_4 
       (.I0(\n_0_si_be_reg[0] ),
        .I1(\n_0_si_be_reg[4] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[6] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[7] ),
        .O(\n_0_si_be[8]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair235" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[8]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[8]_i_5 ));
LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
     \si_be[9]_i_2 
       (.I0(si_wrap_be_next[9]),
        .I1(\n_0_si_be[31]_i_5 ),
        .I2(\n_0_si_be_reg[25] ),
        .I3(\n_0_si_be[31]_i_6 ),
        .I4(\n_0_si_be[9]_i_4 ),
        .I5(\n_0_si_be[9]_i_5 ),
        .O(\n_0_si_be[9]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_be[9]_i_4 
       (.I0(\n_0_si_be_reg[1] ),
        .I1(\n_0_si_be_reg[5] ),
        .I2(\n_0_si_size_reg[1] ),
        .I3(\n_0_si_be_reg[7] ),
        .I4(\n_0_si_size_reg[0] ),
        .I5(\n_0_si_be_reg[8] ),
        .O(\n_0_si_be[9]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair236" *) 
   LUT3 #(
    .INIT(8'h5D)) 
     \si_be[9]_i_5 
       (.I0(\n_0_si_size_reg[2] ),
        .I1(\n_0_si_size_reg[0] ),
        .I2(\n_0_si_size_reg[1] ),
        .O(\n_0_si_be[9]_i_5 ));
FDRE \si_be_reg[0] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_50_s_aw_reg),
        .Q(\n_0_si_be_reg[0] ),
        .R(1'b0));
FDRE \si_be_reg[10] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_40_s_aw_reg),
        .Q(\n_0_si_be_reg[10] ),
        .R(1'b0));
FDRE \si_be_reg[11] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_39_s_aw_reg),
        .Q(\n_0_si_be_reg[11] ),
        .R(1'b0));
FDRE \si_be_reg[12] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_38_s_aw_reg),
        .Q(\n_0_si_be_reg[12] ),
        .R(1'b0));
FDRE \si_be_reg[13] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_37_s_aw_reg),
        .Q(\n_0_si_be_reg[13] ),
        .R(1'b0));
FDRE \si_be_reg[14] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_36_s_aw_reg),
        .Q(\n_0_si_be_reg[14] ),
        .R(1'b0));
FDRE \si_be_reg[15] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_35_s_aw_reg),
        .Q(\n_0_si_be_reg[15] ),
        .R(1'b0));
FDRE \si_be_reg[16] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_34_s_aw_reg),
        .Q(\n_0_si_be_reg[16] ),
        .R(1'b0));
FDRE \si_be_reg[17] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_33_s_aw_reg),
        .Q(\n_0_si_be_reg[17] ),
        .R(1'b0));
FDRE \si_be_reg[18] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_32_s_aw_reg),
        .Q(\n_0_si_be_reg[18] ),
        .R(1'b0));
FDRE \si_be_reg[19] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_31_s_aw_reg),
        .Q(\n_0_si_be_reg[19] ),
        .R(1'b0));
FDRE \si_be_reg[1] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_49_s_aw_reg),
        .Q(\n_0_si_be_reg[1] ),
        .R(1'b0));
FDRE \si_be_reg[20] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_30_s_aw_reg),
        .Q(\n_0_si_be_reg[20] ),
        .R(1'b0));
FDRE \si_be_reg[21] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_29_s_aw_reg),
        .Q(\n_0_si_be_reg[21] ),
        .R(1'b0));
FDRE \si_be_reg[22] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_28_s_aw_reg),
        .Q(\n_0_si_be_reg[22] ),
        .R(1'b0));
FDRE \si_be_reg[23] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_27_s_aw_reg),
        .Q(\n_0_si_be_reg[23] ),
        .R(1'b0));
FDRE \si_be_reg[24] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_26_s_aw_reg),
        .Q(\n_0_si_be_reg[24] ),
        .R(1'b0));
FDRE \si_be_reg[25] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_25_s_aw_reg),
        .Q(\n_0_si_be_reg[25] ),
        .R(1'b0));
FDRE \si_be_reg[26] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_24_s_aw_reg),
        .Q(\n_0_si_be_reg[26] ),
        .R(1'b0));
FDRE \si_be_reg[27] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_23_s_aw_reg),
        .Q(\n_0_si_be_reg[27] ),
        .R(1'b0));
FDRE \si_be_reg[28] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_22_s_aw_reg),
        .Q(\n_0_si_be_reg[28] ),
        .R(1'b0));
FDRE \si_be_reg[29] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_21_s_aw_reg),
        .Q(\n_0_si_be_reg[29] ),
        .R(1'b0));
FDRE \si_be_reg[2] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_48_s_aw_reg),
        .Q(\n_0_si_be_reg[2] ),
        .R(1'b0));
FDRE \si_be_reg[30] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_20_s_aw_reg),
        .Q(\n_0_si_be_reg[30] ),
        .R(1'b0));
FDRE \si_be_reg[31] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_19_s_aw_reg),
        .Q(p_1_in),
        .R(1'b0));
FDRE \si_be_reg[3] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_47_s_aw_reg),
        .Q(\n_0_si_be_reg[3] ),
        .R(1'b0));
FDRE \si_be_reg[4] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_46_s_aw_reg),
        .Q(\n_0_si_be_reg[4] ),
        .R(1'b0));
FDRE \si_be_reg[5] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_45_s_aw_reg),
        .Q(\n_0_si_be_reg[5] ),
        .R(1'b0));
FDRE \si_be_reg[6] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_44_s_aw_reg),
        .Q(\n_0_si_be_reg[6] ),
        .R(1'b0));
FDRE \si_be_reg[7] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_43_s_aw_reg),
        .Q(\n_0_si_be_reg[7] ),
        .R(1'b0));
FDRE \si_be_reg[8] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_42_s_aw_reg),
        .Q(\n_0_si_be_reg[8] ),
        .R(1'b0));
FDRE \si_be_reg[9] 
       (.C(I3),
        .CE(n_6_s_aw_reg),
        .D(n_41_s_aw_reg),
        .Q(\n_0_si_be_reg[9] ),
        .R(1'b0));
(* SOFT_HLUTNM = "soft_lutpair259" *) 
   LUT1 #(
    .INIT(2'h1)) 
     \si_buf[0]_i_1 
       (.I0(si_buf[0]),
        .O(\n_0_si_buf[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair259" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \si_buf[1]_i_1 
       (.I0(si_buf[0]),
        .I1(si_buf[1]),
        .O(\n_0_si_buf[1]_i_1 ));
FDRE \si_buf_reg[0] 
       (.C(I3),
        .CE(s_awready_reg),
        .D(\n_0_si_buf[0]_i_1 ),
        .Q(si_buf[0]),
        .R(SR));
FDRE \si_buf_reg[1] 
       (.C(I3),
        .CE(s_awready_reg),
        .D(\n_0_si_buf[1]_i_1 ),
        .Q(si_buf[1]),
        .R(SR));
FDRE \si_burst_reg[0] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(Q[32]),
        .Q(si_burst[0]),
        .R(1'b0));
FDRE \si_burst_reg[1] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(Q[33]),
        .Q(si_burst[1]),
        .R(1'b0));
(* SOFT_HLUTNM = "soft_lutpair152" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \si_ptr[2]_i_2 
       (.I0(si_ptr_reg__0[0]),
        .I1(si_ptr_reg__0[1]),
        .O(\n_0_si_ptr[2]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
     \si_ptr[6]_i_4 
       (.I0(si_wrap_cnt_reg__0[3]),
        .I1(si_wrap_cnt_reg__0[2]),
        .I2(si_burst[0]),
        .I3(si_burst[1]),
        .I4(si_wrap_cnt_reg__0[0]),
        .I5(si_wrap_cnt_reg__0[1]),
        .O(\n_0_si_ptr[6]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair152" *) 
   LUT5 #(
    .INIT(32'h80000000)) 
     \si_ptr[6]_i_5 
       (.I0(si_ptr_reg__0[4]),
        .I1(si_ptr_reg__0[3]),
        .I2(si_ptr_reg__0[2]),
        .I3(si_ptr_reg__0[1]),
        .I4(si_ptr_reg__0[0]),
        .O(\n_0_si_ptr[6]_i_5 ));
FDRE \si_ptr_reg[0] 
       (.C(I3),
        .CE(n_7_s_aw_reg),
        .D(p_0_in__0[0]),
        .Q(si_ptr_reg__0[0]),
        .R(n_51_s_aw_reg));
FDRE \si_ptr_reg[1] 
       (.C(I3),
        .CE(n_7_s_aw_reg),
        .D(p_0_in__0[1]),
        .Q(si_ptr_reg__0[1]),
        .R(n_51_s_aw_reg));
FDRE \si_ptr_reg[2] 
       (.C(I3),
        .CE(n_7_s_aw_reg),
        .D(p_0_in__0[2]),
        .Q(si_ptr_reg__0[2]),
        .R(n_51_s_aw_reg));
FDRE \si_ptr_reg[3] 
       (.C(I3),
        .CE(n_7_s_aw_reg),
        .D(p_0_in__0[3]),
        .Q(si_ptr_reg__0[3]),
        .R(n_51_s_aw_reg));
FDRE \si_ptr_reg[4] 
       (.C(I3),
        .CE(n_7_s_aw_reg),
        .D(p_0_in__0[4]),
        .Q(si_ptr_reg__0[4]),
        .R(n_51_s_aw_reg));
FDRE \si_ptr_reg[5] 
       (.C(I3),
        .CE(n_7_s_aw_reg),
        .D(p_0_in__0[5]),
        .Q(si_ptr_reg__0[5]),
        .R(n_51_s_aw_reg));
FDRE \si_ptr_reg[6] 
       (.C(I3),
        .CE(n_7_s_aw_reg),
        .D(p_0_in__0[6]),
        .Q(si_ptr_reg__0[6]),
        .R(n_51_s_aw_reg));
FDRE \si_size_reg[0] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(Q[29]),
        .Q(\n_0_si_size_reg[0] ),
        .R(1'b0));
FDRE \si_size_reg[1] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(Q[30]),
        .Q(\n_0_si_size_reg[1] ),
        .R(1'b0));
FDRE \si_size_reg[2] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(Q[31]),
        .Q(\n_0_si_size_reg[2] ),
        .R(1'b0));
FDRE \si_state_reg[0] 
       (.C(I3),
        .CE(1'b1),
        .D(n_57_s_aw_reg),
        .Q(si_state[0]),
        .R(SR));
FDRE \si_state_reg[1] 
       (.C(I3),
        .CE(1'b1),
        .D(n_56_s_aw_reg),
        .Q(si_state[1]),
        .R(SR));
LUT4 #(
    .INIT(16'h7077)) 
     \si_word[0]_i_2 
       (.I0(\n_0_si_ptr[6]_i_4 ),
        .I1(word),
        .I2(si_wrap_word_next),
        .I3(\n_0_si_be[31]_i_5 ),
        .O(O14));
LUT6 #(
    .INIT(64'h8808880888080000)) 
     \si_word[0]_i_3 
       (.I0(s_axi_wvalid),
        .I1(O7),
        .I2(\n_0_si_ptr[6]_i_4 ),
        .I3(p_1_in),
        .I4(si_burst[1]),
        .I5(si_burst[0]),
        .O(O13));
FDRE \si_word_reg[0] 
       (.C(I3),
        .CE(1'b1),
        .D(I41),
        .Q(word),
        .R(1'b0));
FDRE \si_wrap_be_next_reg[0] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I25),
        .Q(si_wrap_be_next[0]),
        .R(1'b0));
FDRE \si_wrap_be_next_reg[10] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I16),
        .Q(si_wrap_be_next[10]),
        .R(1'b0));
FDRE \si_wrap_be_next_reg[11] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I15),
        .Q(si_wrap_be_next[11]),
        .R(1'b0));
FDRE \si_wrap_be_next_reg[12] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I14),
        .Q(si_wrap_be_next[12]),
        .R(1'b0));
FDRE \si_wrap_be_next_reg[13] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I13),
        .Q(si_wrap_be_next[13]),
        .R(1'b0));
FDRE \si_wrap_be_next_reg[14] 
       (.C(I3),
        .CE(1'b1),
        .D(I33),
        .Q(O3),
        .R(1'b0));
FDRE \si_wrap_be_next_reg[15] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(Q[31]),
        .Q(si_wrap_be_next[15]),
        .R(1'b0));
FDRE \si_wrap_be_next_reg[16] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I12),
        .Q(si_wrap_be_next[16]),
        .R(1'b0));
FDRE \si_wrap_be_next_reg[17] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I11),
        .Q(si_wrap_be_next[17]),
        .R(1'b0));
FDRE \si_wrap_be_next_reg[18] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I10),
        .Q(si_wrap_be_next[18]),
        .R(1'b0));
FDSE \si_wrap_be_next_reg[19] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I32),
        .Q(si_wrap_be_next[19]),
        .S(I26));
FDRE \si_wrap_be_next_reg[1] 
       (.C(I3),
        .CE(1'b1),
        .D(n_3_s_aw_reg),
        .Q(si_wrap_be_next[1]),
        .R(1'b0));
FDRE \si_wrap_be_next_reg[20] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I9),
        .Q(si_wrap_be_next[20]),
        .R(1'b0));
FDRE \si_wrap_be_next_reg[21] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I8),
        .Q(si_wrap_be_next[21]),
        .R(1'b0));
FDRE \si_wrap_be_next_reg[22] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I7),
        .Q(si_wrap_be_next[22]),
        .R(1'b0));
FDRE \si_wrap_be_next_reg[23] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I6),
        .Q(si_wrap_be_next[23]),
        .R(1'b0));
FDRE \si_wrap_be_next_reg[24] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I5),
        .Q(si_wrap_be_next[24]),
        .R(1'b0));
FDRE \si_wrap_be_next_reg[25] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I2),
        .Q(si_wrap_be_next[25]),
        .R(1'b0));
FDSE \si_wrap_be_next_reg[26] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I31),
        .Q(si_wrap_be_next[26]),
        .S(I26));
FDSE \si_wrap_be_next_reg[27] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I30),
        .Q(si_wrap_be_next[27]),
        .S(I26));
FDSE \si_wrap_be_next_reg[28] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I29),
        .Q(si_wrap_be_next[28]),
        .S(I26));
FDSE \si_wrap_be_next_reg[29] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I28),
        .Q(si_wrap_be_next[29]),
        .S(I26));
FDRE \si_wrap_be_next_reg[2] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I24),
        .Q(si_wrap_be_next[2]),
        .R(1'b0));
FDSE \si_wrap_be_next_reg[30] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I27),
        .Q(si_wrap_be_next[30]),
        .S(I26));
FDRE \si_wrap_be_next_reg[31] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I1),
        .Q(si_wrap_be_next[31]),
        .R(1'b0));
FDRE \si_wrap_be_next_reg[3] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I23),
        .Q(si_wrap_be_next[3]),
        .R(1'b0));
FDRE \si_wrap_be_next_reg[4] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I22),
        .Q(si_wrap_be_next[4]),
        .R(1'b0));
FDRE \si_wrap_be_next_reg[5] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I21),
        .Q(si_wrap_be_next[5]),
        .R(1'b0));
FDRE \si_wrap_be_next_reg[6] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I20),
        .Q(si_wrap_be_next[6]),
        .R(1'b0));
FDRE \si_wrap_be_next_reg[7] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I19),
        .Q(si_wrap_be_next[7]),
        .R(1'b0));
FDRE \si_wrap_be_next_reg[8] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I18),
        .Q(si_wrap_be_next[8]),
        .R(1'b0));
FDRE \si_wrap_be_next_reg[9] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(I17),
        .Q(si_wrap_be_next[9]),
        .R(1'b0));
FDRE \si_wrap_cnt_reg[0] 
       (.C(I3),
        .CE(n_5_s_aw_reg),
        .D(p_0_in[0]),
        .Q(si_wrap_cnt_reg__0[0]),
        .R(1'b0));
FDRE \si_wrap_cnt_reg[1] 
       (.C(I3),
        .CE(n_5_s_aw_reg),
        .D(p_0_in[1]),
        .Q(si_wrap_cnt_reg__0[1]),
        .R(1'b0));
FDRE \si_wrap_cnt_reg[2] 
       (.C(I3),
        .CE(n_5_s_aw_reg),
        .D(p_0_in[2]),
        .Q(si_wrap_cnt_reg__0[2]),
        .R(1'b0));
FDRE \si_wrap_cnt_reg[3] 
       (.C(I3),
        .CE(n_5_s_aw_reg),
        .D(p_0_in[3]),
        .Q(si_wrap_cnt_reg__0[3]),
        .R(1'b0));
FDRE \si_wrap_word_next_reg[0] 
       (.C(I3),
        .CE(load_si_ptr),
        .D(f_si_wrap_word_return),
        .Q(si_wrap_word_next),
        .R(1'b0));
(* C_ADDRA_WIDTH = "9" *) 
   (* C_ADDRB_WIDTH = "9" *) 
   (* C_ALGORITHM = "1" *) 
   (* C_AXI_ID_WIDTH = "4" *) 
   (* C_AXI_SLAVE_TYPE = "0" *) 
   (* C_AXI_TYPE = "1" *) 
   (* C_BYTE_SIZE = "9" *) 
   (* C_COMMON_CLK = "0" *) 
   (* C_COUNT_18K_BRAM = "" *) 
   (* C_COUNT_36K_BRAM = "" *) 
   (* C_CTRL_ECC_ALGO = "ECCHSIAO32-7" *) 
   (* C_DEFAULT_DATA = "0" *) 
   (* C_DISABLE_WARN_BHV_COLL = "1" *) 
   (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
   (* C_ELABORATION_DIR = "" *) 
   (* C_ENABLE_32BIT_ADDRESS = "0" *) 
   (* C_EN_ECC_PIPE = "0" *) 
   (* C_EN_SLEEP_PIN = "0" *) 
   (* C_EST_POWER_SUMMARY = "" *) 
   (* C_FAMILY = "virtex7" *) 
   (* C_HAS_AXI_ID = "0" *) 
   (* C_HAS_ENA = "1" *) 
   (* C_HAS_ENB = "1" *) 
   (* C_HAS_INJECTERR = "0" *) 
   (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
   (* C_HAS_MEM_OUTPUT_REGS_B = "1" *) 
   (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
   (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
   (* C_HAS_REGCEA = "0" *) 
   (* C_HAS_REGCEB = "0" *) 
   (* C_HAS_RSTA = "0" *) 
   (* C_HAS_RSTB = "0" *) 
   (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
   (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
   (* C_INITA_VAL = "0" *) 
   (* C_INITB_VAL = "0" *) 
   (* C_INIT_FILE = "BlankString" *) 
   (* C_INIT_FILE_NAME = "BlankString" *) 
   (* C_INTERFACE_TYPE = "0" *) 
   (* C_LOAD_INIT_FILE = "0" *) 
   (* C_MEM_TYPE = "1" *) 
   (* C_MUX_PIPELINE_STAGES = "0" *) 
   (* C_PRIM_TYPE = "1" *) 
   (* C_READ_DEPTH_A = "512" *) 
   (* C_READ_DEPTH_B = "512" *) 
   (* C_READ_WIDTH_A = "576" *) 
   (* C_READ_WIDTH_B = "576" *) 
   (* C_RSTRAM_A = "0" *) 
   (* C_RSTRAM_B = "0" *) 
   (* C_RST_PRIORITY_A = "CE" *) 
   (* C_RST_PRIORITY_B = "CE" *) 
   (* C_SIM_COLLISION_CHECK = "GENERATE_X_ONLY" *) 
   (* C_USE_BRAM_BLOCK = "0" *) 
   (* C_USE_BYTE_WEA = "1" *) 
   (* C_USE_BYTE_WEB = "1" *) 
   (* C_USE_DEFAULT_DATA = "0" *) 
   (* C_USE_ECC = "0" *) 
   (* C_USE_SOFTECC = "0" *) 
   (* C_WEA_WIDTH = "64" *) 
   (* C_WEB_WIDTH = "64" *) 
   (* C_WRITE_DEPTH_A = "512" *) 
   (* C_WRITE_DEPTH_B = "512" *) 
   (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
   (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
   (* C_WRITE_WIDTH_A = "576" *) 
   (* C_WRITE_WIDTH_B = "576" *) 
   (* C_XDEVICEFAMILY = "virtex7" *) 
   (* DONT_TOUCH *) 
   (* DowngradeIPIdentifiedWarnings = "yes" *) 
   axi_dwidth_converter_0_blk_mem_gen_v8_2 w_buffer
       (.addra({si_buf,si_ptr_reg__0}),
        .addrb(mi_buf_addr),
        .clka(I3),
        .clkb(I4),
        .dbiterr(NLW_w_buffer_dbiterr_UNCONNECTED),
        .dina({dina,dina}),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(NLW_w_buffer_douta_UNCONNECTED[575:0]),
        .doutb({wpayload1_out[575],m_axi_wdata[511:504],wpayload1_out[566],m_axi_wdata[503:496],wpayload1_out[557],m_axi_wdata[495:488],wpayload1_out[548],m_axi_wdata[487:480],wpayload1_out[539],m_axi_wdata[479:472],wpayload1_out[530],m_axi_wdata[471:464],wpayload1_out[521],m_axi_wdata[463:456],wpayload1_out[512],m_axi_wdata[455:448],wpayload1_out[503],m_axi_wdata[447:440],wpayload1_out[494],m_axi_wdata[439:432],wpayload1_out[485],m_axi_wdata[431:424],wpayload1_out[476],m_axi_wdata[423:416],wpayload1_out[467],m_axi_wdata[415:408],wpayload1_out[458],m_axi_wdata[407:400],wpayload1_out[449],m_axi_wdata[399:392],wpayload1_out[440],m_axi_wdata[391:384],wpayload1_out[431],m_axi_wdata[383:376],wpayload1_out[422],m_axi_wdata[375:368],wpayload1_out[413],m_axi_wdata[367:360],wpayload1_out[404],m_axi_wdata[359:352],wpayload1_out[395],m_axi_wdata[351:344],wpayload1_out[386],m_axi_wdata[343:336],wpayload1_out[377],m_axi_wdata[335:328],wpayload1_out[368],m_axi_wdata[327:320],wpayload1_out[359],m_axi_wdata[319:312],wpayload1_out[350],m_axi_wdata[311:304],wpayload1_out[341],m_axi_wdata[303:296],wpayload1_out[332],m_axi_wdata[295:288],wpayload1_out[323],m_axi_wdata[287:280],wpayload1_out[314],m_axi_wdata[279:272],wpayload1_out[305],m_axi_wdata[271:264],wpayload1_out[296],m_axi_wdata[263:256],wpayload1_out[287],m_axi_wdata[255:248],wpayload1_out[278],m_axi_wdata[247:240],wpayload1_out[269],m_axi_wdata[239:232],wpayload1_out[260],m_axi_wdata[231:224],wpayload1_out[251],m_axi_wdata[223:216],wpayload1_out[242],m_axi_wdata[215:208],wpayload1_out[233],m_axi_wdata[207:200],wpayload1_out[224],m_axi_wdata[199:192],wpayload1_out[215],m_axi_wdata[191:184],wpayload1_out[206],m_axi_wdata[183:176],wpayload1_out[197],m_axi_wdata[175:168],wpayload1_out[188],m_axi_wdata[167:160],wpayload1_out[179],m_axi_wdata[159:152],wpayload1_out[170],m_axi_wdata[151:144],wpayload1_out[161],m_axi_wdata[143:136],wpayload1_out[152],m_axi_wdata[135:128],wpayload1_out[143],m_axi_wdata[127:120],wpayload1_out[134],m_axi_wdata[119:112],wpayload1_out[125],m_axi_wdata[111:104],wpayload1_out[116],m_axi_wdata[103:96],wpayload1_out[107],m_axi_wdata[95:88],wpayload1_out[98],m_axi_wdata[87:80],wpayload1_out[89],m_axi_wdata[79:72],wpayload1_out[80],m_axi_wdata[71:64],wpayload1_out[71],m_axi_wdata[63:56],wpayload1_out[62],m_axi_wdata[55:48],wpayload1_out[53],m_axi_wdata[47:40],wpayload1_out[44],m_axi_wdata[39:32],wpayload1_out[35],m_axi_wdata[31:24],wpayload1_out[26],m_axi_wdata[23:16],wpayload1_out[17],m_axi_wdata[15:8],wpayload1_out[8],m_axi_wdata[7:0]}),
        .eccpipece(1'b0),
        .ena(p_176_in),
        .enb(mi_buf_en),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_w_buffer_rdaddrecc_UNCONNECTED[8:0]),
        .regcea(1'b1),
        .regceb(1'b1),
        .rsta(1'b0),
        .rstb(1'b0),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_w_buffer_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_w_buffer_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_w_buffer_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_w_buffer_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_w_buffer_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_w_buffer_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_w_buffer_s_axi_rdaddrecc_UNCONNECTED[8:0]),
        .s_axi_rdata(NLW_w_buffer_s_axi_rdata_UNCONNECTED[575:0]),
        .s_axi_rid(NLW_w_buffer_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_w_buffer_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_w_buffer_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_w_buffer_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_w_buffer_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_w_buffer_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_w_buffer_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .wea({n_0_w_buffer_i_2,n_0_w_buffer_i_3,n_0_w_buffer_i_4,n_0_w_buffer_i_5,n_0_w_buffer_i_6,n_0_w_buffer_i_7,n_0_w_buffer_i_8,n_0_w_buffer_i_9,n_0_w_buffer_i_10,n_0_w_buffer_i_11,n_0_w_buffer_i_12,n_0_w_buffer_i_13,n_0_w_buffer_i_14,n_0_w_buffer_i_15,n_0_w_buffer_i_16,n_0_w_buffer_i_17,n_0_w_buffer_i_18,n_0_w_buffer_i_19,n_0_w_buffer_i_20,n_0_w_buffer_i_21,n_0_w_buffer_i_22,n_0_w_buffer_i_23,n_0_w_buffer_i_24,n_0_w_buffer_i_25,n_0_w_buffer_i_26,n_0_w_buffer_i_27,n_0_w_buffer_i_28,n_0_w_buffer_i_29,n_0_w_buffer_i_30,n_0_w_buffer_i_31,n_0_w_buffer_i_32,n_0_w_buffer_i_33,n_0_w_buffer_i_34,n_0_w_buffer_i_35,n_0_w_buffer_i_36,n_0_w_buffer_i_37,n_0_w_buffer_i_38,n_0_w_buffer_i_39,n_0_w_buffer_i_40,n_0_w_buffer_i_41,n_0_w_buffer_i_42,n_0_w_buffer_i_43,n_0_w_buffer_i_44,n_0_w_buffer_i_45,n_0_w_buffer_i_46,n_0_w_buffer_i_47,n_0_w_buffer_i_48,n_0_w_buffer_i_49,n_0_w_buffer_i_50,n_0_w_buffer_i_51,n_0_w_buffer_i_52,n_0_w_buffer_i_53,n_0_w_buffer_i_54,n_0_w_buffer_i_55,n_0_w_buffer_i_56,n_0_w_buffer_i_57,n_0_w_buffer_i_58,n_0_w_buffer_i_59,n_0_w_buffer_i_60,n_0_w_buffer_i_61,n_0_w_buffer_i_62,n_0_w_buffer_i_63,n_0_w_buffer_i_64,n_0_w_buffer_i_65}),
        .web({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_1
       (.I0(O7),
        .I1(s_axi_wvalid),
        .O(p_176_in));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_10
       (.I0(word),
        .I1(\n_0_si_be_reg[23] ),
        .O(n_0_w_buffer_i_10));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_11
       (.I0(word),
        .I1(\n_0_si_be_reg[22] ),
        .O(n_0_w_buffer_i_11));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_12
       (.I0(word),
        .I1(\n_0_si_be_reg[21] ),
        .O(n_0_w_buffer_i_12));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_13
       (.I0(word),
        .I1(\n_0_si_be_reg[20] ),
        .O(n_0_w_buffer_i_13));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_14
       (.I0(word),
        .I1(\n_0_si_be_reg[19] ),
        .O(n_0_w_buffer_i_14));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_15
       (.I0(word),
        .I1(\n_0_si_be_reg[18] ),
        .O(n_0_w_buffer_i_15));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_16
       (.I0(word),
        .I1(\n_0_si_be_reg[17] ),
        .O(n_0_w_buffer_i_16));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_17
       (.I0(word),
        .I1(\n_0_si_be_reg[16] ),
        .O(n_0_w_buffer_i_17));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_18
       (.I0(word),
        .I1(\n_0_si_be_reg[15] ),
        .O(n_0_w_buffer_i_18));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_19
       (.I0(word),
        .I1(\n_0_si_be_reg[14] ),
        .O(n_0_w_buffer_i_19));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_2
       (.I0(word),
        .I1(p_1_in),
        .O(n_0_w_buffer_i_2));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_20
       (.I0(word),
        .I1(\n_0_si_be_reg[13] ),
        .O(n_0_w_buffer_i_20));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_21
       (.I0(word),
        .I1(\n_0_si_be_reg[12] ),
        .O(n_0_w_buffer_i_21));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_22
       (.I0(word),
        .I1(\n_0_si_be_reg[11] ),
        .O(n_0_w_buffer_i_22));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_23
       (.I0(word),
        .I1(\n_0_si_be_reg[10] ),
        .O(n_0_w_buffer_i_23));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_24
       (.I0(word),
        .I1(\n_0_si_be_reg[9] ),
        .O(n_0_w_buffer_i_24));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_25
       (.I0(word),
        .I1(\n_0_si_be_reg[8] ),
        .O(n_0_w_buffer_i_25));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_26
       (.I0(word),
        .I1(\n_0_si_be_reg[7] ),
        .O(n_0_w_buffer_i_26));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_27
       (.I0(word),
        .I1(\n_0_si_be_reg[6] ),
        .O(n_0_w_buffer_i_27));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_28
       (.I0(word),
        .I1(\n_0_si_be_reg[5] ),
        .O(n_0_w_buffer_i_28));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_29
       (.I0(word),
        .I1(\n_0_si_be_reg[4] ),
        .O(n_0_w_buffer_i_29));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_3
       (.I0(word),
        .I1(\n_0_si_be_reg[30] ),
        .O(n_0_w_buffer_i_3));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_30
       (.I0(word),
        .I1(\n_0_si_be_reg[3] ),
        .O(n_0_w_buffer_i_30));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_31
       (.I0(word),
        .I1(\n_0_si_be_reg[2] ),
        .O(n_0_w_buffer_i_31));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_32
       (.I0(word),
        .I1(\n_0_si_be_reg[1] ),
        .O(n_0_w_buffer_i_32));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_33
       (.I0(word),
        .I1(\n_0_si_be_reg[0] ),
        .O(n_0_w_buffer_i_33));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_34
       (.I0(p_1_in),
        .I1(word),
        .O(n_0_w_buffer_i_34));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_35
       (.I0(\n_0_si_be_reg[30] ),
        .I1(word),
        .O(n_0_w_buffer_i_35));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_36
       (.I0(\n_0_si_be_reg[29] ),
        .I1(word),
        .O(n_0_w_buffer_i_36));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_37
       (.I0(\n_0_si_be_reg[28] ),
        .I1(word),
        .O(n_0_w_buffer_i_37));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_38
       (.I0(\n_0_si_be_reg[27] ),
        .I1(word),
        .O(n_0_w_buffer_i_38));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_39
       (.I0(\n_0_si_be_reg[26] ),
        .I1(word),
        .O(n_0_w_buffer_i_39));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_4
       (.I0(word),
        .I1(\n_0_si_be_reg[29] ),
        .O(n_0_w_buffer_i_4));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_40
       (.I0(\n_0_si_be_reg[25] ),
        .I1(word),
        .O(n_0_w_buffer_i_40));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_41
       (.I0(\n_0_si_be_reg[24] ),
        .I1(word),
        .O(n_0_w_buffer_i_41));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_42
       (.I0(\n_0_si_be_reg[23] ),
        .I1(word),
        .O(n_0_w_buffer_i_42));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_43
       (.I0(\n_0_si_be_reg[22] ),
        .I1(word),
        .O(n_0_w_buffer_i_43));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_44
       (.I0(\n_0_si_be_reg[21] ),
        .I1(word),
        .O(n_0_w_buffer_i_44));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_45
       (.I0(\n_0_si_be_reg[20] ),
        .I1(word),
        .O(n_0_w_buffer_i_45));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_46
       (.I0(\n_0_si_be_reg[19] ),
        .I1(word),
        .O(n_0_w_buffer_i_46));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_47
       (.I0(\n_0_si_be_reg[18] ),
        .I1(word),
        .O(n_0_w_buffer_i_47));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_48
       (.I0(\n_0_si_be_reg[17] ),
        .I1(word),
        .O(n_0_w_buffer_i_48));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_49
       (.I0(\n_0_si_be_reg[16] ),
        .I1(word),
        .O(n_0_w_buffer_i_49));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_5
       (.I0(word),
        .I1(\n_0_si_be_reg[28] ),
        .O(n_0_w_buffer_i_5));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_50
       (.I0(\n_0_si_be_reg[15] ),
        .I1(word),
        .O(n_0_w_buffer_i_50));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_51
       (.I0(\n_0_si_be_reg[14] ),
        .I1(word),
        .O(n_0_w_buffer_i_51));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_52
       (.I0(\n_0_si_be_reg[13] ),
        .I1(word),
        .O(n_0_w_buffer_i_52));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_53
       (.I0(\n_0_si_be_reg[12] ),
        .I1(word),
        .O(n_0_w_buffer_i_53));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_54
       (.I0(\n_0_si_be_reg[11] ),
        .I1(word),
        .O(n_0_w_buffer_i_54));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_55
       (.I0(\n_0_si_be_reg[10] ),
        .I1(word),
        .O(n_0_w_buffer_i_55));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_56
       (.I0(\n_0_si_be_reg[9] ),
        .I1(word),
        .O(n_0_w_buffer_i_56));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_57
       (.I0(\n_0_si_be_reg[8] ),
        .I1(word),
        .O(n_0_w_buffer_i_57));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_58
       (.I0(\n_0_si_be_reg[7] ),
        .I1(word),
        .O(n_0_w_buffer_i_58));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_59
       (.I0(\n_0_si_be_reg[6] ),
        .I1(word),
        .O(n_0_w_buffer_i_59));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_6
       (.I0(word),
        .I1(\n_0_si_be_reg[27] ),
        .O(n_0_w_buffer_i_6));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_60
       (.I0(\n_0_si_be_reg[5] ),
        .I1(word),
        .O(n_0_w_buffer_i_60));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_61
       (.I0(\n_0_si_be_reg[4] ),
        .I1(word),
        .O(n_0_w_buffer_i_61));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_62
       (.I0(\n_0_si_be_reg[3] ),
        .I1(word),
        .O(n_0_w_buffer_i_62));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_63
       (.I0(\n_0_si_be_reg[2] ),
        .I1(word),
        .O(n_0_w_buffer_i_63));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_64
       (.I0(\n_0_si_be_reg[1] ),
        .I1(word),
        .O(n_0_w_buffer_i_64));
LUT2 #(
    .INIT(4'h2)) 
     w_buffer_i_65
       (.I0(\n_0_si_be_reg[0] ),
        .I1(word),
        .O(n_0_w_buffer_i_65));
LUT4 #(
    .INIT(16'hFEEE)) 
     w_buffer_i_66
       (.I0(load_mi_d1),
        .I1(load_mi_d2),
        .I2(m_axi_wready),
        .I3(O4),
        .O(mi_buf_en));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_7
       (.I0(word),
        .I1(\n_0_si_be_reg[26] ),
        .O(n_0_w_buffer_i_7));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_8
       (.I0(word),
        .I1(\n_0_si_be_reg[25] ),
        .O(n_0_w_buffer_i_8));
LUT2 #(
    .INIT(4'h8)) 
     w_buffer_i_9
       (.I0(word),
        .I1(\n_0_si_be_reg[24] ),
        .O(n_0_w_buffer_i_9));
endmodule

(* ORIG_REF_NAME = "axi_register_slice_v2_1_axi_register_slice" *) 
module axi_dwidth_converter_0_axi_register_slice_v2_1_axi_register_slice
   (sr_awvalid,
    s_axi_awready,
    sr_arvalid,
    s_axi_arready,
    I91,
    Q,
    O1,
    O2,
    O3,
    O4,
    O5,
    O6,
    cmd_first_word_i,
    CO,
    O7,
    O8,
    O9,
    O10,
    I11,
    O11,
    O12,
    O13,
    O14,
    s_axi_arlen,
    O15,
    O16,
    O17,
    O18,
    O19,
    O20,
    O21,
    O22,
    O23,
    O24,
    O25,
    O26,
    O27,
    O28,
    O29,
    O30,
    O31,
    O32,
    O33,
    O34,
    O35,
    O36,
    O37,
    O38,
    O39,
    O40,
    O41,
    O42,
    O43,
    O44,
    O45,
    O46,
    O47,
    O48,
    O49,
    O50,
    O51,
    O52,
    O53,
    O54,
    O55,
    O56,
    O57,
    O58,
    O59,
    O60,
    f_si_wrap_word_return,
    O61,
    O62,
    O63,
    O64,
    O65,
    O66,
    O67,
    O68,
    O69,
    O70,
    O71,
    O72,
    O73,
    O74,
    O75,
    O76,
    O77,
    O78,
    O79,
    O80,
    O81,
    O82,
    O83,
    O84,
    O85,
    O86,
    s_axi_araddr,
    s_axi_arburst,
    cmd_fix_i,
    I3,
    s_axi_awvalid,
    I2,
    m_axi_awready_i,
    I1,
    I4,
    s_axi_arvalid,
    m_axi_arready_i,
    I5,
    I6,
    cmd_last_word_ii,
    I7,
    load_si_ptr,
    I8,
    SR,
    D,
    I9);
  output sr_awvalid;
  output s_axi_awready;
  output sr_arvalid;
  output s_axi_arready;
  output [25:0]I91;
  output [50:0]Q;
  output O1;
  output O2;
  output O3;
  output O4;
  output O5;
  output O6;
  output [5:0]cmd_first_word_i;
  output [0:0]CO;
  output O7;
  output O8;
  output O9;
  output O10;
  output [5:0]I11;
  output [60:0]O11;
  output [4:0]O12;
  output [0:0]O13;
  output O14;
  output [7:0]s_axi_arlen;
  output [2:0]O15;
  output O16;
  output O17;
  output O18;
  output O19;
  output O20;
  output O21;
  output O22;
  output O23;
  output O24;
  output O25;
  output O26;
  output O27;
  output O28;
  output O29;
  output O30;
  output O31;
  output O32;
  output O33;
  output O34;
  output O35;
  output O36;
  output O37;
  output O38;
  output O39;
  output O40;
  output O41;
  output O42;
  output O43;
  output O44;
  output O45;
  output O46;
  output O47;
  output O48;
  output O49;
  output O50;
  output O51;
  output O52;
  output O53;
  output O54;
  output O55;
  output O56;
  output O57;
  output O58;
  output O59;
  output O60;
  output f_si_wrap_word_return;
  output O61;
  output O62;
  output O63;
  output O64;
  output O65;
  output O66;
  output O67;
  output O68;
  output O69;
  output O70;
  output O71;
  output O72;
  output O73;
  output O74;
  output O75;
  output O76;
  output O77;
  output O78;
  output O79;
  output O80;
  output O81;
  output O82;
  output O83;
  output O84;
  output O85;
  output O86;
  output [5:0]s_axi_araddr;
  output [1:0]s_axi_arburst;
  output cmd_fix_i;
  input I3;
  input s_axi_awvalid;
  input I2;
  input m_axi_awready_i;
  input I1;
  input I4;
  input s_axi_arvalid;
  input m_axi_arready_i;
  input I5;
  input I6;
  input [0:0]cmd_last_word_ii;
  input [0:0]I7;
  input load_si_ptr;
  input [0:0]I8;
  input [0:0]SR;
  input [60:0]D;
  input [60:0]I9;

  wire [0:0]CO;
  wire [60:0]D;
  wire I1;
  wire [5:0]I11;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire I6;
  wire [0:0]I7;
  wire [0:0]I8;
  wire [60:0]I9;
  wire [25:0]I91;
  wire O1;
  wire O10;
  wire [60:0]O11;
  wire [4:0]O12;
  wire [0:0]O13;
  wire O14;
  wire [2:0]O15;
  wire O16;
  wire O17;
  wire O18;
  wire O19;
  wire O2;
  wire O20;
  wire O21;
  wire O22;
  wire O23;
  wire O24;
  wire O25;
  wire O26;
  wire O27;
  wire O28;
  wire O29;
  wire O3;
  wire O30;
  wire O31;
  wire O32;
  wire O33;
  wire O34;
  wire O35;
  wire O36;
  wire O37;
  wire O38;
  wire O39;
  wire O4;
  wire O40;
  wire O41;
  wire O42;
  wire O43;
  wire O44;
  wire O45;
  wire O46;
  wire O47;
  wire O48;
  wire O49;
  wire O5;
  wire O50;
  wire O51;
  wire O52;
  wire O53;
  wire O54;
  wire O55;
  wire O56;
  wire O57;
  wire O58;
  wire O59;
  wire O6;
  wire O60;
  wire O61;
  wire O62;
  wire O63;
  wire O64;
  wire O65;
  wire O66;
  wire O67;
  wire O68;
  wire O69;
  wire O7;
  wire O70;
  wire O71;
  wire O72;
  wire O73;
  wire O74;
  wire O75;
  wire O76;
  wire O77;
  wire O78;
  wire O79;
  wire O8;
  wire O80;
  wire O81;
  wire O82;
  wire O83;
  wire O84;
  wire O85;
  wire O86;
  wire O9;
  wire [50:0]Q;
  wire [0:0]SR;
  wire [5:0]cmd_first_word_i;
  wire cmd_fix_i;
  wire [0:0]cmd_last_word_ii;
  wire f_si_wrap_word_return;
  wire load_si_ptr;
  wire m_axi_arready_i;
  wire m_axi_awready_i;
  wire [5:0]s_axi_araddr;
  wire [1:0]s_axi_arburst;
  wire [7:0]s_axi_arlen;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire sr_arvalid;
  wire sr_awvalid;

axi_dwidth_converter_0_axi_register_slice_v2_1_axic_register_slice ar_pipe
       (.CO(O13),
        .I11(I11),
        .I2(I2),
        .I3(I3),
        .I5(I5),
        .I6(I6),
        .I7(I7),
        .I9(I9),
        .O12(O12),
        .O14(O14),
        .O15(O15),
        .O16(O16),
        .Q(O11),
        .SR(SR),
        .cmd_fix_i(cmd_fix_i),
        .m_axi_arready_i(m_axi_arready_i),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_arburst(s_axi_arburst),
        .s_axi_arlen(s_axi_arlen),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .sr_arvalid(sr_arvalid));
axi_dwidth_converter_0_axi_register_slice_v2_1_axic_register_slice_0 aw_pipe
       (.CO(CO),
        .D(D),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I8(I8),
        .I91(I91),
        .O1(O1),
        .O10(O10),
        .O11(O70),
        .O12(O73),
        .O17(O17),
        .O18(O18),
        .O19(O19),
        .O2(O2),
        .O20(O20),
        .O21(O21),
        .O22(O22),
        .O23(O23),
        .O24(O24),
        .O25(O25),
        .O26(O26),
        .O27(O27),
        .O28(O28),
        .O29(O29),
        .O3(O3),
        .O30(O30),
        .O31(O31),
        .O32(O32),
        .O33(O33),
        .O34(O34),
        .O35(O35),
        .O36(O36),
        .O37(O37),
        .O38(O38),
        .O39(O39),
        .O4(O4),
        .O40(O40),
        .O41(O41),
        .O42(O42),
        .O43(O43),
        .O44(O44),
        .O45(O45),
        .O46(O46),
        .O47(O47),
        .O48(O48),
        .O49(O49),
        .O5(O5),
        .O50(O50),
        .O51(O51),
        .O52(O52),
        .O53(O53),
        .O54(O54),
        .O55(O55),
        .O56(O56),
        .O57(O57),
        .O58(O58),
        .O59(O59),
        .O6(O6),
        .O60(O60),
        .O61(O61),
        .O62(O62),
        .O63(O63),
        .O64(O64),
        .O65(O65),
        .O66(O66),
        .O67(O67),
        .O68(O68),
        .O69(O69),
        .O7(O7),
        .O71(O71),
        .O72(O72),
        .O74(O74),
        .O75(O75),
        .O76(O76),
        .O77(O77),
        .O78(O78),
        .O79(O79),
        .O8(O8),
        .O80(O80),
        .O81(O81),
        .O82(O82),
        .O83(O83),
        .O84(O84),
        .O85(O85),
        .O86(O86),
        .O9(O9),
        .Q(Q),
        .SR(SR),
        .cmd_first_word_i(cmd_first_word_i),
        .cmd_last_word_ii(cmd_last_word_ii),
        .f_si_wrap_word_return(f_si_wrap_word_return),
        .load_si_ptr(load_si_ptr),
        .m_axi_awready_i(m_axi_awready_i),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .sr_awvalid(sr_awvalid));
endmodule

(* ORIG_REF_NAME = "axi_register_slice_v2_1_axi_register_slice" *) 
module axi_dwidth_converter_0_axi_register_slice_v2_1_axi_register_slice__parameterized0
   (m_axi_awready_i,
    O1,
    s_awready_reg,
    O2,
    E,
    O3,
    O4,
    O5,
    D,
    O6,
    O7,
    SR,
    O11,
    cmd_push_block0,
    O8,
    O9,
    O10,
    O12,
    O13,
    s_axi_awsize,
    I3,
    I43,
    I44,
    sr_awvalid,
    I1,
    s_axi_wlast,
    s_axi_wvalid,
    I2,
    I4,
    I45,
    si_wrap_be_next,
    I46,
    Q,
    I47,
    I48,
    I5,
    I6,
    I7,
    p_176_in,
    I49,
    I8,
    I9,
    I10,
    I11,
    I50,
    I12,
    I51,
    I13,
    I52,
    I14,
    I53,
    I15,
    I54,
    I16,
    I55,
    I17,
    I56,
    I18,
    I57,
    I19,
    I58,
    I20,
    I59,
    I21,
    I60,
    I22,
    I61,
    I23,
    I62,
    I24,
    I63,
    I25,
    I64,
    I26,
    I65,
    I27,
    I66,
    I28,
    I67,
    I29,
    I68,
    I30,
    I69,
    I31,
    I70,
    I32,
    I71,
    I33,
    I72,
    I34,
    I73,
    I35,
    I74,
    I36,
    I75,
    I37,
    I76,
    I38,
    I77,
    I39,
    I78,
    I40,
    I79,
    I41,
    I80,
    I42,
    I81,
    I82,
    I83,
    I84,
    I85,
    I86,
    I87,
    I88,
    I89,
    I90,
    I91,
    aw_ready,
    buf_cnt,
    aw_pop_event,
    I92,
    I93,
    I94);
  output m_axi_awready_i;
  output O1;
  output s_awready_reg;
  output O2;
  output [0:0]E;
  output [0:0]O3;
  output [0:0]O4;
  output [0:0]O5;
  output [3:0]D;
  output [6:0]O6;
  output [31:0]O7;
  output [0:0]SR;
  output O11;
  output cmd_push_block0;
  output O8;
  output O9;
  output O10;
  output O12;
  output [64:0]O13;
  output [1:0]s_axi_awsize;
  input I3;
  input I43;
  input I44;
  input sr_awvalid;
  input I1;
  input s_axi_wlast;
  input s_axi_wvalid;
  input I2;
  input I4;
  input I45;
  input [0:0]si_wrap_be_next;
  input I46;
  input [47:0]Q;
  input I47;
  input I48;
  input [1:0]I5;
  input [0:0]I6;
  input I7;
  input p_176_in;
  input I49;
  input [3:0]I8;
  input I9;
  input [6:0]I10;
  input I11;
  input I50;
  input I12;
  input I51;
  input I13;
  input I52;
  input I14;
  input I53;
  input I15;
  input I54;
  input I16;
  input I55;
  input I17;
  input I56;
  input I18;
  input I57;
  input I19;
  input I58;
  input I20;
  input I59;
  input I21;
  input I60;
  input I22;
  input I61;
  input I23;
  input I62;
  input I24;
  input I63;
  input I25;
  input I64;
  input I26;
  input I65;
  input I27;
  input I66;
  input I28;
  input I67;
  input I29;
  input I68;
  input I30;
  input I69;
  input I31;
  input I70;
  input I32;
  input I71;
  input I33;
  input I72;
  input I34;
  input I73;
  input I35;
  input I74;
  input I36;
  input I75;
  input I37;
  input I76;
  input I38;
  input I77;
  input I39;
  input I78;
  input I40;
  input I79;
  input I41;
  input I80;
  input I42;
  input I81;
  input I82;
  input I83;
  input I84;
  input I85;
  input I86;
  input I87;
  input I88;
  input I89;
  input I90;
  input I91;
  input aw_ready;
  input [1:0]buf_cnt;
  input aw_pop_event;
  input [0:0]I92;
  input [25:0]I93;
  input I94;

  wire [3:0]D;
  wire [0:0]E;
  wire I1;
  wire [6:0]I10;
  wire I11;
  wire I12;
  wire I13;
  wire I14;
  wire I15;
  wire I16;
  wire I17;
  wire I18;
  wire I19;
  wire I2;
  wire I20;
  wire I21;
  wire I22;
  wire I23;
  wire I24;
  wire I25;
  wire I26;
  wire I27;
  wire I28;
  wire I29;
  wire I3;
  wire I30;
  wire I31;
  wire I32;
  wire I33;
  wire I34;
  wire I35;
  wire I36;
  wire I37;
  wire I38;
  wire I39;
  wire I4;
  wire I40;
  wire I41;
  wire I42;
  wire I43;
  wire I44;
  wire I45;
  wire I46;
  wire I47;
  wire I48;
  wire I49;
  wire [1:0]I5;
  wire I50;
  wire I51;
  wire I52;
  wire I53;
  wire I54;
  wire I55;
  wire I56;
  wire I57;
  wire I58;
  wire I59;
  wire [0:0]I6;
  wire I60;
  wire I61;
  wire I62;
  wire I63;
  wire I64;
  wire I65;
  wire I66;
  wire I67;
  wire I68;
  wire I69;
  wire I7;
  wire I70;
  wire I71;
  wire I72;
  wire I73;
  wire I74;
  wire I75;
  wire I76;
  wire I77;
  wire I78;
  wire I79;
  wire [3:0]I8;
  wire I80;
  wire I81;
  wire I82;
  wire I83;
  wire I84;
  wire I85;
  wire I86;
  wire I87;
  wire I88;
  wire I89;
  wire I9;
  wire I90;
  wire I91;
  wire [0:0]I92;
  wire [25:0]I93;
  wire I94;
  wire O1;
  wire O10;
  wire O11;
  wire O12;
  wire [64:0]O13;
  wire O2;
  wire [0:0]O3;
  wire [0:0]O4;
  wire [0:0]O5;
  wire [6:0]O6;
  wire [31:0]O7;
  wire O8;
  wire O9;
  wire [47:0]Q;
  wire [0:0]SR;
  wire aw_pop_event;
  wire aw_ready;
  wire [1:0]buf_cnt;
  wire cmd_push_block0;
  wire m_axi_awready_i;
  wire p_176_in;
  wire s_awready_reg;
  wire [1:0]s_axi_awsize;
  wire s_axi_wlast;
  wire s_axi_wvalid;
  wire [0:0]si_wrap_be_next;
  wire sr_awvalid;

axi_dwidth_converter_0_axi_register_slice_v2_1_axic_register_slice__parameterized3 aw_pipe
       (.D(D),
        .I1(I1),
        .I10(I10),
        .I11(I11),
        .I12(I12),
        .I13(I13),
        .I14(I14),
        .I15(I15),
        .I16(I16),
        .I17(I17),
        .I18(I18),
        .I19(I19),
        .I2(I2),
        .I20(I20),
        .I21(I21),
        .I22(I22),
        .I23(I23),
        .I24(I24),
        .I25(I25),
        .I26(I26),
        .I27(I27),
        .I28(I28),
        .I29(I29),
        .I3(I3),
        .I30(I30),
        .I31(I31),
        .I32(I32),
        .I33(I33),
        .I34(I34),
        .I35(I35),
        .I36(I36),
        .I37(I37),
        .I38(I38),
        .I39(I39),
        .I4(I4),
        .I40(I40),
        .I41(I41),
        .I42(I42),
        .I43(I43),
        .I44(I44),
        .I45(I45),
        .I46(I46),
        .I47(I47),
        .I48(I48),
        .I49(I49),
        .I5(I5),
        .I50(I50),
        .I51(I51),
        .I52(I52),
        .I53(I53),
        .I54(I54),
        .I55(I55),
        .I56(I56),
        .I57(I57),
        .I58(I58),
        .I59(I59),
        .I6(I6),
        .I60(I60),
        .I61(I61),
        .I62(I62),
        .I63(I63),
        .I64(I64),
        .I65(I65),
        .I66(I66),
        .I67(I67),
        .I68(I68),
        .I69(I69),
        .I7(I7),
        .I70(I70),
        .I71(I71),
        .I72(I72),
        .I73(I73),
        .I74(I74),
        .I75(I75),
        .I76(I76),
        .I77(I77),
        .I78(I78),
        .I79(I79),
        .I8(I8),
        .I80(I80),
        .I81(I81),
        .I82(I82),
        .I83(I83),
        .I84(I84),
        .I85(I85),
        .I86(I86),
        .I87(I87),
        .I88(I88),
        .I89(I89),
        .I9(I9),
        .I90(I90),
        .I91(I91),
        .I92(I92),
        .I93(I93),
        .I94(I94),
        .O1(O1),
        .O10(O8),
        .O11(O11),
        .O12(O9),
        .O13(O10),
        .O14(O12),
        .O15(O13),
        .O2(s_awready_reg),
        .O3(O2),
        .O4(E),
        .O5(O3),
        .O6(O4),
        .O7(O5),
        .O8(O6),
        .O9(O7),
        .Q(Q),
        .SR(SR),
        .aw_pop_event(aw_pop_event),
        .aw_ready(aw_ready),
        .buf_cnt(buf_cnt),
        .cmd_push_block0(cmd_push_block0),
        .m_axi_awready_i(m_axi_awready_i),
        .p_176_in(p_176_in),
        .s_axi_awsize(s_axi_awsize),
        .s_axi_wlast(s_axi_wlast),
        .s_axi_wvalid(s_axi_wvalid),
        .si_wrap_be_next(si_wrap_be_next),
        .sr_awvalid(sr_awvalid));
endmodule

(* ORIG_REF_NAME = "axi_register_slice_v2_1_axic_register_slice" *) 
module axi_dwidth_converter_0_axi_register_slice_v2_1_axic_register_slice
   (sr_arvalid,
    s_axi_arready,
    I11,
    Q,
    O12,
    CO,
    O14,
    s_axi_arlen,
    O15,
    O16,
    s_axi_araddr,
    s_axi_arburst,
    cmd_fix_i,
    I3,
    s_axi_arvalid,
    I2,
    m_axi_arready_i,
    I5,
    I6,
    I7,
    SR,
    I9);
  output sr_arvalid;
  output s_axi_arready;
  output [5:0]I11;
  output [60:0]Q;
  output [4:0]O12;
  output [0:0]CO;
  output O14;
  output [7:0]s_axi_arlen;
  output [2:0]O15;
  output O16;
  output [5:0]s_axi_araddr;
  output [1:0]s_axi_arburst;
  output cmd_fix_i;
  input I3;
  input s_axi_arvalid;
  input I2;
  input m_axi_arready_i;
  input I5;
  input I6;
  input [0:0]I7;
  input [0:0]SR;
  input [60:0]I9;

  wire [0:0]CO;
  wire [5:0]I11;
  wire I2;
  wire I3;
  wire I5;
  wire I6;
  wire [0:0]I7;
  wire [60:0]I9;
  wire [4:0]O12;
  wire O14;
  wire [2:0]O15;
  wire O16;
  wire [60:0]Q;
  wire [0:0]SR;
  wire \USE_READ.read_addr_inst/access_is_wrap ;
  wire \USE_READ.read_addr_inst/cmd_modified_i ;
  wire \USE_READ.read_addr_inst/cmd_packed_wrap_i ;
  wire \USE_READ.read_addr_inst/cmd_packed_wrap_i1 ;
  wire [0:0]\USE_READ.read_addr_inst/mi_word_intra_len ;
  wire cmd_fix_i;
  wire m_axi_arready_i;
  wire \n_0_aresetn_d_reg[0] ;
  wire \n_0_aresetn_d_reg[1] ;
  wire n_0_dw_fifogen_ar_i_100;
  wire n_0_dw_fifogen_ar_i_23;
  wire n_0_dw_fifogen_ar_i_28;
  wire n_0_dw_fifogen_ar_i_33;
  wire n_0_dw_fifogen_ar_i_34;
  wire n_0_dw_fifogen_ar_i_36;
  wire n_0_dw_fifogen_ar_i_37;
  wire n_0_dw_fifogen_ar_i_38;
  wire n_0_dw_fifogen_ar_i_39;
  wire n_0_dw_fifogen_ar_i_40;
  wire n_0_dw_fifogen_ar_i_41;
  wire n_0_dw_fifogen_ar_i_42;
  wire n_0_dw_fifogen_ar_i_43;
  wire n_0_dw_fifogen_ar_i_44;
  wire n_0_dw_fifogen_ar_i_45;
  wire n_0_dw_fifogen_ar_i_46;
  wire n_0_dw_fifogen_ar_i_49;
  wire n_0_dw_fifogen_ar_i_50;
  wire n_0_dw_fifogen_ar_i_52;
  wire n_0_dw_fifogen_ar_i_53;
  wire n_0_dw_fifogen_ar_i_54;
  wire n_0_dw_fifogen_ar_i_55;
  wire n_0_dw_fifogen_ar_i_56;
  wire n_0_dw_fifogen_ar_i_57;
  wire n_0_dw_fifogen_ar_i_58;
  wire n_0_dw_fifogen_ar_i_59;
  wire n_0_dw_fifogen_ar_i_61;
  wire n_0_dw_fifogen_ar_i_62;
  wire n_0_dw_fifogen_ar_i_68;
  wire n_0_dw_fifogen_ar_i_69;
  wire n_0_dw_fifogen_ar_i_70;
  wire n_0_dw_fifogen_ar_i_71;
  wire n_0_dw_fifogen_ar_i_72;
  wire n_0_dw_fifogen_ar_i_73;
  wire n_0_dw_fifogen_ar_i_74;
  wire n_0_dw_fifogen_ar_i_75;
  wire n_0_dw_fifogen_ar_i_76;
  wire n_0_dw_fifogen_ar_i_77;
  wire n_0_dw_fifogen_ar_i_78;
  wire n_0_dw_fifogen_ar_i_79;
  wire n_0_dw_fifogen_ar_i_80;
  wire n_0_dw_fifogen_ar_i_81;
  wire n_0_dw_fifogen_ar_i_82;
  wire n_0_dw_fifogen_ar_i_83;
  wire n_0_dw_fifogen_ar_i_84;
  wire n_0_dw_fifogen_ar_i_94;
  wire n_0_dw_fifogen_ar_i_95;
  wire n_0_dw_fifogen_ar_i_96;
  wire n_0_dw_fifogen_ar_i_97;
  wire n_0_dw_fifogen_ar_i_99;
  wire \n_0_m_payload_i[61]_i_1 ;
  wire n_0_m_valid_i_i_1__1;
  wire n_0_s_ready_i_i_1__1;
  wire n_1_dw_fifogen_ar_i_27;
  wire n_1_dw_fifogen_ar_i_51;
  wire n_2_dw_fifogen_ar_i_27;
  wire n_2_dw_fifogen_ar_i_51;
  wire n_3_dw_fifogen_ar_i_27;
  wire n_3_dw_fifogen_ar_i_51;
  wire [5:0]s_axi_araddr;
  wire [1:0]s_axi_arburst;
  wire [7:0]s_axi_arlen;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire sr_arvalid;
  wire [3:0]NLW_dw_fifogen_ar_i_27_O_UNCONNECTED;
  wire [3:0]NLW_dw_fifogen_ar_i_51_O_UNCONNECTED;

FDRE #(
    .INIT(1'b0)) 
     \aresetn_d_reg[0] 
       (.C(I3),
        .CE(1'b1),
        .D(1'b1),
        .Q(\n_0_aresetn_d_reg[0] ),
        .R(SR));
FDRE #(
    .INIT(1'b0)) 
     \aresetn_d_reg[1] 
       (.C(I3),
        .CE(1'b1),
        .D(\n_0_aresetn_d_reg[0] ),
        .Q(\n_0_aresetn_d_reg[1] ),
        .R(SR));
LUT3 #(
    .INIT(8'hB4)) 
     dw_fifogen_ar_i_10
       (.I0(n_0_dw_fifogen_ar_i_37),
        .I1(I7),
        .I2(n_0_dw_fifogen_ar_i_38),
        .O(s_axi_arlen[5]));
LUT6 #(
    .INIT(64'hBBBBBBBBBBBFBBBB)) 
     dw_fifogen_ar_i_100
       (.I0(Q[38]),
        .I1(Q[39]),
        .I2(Q[36]),
        .I3(Q[37]),
        .I4(Q[44]),
        .I5(Q[35]),
        .O(n_0_dw_fifogen_ar_i_100));
LUT2 #(
    .INIT(4'h1)) 
     dw_fifogen_ar_i_101
       (.I0(Q[39]),
        .I1(Q[38]),
        .O(cmd_fix_i));
LUT3 #(
    .INIT(8'hB4)) 
     dw_fifogen_ar_i_11
       (.I0(n_0_dw_fifogen_ar_i_39),
        .I1(I7),
        .I2(n_0_dw_fifogen_ar_i_40),
        .O(s_axi_arlen[4]));
LUT3 #(
    .INIT(8'hB4)) 
     dw_fifogen_ar_i_12
       (.I0(n_0_dw_fifogen_ar_i_41),
        .I1(I7),
        .I2(n_0_dw_fifogen_ar_i_42),
        .O(s_axi_arlen[3]));
LUT3 #(
    .INIT(8'hB4)) 
     dw_fifogen_ar_i_13
       (.I0(n_0_dw_fifogen_ar_i_43),
        .I1(I7),
        .I2(n_0_dw_fifogen_ar_i_44),
        .O(s_axi_arlen[2]));
LUT6 #(
    .INIT(64'hDFFFFFFF20000000)) 
     dw_fifogen_ar_i_14
       (.I0(\USE_READ.read_addr_inst/cmd_modified_i ),
        .I1(Q[39]),
        .I2(Q[38]),
        .I3(n_0_dw_fifogen_ar_i_45),
        .I4(I7),
        .I5(n_0_dw_fifogen_ar_i_46),
        .O(s_axi_arlen[1]));
LUT5 #(
    .INIT(32'hDFFF2000)) 
     dw_fifogen_ar_i_15
       (.I0(Q[38]),
        .I1(Q[39]),
        .I2(\USE_READ.read_addr_inst/cmd_modified_i ),
        .I3(I7),
        .I4(n_0_dw_fifogen_ar_i_45),
        .O(s_axi_arlen[0]));
LUT2 #(
    .INIT(4'hE)) 
     dw_fifogen_ar_i_16
       (.I0(\USE_READ.read_addr_inst/cmd_modified_i ),
        .I1(Q[37]),
        .O(O15[2]));
LUT2 #(
    .INIT(4'hE)) 
     dw_fifogen_ar_i_17
       (.I0(\USE_READ.read_addr_inst/cmd_modified_i ),
        .I1(Q[36]),
        .O(O15[1]));
LUT2 #(
    .INIT(4'h2)) 
     dw_fifogen_ar_i_18
       (.I0(Q[35]),
        .I1(\USE_READ.read_addr_inst/cmd_modified_i ),
        .O(O15[0]));
LUT4 #(
    .INIT(16'hF070)) 
     dw_fifogen_ar_i_19
       (.I0(CO),
        .I1(\USE_READ.read_addr_inst/cmd_modified_i ),
        .I2(Q[39]),
        .I3(Q[38]),
        .O(s_axi_arburst[1]));
LUT6 #(
    .INIT(64'h2A2A2AAA2AAA2AAA)) 
     dw_fifogen_ar_i_2
       (.I0(Q[5]),
        .I1(n_0_dw_fifogen_ar_i_23),
        .I2(\USE_READ.read_addr_inst/cmd_modified_i ),
        .I3(\USE_READ.read_addr_inst/cmd_packed_wrap_i ),
        .I4(\USE_READ.read_addr_inst/access_is_wrap ),
        .I5(CO),
        .O(s_axi_araddr[5]));
LUT4 #(
    .INIT(16'hFF80)) 
     dw_fifogen_ar_i_20
       (.I0(CO),
        .I1(\USE_READ.read_addr_inst/cmd_modified_i ),
        .I2(Q[39]),
        .I3(Q[38]),
        .O(s_axi_arburst[0]));
(* SOFT_HLUTNM = "soft_lutpair269" *) 
   LUT4 #(
    .INIT(16'hFFDF)) 
     dw_fifogen_ar_i_23
       (.I0(CO),
        .I1(O12[4]),
        .I2(Q[39]),
        .I3(Q[38]),
        .O(n_0_dw_fifogen_ar_i_23));
(* SOFT_HLUTNM = "soft_lutpair265" *) 
   LUT5 #(
    .INIT(32'hE0E0E000)) 
     dw_fifogen_ar_i_24
       (.I0(Q[39]),
        .I1(Q[38]),
        .I2(Q[41]),
        .I3(n_0_dw_fifogen_ar_i_49),
        .I4(n_0_dw_fifogen_ar_i_50),
        .O(\USE_READ.read_addr_inst/cmd_modified_i ));
(* SOFT_HLUTNM = "soft_lutpair268" *) 
   LUT5 #(
    .INIT(32'h00800000)) 
     dw_fifogen_ar_i_25
       (.I0(\USE_READ.read_addr_inst/cmd_packed_wrap_i1 ),
        .I1(n_0_dw_fifogen_ar_i_52),
        .I2(\USE_READ.read_addr_inst/cmd_modified_i ),
        .I3(Q[38]),
        .I4(Q[39]),
        .O(\USE_READ.read_addr_inst/cmd_packed_wrap_i ));
(* SOFT_HLUTNM = "soft_lutpair268" *) 
   LUT2 #(
    .INIT(4'h2)) 
     dw_fifogen_ar_i_26
       (.I0(Q[39]),
        .I1(Q[38]),
        .O(\USE_READ.read_addr_inst/access_is_wrap ));
CARRY4 dw_fifogen_ar_i_27
       (.CI(1'b0),
        .CO({CO,n_1_dw_fifogen_ar_i_27,n_2_dw_fifogen_ar_i_27,n_3_dw_fifogen_ar_i_27}),
        .CYINIT(1'b1),
        .DI({1'b0,n_0_dw_fifogen_ar_i_53,n_0_dw_fifogen_ar_i_54,n_0_dw_fifogen_ar_i_55}),
        .O(NLW_dw_fifogen_ar_i_27_O_UNCONNECTED[3:0]),
        .S({n_0_dw_fifogen_ar_i_56,n_0_dw_fifogen_ar_i_57,n_0_dw_fifogen_ar_i_58,n_0_dw_fifogen_ar_i_59}));
(* SOFT_HLUTNM = "soft_lutpair269" *) 
   LUT3 #(
    .INIT(8'h04)) 
     dw_fifogen_ar_i_28
       (.I0(Q[38]),
        .I1(Q[39]),
        .I2(O12[3]),
        .O(n_0_dw_fifogen_ar_i_28));
LUT2 #(
    .INIT(4'h2)) 
     dw_fifogen_ar_i_29
       (.I0(n_0_dw_fifogen_ar_i_61),
        .I1(Q[37]),
        .O(O12[2]));
LUT6 #(
    .INIT(64'h80AA8AAA80AAAAAA)) 
     dw_fifogen_ar_i_3
       (.I0(Q[4]),
        .I1(n_0_dw_fifogen_ar_i_28),
        .I2(CO),
        .I3(\USE_READ.read_addr_inst/cmd_modified_i ),
        .I4(\USE_READ.read_addr_inst/cmd_packed_wrap_i ),
        .I5(\USE_READ.read_addr_inst/access_is_wrap ),
        .O(s_axi_araddr[4]));
LUT6 #(
    .INIT(64'h0000000000F0CCAA)) 
     dw_fifogen_ar_i_30
       (.I0(Q[46]),
        .I1(Q[45]),
        .I2(Q[44]),
        .I3(Q[35]),
        .I4(Q[36]),
        .I5(Q[37]),
        .O(O12[1]));
(* SOFT_HLUTNM = "soft_lutpair266" *) 
   LUT5 #(
    .INIT(32'h000000E2)) 
     dw_fifogen_ar_i_31
       (.I0(Q[45]),
        .I1(Q[35]),
        .I2(Q[44]),
        .I3(Q[36]),
        .I4(Q[37]),
        .O(O12[0]));
(* SOFT_HLUTNM = "soft_lutpair267" *) 
   LUT4 #(
    .INIT(16'h0004)) 
     dw_fifogen_ar_i_32
       (.I0(Q[35]),
        .I1(Q[44]),
        .I2(Q[36]),
        .I3(Q[37]),
        .O(\USE_READ.read_addr_inst/mi_word_intra_len ));
LUT6 #(
    .INIT(64'hF7FFFFFFFFFFFFFF)) 
     dw_fifogen_ar_i_33
       (.I0(n_0_dw_fifogen_ar_i_40),
        .I1(n_0_dw_fifogen_ar_i_44),
        .I2(n_0_dw_fifogen_ar_i_62),
        .I3(n_0_dw_fifogen_ar_i_46),
        .I4(n_0_dw_fifogen_ar_i_42),
        .I5(n_0_dw_fifogen_ar_i_38),
        .O(n_0_dw_fifogen_ar_i_33));
LUT6 #(
    .INIT(64'hAAAAAAAA0000C000)) 
     dw_fifogen_ar_i_34
       (.I0(Q[50]),
        .I1(Q[51]),
        .I2(Q[35]),
        .I3(Q[37]),
        .I4(Q[36]),
        .I5(n_0_dw_fifogen_ar_i_36),
        .O(n_0_dw_fifogen_ar_i_34));
(* SOFT_HLUTNM = "soft_lutpair265" *) 
   LUT5 #(
    .INIT(32'h1F1F1FFF)) 
     dw_fifogen_ar_i_36
       (.I0(n_0_dw_fifogen_ar_i_50),
        .I1(n_0_dw_fifogen_ar_i_49),
        .I2(Q[41]),
        .I3(Q[38]),
        .I4(Q[39]),
        .O(n_0_dw_fifogen_ar_i_36));
LUT6 #(
    .INIT(64'hF7FFFFFFFFFFFFFF)) 
     dw_fifogen_ar_i_37
       (.I0(n_0_dw_fifogen_ar_i_42),
        .I1(n_0_dw_fifogen_ar_i_46),
        .I2(n_0_dw_fifogen_ar_i_68),
        .I3(n_0_dw_fifogen_ar_i_45),
        .I4(n_0_dw_fifogen_ar_i_44),
        .I5(n_0_dw_fifogen_ar_i_40),
        .O(n_0_dw_fifogen_ar_i_37));
(* SOFT_HLUTNM = "soft_lutpair271" *) 
   LUT3 #(
    .INIT(8'hAC)) 
     dw_fifogen_ar_i_38
       (.I0(Q[49]),
        .I1(n_0_dw_fifogen_ar_i_69),
        .I2(n_0_dw_fifogen_ar_i_36),
        .O(n_0_dw_fifogen_ar_i_38));
LUT5 #(
    .INIT(32'hF7FFFFFF)) 
     dw_fifogen_ar_i_39
       (.I0(n_0_dw_fifogen_ar_i_44),
        .I1(n_0_dw_fifogen_ar_i_45),
        .I2(n_0_dw_fifogen_ar_i_68),
        .I3(n_0_dw_fifogen_ar_i_46),
        .I4(n_0_dw_fifogen_ar_i_42),
        .O(n_0_dw_fifogen_ar_i_39));
LUT6 #(
    .INIT(64'h0800AAAA2AAAAAAA)) 
     dw_fifogen_ar_i_4
       (.I0(Q[3]),
        .I1(\USE_READ.read_addr_inst/access_is_wrap ),
        .I2(O12[2]),
        .I3(CO),
        .I4(\USE_READ.read_addr_inst/cmd_modified_i ),
        .I5(\USE_READ.read_addr_inst/cmd_packed_wrap_i ),
        .O(s_axi_araddr[3]));
(* SOFT_HLUTNM = "soft_lutpair272" *) 
   LUT3 #(
    .INIT(8'hAC)) 
     dw_fifogen_ar_i_40
       (.I0(Q[48]),
        .I1(n_0_dw_fifogen_ar_i_70),
        .I2(n_0_dw_fifogen_ar_i_36),
        .O(n_0_dw_fifogen_ar_i_40));
LUT6 #(
    .INIT(64'hF7FFFFFFFFFFFFFF)) 
     dw_fifogen_ar_i_41
       (.I0(n_0_dw_fifogen_ar_i_46),
        .I1(\USE_READ.read_addr_inst/cmd_modified_i ),
        .I2(Q[39]),
        .I3(Q[38]),
        .I4(n_0_dw_fifogen_ar_i_45),
        .I5(n_0_dw_fifogen_ar_i_44),
        .O(n_0_dw_fifogen_ar_i_41));
(* SOFT_HLUTNM = "soft_lutpair271" *) 
   LUT3 #(
    .INIT(8'hAC)) 
     dw_fifogen_ar_i_42
       (.I0(Q[47]),
        .I1(n_0_dw_fifogen_ar_i_71),
        .I2(n_0_dw_fifogen_ar_i_36),
        .O(n_0_dw_fifogen_ar_i_42));
(* SOFT_HLUTNM = "soft_lutpair264" *) 
   LUT5 #(
    .INIT(32'hF7FFFFFF)) 
     dw_fifogen_ar_i_43
       (.I0(n_0_dw_fifogen_ar_i_45),
        .I1(Q[38]),
        .I2(Q[39]),
        .I3(\USE_READ.read_addr_inst/cmd_modified_i ),
        .I4(n_0_dw_fifogen_ar_i_46),
        .O(n_0_dw_fifogen_ar_i_43));
(* SOFT_HLUTNM = "soft_lutpair272" *) 
   LUT3 #(
    .INIT(8'hAC)) 
     dw_fifogen_ar_i_44
       (.I0(Q[46]),
        .I1(n_0_dw_fifogen_ar_i_72),
        .I2(n_0_dw_fifogen_ar_i_36),
        .O(n_0_dw_fifogen_ar_i_44));
(* SOFT_HLUTNM = "soft_lutpair273" *) 
   LUT3 #(
    .INIT(8'hAC)) 
     dw_fifogen_ar_i_45
       (.I0(Q[44]),
        .I1(n_0_dw_fifogen_ar_i_73),
        .I2(n_0_dw_fifogen_ar_i_36),
        .O(n_0_dw_fifogen_ar_i_45));
(* SOFT_HLUTNM = "soft_lutpair273" *) 
   LUT3 #(
    .INIT(8'hAC)) 
     dw_fifogen_ar_i_46
       (.I0(Q[45]),
        .I1(n_0_dw_fifogen_ar_i_74),
        .I2(n_0_dw_fifogen_ar_i_36),
        .O(n_0_dw_fifogen_ar_i_46));
LUT6 #(
    .INIT(64'h3A0A3A3A3A0A0A0A)) 
     dw_fifogen_ar_i_48
       (.I0(n_0_dw_fifogen_ar_i_75),
        .I1(Q[36]),
        .I2(Q[37]),
        .I3(Q[44]),
        .I4(Q[35]),
        .I5(Q[45]),
        .O(O12[4]));
LUT4 #(
    .INIT(16'hFFFE)) 
     dw_fifogen_ar_i_49
       (.I0(Q[46]),
        .I1(Q[47]),
        .I2(Q[44]),
        .I3(Q[45]),
        .O(n_0_dw_fifogen_ar_i_49));
LUT6 #(
    .INIT(64'h0800AAAA2AAAAAAA)) 
     dw_fifogen_ar_i_5
       (.I0(Q[2]),
        .I1(\USE_READ.read_addr_inst/access_is_wrap ),
        .I2(O12[1]),
        .I3(CO),
        .I4(\USE_READ.read_addr_inst/cmd_modified_i ),
        .I5(\USE_READ.read_addr_inst/cmd_packed_wrap_i ),
        .O(s_axi_araddr[2]));
LUT4 #(
    .INIT(16'hFFFE)) 
     dw_fifogen_ar_i_50
       (.I0(Q[51]),
        .I1(Q[50]),
        .I2(Q[48]),
        .I3(Q[49]),
        .O(n_0_dw_fifogen_ar_i_50));
CARRY4 dw_fifogen_ar_i_51
       (.CI(1'b0),
        .CO({\USE_READ.read_addr_inst/cmd_packed_wrap_i1 ,n_1_dw_fifogen_ar_i_51,n_2_dw_fifogen_ar_i_51,n_3_dw_fifogen_ar_i_51}),
        .CYINIT(1'b0),
        .DI({n_0_dw_fifogen_ar_i_76,n_0_dw_fifogen_ar_i_77,n_0_dw_fifogen_ar_i_78,n_0_dw_fifogen_ar_i_79}),
        .O(NLW_dw_fifogen_ar_i_51_O_UNCONNECTED[3:0]),
        .S({n_0_dw_fifogen_ar_i_80,n_0_dw_fifogen_ar_i_81,n_0_dw_fifogen_ar_i_82,n_0_dw_fifogen_ar_i_83}));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     dw_fifogen_ar_i_52
       (.I0(Q[5]),
        .I1(Q[4]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[3]),
        .I5(Q[2]),
        .O(n_0_dw_fifogen_ar_i_52));
LUT5 #(
    .INIT(32'h00010007)) 
     dw_fifogen_ar_i_53
       (.I0(Q[48]),
        .I1(Q[35]),
        .I2(Q[37]),
        .I3(Q[36]),
        .I4(Q[49]),
        .O(n_0_dw_fifogen_ar_i_53));
LUT5 #(
    .INIT(32'h00151555)) 
     dw_fifogen_ar_i_54
       (.I0(Q[37]),
        .I1(Q[35]),
        .I2(Q[36]),
        .I3(Q[46]),
        .I4(Q[47]),
        .O(n_0_dw_fifogen_ar_i_54));
LUT5 #(
    .INIT(32'h07170777)) 
     dw_fifogen_ar_i_55
       (.I0(Q[44]),
        .I1(Q[45]),
        .I2(Q[37]),
        .I3(Q[36]),
        .I4(Q[35]),
        .O(n_0_dw_fifogen_ar_i_55));
LUT2 #(
    .INIT(4'h1)) 
     dw_fifogen_ar_i_56
       (.I0(Q[50]),
        .I1(Q[51]),
        .O(n_0_dw_fifogen_ar_i_56));
LUT5 #(
    .INIT(32'h00025654)) 
     dw_fifogen_ar_i_57
       (.I0(Q[48]),
        .I1(Q[36]),
        .I2(Q[37]),
        .I3(Q[35]),
        .I4(Q[49]),
        .O(n_0_dw_fifogen_ar_i_57));
LUT5 #(
    .INIT(32'h02226444)) 
     dw_fifogen_ar_i_58
       (.I0(Q[46]),
        .I1(Q[37]),
        .I2(Q[35]),
        .I3(Q[36]),
        .I4(Q[47]),
        .O(n_0_dw_fifogen_ar_i_58));
LUT5 #(
    .INIT(32'h222A4480)) 
     dw_fifogen_ar_i_59
       (.I0(Q[44]),
        .I1(Q[37]),
        .I2(Q[35]),
        .I3(Q[36]),
        .I4(Q[45]),
        .O(n_0_dw_fifogen_ar_i_59));
LUT6 #(
    .INIT(64'h0800AAAA2AAAAAAA)) 
     dw_fifogen_ar_i_6
       (.I0(Q[1]),
        .I1(\USE_READ.read_addr_inst/access_is_wrap ),
        .I2(O12[0]),
        .I3(CO),
        .I4(\USE_READ.read_addr_inst/cmd_modified_i ),
        .I5(\USE_READ.read_addr_inst/cmd_packed_wrap_i ),
        .O(s_axi_araddr[1]));
(* SOFT_HLUTNM = "soft_lutpair267" *) 
   LUT5 #(
    .INIT(32'h0A3A0A0A)) 
     dw_fifogen_ar_i_60
       (.I0(n_0_dw_fifogen_ar_i_84),
        .I1(Q[36]),
        .I2(Q[37]),
        .I3(Q[35]),
        .I4(Q[44]),
        .O(O12[3]));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     dw_fifogen_ar_i_61
       (.I0(Q[44]),
        .I1(Q[45]),
        .I2(Q[36]),
        .I3(Q[46]),
        .I4(Q[35]),
        .I5(Q[47]),
        .O(n_0_dw_fifogen_ar_i_61));
LUT6 #(
    .INIT(64'hDFDFDFFFFFDFFFFF)) 
     dw_fifogen_ar_i_62
       (.I0(\USE_READ.read_addr_inst/cmd_modified_i ),
        .I1(Q[39]),
        .I2(Q[38]),
        .I3(n_0_dw_fifogen_ar_i_36),
        .I4(n_0_dw_fifogen_ar_i_73),
        .I5(Q[44]),
        .O(n_0_dw_fifogen_ar_i_62));
LUT5 #(
    .INIT(32'hAA8AAAAA)) 
     dw_fifogen_ar_i_64
       (.I0(Q[5]),
        .I1(Q[38]),
        .I2(Q[39]),
        .I3(O12[4]),
        .I4(CO),
        .O(I11[5]));
LUT6 #(
    .INIT(64'h0707077700000000)) 
     dw_fifogen_ar_i_65
       (.I0(CO),
        .I1(n_0_dw_fifogen_ar_i_28),
        .I2(Q[37]),
        .I3(Q[36]),
        .I4(Q[35]),
        .I5(Q[4]),
        .O(I11[4]));
(* SOFT_HLUTNM = "soft_lutpair264" *) 
   LUT3 #(
    .INIT(8'hDF)) 
     dw_fifogen_ar_i_68
       (.I0(Q[38]),
        .I1(Q[39]),
        .I2(\USE_READ.read_addr_inst/cmd_modified_i ),
        .O(n_0_dw_fifogen_ar_i_68));
LUT5 #(
    .INIT(32'h0000E200)) 
     dw_fifogen_ar_i_69
       (.I0(Q[51]),
        .I1(Q[35]),
        .I2(Q[50]),
        .I3(Q[37]),
        .I4(Q[36]),
        .O(n_0_dw_fifogen_ar_i_69));
LUT6 #(
    .INIT(64'h0800AAAA2AAAAAAA)) 
     dw_fifogen_ar_i_7
       (.I0(Q[0]),
        .I1(\USE_READ.read_addr_inst/access_is_wrap ),
        .I2(\USE_READ.read_addr_inst/mi_word_intra_len ),
        .I3(CO),
        .I4(\USE_READ.read_addr_inst/cmd_modified_i ),
        .I5(\USE_READ.read_addr_inst/cmd_packed_wrap_i ),
        .O(s_axi_araddr[0]));
LUT6 #(
    .INIT(64'h3808303038080000)) 
     dw_fifogen_ar_i_70
       (.I0(Q[51]),
        .I1(Q[36]),
        .I2(Q[37]),
        .I3(Q[49]),
        .I4(Q[35]),
        .I5(Q[50]),
        .O(n_0_dw_fifogen_ar_i_70));
LUT6 #(
    .INIT(64'h00FFB8000000B800)) 
     dw_fifogen_ar_i_71
       (.I0(Q[50]),
        .I1(Q[35]),
        .I2(Q[51]),
        .I3(Q[36]),
        .I4(Q[37]),
        .I5(n_0_dw_fifogen_ar_i_94),
        .O(n_0_dw_fifogen_ar_i_71));
LUT6 #(
    .INIT(64'hBA8ABABABA8A8A8A)) 
     dw_fifogen_ar_i_72
       (.I0(n_0_dw_fifogen_ar_i_95),
        .I1(Q[36]),
        .I2(Q[37]),
        .I3(Q[47]),
        .I4(Q[35]),
        .I5(Q[48]),
        .O(n_0_dw_fifogen_ar_i_72));
LUT6 #(
    .INIT(64'h3A0A3A3A3A0A0A0A)) 
     dw_fifogen_ar_i_73
       (.I0(n_0_dw_fifogen_ar_i_96),
        .I1(Q[36]),
        .I2(Q[37]),
        .I3(Q[45]),
        .I4(Q[35]),
        .I5(Q[46]),
        .O(n_0_dw_fifogen_ar_i_73));
LUT6 #(
    .INIT(64'h3A0A3A3A3A0A0A0A)) 
     dw_fifogen_ar_i_74
       (.I0(n_0_dw_fifogen_ar_i_97),
        .I1(Q[36]),
        .I2(Q[37]),
        .I3(Q[46]),
        .I4(Q[35]),
        .I5(Q[47]),
        .O(n_0_dw_fifogen_ar_i_74));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     dw_fifogen_ar_i_75
       (.I0(Q[46]),
        .I1(Q[47]),
        .I2(Q[36]),
        .I3(Q[48]),
        .I4(Q[35]),
        .I5(Q[49]),
        .O(n_0_dw_fifogen_ar_i_75));
LUT2 #(
    .INIT(4'hE)) 
     dw_fifogen_ar_i_76
       (.I0(Q[50]),
        .I1(Q[51]),
        .O(n_0_dw_fifogen_ar_i_76));
LUT5 #(
    .INIT(32'hFFFCAA88)) 
     dw_fifogen_ar_i_77
       (.I0(Q[48]),
        .I1(Q[36]),
        .I2(Q[35]),
        .I3(Q[37]),
        .I4(Q[49]),
        .O(n_0_dw_fifogen_ar_i_77));
LUT5 #(
    .INIT(32'hFCCC8888)) 
     dw_fifogen_ar_i_78
       (.I0(Q[46]),
        .I1(Q[37]),
        .I2(Q[36]),
        .I3(Q[35]),
        .I4(Q[47]),
        .O(n_0_dw_fifogen_ar_i_78));
LUT5 #(
    .INIT(32'hC8C0C800)) 
     dw_fifogen_ar_i_79
       (.I0(Q[44]),
        .I1(Q[37]),
        .I2(Q[45]),
        .I3(Q[36]),
        .I4(Q[35]),
        .O(n_0_dw_fifogen_ar_i_79));
LUT5 #(
    .INIT(32'hBF404040)) 
     dw_fifogen_ar_i_8
       (.I0(n_0_dw_fifogen_ar_i_33),
        .I1(n_0_dw_fifogen_ar_i_34),
        .I2(I7),
        .I3(n_0_dw_fifogen_ar_i_36),
        .I4(Q[51]),
        .O(s_axi_arlen[7]));
LUT2 #(
    .INIT(4'h1)) 
     dw_fifogen_ar_i_80
       (.I0(Q[50]),
        .I1(Q[51]),
        .O(n_0_dw_fifogen_ar_i_80));
LUT5 #(
    .INIT(32'h00025654)) 
     dw_fifogen_ar_i_81
       (.I0(Q[48]),
        .I1(Q[36]),
        .I2(Q[37]),
        .I3(Q[35]),
        .I4(Q[49]),
        .O(n_0_dw_fifogen_ar_i_81));
LUT5 #(
    .INIT(32'h02226444)) 
     dw_fifogen_ar_i_82
       (.I0(Q[46]),
        .I1(Q[37]),
        .I2(Q[35]),
        .I3(Q[36]),
        .I4(Q[47]),
        .O(n_0_dw_fifogen_ar_i_82));
LUT5 #(
    .INIT(32'h222A4480)) 
     dw_fifogen_ar_i_83
       (.I0(Q[44]),
        .I1(Q[37]),
        .I2(Q[35]),
        .I3(Q[36]),
        .I4(Q[45]),
        .O(n_0_dw_fifogen_ar_i_83));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     dw_fifogen_ar_i_84
       (.I0(Q[45]),
        .I1(Q[46]),
        .I2(Q[36]),
        .I3(Q[47]),
        .I4(Q[35]),
        .I5(Q[48]),
        .O(n_0_dw_fifogen_ar_i_84));
LUT6 #(
    .INIT(64'h00000000FDFF0000)) 
     dw_fifogen_ar_i_85
       (.I0(Q[39]),
        .I1(Q[38]),
        .I2(O12[2]),
        .I3(CO),
        .I4(Q[3]),
        .I5(Q[37]),
        .O(I11[3]));
LUT5 #(
    .INIT(32'h0000FDFF)) 
     dw_fifogen_ar_i_86
       (.I0(Q[39]),
        .I1(Q[38]),
        .I2(O12[1]),
        .I3(CO),
        .I4(O14),
        .O(I11[2]));
LUT6 #(
    .INIT(64'h000000BF00000000)) 
     dw_fifogen_ar_i_87
       (.I0(n_0_dw_fifogen_ar_i_99),
        .I1(\USE_READ.read_addr_inst/access_is_wrap ),
        .I2(CO),
        .I3(Q[36]),
        .I4(Q[37]),
        .I5(Q[1]),
        .O(I11[1]));
LUT6 #(
    .INIT(64'h0000000B00000000)) 
     dw_fifogen_ar_i_88
       (.I0(n_0_dw_fifogen_ar_i_100),
        .I1(CO),
        .I2(Q[36]),
        .I3(Q[35]),
        .I4(Q[37]),
        .I5(Q[0]),
        .O(I11[0]));
LUT3 #(
    .INIT(8'hB4)) 
     dw_fifogen_ar_i_9
       (.I0(n_0_dw_fifogen_ar_i_33),
        .I1(I7),
        .I2(n_0_dw_fifogen_ar_i_34),
        .O(s_axi_arlen[6]));
(* SOFT_HLUTNM = "soft_lutpair270" *) 
   LUT4 #(
    .INIT(16'hFD55)) 
     dw_fifogen_ar_i_93
       (.I0(Q[4]),
        .I1(Q[35]),
        .I2(Q[36]),
        .I3(Q[37]),
        .O(O16));
LUT5 #(
    .INIT(32'hEEAE22A2)) 
     dw_fifogen_ar_i_94
       (.I0(Q[48]),
        .I1(Q[37]),
        .I2(Q[35]),
        .I3(Q[36]),
        .I4(Q[49]),
        .O(n_0_dw_fifogen_ar_i_94));
LUT6 #(
    .INIT(64'h55C050C005C000C0)) 
     dw_fifogen_ar_i_95
       (.I0(Q[37]),
        .I1(Q[51]),
        .I2(Q[35]),
        .I3(Q[36]),
        .I4(Q[50]),
        .I5(Q[49]),
        .O(n_0_dw_fifogen_ar_i_95));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     dw_fifogen_ar_i_96
       (.I0(Q[47]),
        .I1(Q[48]),
        .I2(Q[36]),
        .I3(Q[49]),
        .I4(Q[35]),
        .I5(Q[50]),
        .O(n_0_dw_fifogen_ar_i_96));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     dw_fifogen_ar_i_97
       (.I0(Q[48]),
        .I1(Q[49]),
        .I2(Q[36]),
        .I3(Q[50]),
        .I4(Q[35]),
        .I5(Q[51]),
        .O(n_0_dw_fifogen_ar_i_97));
(* SOFT_HLUTNM = "soft_lutpair270" *) 
   LUT4 #(
    .INIT(16'hFFD5)) 
     dw_fifogen_ar_i_98
       (.I0(Q[2]),
        .I1(Q[35]),
        .I2(Q[36]),
        .I3(Q[37]),
        .O(O14));
(* SOFT_HLUTNM = "soft_lutpair266" *) 
   LUT5 #(
    .INIT(32'h30113000)) 
     dw_fifogen_ar_i_99
       (.I0(Q[37]),
        .I1(Q[36]),
        .I2(Q[44]),
        .I3(Q[35]),
        .I4(Q[45]),
        .O(n_0_dw_fifogen_ar_i_99));
LUT1 #(
    .INIT(2'h1)) 
     \m_payload_i[61]_i_1 
       (.I0(sr_arvalid),
        .O(\n_0_m_payload_i[61]_i_1 ));
FDRE \m_payload_i_reg[0] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[0]),
        .Q(Q[0]),
        .R(1'b0));
FDRE \m_payload_i_reg[10] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[10]),
        .Q(Q[10]),
        .R(1'b0));
FDRE \m_payload_i_reg[11] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[11]),
        .Q(Q[11]),
        .R(1'b0));
FDRE \m_payload_i_reg[12] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[12]),
        .Q(Q[12]),
        .R(1'b0));
FDRE \m_payload_i_reg[13] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[13]),
        .Q(Q[13]),
        .R(1'b0));
FDRE \m_payload_i_reg[14] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[14]),
        .Q(Q[14]),
        .R(1'b0));
FDRE \m_payload_i_reg[15] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[15]),
        .Q(Q[15]),
        .R(1'b0));
FDRE \m_payload_i_reg[16] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[16]),
        .Q(Q[16]),
        .R(1'b0));
FDRE \m_payload_i_reg[17] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[17]),
        .Q(Q[17]),
        .R(1'b0));
FDRE \m_payload_i_reg[18] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[18]),
        .Q(Q[18]),
        .R(1'b0));
FDRE \m_payload_i_reg[19] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[19]),
        .Q(Q[19]),
        .R(1'b0));
FDRE \m_payload_i_reg[1] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[1]),
        .Q(Q[1]),
        .R(1'b0));
FDRE \m_payload_i_reg[20] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[20]),
        .Q(Q[20]),
        .R(1'b0));
FDRE \m_payload_i_reg[21] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[21]),
        .Q(Q[21]),
        .R(1'b0));
FDRE \m_payload_i_reg[22] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[22]),
        .Q(Q[22]),
        .R(1'b0));
FDRE \m_payload_i_reg[23] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[23]),
        .Q(Q[23]),
        .R(1'b0));
FDRE \m_payload_i_reg[24] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[24]),
        .Q(Q[24]),
        .R(1'b0));
FDRE \m_payload_i_reg[25] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[25]),
        .Q(Q[25]),
        .R(1'b0));
FDRE \m_payload_i_reg[26] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[26]),
        .Q(Q[26]),
        .R(1'b0));
FDRE \m_payload_i_reg[27] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[27]),
        .Q(Q[27]),
        .R(1'b0));
FDRE \m_payload_i_reg[28] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[28]),
        .Q(Q[28]),
        .R(1'b0));
FDRE \m_payload_i_reg[29] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[29]),
        .Q(Q[29]),
        .R(1'b0));
FDRE \m_payload_i_reg[2] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[2]),
        .Q(Q[2]),
        .R(1'b0));
FDRE \m_payload_i_reg[30] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[30]),
        .Q(Q[30]),
        .R(1'b0));
FDRE \m_payload_i_reg[31] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[31]),
        .Q(Q[31]),
        .R(1'b0));
FDRE \m_payload_i_reg[32] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[32]),
        .Q(Q[32]),
        .R(1'b0));
FDRE \m_payload_i_reg[33] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[33]),
        .Q(Q[33]),
        .R(1'b0));
FDRE \m_payload_i_reg[34] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[34]),
        .Q(Q[34]),
        .R(1'b0));
FDRE \m_payload_i_reg[35] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[35]),
        .Q(Q[35]),
        .R(1'b0));
FDRE \m_payload_i_reg[36] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[36]),
        .Q(Q[36]),
        .R(1'b0));
FDRE \m_payload_i_reg[37] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[37]),
        .Q(Q[37]),
        .R(1'b0));
FDRE \m_payload_i_reg[38] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[38]),
        .Q(Q[38]),
        .R(1'b0));
FDRE \m_payload_i_reg[39] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[39]),
        .Q(Q[39]),
        .R(1'b0));
FDRE \m_payload_i_reg[3] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[3]),
        .Q(Q[3]),
        .R(1'b0));
FDRE \m_payload_i_reg[40] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[40]),
        .Q(Q[40]),
        .R(1'b0));
FDRE \m_payload_i_reg[41] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[41]),
        .Q(Q[41]),
        .R(1'b0));
FDRE \m_payload_i_reg[42] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[42]),
        .Q(Q[42]),
        .R(1'b0));
FDRE \m_payload_i_reg[43] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[43]),
        .Q(Q[43]),
        .R(1'b0));
FDRE \m_payload_i_reg[44] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[44]),
        .Q(Q[44]),
        .R(1'b0));
FDRE \m_payload_i_reg[45] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[45]),
        .Q(Q[45]),
        .R(1'b0));
FDRE \m_payload_i_reg[46] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[46]),
        .Q(Q[46]),
        .R(1'b0));
FDRE \m_payload_i_reg[47] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[47]),
        .Q(Q[47]),
        .R(1'b0));
FDRE \m_payload_i_reg[48] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[48]),
        .Q(Q[48]),
        .R(1'b0));
FDRE \m_payload_i_reg[49] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[49]),
        .Q(Q[49]),
        .R(1'b0));
FDRE \m_payload_i_reg[4] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[4]),
        .Q(Q[4]),
        .R(1'b0));
FDRE \m_payload_i_reg[50] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[50]),
        .Q(Q[50]),
        .R(1'b0));
FDRE \m_payload_i_reg[51] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[51]),
        .Q(Q[51]),
        .R(1'b0));
FDRE \m_payload_i_reg[52] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[52]),
        .Q(Q[52]),
        .R(1'b0));
FDRE \m_payload_i_reg[54] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[53]),
        .Q(Q[53]),
        .R(1'b0));
FDRE \m_payload_i_reg[55] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[54]),
        .Q(Q[54]),
        .R(1'b0));
FDRE \m_payload_i_reg[56] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[55]),
        .Q(Q[55]),
        .R(1'b0));
FDRE \m_payload_i_reg[57] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[56]),
        .Q(Q[56]),
        .R(1'b0));
FDRE \m_payload_i_reg[58] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[57]),
        .Q(Q[57]),
        .R(1'b0));
FDRE \m_payload_i_reg[59] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[58]),
        .Q(Q[58]),
        .R(1'b0));
FDRE \m_payload_i_reg[5] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[5]),
        .Q(Q[5]),
        .R(1'b0));
FDRE \m_payload_i_reg[60] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[59]),
        .Q(Q[59]),
        .R(1'b0));
FDRE \m_payload_i_reg[61] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[60]),
        .Q(Q[60]),
        .R(1'b0));
FDRE \m_payload_i_reg[6] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[6]),
        .Q(Q[6]),
        .R(1'b0));
FDRE \m_payload_i_reg[7] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[7]),
        .Q(Q[7]),
        .R(1'b0));
FDRE \m_payload_i_reg[8] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[8]),
        .Q(Q[8]),
        .R(1'b0));
FDRE \m_payload_i_reg[9] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1 ),
        .D(I9[9]),
        .Q(Q[9]),
        .R(1'b0));
LUT6 #(
    .INIT(64'hA2A2A2A280A2A2A2)) 
     m_valid_i_i_1__1
       (.I0(\n_0_aresetn_d_reg[1] ),
        .I1(s_axi_arready),
        .I2(s_axi_arvalid),
        .I3(I2),
        .I4(m_axi_arready_i),
        .I5(I5),
        .O(n_0_m_valid_i_i_1__1));
FDRE m_valid_i_reg
       (.C(I3),
        .CE(1'b1),
        .D(n_0_m_valid_i_i_1__1),
        .Q(sr_arvalid),
        .R(1'b0));
LUT5 #(
    .INIT(32'hA222A2AA)) 
     s_ready_i_i_1__1
       (.I0(\n_0_aresetn_d_reg[0] ),
        .I1(\n_0_aresetn_d_reg[1] ),
        .I2(I6),
        .I3(sr_arvalid),
        .I4(s_axi_arvalid),
        .O(n_0_s_ready_i_i_1__1));
FDRE s_ready_i_reg
       (.C(I3),
        .CE(1'b1),
        .D(n_0_s_ready_i_i_1__1),
        .Q(s_axi_arready),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_register_slice_v2_1_axic_register_slice" *) 
module axi_dwidth_converter_0_axi_register_slice_v2_1_axic_register_slice_0
   (sr_awvalid,
    s_axi_awready,
    I91,
    Q,
    O1,
    O2,
    O3,
    O4,
    O5,
    O6,
    cmd_first_word_i,
    CO,
    O7,
    O8,
    O9,
    O10,
    O17,
    O18,
    O19,
    O20,
    O21,
    O22,
    O23,
    O24,
    O25,
    O26,
    O27,
    O28,
    O29,
    O30,
    O31,
    O32,
    O33,
    O34,
    O35,
    O36,
    O37,
    O38,
    O39,
    O40,
    O41,
    O42,
    O43,
    O44,
    O45,
    O46,
    O47,
    O48,
    O49,
    O50,
    O51,
    O52,
    O53,
    O54,
    O55,
    O56,
    O57,
    O58,
    O59,
    O60,
    f_si_wrap_word_return,
    O61,
    O62,
    O63,
    O64,
    O65,
    O66,
    O67,
    O68,
    O69,
    O11,
    O71,
    O72,
    O12,
    O74,
    O75,
    O76,
    O77,
    O78,
    O79,
    O80,
    O81,
    O82,
    O83,
    O84,
    O85,
    O86,
    I3,
    s_axi_awvalid,
    I2,
    m_axi_awready_i,
    I1,
    I4,
    cmd_last_word_ii,
    load_si_ptr,
    I8,
    SR,
    D);
  output sr_awvalid;
  output s_axi_awready;
  output [25:0]I91;
  output [50:0]Q;
  output O1;
  output O2;
  output O3;
  output O4;
  output O5;
  output O6;
  output [5:0]cmd_first_word_i;
  output [0:0]CO;
  output O7;
  output O8;
  output O9;
  output O10;
  output O17;
  output O18;
  output O19;
  output O20;
  output O21;
  output O22;
  output O23;
  output O24;
  output O25;
  output O26;
  output O27;
  output O28;
  output O29;
  output O30;
  output O31;
  output O32;
  output O33;
  output O34;
  output O35;
  output O36;
  output O37;
  output O38;
  output O39;
  output O40;
  output O41;
  output O42;
  output O43;
  output O44;
  output O45;
  output O46;
  output O47;
  output O48;
  output O49;
  output O50;
  output O51;
  output O52;
  output O53;
  output O54;
  output O55;
  output O56;
  output O57;
  output O58;
  output O59;
  output O60;
  output f_si_wrap_word_return;
  output O61;
  output O62;
  output O63;
  output O64;
  output O65;
  output O66;
  output O67;
  output O68;
  output O69;
  output O11;
  output O71;
  output O72;
  output O12;
  output O74;
  output O75;
  output O76;
  output O77;
  output O78;
  output O79;
  output O80;
  output O81;
  output O82;
  output O83;
  output O84;
  output O85;
  output O86;
  input I3;
  input s_axi_awvalid;
  input I2;
  input m_axi_awready_i;
  input I1;
  input I4;
  input [0:0]cmd_last_word_ii;
  input load_si_ptr;
  input [0:0]I8;
  input [0:0]SR;
  input [60:0]D;

  wire [0:0]CO;
  wire [60:0]D;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire [0:0]I8;
  wire [25:0]I91;
  wire O1;
  wire O10;
  wire O11;
  wire O12;
  wire O17;
  wire O18;
  wire O19;
  wire O2;
  wire O20;
  wire O21;
  wire O22;
  wire O23;
  wire O24;
  wire O25;
  wire O26;
  wire O27;
  wire O28;
  wire O29;
  wire O3;
  wire O30;
  wire O31;
  wire O32;
  wire O33;
  wire O34;
  wire O35;
  wire O36;
  wire O37;
  wire O38;
  wire O39;
  wire O4;
  wire O40;
  wire O41;
  wire O42;
  wire O43;
  wire O44;
  wire O45;
  wire O46;
  wire O47;
  wire O48;
  wire O49;
  wire O5;
  wire O50;
  wire O51;
  wire O52;
  wire O53;
  wire O54;
  wire O55;
  wire O56;
  wire O57;
  wire O58;
  wire O59;
  wire O6;
  wire O60;
  wire O61;
  wire O62;
  wire O63;
  wire O64;
  wire O65;
  wire O66;
  wire O67;
  wire O68;
  wire O69;
  wire O7;
  wire O71;
  wire O72;
  wire O74;
  wire O75;
  wire O76;
  wire O77;
  wire O78;
  wire O79;
  wire O8;
  wire O80;
  wire O81;
  wire O82;
  wire O83;
  wire O84;
  wire O85;
  wire O86;
  wire O9;
  wire [50:0]Q;
  wire [0:0]SR;
  wire [5:1]\USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst/bytes ;
  wire [5:0]\USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst/f_mi_be_last_index1 ;
  wire \USE_WRITE.write_addr_inst/cmd_packed_wrap_i1 ;
  wire [5:0]cmd_first_word_i;
  wire [0:0]cmd_last_word_ii;
  wire f_si_wrap_word_return;
  wire load_si_ptr;
  wire m_axi_awready_i;
  wire \n_0_aresetn_d_reg[0] ;
  wire \n_0_aresetn_d_reg[1] ;
  wire \n_0_m_payload_i[0]_i_2 ;
  wire \n_0_m_payload_i[1]_i_2 ;
  wire \n_0_m_payload_i[1]_i_3 ;
  wire \n_0_m_payload_i[1]_i_4 ;
  wire \n_0_m_payload_i[2]_i_2 ;
  wire \n_0_m_payload_i[39]_i_10 ;
  wire \n_0_m_payload_i[39]_i_11 ;
  wire \n_0_m_payload_i[39]_i_2 ;
  wire \n_0_m_payload_i[39]_i_3 ;
  wire \n_0_m_payload_i[39]_i_5 ;
  wire \n_0_m_payload_i[39]_i_6 ;
  wire \n_0_m_payload_i[39]_i_7 ;
  wire \n_0_m_payload_i[39]_i_8 ;
  wire \n_0_m_payload_i[39]_i_9 ;
  wire \n_0_m_payload_i[3]_i_2 ;
  wire \n_0_m_payload_i[45]_i_3 ;
  wire \n_0_m_payload_i[45]_i_4 ;
  wire \n_0_m_payload_i[45]_i_5 ;
  wire \n_0_m_payload_i[45]_i_6 ;
  wire \n_0_m_payload_i[45]_i_7 ;
  wire \n_0_m_payload_i[48]_i_2 ;
  wire \n_0_m_payload_i[48]_i_3 ;
  wire \n_0_m_payload_i[48]_i_4 ;
  wire \n_0_m_payload_i[48]_i_5 ;
  wire \n_0_m_payload_i[48]_i_6 ;
  wire \n_0_m_payload_i[48]_i_7 ;
  wire \n_0_m_payload_i[48]_i_8 ;
  wire \n_0_m_payload_i[48]_i_9 ;
  wire \n_0_m_payload_i[51]_i_2 ;
  wire \n_0_m_payload_i[51]_i_22 ;
  wire \n_0_m_payload_i[51]_i_23 ;
  wire \n_0_m_payload_i[51]_i_24 ;
  wire \n_0_m_payload_i[51]_i_3 ;
  wire \n_0_m_payload_i[51]_i_4 ;
  wire \n_0_m_payload_i[51]_i_5 ;
  wire \n_0_m_payload_i[51]_i_7 ;
  wire \n_0_m_payload_i[51]_i_8 ;
  wire \n_0_m_payload_i[5]_i_2 ;
  wire \n_0_m_payload_i[5]_i_4 ;
  wire \n_0_m_payload_i[5]_i_5 ;
  wire \n_0_m_payload_i[61]_i_1__0 ;
  wire \n_0_m_payload_i[62]_i_2 ;
  wire \n_0_m_payload_i[62]_i_3 ;
  wire \n_0_m_payload_i[63]_i_3 ;
  wire \n_0_m_payload_i[64]_i_3 ;
  wire \n_0_m_payload_i[65]_i_5 ;
  wire \n_0_m_payload_i[65]_i_6 ;
  wire \n_0_m_payload_i[65]_i_7 ;
  wire \n_0_m_payload_i[65]_i_8 ;
  wire \n_0_m_payload_i[66]_i_4 ;
  wire \n_0_m_payload_i[67]_i_5 ;
  wire \n_0_m_payload_i[67]_i_6 ;
  wire \n_0_m_payload_i[67]_i_7 ;
  wire \n_0_m_payload_i[6]_i_2 ;
  wire \n_0_m_payload_i[6]_i_3 ;
  wire \n_0_m_payload_i[7]_i_2 ;
  wire \n_0_m_payload_i[8]_i_10 ;
  wire \n_0_m_payload_i[8]_i_11 ;
  wire \n_0_m_payload_i[8]_i_12 ;
  wire \n_0_m_payload_i[8]_i_13 ;
  wire \n_0_m_payload_i[8]_i_14 ;
  wire \n_0_m_payload_i[8]_i_15 ;
  wire \n_0_m_payload_i[8]_i_16 ;
  wire \n_0_m_payload_i[8]_i_2 ;
  wire \n_0_m_payload_i[8]_i_3 ;
  wire \n_0_m_payload_i[8]_i_5 ;
  wire \n_0_m_payload_i[8]_i_6 ;
  wire \n_0_m_payload_i[8]_i_7 ;
  wire \n_0_m_payload_i[8]_i_8 ;
  wire \n_0_m_payload_i[8]_i_9 ;
  wire \n_0_m_payload_i_reg[65]_i_2 ;
  wire n_0_m_valid_i_i_1__0;
  wire n_0_s_ready_i_i_1__0;
  wire \n_0_si_be[0]_i_6 ;
  wire \n_0_si_be[10]_i_6 ;
  wire \n_0_si_be[11]_i_6 ;
  wire \n_0_si_be[12]_i_6 ;
  wire \n_0_si_be[13]_i_6 ;
  wire \n_0_si_be[14]_i_6 ;
  wire \n_0_si_be[15]_i_6 ;
  wire \n_0_si_be[16]_i_6 ;
  wire \n_0_si_be[17]_i_6 ;
  wire \n_0_si_be[17]_i_7 ;
  wire \n_0_si_be[18]_i_6 ;
  wire \n_0_si_be[19]_i_6 ;
  wire \n_0_si_be[19]_i_7 ;
  wire \n_0_si_be[1]_i_6 ;
  wire \n_0_si_be[1]_i_7 ;
  wire \n_0_si_be[20]_i_6 ;
  wire \n_0_si_be[21]_i_6 ;
  wire \n_0_si_be[22]_i_6 ;
  wire \n_0_si_be[23]_i_6 ;
  wire \n_0_si_be[23]_i_7 ;
  wire \n_0_si_be[24]_i_6 ;
  wire \n_0_si_be[25]_i_6 ;
  wire \n_0_si_be[26]_i_6 ;
  wire \n_0_si_be[26]_i_7 ;
  wire \n_0_si_be[27]_i_6 ;
  wire \n_0_si_be[27]_i_7 ;
  wire \n_0_si_be[27]_i_8 ;
  wire \n_0_si_be[28]_i_6 ;
  wire \n_0_si_be[29]_i_6 ;
  wire \n_0_si_be[2]_i_6 ;
  wire \n_0_si_be[30]_i_6 ;
  wire \n_0_si_be[31]_i_9 ;
  wire \n_0_si_be[3]_i_6 ;
  wire \n_0_si_be[3]_i_7 ;
  wire \n_0_si_be[4]_i_6 ;
  wire \n_0_si_be[5]_i_6 ;
  wire \n_0_si_be[6]_i_6 ;
  wire \n_0_si_be[7]_i_6 ;
  wire \n_0_si_be[7]_i_7 ;
  wire \n_0_si_be[7]_i_8 ;
  wire \n_0_si_be[8]_i_6 ;
  wire \n_0_si_be[9]_i_6 ;
  wire \n_0_si_wrap_be_next[0]_i_3 ;
  wire \n_0_si_wrap_be_next[0]_i_4 ;
  wire \n_0_si_wrap_be_next[0]_i_5 ;
  wire \n_0_si_wrap_be_next[0]_i_6 ;
  wire \n_0_si_wrap_be_next[10]_i_2 ;
  wire \n_0_si_wrap_be_next[12]_i_2 ;
  wire \n_0_si_wrap_be_next[12]_i_3 ;
  wire \n_0_si_wrap_be_next[13]_i_2 ;
  wire \n_0_si_wrap_be_next[13]_i_3 ;
  wire \n_0_si_wrap_be_next[16]_i_2 ;
  wire \n_0_si_wrap_be_next[16]_i_3 ;
  wire \n_0_si_wrap_be_next[17]_i_2 ;
  wire \n_0_si_wrap_be_next[17]_i_3 ;
  wire \n_0_si_wrap_be_next[18]_i_2 ;
  wire \n_0_si_wrap_be_next[18]_i_3 ;
  wire \n_0_si_wrap_be_next[20]_i_2 ;
  wire \n_0_si_wrap_be_next[20]_i_3 ;
  wire \n_0_si_wrap_be_next[21]_i_2 ;
  wire \n_0_si_wrap_be_next[22]_i_2 ;
  wire \n_0_si_wrap_be_next[24]_i_2 ;
  wire \n_0_si_wrap_be_next[25]_i_2 ;
  wire \n_0_si_wrap_be_next[25]_i_3 ;
  wire \n_0_si_wrap_be_next[25]_i_4 ;
  wire \n_0_si_wrap_be_next[26]_i_2 ;
  wire \n_0_si_wrap_be_next[28]_i_2 ;
  wire \n_0_si_wrap_be_next[28]_i_3 ;
  wire \n_0_si_wrap_be_next[29]_i_2 ;
  wire \n_0_si_wrap_be_next[2]_i_2 ;
  wire \n_0_si_wrap_be_next[30]_i_3 ;
  wire \n_0_si_wrap_be_next[3]_i_2 ;
  wire \n_0_si_wrap_be_next[4]_i_2 ;
  wire \n_0_si_wrap_be_next[8]_i_2 ;
  wire \n_0_si_wrap_be_next[8]_i_3 ;
  wire \n_0_si_wrap_cnt[0]_i_3 ;
  wire \n_0_si_wrap_cnt[2]_i_4 ;
  wire \n_0_si_wrap_cnt[2]_i_5 ;
  wire \n_0_si_wrap_cnt[3]_i_4 ;
  wire \n_0_si_wrap_cnt[3]_i_5 ;
  wire \n_0_si_wrap_word_next[0]_i_2 ;
  wire \n_1_m_payload_i_reg[39]_i_4 ;
  wire \n_1_m_payload_i_reg[65]_i_2 ;
  wire \n_1_m_payload_i_reg[8]_i_4 ;
  wire \n_2_m_payload_i_reg[39]_i_4 ;
  wire \n_2_m_payload_i_reg[65]_i_2 ;
  wire \n_2_m_payload_i_reg[8]_i_4 ;
  wire \n_3_m_payload_i_reg[39]_i_4 ;
  wire \n_3_m_payload_i_reg[65]_i_2 ;
  wire \n_3_m_payload_i_reg[67]_i_3 ;
  wire \n_3_m_payload_i_reg[8]_i_4 ;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire [4:0]sr_awaddr;
  wire [7:1]sr_awlen;
  wire sr_awvalid;
  wire [3:0]\NLW_m_payload_i_reg[39]_i_4_O_UNCONNECTED ;
  wire [3:1]\NLW_m_payload_i_reg[67]_i_3_CO_UNCONNECTED ;
  wire [3:2]\NLW_m_payload_i_reg[67]_i_3_O_UNCONNECTED ;
  wire [3:0]\NLW_m_payload_i_reg[8]_i_4_O_UNCONNECTED ;

FDRE #(
    .INIT(1'b0)) 
     \aresetn_d_reg[0] 
       (.C(I3),
        .CE(1'b1),
        .D(1'b1),
        .Q(\n_0_aresetn_d_reg[0] ),
        .R(SR));
FDRE #(
    .INIT(1'b0)) 
     \aresetn_d_reg[1] 
       (.C(I3),
        .CE(1'b1),
        .D(\n_0_aresetn_d_reg[0] ),
        .Q(\n_0_aresetn_d_reg[1] ),
        .R(SR));
LUT6 #(
    .INIT(64'h8888888888A8A8A8)) 
     \m_payload_i[0]_i_1 
       (.I0(sr_awaddr[0]),
        .I1(\n_0_m_payload_i[5]_i_2 ),
        .I2(CO),
        .I3(\n_0_m_payload_i[1]_i_2 ),
        .I4(\n_0_m_payload_i[0]_i_2 ),
        .I5(\n_0_m_payload_i[1]_i_4 ),
        .O(I91[0]));
(* SOFT_HLUTNM = "soft_lutpair277" *) 
   LUT4 #(
    .INIT(16'h0010)) 
     \m_payload_i[0]_i_2 
       (.I0(Q[32]),
        .I1(Q[31]),
        .I2(Q[39]),
        .I3(Q[30]),
        .O(\n_0_m_payload_i[0]_i_2 ));
LUT6 #(
    .INIT(64'h8888888888A8A8A8)) 
     \m_payload_i[1]_i_1 
       (.I0(sr_awaddr[1]),
        .I1(\n_0_m_payload_i[5]_i_2 ),
        .I2(CO),
        .I3(\n_0_m_payload_i[1]_i_2 ),
        .I4(\n_0_m_payload_i[1]_i_3 ),
        .I5(\n_0_m_payload_i[1]_i_4 ),
        .O(I91[1]));
LUT2 #(
    .INIT(4'hB)) 
     \m_payload_i[1]_i_2 
       (.I0(Q[31]),
        .I1(Q[32]),
        .O(\n_0_m_payload_i[1]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair276" *) 
   LUT5 #(
    .INIT(32'h30113000)) 
     \m_payload_i[1]_i_3 
       (.I0(Q[32]),
        .I1(Q[31]),
        .I2(Q[39]),
        .I3(Q[30]),
        .I4(sr_awlen[1]),
        .O(\n_0_m_payload_i[1]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair300" *) 
   LUT2 #(
    .INIT(4'hB)) 
     \m_payload_i[1]_i_4 
       (.I0(Q[33]),
        .I1(Q[34]),
        .O(\n_0_m_payload_i[1]_i_4 ));
LUT6 #(
    .INIT(64'h888888A888888888)) 
     \m_payload_i[2]_i_1 
       (.I0(sr_awaddr[2]),
        .I1(\n_0_m_payload_i[5]_i_2 ),
        .I2(CO),
        .I3(\n_0_m_payload_i[2]_i_2 ),
        .I4(Q[33]),
        .I5(Q[34]),
        .O(I91[2]));
LUT6 #(
    .INIT(64'h0000000000CCF0AA)) 
     \m_payload_i[2]_i_2 
       (.I0(Q[40]),
        .I1(sr_awlen[1]),
        .I2(Q[39]),
        .I3(Q[31]),
        .I4(Q[30]),
        .I5(Q[32]),
        .O(\n_0_m_payload_i[2]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair310" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \m_payload_i[35]_i_1 
       (.I0(Q[30]),
        .I1(O9),
        .O(I91[9]));
LUT6 #(
    .INIT(64'hFBF0F0F0F0F0F0F0)) 
     \m_payload_i[38]_i_1 
       (.I0(\n_0_m_payload_i[39]_i_2 ),
        .I1(\n_0_m_payload_i[39]_i_3 ),
        .I2(Q[33]),
        .I3(Q[34]),
        .I4(Q[36]),
        .I5(CO),
        .O(I91[10]));
LUT6 #(
    .INIT(64'hF400FF00FF00FF00)) 
     \m_payload_i[39]_i_1 
       (.I0(\n_0_m_payload_i[39]_i_2 ),
        .I1(\n_0_m_payload_i[39]_i_3 ),
        .I2(Q[33]),
        .I3(Q[34]),
        .I4(Q[36]),
        .I5(CO),
        .O(I91[11]));
LUT5 #(
    .INIT(32'h00780F00)) 
     \m_payload_i[39]_i_10 
       (.I0(Q[30]),
        .I1(Q[31]),
        .I2(Q[41]),
        .I3(Q[32]),
        .I4(Q[40]),
        .O(\n_0_m_payload_i[39]_i_10 ));
LUT5 #(
    .INIT(32'h30704808)) 
     \m_payload_i[39]_i_11 
       (.I0(Q[31]),
        .I1(Q[32]),
        .I2(Q[39]),
        .I3(Q[30]),
        .I4(sr_awlen[1]),
        .O(\n_0_m_payload_i[39]_i_11 ));
(* SOFT_HLUTNM = "soft_lutpair293" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \m_payload_i[39]_i_2 
       (.I0(sr_awlen[4]),
        .I1(sr_awlen[5]),
        .I2(sr_awlen[7]),
        .I3(sr_awlen[6]),
        .O(\n_0_m_payload_i[39]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair292" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     \m_payload_i[39]_i_3 
       (.I0(Q[40]),
        .I1(Q[41]),
        .I2(Q[39]),
        .I3(sr_awlen[1]),
        .O(\n_0_m_payload_i[39]_i_3 ));
LUT5 #(
    .INIT(32'h00010013)) 
     \m_payload_i[39]_i_5 
       (.I0(sr_awlen[4]),
        .I1(Q[32]),
        .I2(Q[30]),
        .I3(Q[31]),
        .I4(sr_awlen[5]),
        .O(\n_0_m_payload_i[39]_i_5 ));
LUT5 #(
    .INIT(32'h00151555)) 
     \m_payload_i[39]_i_6 
       (.I0(Q[32]),
        .I1(Q[31]),
        .I2(Q[30]),
        .I3(Q[41]),
        .I4(Q[40]),
        .O(\n_0_m_payload_i[39]_i_6 ));
LUT5 #(
    .INIT(32'h010F13FF)) 
     \m_payload_i[39]_i_7 
       (.I0(Q[30]),
        .I1(Q[31]),
        .I2(sr_awlen[1]),
        .I3(Q[32]),
        .I4(Q[39]),
        .O(\n_0_m_payload_i[39]_i_7 ));
LUT2 #(
    .INIT(4'h1)) 
     \m_payload_i[39]_i_8 
       (.I0(sr_awlen[7]),
        .I1(sr_awlen[6]),
        .O(\n_0_m_payload_i[39]_i_8 ));
LUT5 #(
    .INIT(32'h00560254)) 
     \m_payload_i[39]_i_9 
       (.I0(sr_awlen[4]),
        .I1(Q[31]),
        .I2(Q[32]),
        .I3(sr_awlen[5]),
        .I4(Q[30]),
        .O(\n_0_m_payload_i[39]_i_9 ));
LUT6 #(
    .INIT(64'h888888A888888888)) 
     \m_payload_i[3]_i_1 
       (.I0(sr_awaddr[3]),
        .I1(\n_0_m_payload_i[5]_i_2 ),
        .I2(CO),
        .I3(\n_0_m_payload_i[3]_i_2 ),
        .I4(Q[33]),
        .I5(Q[34]),
        .O(I91[3]));
(* SOFT_HLUTNM = "soft_lutpair297" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \m_payload_i[3]_i_2 
       (.I0(O17),
        .I1(Q[32]),
        .O(\n_0_m_payload_i[3]_i_2 ));
LUT5 #(
    .INIT(32'h77878887)) 
     \m_payload_i[44]_i_1 
       (.I0(\n_0_m_payload_i[45]_i_4 ),
        .I1(cmd_last_word_ii),
        .I2(\n_0_m_payload_i[45]_i_5 ),
        .I3(O9),
        .I4(Q[39]),
        .O(I91[12]));
LUT6 #(
    .INIT(64'h478B8B8B748B8B8B)) 
     \m_payload_i[45]_i_1 
       (.I0(sr_awlen[1]),
        .I1(O9),
        .I2(\n_0_m_payload_i[45]_i_3 ),
        .I3(cmd_last_word_ii),
        .I4(\n_0_m_payload_i[45]_i_4 ),
        .I5(\n_0_m_payload_i[45]_i_5 ),
        .O(I91[13]));
(* SOFT_HLUTNM = "soft_lutpair282" *) 
   LUT5 #(
    .INIT(32'h4F4F4FFF)) 
     \m_payload_i[45]_i_2 
       (.I0(\n_0_m_payload_i[39]_i_2 ),
        .I1(\n_0_m_payload_i[39]_i_3 ),
        .I2(Q[36]),
        .I3(Q[33]),
        .I4(Q[34]),
        .O(O9));
LUT6 #(
    .INIT(64'hF0F05030FFFF5F3F)) 
     \m_payload_i[45]_i_3 
       (.I0(Q[40]),
        .I1(Q[41]),
        .I2(Q[32]),
        .I3(Q[30]),
        .I4(Q[31]),
        .I5(\n_0_m_payload_i[45]_i_6 ),
        .O(\n_0_m_payload_i[45]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair282" *) 
   LUT5 #(
    .INIT(32'h00D00000)) 
     \m_payload_i[45]_i_4 
       (.I0(\n_0_m_payload_i[39]_i_3 ),
        .I1(\n_0_m_payload_i[39]_i_2 ),
        .I2(Q[33]),
        .I3(Q[34]),
        .I4(Q[36]),
        .O(\n_0_m_payload_i[45]_i_4 ));
LUT6 #(
    .INIT(64'hF0F05030FFFF5F3F)) 
     \m_payload_i[45]_i_5 
       (.I0(sr_awlen[1]),
        .I1(Q[40]),
        .I2(Q[32]),
        .I3(Q[30]),
        .I4(Q[31]),
        .I5(\n_0_m_payload_i[45]_i_7 ),
        .O(\n_0_m_payload_i[45]_i_5 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \m_payload_i[45]_i_6 
       (.I0(sr_awlen[4]),
        .I1(sr_awlen[5]),
        .I2(Q[31]),
        .I3(sr_awlen[6]),
        .I4(Q[30]),
        .I5(sr_awlen[7]),
        .O(\n_0_m_payload_i[45]_i_6 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \m_payload_i[45]_i_7 
       (.I0(Q[41]),
        .I1(sr_awlen[4]),
        .I2(Q[31]),
        .I3(sr_awlen[5]),
        .I4(Q[30]),
        .I5(sr_awlen[6]),
        .O(\n_0_m_payload_i[45]_i_7 ));
(* SOFT_HLUTNM = "soft_lutpair309" *) 
   LUT3 #(
    .INIT(8'h87)) 
     \m_payload_i[46]_i_1 
       (.I0(\n_0_m_payload_i[51]_i_5 ),
        .I1(cmd_last_word_ii),
        .I2(\n_0_m_payload_i[48]_i_2 ),
        .O(I91[14]));
(* SOFT_HLUTNM = "soft_lutpair281" *) 
   LUT4 #(
    .INIT(16'h20DF)) 
     \m_payload_i[47]_i_1 
       (.I0(\n_0_m_payload_i[51]_i_5 ),
        .I1(\n_0_m_payload_i[48]_i_2 ),
        .I2(cmd_last_word_ii),
        .I3(\n_0_m_payload_i[48]_i_3 ),
        .O(I91[15]));
(* SOFT_HLUTNM = "soft_lutpair281" *) 
   LUT5 #(
    .INIT(32'h0200FDFF)) 
     \m_payload_i[48]_i_1 
       (.I0(\n_0_m_payload_i[51]_i_5 ),
        .I1(\n_0_m_payload_i[48]_i_2 ),
        .I2(\n_0_m_payload_i[48]_i_3 ),
        .I3(cmd_last_word_ii),
        .I4(\n_0_m_payload_i[48]_i_4 ),
        .O(I91[16]));
(* SOFT_HLUTNM = "soft_lutpair306" *) 
   LUT3 #(
    .INIT(8'h3A)) 
     \m_payload_i[48]_i_2 
       (.I0(\n_0_m_payload_i[48]_i_5 ),
        .I1(Q[40]),
        .I2(O9),
        .O(\n_0_m_payload_i[48]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair308" *) 
   LUT3 #(
    .INIT(8'h74)) 
     \m_payload_i[48]_i_3 
       (.I0(Q[41]),
        .I1(O9),
        .I2(\n_0_m_payload_i[48]_i_6 ),
        .O(\n_0_m_payload_i[48]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair310" *) 
   LUT3 #(
    .INIT(8'h74)) 
     \m_payload_i[48]_i_4 
       (.I0(sr_awlen[4]),
        .I1(O9),
        .I2(\n_0_m_payload_i[48]_i_7 ),
        .O(\n_0_m_payload_i[48]_i_4 ));
LUT6 #(
    .INIT(64'h00000000F3F7FFF7)) 
     \m_payload_i[48]_i_5 
       (.I0(sr_awlen[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(Q[30]),
        .I4(Q[41]),
        .I5(\n_0_m_payload_i[48]_i_8 ),
        .O(\n_0_m_payload_i[48]_i_5 ));
LUT6 #(
    .INIT(64'hF30FF50FF3FFF5FF)) 
     \m_payload_i[48]_i_6 
       (.I0(sr_awlen[5]),
        .I1(sr_awlen[4]),
        .I2(Q[31]),
        .I3(Q[32]),
        .I4(Q[30]),
        .I5(\n_0_m_payload_i[48]_i_9 ),
        .O(\n_0_m_payload_i[48]_i_6 ));
LUT6 #(
    .INIT(64'hF50FF3FFF5FFF3FF)) 
     \m_payload_i[48]_i_7 
       (.I0(sr_awlen[5]),
        .I1(sr_awlen[6]),
        .I2(Q[31]),
        .I3(Q[32]),
        .I4(Q[30]),
        .I5(sr_awlen[7]),
        .O(\n_0_m_payload_i[48]_i_7 ));
LUT6 #(
    .INIT(64'h00000000F0AACC00)) 
     \m_payload_i[48]_i_8 
       (.I0(sr_awlen[7]),
        .I1(sr_awlen[6]),
        .I2(sr_awlen[5]),
        .I3(Q[31]),
        .I4(Q[30]),
        .I5(Q[32]),
        .O(\n_0_m_payload_i[48]_i_8 ));
(* SOFT_HLUTNM = "soft_lutpair287" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \m_payload_i[48]_i_9 
       (.I0(sr_awlen[6]),
        .I1(Q[30]),
        .I2(sr_awlen[7]),
        .O(\n_0_m_payload_i[48]_i_9 ));
(* SOFT_HLUTNM = "soft_lutpair279" *) 
   LUT4 #(
    .INIT(16'h20DF)) 
     \m_payload_i[49]_i_1 
       (.I0(\n_0_m_payload_i[51]_i_5 ),
        .I1(\n_0_m_payload_i[51]_i_2 ),
        .I2(cmd_last_word_ii),
        .I3(\n_0_m_payload_i[51]_i_4 ),
        .O(I91[17]));
LUT6 #(
    .INIT(64'h888888A888888888)) 
     \m_payload_i[4]_i_1 
       (.I0(sr_awaddr[4]),
        .I1(\n_0_m_payload_i[5]_i_2 ),
        .I2(CO),
        .I3(O8),
        .I4(Q[33]),
        .I5(Q[34]),
        .O(I91[4]));
(* SOFT_HLUTNM = "soft_lutpair290" *) 
   LUT5 #(
    .INIT(32'h0A3A0A0A)) 
     \m_payload_i[4]_i_2 
       (.I0(\n_0_m_payload_i[8]_i_6 ),
        .I1(Q[31]),
        .I2(Q[32]),
        .I3(Q[30]),
        .I4(Q[39]),
        .O(O8));
(* SOFT_HLUTNM = "soft_lutpair279" *) 
   LUT5 #(
    .INIT(32'hFBFF0400)) 
     \m_payload_i[50]_i_1 
       (.I0(\n_0_m_payload_i[51]_i_2 ),
        .I1(\n_0_m_payload_i[51]_i_5 ),
        .I2(\n_0_m_payload_i[51]_i_4 ),
        .I3(cmd_last_word_ii),
        .I4(\n_0_m_payload_i[51]_i_3 ),
        .O(I91[18]));
LUT6 #(
    .INIT(64'hFFFFFFFF04000000)) 
     \m_payload_i[51]_i_1 
       (.I0(\n_0_m_payload_i[51]_i_2 ),
        .I1(\n_0_m_payload_i[51]_i_3 ),
        .I2(\n_0_m_payload_i[51]_i_4 ),
        .I3(\n_0_m_payload_i[51]_i_5 ),
        .I4(cmd_last_word_ii),
        .I5(\n_0_m_payload_i[51]_i_7 ),
        .O(I91[19]));
LUT5 #(
    .INIT(32'hBFFF0000)) 
     \m_payload_i[51]_i_10 
       (.I0(Q[33]),
        .I1(Q[34]),
        .I2(O7),
        .I3(CO),
        .I4(Q[0]),
        .O(cmd_first_word_i[5]));
LUT6 #(
    .INIT(64'hEF000000EF00EF00)) 
     \m_payload_i[51]_i_11 
       (.I0(\n_0_m_payload_i[1]_i_4 ),
        .I1(O8),
        .I2(CO),
        .I3(sr_awaddr[4]),
        .I4(\n_0_m_payload_i[51]_i_22 ),
        .I5(Q[32]),
        .O(cmd_first_word_i[4]));
LUT6 #(
    .INIT(64'h00000000FBFF0000)) 
     \m_payload_i[51]_i_14 
       (.I0(Q[33]),
        .I1(Q[34]),
        .I2(\n_0_m_payload_i[3]_i_2 ),
        .I3(CO),
        .I4(sr_awaddr[3]),
        .I5(Q[32]),
        .O(cmd_first_word_i[3]));
LUT6 #(
    .INIT(64'h00000000FBFF0000)) 
     \m_payload_i[51]_i_15 
       (.I0(Q[33]),
        .I1(Q[34]),
        .I2(\n_0_m_payload_i[2]_i_2 ),
        .I3(CO),
        .I4(sr_awaddr[2]),
        .I5(\n_0_m_payload_i[51]_i_23 ),
        .O(cmd_first_word_i[2]));
LUT6 #(
    .INIT(64'h000000EF00000000)) 
     \m_payload_i[51]_i_16 
       (.I0(\n_0_m_payload_i[1]_i_3 ),
        .I1(\n_0_m_payload_i[1]_i_4 ),
        .I2(CO),
        .I3(Q[32]),
        .I4(Q[31]),
        .I5(sr_awaddr[1]),
        .O(cmd_first_word_i[1]));
LUT6 #(
    .INIT(64'h0000000B00000000)) 
     \m_payload_i[51]_i_17 
       (.I0(\n_0_m_payload_i[51]_i_24 ),
        .I1(CO),
        .I2(Q[32]),
        .I3(Q[30]),
        .I4(Q[31]),
        .I5(sr_awaddr[0]),
        .O(cmd_first_word_i[0]));
(* SOFT_HLUTNM = "soft_lutpair309" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \m_payload_i[51]_i_2 
       (.I0(\n_0_m_payload_i[48]_i_2 ),
        .I1(\n_0_m_payload_i[48]_i_4 ),
        .I2(\n_0_m_payload_i[48]_i_3 ),
        .O(\n_0_m_payload_i[51]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair316" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \m_payload_i[51]_i_22 
       (.I0(Q[30]),
        .I1(Q[31]),
        .O(\n_0_m_payload_i[51]_i_22 ));
(* SOFT_HLUTNM = "soft_lutpair307" *) 
   LUT3 #(
    .INIT(8'hF8)) 
     \m_payload_i[51]_i_23 
       (.I0(Q[30]),
        .I1(Q[31]),
        .I2(Q[32]),
        .O(\n_0_m_payload_i[51]_i_23 ));
LUT6 #(
    .INIT(64'hDDDDDDDDDDDFDDDD)) 
     \m_payload_i[51]_i_24 
       (.I0(Q[34]),
        .I1(Q[33]),
        .I2(Q[31]),
        .I3(Q[32]),
        .I4(Q[39]),
        .I5(Q[30]),
        .O(\n_0_m_payload_i[51]_i_24 ));
(* SOFT_HLUTNM = "soft_lutpair278" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \m_payload_i[51]_i_25 
       (.I0(Q[33]),
        .I1(Q[34]),
        .O(O86));
(* SOFT_HLUTNM = "soft_lutpair288" *) 
   LUT5 #(
    .INIT(32'h30BB3088)) 
     \m_payload_i[51]_i_26 
       (.I0(Q[39]),
        .I1(Q[31]),
        .I2(sr_awlen[1]),
        .I3(Q[30]),
        .I4(Q[40]),
        .O(O85));
(* SOFT_HLUTNM = "soft_lutpair288" *) 
   LUT4 #(
    .INIT(16'h00E2)) 
     \m_payload_i[51]_i_27 
       (.I0(sr_awlen[1]),
        .I1(Q[30]),
        .I2(Q[39]),
        .I3(Q[31]),
        .O(O10));
LUT6 #(
    .INIT(64'h8888B88888888888)) 
     \m_payload_i[51]_i_3 
       (.I0(sr_awlen[6]),
        .I1(O9),
        .I2(Q[30]),
        .I3(sr_awlen[7]),
        .I4(Q[31]),
        .I5(Q[32]),
        .O(\n_0_m_payload_i[51]_i_3 ));
LUT6 #(
    .INIT(64'h7474747777777477)) 
     \m_payload_i[51]_i_4 
       (.I0(sr_awlen[5]),
        .I1(O9),
        .I2(\n_0_m_payload_i[1]_i_2 ),
        .I3(sr_awlen[7]),
        .I4(\n_0_m_payload_i[51]_i_8 ),
        .I5(sr_awlen[6]),
        .O(\n_0_m_payload_i[51]_i_4 ));
LUT5 #(
    .INIT(32'h88008B00)) 
     \m_payload_i[51]_i_5 
       (.I0(sr_awlen[1]),
        .I1(O9),
        .I2(\n_0_m_payload_i[45]_i_3 ),
        .I3(\n_0_m_payload_i[45]_i_4 ),
        .I4(\n_0_m_payload_i[45]_i_5 ),
        .O(\n_0_m_payload_i[51]_i_5 ));
(* SOFT_HLUTNM = "soft_lutpair293" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \m_payload_i[51]_i_7 
       (.I0(O9),
        .I1(sr_awlen[7]),
        .O(\n_0_m_payload_i[51]_i_7 ));
(* SOFT_HLUTNM = "soft_lutpair307" *) 
   LUT3 #(
    .INIT(8'h4F)) 
     \m_payload_i[51]_i_8 
       (.I0(Q[31]),
        .I1(Q[30]),
        .I2(Q[32]),
        .O(\n_0_m_payload_i[51]_i_8 ));
LUT6 #(
    .INIT(64'h8888A88888888888)) 
     \m_payload_i[5]_i_1 
       (.I0(Q[0]),
        .I1(\n_0_m_payload_i[5]_i_2 ),
        .I2(CO),
        .I3(O7),
        .I4(Q[33]),
        .I5(Q[34]),
        .O(I91[5]));
LUT3 #(
    .INIT(8'h07)) 
     \m_payload_i[5]_i_2 
       (.I0(\n_0_m_payload_i[8]_i_3 ),
        .I1(\USE_WRITE.write_addr_inst/cmd_packed_wrap_i1 ),
        .I2(\n_0_m_payload_i[5]_i_4 ),
        .O(\n_0_m_payload_i[5]_i_2 ));
LUT6 #(
    .INIT(64'hF0F03050FFFF3F5F)) 
     \m_payload_i[5]_i_3 
       (.I0(sr_awlen[1]),
        .I1(Q[39]),
        .I2(Q[32]),
        .I3(Q[30]),
        .I4(Q[31]),
        .I5(\n_0_m_payload_i[5]_i_5 ),
        .O(O7));
LUT6 #(
    .INIT(64'h0080008000000080)) 
     \m_payload_i[5]_i_4 
       (.I0(CO),
        .I1(Q[36]),
        .I2(Q[34]),
        .I3(Q[33]),
        .I4(\n_0_m_payload_i[39]_i_3 ),
        .I5(\n_0_m_payload_i[39]_i_2 ),
        .O(\n_0_m_payload_i[5]_i_4 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \m_payload_i[5]_i_5 
       (.I0(Q[40]),
        .I1(Q[41]),
        .I2(Q[31]),
        .I3(sr_awlen[4]),
        .I4(Q[30]),
        .I5(sr_awlen[5]),
        .O(\n_0_m_payload_i[5]_i_5 ));
LUT1 #(
    .INIT(2'h1)) 
     \m_payload_i[61]_i_1__0 
       (.I0(sr_awvalid),
        .O(\n_0_m_payload_i[61]_i_1__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFCECF)) 
     \m_payload_i[62]_i_1 
       (.I0(\USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst/f_mi_be_last_index1 [0]),
        .I1(\n_0_m_payload_i[62]_i_2 ),
        .I2(Q[34]),
        .I3(Q[33]),
        .I4(\n_0_m_payload_i[62]_i_3 ),
        .I5(\n_0_m_payload_i[63]_i_3 ),
        .O(I91[20]));
LUT6 #(
    .INIT(64'hAAAAAAAA00000020)) 
     \m_payload_i[62]_i_2 
       (.I0(Q[34]),
        .I1(Q[30]),
        .I2(Q[39]),
        .I3(Q[31]),
        .I4(Q[32]),
        .I5(sr_awaddr[0]),
        .O(\n_0_m_payload_i[62]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair315" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \m_payload_i[62]_i_3 
       (.I0(Q[30]),
        .I1(Q[31]),
        .O(\n_0_m_payload_i[62]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFFFFFEEE2FFF3)) 
     \m_payload_i[63]_i_1 
       (.I0(\USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst/f_mi_be_last_index1 [1]),
        .I1(Q[34]),
        .I2(\USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst/bytes [1]),
        .I3(sr_awaddr[1]),
        .I4(Q[33]),
        .I5(\n_0_m_payload_i[63]_i_3 ),
        .O(I91[21]));
(* SOFT_HLUTNM = "soft_lutpair276" *) 
   LUT5 #(
    .INIT(32'h000000E2)) 
     \m_payload_i[63]_i_2 
       (.I0(sr_awlen[1]),
        .I1(Q[30]),
        .I2(Q[39]),
        .I3(Q[31]),
        .I4(Q[32]),
        .O(\USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst/bytes [1]));
(* SOFT_HLUTNM = "soft_lutpair316" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \m_payload_i[63]_i_3 
       (.I0(Q[31]),
        .I1(Q[32]),
        .O(\n_0_m_payload_i[63]_i_3 ));
LUT5 #(
    .INIT(32'hFFFFEEE2)) 
     \m_payload_i[64]_i_1 
       (.I0(\USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst/f_mi_be_last_index1 [2]),
        .I1(Q[34]),
        .I2(\USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst/bytes [2]),
        .I3(sr_awaddr[2]),
        .I4(\n_0_m_payload_i[64]_i_3 ),
        .O(I91[22]));
LUT6 #(
    .INIT(64'h000000CC00F000AA)) 
     \m_payload_i[64]_i_2 
       (.I0(Q[40]),
        .I1(sr_awlen[1]),
        .I2(Q[39]),
        .I3(Q[32]),
        .I4(Q[31]),
        .I5(Q[30]),
        .O(\USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst/bytes [2]));
(* SOFT_HLUTNM = "soft_lutpair275" *) 
   LUT5 #(
    .INIT(32'h11FFF111)) 
     \m_payload_i[64]_i_3 
       (.I0(Q[34]),
        .I1(Q[33]),
        .I2(Q[30]),
        .I3(Q[31]),
        .I4(Q[32]),
        .O(\n_0_m_payload_i[64]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFEEE2FFFFFFF3)) 
     \m_payload_i[65]_i_1 
       (.I0(\USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst/f_mi_be_last_index1 [3]),
        .I1(Q[34]),
        .I2(\USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst/bytes [3]),
        .I3(sr_awaddr[3]),
        .I4(O2),
        .I5(Q[33]),
        .O(I91[23]));
LUT6 #(
    .INIT(64'h00F000AA00CC00AA)) 
     \m_payload_i[65]_i_3 
       (.I0(O3),
        .I1(sr_awlen[1]),
        .I2(Q[39]),
        .I3(Q[32]),
        .I4(Q[31]),
        .I5(Q[30]),
        .O(\USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst/bytes [3]));
(* SOFT_HLUTNM = "soft_lutpair286" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \m_payload_i[65]_i_4 
       (.I0(Q[32]),
        .I1(Q[31]),
        .O(O2));
LUT2 #(
    .INIT(4'h6)) 
     \m_payload_i[65]_i_5 
       (.I0(sr_awaddr[3]),
        .I1(\USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst/bytes [3]),
        .O(\n_0_m_payload_i[65]_i_5 ));
LUT2 #(
    .INIT(4'h6)) 
     \m_payload_i[65]_i_6 
       (.I0(sr_awaddr[2]),
        .I1(\USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst/bytes [2]),
        .O(\n_0_m_payload_i[65]_i_6 ));
LUT6 #(
    .INIT(64'hA9AAA9A9A9AAAAAA)) 
     \m_payload_i[65]_i_7 
       (.I0(sr_awaddr[1]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(Q[39]),
        .I4(Q[30]),
        .I5(sr_awlen[1]),
        .O(\n_0_m_payload_i[65]_i_7 ));
LUT5 #(
    .INIT(32'hAAAAA9AA)) 
     \m_payload_i[65]_i_8 
       (.I0(sr_awaddr[0]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(Q[39]),
        .I4(Q[30]),
        .O(\n_0_m_payload_i[65]_i_8 ));
LUT6 #(
    .INIT(64'hFFFFFFFFEEE2FFF3)) 
     \m_payload_i[66]_i_1 
       (.I0(\USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst/f_mi_be_last_index1 [4]),
        .I1(Q[34]),
        .I2(\USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst/bytes [4]),
        .I3(sr_awaddr[4]),
        .I4(Q[33]),
        .I5(O1),
        .O(I91[24]));
(* SOFT_HLUTNM = "soft_lutpair277" *) 
   LUT5 #(
    .INIT(32'h333B0008)) 
     \m_payload_i[66]_i_2 
       (.I0(Q[39]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(Q[30]),
        .I4(\n_0_m_payload_i[66]_i_4 ),
        .O(\USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst/bytes [4]));
(* SOFT_HLUTNM = "soft_lutpair302" *) 
   LUT3 #(
    .INIT(8'h08)) 
     \m_payload_i[66]_i_3 
       (.I0(Q[30]),
        .I1(Q[32]),
        .I2(Q[31]),
        .O(O1));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \m_payload_i[66]_i_4 
       (.I0(sr_awlen[1]),
        .I1(Q[40]),
        .I2(Q[31]),
        .I3(Q[41]),
        .I4(Q[30]),
        .I5(sr_awlen[4]),
        .O(\n_0_m_payload_i[66]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair278" *) 
   LUT5 #(
    .INIT(32'hDDDDD0DD)) 
     \m_payload_i[67]_i_2 
       (.I0(Q[33]),
        .I1(\USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst/f_mi_be_last_index1 [5]),
        .I2(\USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst/bytes [5]),
        .I3(Q[34]),
        .I4(Q[0]),
        .O(I91[25]));
LUT6 #(
    .INIT(64'h3A0A3A3A3A0A0A0A)) 
     \m_payload_i[67]_i_4 
       (.I0(\n_0_m_payload_i[67]_i_7 ),
        .I1(Q[31]),
        .I2(Q[32]),
        .I3(Q[39]),
        .I4(Q[30]),
        .I5(sr_awlen[1]),
        .O(\USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst/bytes [5]));
LUT2 #(
    .INIT(4'h6)) 
     \m_payload_i[67]_i_5 
       (.I0(Q[0]),
        .I1(\USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst/bytes [5]),
        .O(\n_0_m_payload_i[67]_i_5 ));
LUT6 #(
    .INIT(64'hAAA56666AAAA6666)) 
     \m_payload_i[67]_i_6 
       (.I0(sr_awaddr[4]),
        .I1(\n_0_m_payload_i[66]_i_4 ),
        .I2(Q[30]),
        .I3(Q[31]),
        .I4(Q[32]),
        .I5(Q[39]),
        .O(\n_0_m_payload_i[67]_i_6 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \m_payload_i[67]_i_7 
       (.I0(Q[40]),
        .I1(Q[41]),
        .I2(Q[31]),
        .I3(sr_awlen[4]),
        .I4(Q[30]),
        .I5(sr_awlen[5]),
        .O(\n_0_m_payload_i[67]_i_7 ));
LUT5 #(
    .INIT(32'h9AAAAAAA)) 
     \m_payload_i[6]_i_1 
       (.I0(Q[1]),
        .I1(CO),
        .I2(\n_0_m_payload_i[6]_i_2 ),
        .I3(\n_0_m_payload_i[8]_i_3 ),
        .I4(\USE_WRITE.write_addr_inst/cmd_packed_wrap_i1 ),
        .O(I91[6]));
LUT6 #(
    .INIT(64'h2F20FFFF2F200000)) 
     \m_payload_i[6]_i_2 
       (.I0(Q[39]),
        .I1(Q[30]),
        .I2(Q[31]),
        .I3(\n_0_m_payload_i[6]_i_3 ),
        .I4(Q[32]),
        .I5(\n_0_m_payload_i[45]_i_7 ),
        .O(\n_0_m_payload_i[6]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair304" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \m_payload_i[6]_i_3 
       (.I0(sr_awlen[1]),
        .I1(Q[30]),
        .I2(Q[40]),
        .O(\n_0_m_payload_i[6]_i_3 ));
LUT5 #(
    .INIT(32'hAA9AAAAA)) 
     \m_payload_i[7]_i_1 
       (.I0(Q[2]),
        .I1(CO),
        .I2(\n_0_m_payload_i[8]_i_3 ),
        .I3(\n_0_m_payload_i[7]_i_2 ),
        .I4(\USE_WRITE.write_addr_inst/cmd_packed_wrap_i1 ),
        .O(I91[7]));
(* SOFT_HLUTNM = "soft_lutpair297" *) 
   LUT4 #(
    .INIT(16'h57F7)) 
     \m_payload_i[7]_i_2 
       (.I0(\n_0_m_payload_i[8]_i_5 ),
        .I1(\n_0_m_payload_i[45]_i_6 ),
        .I2(Q[32]),
        .I3(O17),
        .O(\n_0_m_payload_i[7]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \m_payload_i[7]_i_3 
       (.I0(Q[39]),
        .I1(sr_awlen[1]),
        .I2(Q[31]),
        .I3(Q[40]),
        .I4(Q[30]),
        .I5(Q[41]),
        .O(O17));
LUT5 #(
    .INIT(32'h9AAAAAAA)) 
     \m_payload_i[8]_i_1 
       (.I0(Q[3]),
        .I1(CO),
        .I2(\n_0_m_payload_i[8]_i_2 ),
        .I3(\n_0_m_payload_i[8]_i_3 ),
        .I4(\USE_WRITE.write_addr_inst/cmd_packed_wrap_i1 ),
        .O(I91[8]));
LUT5 #(
    .INIT(32'hFFF8CCC8)) 
     \m_payload_i[8]_i_10 
       (.I0(Q[30]),
        .I1(sr_awlen[5]),
        .I2(Q[32]),
        .I3(Q[31]),
        .I4(sr_awlen[4]),
        .O(\n_0_m_payload_i[8]_i_10 ));
LUT5 #(
    .INIT(32'hFFAA8080)) 
     \m_payload_i[8]_i_11 
       (.I0(Q[41]),
        .I1(Q[30]),
        .I2(Q[31]),
        .I3(Q[40]),
        .I4(Q[32]),
        .O(\n_0_m_payload_i[8]_i_11 ));
LUT5 #(
    .INIT(32'hFA008800)) 
     \m_payload_i[8]_i_12 
       (.I0(sr_awlen[1]),
        .I1(Q[30]),
        .I2(Q[39]),
        .I3(Q[32]),
        .I4(Q[31]),
        .O(\n_0_m_payload_i[8]_i_12 ));
LUT2 #(
    .INIT(4'h1)) 
     \m_payload_i[8]_i_13 
       (.I0(sr_awlen[7]),
        .I1(sr_awlen[6]),
        .O(\n_0_m_payload_i[8]_i_13 ));
LUT5 #(
    .INIT(32'h00560254)) 
     \m_payload_i[8]_i_14 
       (.I0(sr_awlen[4]),
        .I1(Q[31]),
        .I2(Q[32]),
        .I3(sr_awlen[5]),
        .I4(Q[30]),
        .O(\n_0_m_payload_i[8]_i_14 ));
LUT5 #(
    .INIT(32'h00780F00)) 
     \m_payload_i[8]_i_15 
       (.I0(Q[30]),
        .I1(Q[31]),
        .I2(Q[41]),
        .I3(Q[32]),
        .I4(Q[40]),
        .O(\n_0_m_payload_i[8]_i_15 ));
LUT5 #(
    .INIT(32'h30704808)) 
     \m_payload_i[8]_i_16 
       (.I0(Q[31]),
        .I1(Q[32]),
        .I2(Q[39]),
        .I3(Q[30]),
        .I4(sr_awlen[1]),
        .O(\n_0_m_payload_i[8]_i_16 ));
LUT5 #(
    .INIT(32'h80888000)) 
     \m_payload_i[8]_i_2 
       (.I0(\n_0_m_payload_i[8]_i_5 ),
        .I1(Q[2]),
        .I2(\n_0_m_payload_i[8]_i_6 ),
        .I3(Q[32]),
        .I4(\n_0_m_payload_i[8]_i_7 ),
        .O(\n_0_m_payload_i[8]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair300" *) 
   LUT4 #(
    .INIT(16'h0010)) 
     \m_payload_i[8]_i_3 
       (.I0(\n_0_m_payload_i[8]_i_8 ),
        .I1(Q[33]),
        .I2(Q[34]),
        .I3(O9),
        .O(\n_0_m_payload_i[8]_i_3 ));
LUT6 #(
    .INIT(64'hD000D000D0000000)) 
     \m_payload_i[8]_i_5 
       (.I0(\n_0_m_payload_i[39]_i_3 ),
        .I1(\n_0_m_payload_i[39]_i_2 ),
        .I2(Q[36]),
        .I3(Q[1]),
        .I4(Q[34]),
        .I5(Q[33]),
        .O(\n_0_m_payload_i[8]_i_5 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \m_payload_i[8]_i_6 
       (.I0(sr_awlen[1]),
        .I1(Q[40]),
        .I2(Q[31]),
        .I3(Q[41]),
        .I4(Q[30]),
        .I5(sr_awlen[4]),
        .O(\n_0_m_payload_i[8]_i_6 ));
(* SOFT_HLUTNM = "soft_lutpair287" *) 
   LUT5 #(
    .INIT(32'hAFC0A0C0)) 
     \m_payload_i[8]_i_7 
       (.I0(sr_awlen[5]),
        .I1(sr_awlen[6]),
        .I2(Q[31]),
        .I3(Q[30]),
        .I4(sr_awlen[7]),
        .O(\n_0_m_payload_i[8]_i_7 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \m_payload_i[8]_i_8 
       (.I0(sr_awaddr[1]),
        .I1(Q[0]),
        .I2(sr_awaddr[4]),
        .I3(sr_awaddr[3]),
        .I4(sr_awaddr[2]),
        .I5(sr_awaddr[0]),
        .O(\n_0_m_payload_i[8]_i_8 ));
LUT2 #(
    .INIT(4'hE)) 
     \m_payload_i[8]_i_9 
       (.I0(sr_awlen[7]),
        .I1(sr_awlen[6]),
        .O(\n_0_m_payload_i[8]_i_9 ));
FDRE \m_payload_i_reg[0] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[0]),
        .Q(sr_awaddr[0]),
        .R(1'b0));
FDRE \m_payload_i_reg[10] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[10]),
        .Q(Q[5]),
        .R(1'b0));
FDRE \m_payload_i_reg[11] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[11]),
        .Q(Q[6]),
        .R(1'b0));
FDRE \m_payload_i_reg[12] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[12]),
        .Q(Q[7]),
        .R(1'b0));
FDRE \m_payload_i_reg[13] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[13]),
        .Q(Q[8]),
        .R(1'b0));
FDRE \m_payload_i_reg[14] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[14]),
        .Q(Q[9]),
        .R(1'b0));
FDRE \m_payload_i_reg[15] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[15]),
        .Q(Q[10]),
        .R(1'b0));
FDRE \m_payload_i_reg[16] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[16]),
        .Q(Q[11]),
        .R(1'b0));
FDRE \m_payload_i_reg[17] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[17]),
        .Q(Q[12]),
        .R(1'b0));
FDRE \m_payload_i_reg[18] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[18]),
        .Q(Q[13]),
        .R(1'b0));
FDRE \m_payload_i_reg[19] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[19]),
        .Q(Q[14]),
        .R(1'b0));
FDRE \m_payload_i_reg[1] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[1]),
        .Q(sr_awaddr[1]),
        .R(1'b0));
FDRE \m_payload_i_reg[20] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[20]),
        .Q(Q[15]),
        .R(1'b0));
FDRE \m_payload_i_reg[21] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[21]),
        .Q(Q[16]),
        .R(1'b0));
FDRE \m_payload_i_reg[22] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[22]),
        .Q(Q[17]),
        .R(1'b0));
FDRE \m_payload_i_reg[23] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[23]),
        .Q(Q[18]),
        .R(1'b0));
FDRE \m_payload_i_reg[24] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[24]),
        .Q(Q[19]),
        .R(1'b0));
FDRE \m_payload_i_reg[25] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[25]),
        .Q(Q[20]),
        .R(1'b0));
FDRE \m_payload_i_reg[26] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[26]),
        .Q(Q[21]),
        .R(1'b0));
FDRE \m_payload_i_reg[27] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[27]),
        .Q(Q[22]),
        .R(1'b0));
FDRE \m_payload_i_reg[28] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[28]),
        .Q(Q[23]),
        .R(1'b0));
FDRE \m_payload_i_reg[29] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[29]),
        .Q(Q[24]),
        .R(1'b0));
FDRE \m_payload_i_reg[2] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[2]),
        .Q(sr_awaddr[2]),
        .R(1'b0));
FDRE \m_payload_i_reg[30] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[30]),
        .Q(Q[25]),
        .R(1'b0));
FDRE \m_payload_i_reg[31] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[31]),
        .Q(Q[26]),
        .R(1'b0));
FDRE \m_payload_i_reg[32] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[32]),
        .Q(Q[27]),
        .R(1'b0));
FDRE \m_payload_i_reg[33] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[33]),
        .Q(Q[28]),
        .R(1'b0));
FDRE \m_payload_i_reg[34] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[34]),
        .Q(Q[29]),
        .R(1'b0));
FDRE \m_payload_i_reg[35] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[35]),
        .Q(Q[30]),
        .R(1'b0));
FDRE \m_payload_i_reg[36] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[36]),
        .Q(Q[31]),
        .R(1'b0));
FDRE \m_payload_i_reg[37] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[37]),
        .Q(Q[32]),
        .R(1'b0));
FDRE \m_payload_i_reg[38] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[38]),
        .Q(Q[33]),
        .R(1'b0));
FDRE \m_payload_i_reg[39] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[39]),
        .Q(Q[34]),
        .R(1'b0));
CARRY4 \m_payload_i_reg[39]_i_4 
       (.CI(1'b0),
        .CO({CO,\n_1_m_payload_i_reg[39]_i_4 ,\n_2_m_payload_i_reg[39]_i_4 ,\n_3_m_payload_i_reg[39]_i_4 }),
        .CYINIT(1'b1),
        .DI({1'b0,\n_0_m_payload_i[39]_i_5 ,\n_0_m_payload_i[39]_i_6 ,\n_0_m_payload_i[39]_i_7 }),
        .O(\NLW_m_payload_i_reg[39]_i_4_O_UNCONNECTED [3:0]),
        .S({\n_0_m_payload_i[39]_i_8 ,\n_0_m_payload_i[39]_i_9 ,\n_0_m_payload_i[39]_i_10 ,\n_0_m_payload_i[39]_i_11 }));
FDRE \m_payload_i_reg[3] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[3]),
        .Q(sr_awaddr[3]),
        .R(1'b0));
FDRE \m_payload_i_reg[40] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[40]),
        .Q(Q[35]),
        .R(1'b0));
FDRE \m_payload_i_reg[41] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[41]),
        .Q(Q[36]),
        .R(1'b0));
FDRE \m_payload_i_reg[42] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[42]),
        .Q(Q[37]),
        .R(1'b0));
FDRE \m_payload_i_reg[43] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[43]),
        .Q(Q[38]),
        .R(1'b0));
FDRE \m_payload_i_reg[44] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[44]),
        .Q(Q[39]),
        .R(1'b0));
FDRE \m_payload_i_reg[45] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[45]),
        .Q(sr_awlen[1]),
        .R(1'b0));
FDRE \m_payload_i_reg[46] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[46]),
        .Q(Q[40]),
        .R(1'b0));
FDRE \m_payload_i_reg[47] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[47]),
        .Q(Q[41]),
        .R(1'b0));
FDRE \m_payload_i_reg[48] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[48]),
        .Q(sr_awlen[4]),
        .R(1'b0));
FDRE \m_payload_i_reg[49] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[49]),
        .Q(sr_awlen[5]),
        .R(1'b0));
FDRE \m_payload_i_reg[4] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[4]),
        .Q(sr_awaddr[4]),
        .R(1'b0));
FDRE \m_payload_i_reg[50] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[50]),
        .Q(sr_awlen[6]),
        .R(1'b0));
FDRE \m_payload_i_reg[51] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[51]),
        .Q(sr_awlen[7]),
        .R(1'b0));
FDRE \m_payload_i_reg[52] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[52]),
        .Q(Q[42]),
        .R(1'b0));
FDRE \m_payload_i_reg[54] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[53]),
        .Q(Q[43]),
        .R(1'b0));
FDRE \m_payload_i_reg[55] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[54]),
        .Q(Q[44]),
        .R(1'b0));
FDRE \m_payload_i_reg[56] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[55]),
        .Q(Q[45]),
        .R(1'b0));
FDRE \m_payload_i_reg[57] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[56]),
        .Q(Q[46]),
        .R(1'b0));
FDRE \m_payload_i_reg[58] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[57]),
        .Q(Q[47]),
        .R(1'b0));
FDRE \m_payload_i_reg[59] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[58]),
        .Q(Q[48]),
        .R(1'b0));
FDRE \m_payload_i_reg[5] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[5]),
        .Q(Q[0]),
        .R(1'b0));
FDRE \m_payload_i_reg[60] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[59]),
        .Q(Q[49]),
        .R(1'b0));
FDRE \m_payload_i_reg[61] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[60]),
        .Q(Q[50]),
        .R(1'b0));
CARRY4 \m_payload_i_reg[65]_i_2 
       (.CI(1'b0),
        .CO({\n_0_m_payload_i_reg[65]_i_2 ,\n_1_m_payload_i_reg[65]_i_2 ,\n_2_m_payload_i_reg[65]_i_2 ,\n_3_m_payload_i_reg[65]_i_2 }),
        .CYINIT(1'b0),
        .DI(sr_awaddr[3:0]),
        .O(\USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst/f_mi_be_last_index1 [3:0]),
        .S({\n_0_m_payload_i[65]_i_5 ,\n_0_m_payload_i[65]_i_6 ,\n_0_m_payload_i[65]_i_7 ,\n_0_m_payload_i[65]_i_8 }));
CARRY4 \m_payload_i_reg[67]_i_3 
       (.CI(\n_0_m_payload_i_reg[65]_i_2 ),
        .CO({\NLW_m_payload_i_reg[67]_i_3_CO_UNCONNECTED [3:1],\n_3_m_payload_i_reg[67]_i_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,sr_awaddr[4]}),
        .O({\NLW_m_payload_i_reg[67]_i_3_O_UNCONNECTED [3:2],\USE_WRITE.gen_pktfifo_w_upsizer.pktfifo_write_data_inst/f_mi_be_last_index1 [5:4]}),
        .S({1'b0,1'b0,\n_0_m_payload_i[67]_i_5 ,\n_0_m_payload_i[67]_i_6 }));
FDRE \m_payload_i_reg[6] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[6]),
        .Q(Q[1]),
        .R(1'b0));
FDRE \m_payload_i_reg[7] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[7]),
        .Q(Q[2]),
        .R(1'b0));
FDRE \m_payload_i_reg[8] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[8]),
        .Q(Q[3]),
        .R(1'b0));
CARRY4 \m_payload_i_reg[8]_i_4 
       (.CI(1'b0),
        .CO({\USE_WRITE.write_addr_inst/cmd_packed_wrap_i1 ,\n_1_m_payload_i_reg[8]_i_4 ,\n_2_m_payload_i_reg[8]_i_4 ,\n_3_m_payload_i_reg[8]_i_4 }),
        .CYINIT(1'b0),
        .DI({\n_0_m_payload_i[8]_i_9 ,\n_0_m_payload_i[8]_i_10 ,\n_0_m_payload_i[8]_i_11 ,\n_0_m_payload_i[8]_i_12 }),
        .O(\NLW_m_payload_i_reg[8]_i_4_O_UNCONNECTED [3:0]),
        .S({\n_0_m_payload_i[8]_i_13 ,\n_0_m_payload_i[8]_i_14 ,\n_0_m_payload_i[8]_i_15 ,\n_0_m_payload_i[8]_i_16 }));
FDRE \m_payload_i_reg[9] 
       (.C(I3),
        .CE(\n_0_m_payload_i[61]_i_1__0 ),
        .D(D[9]),
        .Q(Q[4]),
        .R(1'b0));
LUT6 #(
    .INIT(64'hA2A2A2A280A2A2A2)) 
     m_valid_i_i_1__0
       (.I0(\n_0_aresetn_d_reg[1] ),
        .I1(s_axi_awready),
        .I2(s_axi_awvalid),
        .I3(I2),
        .I4(m_axi_awready_i),
        .I5(I1),
        .O(n_0_m_valid_i_i_1__0));
FDRE m_valid_i_reg
       (.C(I3),
        .CE(1'b1),
        .D(n_0_m_valid_i_i_1__0),
        .Q(sr_awvalid),
        .R(1'b0));
LUT5 #(
    .INIT(32'hAA222A2A)) 
     s_ready_i_i_1__0
       (.I0(\n_0_aresetn_d_reg[0] ),
        .I1(\n_0_aresetn_d_reg[1] ),
        .I2(s_axi_awvalid),
        .I3(I4),
        .I4(sr_awvalid),
        .O(n_0_s_ready_i_i_1__0));
FDRE s_ready_i_reg
       (.C(I3),
        .CE(1'b1),
        .D(n_0_s_ready_i_i_1__0),
        .Q(s_axi_awready),
        .R(1'b0));
LUT6 #(
    .INIT(64'hFFFFFCCC77777777)) 
     \si_be[0]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(O2),
        .I2(\n_0_si_be[26]_i_6 ),
        .I3(\n_0_si_be[1]_i_6 ),
        .I4(\n_0_si_be[3]_i_6 ),
        .I5(\n_0_si_be[0]_i_6 ),
        .O(O24));
(* SOFT_HLUTNM = "soft_lutpair275" *) 
   LUT3 #(
    .INIT(8'h4F)) 
     \si_be[0]_i_6 
       (.I0(Q[31]),
        .I1(Q[30]),
        .I2(Q[32]),
        .O(\n_0_si_be[0]_i_6 ));
LUT5 #(
    .INIT(32'hFFCCF7C4)) 
     \si_be[10]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[10]_i_6 ),
        .I4(Q[30]),
        .O(O34));
LUT6 #(
    .INIT(64'h5504050055040504)) 
     \si_be[10]_i_6 
       (.I0(\n_0_si_wrap_be_next[12]_i_3 ),
        .I1(sr_awaddr[1]),
        .I2(sr_awaddr[2]),
        .I3(Q[31]),
        .I4(Q[30]),
        .I5(sr_awaddr[0]),
        .O(\n_0_si_be[10]_i_6 ));
LUT5 #(
    .INIT(32'hFFCCF7C4)) 
     \si_be[11]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[11]_i_6 ),
        .I4(Q[30]),
        .O(O35));
LUT6 #(
    .INIT(64'h00A000A000FE00AA)) 
     \si_be[11]_i_6 
       (.I0(Q[31]),
        .I1(sr_awaddr[0]),
        .I2(Q[30]),
        .I3(\n_0_si_wrap_be_next[12]_i_3 ),
        .I4(sr_awaddr[1]),
        .I5(sr_awaddr[2]),
        .O(\n_0_si_be[11]_i_6 ));
LUT5 #(
    .INIT(32'hFFCCF7C4)) 
     \si_be[12]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[12]_i_6 ),
        .I4(Q[30]),
        .O(O36));
LUT6 #(
    .INIT(64'h0F040C000F040C04)) 
     \si_be[12]_i_6 
       (.I0(sr_awaddr[1]),
        .I1(sr_awaddr[2]),
        .I2(\n_0_si_wrap_be_next[12]_i_3 ),
        .I3(Q[31]),
        .I4(Q[30]),
        .I5(sr_awaddr[0]),
        .O(\n_0_si_be[12]_i_6 ));
LUT5 #(
    .INIT(32'hFFCCF7C4)) 
     \si_be[13]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[13]_i_6 ),
        .I4(Q[30]),
        .O(O37));
LUT6 #(
    .INIT(64'h00000000AAFEA0A0)) 
     \si_be[13]_i_6 
       (.I0(Q[31]),
        .I1(sr_awaddr[0]),
        .I2(Q[30]),
        .I3(sr_awaddr[1]),
        .I4(sr_awaddr[2]),
        .I5(\n_0_si_wrap_be_next[12]_i_3 ),
        .O(\n_0_si_be[13]_i_6 ));
LUT5 #(
    .INIT(32'hFFCCF7C4)) 
     \si_be[14]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[14]_i_6 ),
        .I4(Q[30]),
        .O(O38));
LUT6 #(
    .INIT(64'h3320220033202220)) 
     \si_be[14]_i_6 
       (.I0(sr_awaddr[2]),
        .I1(\n_0_si_wrap_be_next[12]_i_3 ),
        .I2(sr_awaddr[1]),
        .I3(Q[31]),
        .I4(Q[30]),
        .I5(sr_awaddr[0]),
        .O(\n_0_si_be[14]_i_6 ));
LUT5 #(
    .INIT(32'hFFCCF7C4)) 
     \si_be[15]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[15]_i_6 ),
        .I4(Q[30]),
        .O(O39));
LUT6 #(
    .INIT(64'h0000FEAA00008888)) 
     \si_be[15]_i_6 
       (.I0(Q[31]),
        .I1(Q[30]),
        .I2(sr_awaddr[0]),
        .I3(sr_awaddr[1]),
        .I4(\n_0_si_wrap_be_next[12]_i_3 ),
        .I5(sr_awaddr[2]),
        .O(\n_0_si_be[15]_i_6 ));
LUT6 #(
    .INIT(64'hFFFCCFCCFBF8CBC8)) 
     \si_be[16]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[16]_i_6 ),
        .I4(\n_0_si_be[17]_i_7 ),
        .I5(Q[30]),
        .O(O40));
LUT6 #(
    .INIT(64'h000000000000080A)) 
     \si_be[16]_i_6 
       (.I0(sr_awaddr[4]),
        .I1(Q[30]),
        .I2(sr_awaddr[1]),
        .I3(sr_awaddr[0]),
        .I4(sr_awaddr[3]),
        .I5(sr_awaddr[2]),
        .O(\n_0_si_be[16]_i_6 ));
LUT6 #(
    .INIT(64'hFFFCCFCCFBF8CBC8)) 
     \si_be[17]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[17]_i_6 ),
        .I4(\n_0_si_be[17]_i_7 ),
        .I5(Q[30]),
        .O(O41));
LUT6 #(
    .INIT(64'h00000000000000A8)) 
     \si_be[17]_i_6 
       (.I0(sr_awaddr[4]),
        .I1(Q[30]),
        .I2(sr_awaddr[0]),
        .I3(sr_awaddr[1]),
        .I4(sr_awaddr[3]),
        .I5(sr_awaddr[2]),
        .O(\n_0_si_be[17]_i_6 ));
(* SOFT_HLUTNM = "soft_lutpair291" *) 
   LUT4 #(
    .INIT(16'h2030)) 
     \si_be[17]_i_7 
       (.I0(Q[30]),
        .I1(sr_awaddr[3]),
        .I2(sr_awaddr[4]),
        .I3(sr_awaddr[2]),
        .O(\n_0_si_be[17]_i_7 ));
LUT5 #(
    .INIT(32'hFFCCFBC8)) 
     \si_be[18]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[18]_i_6 ),
        .I4(Q[30]),
        .O(O42));
LUT6 #(
    .INIT(64'h000050D000005050)) 
     \si_be[18]_i_6 
       (.I0(\n_0_si_be[19]_i_7 ),
        .I1(sr_awaddr[1]),
        .I2(sr_awaddr[4]),
        .I3(sr_awaddr[2]),
        .I4(sr_awaddr[3]),
        .I5(\n_0_si_be[26]_i_6 ),
        .O(\n_0_si_be[18]_i_6 ));
LUT5 #(
    .INIT(32'hFFCCFBC8)) 
     \si_be[19]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[19]_i_6 ),
        .I4(Q[30]),
        .O(O43));
LUT6 #(
    .INIT(64'h0000000055007500)) 
     \si_be[19]_i_6 
       (.I0(\n_0_si_be[19]_i_7 ),
        .I1(\n_0_si_be[27]_i_6 ),
        .I2(sr_awaddr[1]),
        .I3(sr_awaddr[4]),
        .I4(sr_awaddr[2]),
        .I5(sr_awaddr[3]),
        .O(\n_0_si_be[19]_i_6 ));
(* SOFT_HLUTNM = "soft_lutpair313" *) 
   LUT3 #(
    .INIT(8'h4F)) 
     \si_be[19]_i_7 
       (.I0(Q[30]),
        .I1(sr_awaddr[2]),
        .I2(Q[31]),
        .O(\n_0_si_be[19]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFCCFC77777777)) 
     \si_be[1]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(O2),
        .I2(\n_0_si_be[1]_i_6 ),
        .I3(\n_0_si_be[27]_i_6 ),
        .I4(\n_0_si_be[3]_i_6 ),
        .I5(\n_0_si_be[1]_i_7 ),
        .O(O25));
(* SOFT_HLUTNM = "soft_lutpair296" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     \si_be[1]_i_6 
       (.I0(sr_awaddr[2]),
        .I1(sr_awaddr[1]),
        .I2(sr_awaddr[3]),
        .I3(sr_awaddr[4]),
        .O(\n_0_si_be[1]_i_6 ));
(* SOFT_HLUTNM = "soft_lutpair285" *) 
   LUT3 #(
    .INIT(8'h4F)) 
     \si_be[1]_i_7 
       (.I0(Q[31]),
        .I1(Q[30]),
        .I2(Q[32]),
        .O(\n_0_si_be[1]_i_7 ));
LUT5 #(
    .INIT(32'hFFCCFBC8)) 
     \si_be[20]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[20]_i_6 ),
        .I4(Q[30]),
        .O(O44));
LUT6 #(
    .INIT(64'h0F040C000F040C04)) 
     \si_be[20]_i_6 
       (.I0(sr_awaddr[1]),
        .I1(sr_awaddr[2]),
        .I2(\n_0_si_be[23]_i_7 ),
        .I3(Q[31]),
        .I4(Q[30]),
        .I5(sr_awaddr[0]),
        .O(\n_0_si_be[20]_i_6 ));
LUT5 #(
    .INIT(32'hFFCCFBC8)) 
     \si_be[21]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[21]_i_6 ),
        .I4(Q[30]),
        .O(O45));
LUT6 #(
    .INIT(64'h00000000AAFEA0A0)) 
     \si_be[21]_i_6 
       (.I0(Q[31]),
        .I1(sr_awaddr[0]),
        .I2(Q[30]),
        .I3(sr_awaddr[1]),
        .I4(sr_awaddr[2]),
        .I5(\n_0_si_be[23]_i_7 ),
        .O(\n_0_si_be[21]_i_6 ));
LUT5 #(
    .INIT(32'hFFCCFBC8)) 
     \si_be[22]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[22]_i_6 ),
        .I4(Q[30]),
        .O(O46));
LUT6 #(
    .INIT(64'h3320220033202220)) 
     \si_be[22]_i_6 
       (.I0(sr_awaddr[2]),
        .I1(\n_0_si_be[23]_i_7 ),
        .I2(sr_awaddr[1]),
        .I3(Q[31]),
        .I4(Q[30]),
        .I5(sr_awaddr[0]),
        .O(\n_0_si_be[22]_i_6 ));
LUT5 #(
    .INIT(32'hFFCCFBC8)) 
     \si_be[23]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[23]_i_6 ),
        .I4(Q[30]),
        .O(O47));
LUT6 #(
    .INIT(64'h00F800E800A800A8)) 
     \si_be[23]_i_6 
       (.I0(Q[31]),
        .I1(Q[30]),
        .I2(sr_awaddr[2]),
        .I3(\n_0_si_be[23]_i_7 ),
        .I4(sr_awaddr[0]),
        .I5(sr_awaddr[1]),
        .O(\n_0_si_be[23]_i_6 ));
(* SOFT_HLUTNM = "soft_lutpair314" *) 
   LUT2 #(
    .INIT(4'hB)) 
     \si_be[23]_i_7 
       (.I0(sr_awaddr[3]),
        .I1(sr_awaddr[4]),
        .O(\n_0_si_be[23]_i_7 ));
LUT5 #(
    .INIT(32'hFFCCFBC8)) 
     \si_be[24]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[24]_i_6 ),
        .I4(Q[30]),
        .O(O48));
LUT6 #(
    .INIT(64'h0F0105000F010501)) 
     \si_be[24]_i_6 
       (.I0(sr_awaddr[2]),
        .I1(sr_awaddr[1]),
        .I2(\n_0_si_wrap_be_next[28]_i_2 ),
        .I3(Q[31]),
        .I4(Q[30]),
        .I5(sr_awaddr[0]),
        .O(\n_0_si_be[24]_i_6 ));
LUT5 #(
    .INIT(32'hFFCCFBC8)) 
     \si_be[25]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[25]_i_6 ),
        .I4(Q[30]),
        .O(O49));
LUT6 #(
    .INIT(64'h00000000A0AAA0FE)) 
     \si_be[25]_i_6 
       (.I0(Q[31]),
        .I1(sr_awaddr[0]),
        .I2(Q[30]),
        .I3(sr_awaddr[2]),
        .I4(sr_awaddr[1]),
        .I5(\n_0_si_wrap_be_next[28]_i_2 ),
        .O(\n_0_si_be[25]_i_6 ));
LUT6 #(
    .INIT(64'hFFFFFCCCBBBBBBBB)) 
     \si_be[26]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(O2),
        .I2(\n_0_si_be[26]_i_6 ),
        .I3(\n_0_si_wrap_be_next[26]_i_2 ),
        .I4(\n_0_si_be[27]_i_7 ),
        .I5(\n_0_si_be[26]_i_7 ),
        .O(O50));
(* SOFT_HLUTNM = "soft_lutpair295" *) 
   LUT3 #(
    .INIT(8'h45)) 
     \si_be[26]_i_6 
       (.I0(Q[31]),
        .I1(Q[30]),
        .I2(sr_awaddr[0]),
        .O(\n_0_si_be[26]_i_6 ));
(* SOFT_HLUTNM = "soft_lutpair303" *) 
   LUT3 #(
    .INIT(8'h4F)) 
     \si_be[26]_i_7 
       (.I0(Q[31]),
        .I1(Q[30]),
        .I2(Q[32]),
        .O(\n_0_si_be[26]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFCCFCBBBBBBBB)) 
     \si_be[27]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(O2),
        .I2(\n_0_si_wrap_be_next[26]_i_2 ),
        .I3(\n_0_si_be[27]_i_6 ),
        .I4(\n_0_si_be[27]_i_7 ),
        .I5(\n_0_si_be[27]_i_8 ),
        .O(O51));
(* SOFT_HLUTNM = "soft_lutpair305" *) 
   LUT3 #(
    .INIT(8'hAB)) 
     \si_be[27]_i_6 
       (.I0(Q[31]),
        .I1(sr_awaddr[0]),
        .I2(Q[30]),
        .O(\n_0_si_be[27]_i_6 ));
(* SOFT_HLUTNM = "soft_lutpair289" *) 
   LUT5 #(
    .INIT(32'hB0000000)) 
     \si_be[27]_i_7 
       (.I0(Q[30]),
        .I1(sr_awaddr[2]),
        .I2(Q[31]),
        .I3(sr_awaddr[4]),
        .I4(sr_awaddr[3]),
        .O(\n_0_si_be[27]_i_7 ));
(* SOFT_HLUTNM = "soft_lutpair305" *) 
   LUT3 #(
    .INIT(8'h4F)) 
     \si_be[27]_i_8 
       (.I0(Q[31]),
        .I1(Q[30]),
        .I2(Q[32]),
        .O(\n_0_si_be[27]_i_8 ));
LUT5 #(
    .INIT(32'hFFCCFBC8)) 
     \si_be[28]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[28]_i_6 ),
        .I4(Q[30]),
        .O(O52));
LUT6 #(
    .INIT(64'h4440444054405540)) 
     \si_be[28]_i_6 
       (.I0(\n_0_si_wrap_be_next[28]_i_2 ),
        .I1(Q[31]),
        .I2(Q[30]),
        .I3(sr_awaddr[2]),
        .I4(sr_awaddr[0]),
        .I5(sr_awaddr[1]),
        .O(\n_0_si_be[28]_i_6 ));
LUT5 #(
    .INIT(32'hFFCCFBC8)) 
     \si_be[29]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[29]_i_6 ),
        .I4(Q[30]),
        .O(O53));
LUT6 #(
    .INIT(64'h00000000AAFEA0A0)) 
     \si_be[29]_i_6 
       (.I0(Q[31]),
        .I1(sr_awaddr[0]),
        .I2(Q[30]),
        .I3(sr_awaddr[1]),
        .I4(sr_awaddr[2]),
        .I5(\n_0_si_wrap_be_next[28]_i_2 ),
        .O(\n_0_si_be[29]_i_6 ));
LUT6 #(
    .INIT(64'hFFFFCCFC77777777)) 
     \si_be[2]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(O2),
        .I2(\n_0_si_be[26]_i_6 ),
        .I3(\n_0_si_wrap_be_next[2]_i_2 ),
        .I4(\n_0_si_be[3]_i_6 ),
        .I5(\n_0_si_be[2]_i_6 ),
        .O(O26));
(* SOFT_HLUTNM = "soft_lutpair290" *) 
   LUT3 #(
    .INIT(8'h4F)) 
     \si_be[2]_i_6 
       (.I0(Q[31]),
        .I1(Q[30]),
        .I2(Q[32]),
        .O(\n_0_si_be[2]_i_6 ));
LUT5 #(
    .INIT(32'hFFCCFBC8)) 
     \si_be[30]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[30]_i_6 ),
        .I4(Q[30]),
        .O(O54));
LUT6 #(
    .INIT(64'h3320220033202220)) 
     \si_be[30]_i_6 
       (.I0(sr_awaddr[2]),
        .I1(\n_0_si_wrap_be_next[28]_i_2 ),
        .I2(sr_awaddr[1]),
        .I3(Q[31]),
        .I4(Q[30]),
        .I5(sr_awaddr[0]),
        .O(\n_0_si_be[30]_i_6 ));
LUT5 #(
    .INIT(32'hFFCCFBC8)) 
     \si_be[31]_i_4 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[31]_i_9 ),
        .I4(Q[30]),
        .O(O55));
LUT6 #(
    .INIT(64'h0000FEAA00008888)) 
     \si_be[31]_i_9 
       (.I0(Q[31]),
        .I1(Q[30]),
        .I2(sr_awaddr[0]),
        .I3(sr_awaddr[1]),
        .I4(\n_0_si_wrap_be_next[28]_i_2 ),
        .I5(sr_awaddr[2]),
        .O(\n_0_si_be[31]_i_9 ));
LUT6 #(
    .INIT(64'hFFFFCCCF77777777)) 
     \si_be[3]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(O2),
        .I2(\n_0_si_wrap_be_next[2]_i_2 ),
        .I3(\n_0_si_be[27]_i_6 ),
        .I4(\n_0_si_be[3]_i_6 ),
        .I5(\n_0_si_be[3]_i_7 ),
        .O(O27));
(* SOFT_HLUTNM = "soft_lutpair291" *) 
   LUT5 #(
    .INIT(32'h10100010)) 
     \si_be[3]_i_6 
       (.I0(sr_awaddr[3]),
        .I1(sr_awaddr[4]),
        .I2(Q[31]),
        .I3(sr_awaddr[2]),
        .I4(Q[30]),
        .O(\n_0_si_be[3]_i_6 ));
(* SOFT_HLUTNM = "soft_lutpair299" *) 
   LUT3 #(
    .INIT(8'h4F)) 
     \si_be[3]_i_7 
       (.I0(Q[31]),
        .I1(Q[30]),
        .I2(Q[32]),
        .O(\n_0_si_be[3]_i_7 ));
LUT5 #(
    .INIT(32'hFFCCF7C4)) 
     \si_be[4]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[4]_i_6 ),
        .I4(Q[30]),
        .O(O28));
LUT6 #(
    .INIT(64'hAAAAAABAAAAAAAAA)) 
     \si_be[4]_i_6 
       (.I0(\n_0_si_be[7]_i_7 ),
        .I1(sr_awaddr[1]),
        .I2(sr_awaddr[2]),
        .I3(sr_awaddr[4]),
        .I4(sr_awaddr[3]),
        .I5(\n_0_si_be[26]_i_6 ),
        .O(\n_0_si_be[4]_i_6 ));
LUT5 #(
    .INIT(32'hFFCCF7C4)) 
     \si_be[5]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[5]_i_6 ),
        .I4(Q[30]),
        .O(O29));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAABAA)) 
     \si_be[5]_i_6 
       (.I0(\n_0_si_be[7]_i_7 ),
        .I1(\n_0_si_be[27]_i_6 ),
        .I2(sr_awaddr[1]),
        .I3(sr_awaddr[2]),
        .I4(sr_awaddr[4]),
        .I5(sr_awaddr[3]),
        .O(\n_0_si_be[5]_i_6 ));
LUT5 #(
    .INIT(32'hFFCCF7C4)) 
     \si_be[6]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[6]_i_6 ),
        .I4(Q[30]),
        .O(O30));
LUT6 #(
    .INIT(64'hAAAEAAAAAAAAAAAA)) 
     \si_be[6]_i_6 
       (.I0(\n_0_si_be[7]_i_7 ),
        .I1(sr_awaddr[2]),
        .I2(sr_awaddr[4]),
        .I3(sr_awaddr[3]),
        .I4(sr_awaddr[1]),
        .I5(\n_0_si_be[26]_i_6 ),
        .O(\n_0_si_be[6]_i_6 ));
LUT6 #(
    .INIT(64'hFFFFCCCF77777777)) 
     \si_be[7]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(O2),
        .I2(\n_0_si_wrap_be_next[4]_i_2 ),
        .I3(\n_0_si_be[7]_i_6 ),
        .I4(\n_0_si_be[7]_i_7 ),
        .I5(\n_0_si_be[7]_i_8 ),
        .O(O31));
(* SOFT_HLUTNM = "soft_lutpair295" *) 
   LUT4 #(
    .INIT(16'hABFF)) 
     \si_be[7]_i_6 
       (.I0(Q[31]),
        .I1(Q[30]),
        .I2(sr_awaddr[0]),
        .I3(sr_awaddr[1]),
        .O(\n_0_si_be[7]_i_6 ));
(* SOFT_HLUTNM = "soft_lutpair289" *) 
   LUT5 #(
    .INIT(32'h10101000)) 
     \si_be[7]_i_7 
       (.I0(sr_awaddr[3]),
        .I1(sr_awaddr[4]),
        .I2(Q[31]),
        .I3(Q[30]),
        .I4(sr_awaddr[2]),
        .O(\n_0_si_be[7]_i_7 ));
(* SOFT_HLUTNM = "soft_lutpair302" *) 
   LUT3 #(
    .INIT(8'h4F)) 
     \si_be[7]_i_8 
       (.I0(Q[31]),
        .I1(Q[30]),
        .I2(Q[32]),
        .O(\n_0_si_be[7]_i_8 ));
LUT5 #(
    .INIT(32'hFFCCF7C4)) 
     \si_be[8]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[8]_i_6 ),
        .I4(Q[30]),
        .O(O32));
LUT6 #(
    .INIT(64'h0F0105000F010501)) 
     \si_be[8]_i_6 
       (.I0(sr_awaddr[2]),
        .I1(sr_awaddr[1]),
        .I2(\n_0_si_wrap_be_next[12]_i_3 ),
        .I3(Q[31]),
        .I4(Q[30]),
        .I5(sr_awaddr[0]),
        .O(\n_0_si_be[8]_i_6 ));
LUT5 #(
    .INIT(32'hFFCCF7C4)) 
     \si_be[9]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_be[9]_i_6 ),
        .I4(Q[30]),
        .O(O33));
LUT6 #(
    .INIT(64'h00000000A0AAA0FE)) 
     \si_be[9]_i_6 
       (.I0(Q[31]),
        .I1(sr_awaddr[0]),
        .I2(Q[30]),
        .I3(sr_awaddr[2]),
        .I4(sr_awaddr[1]),
        .I5(\n_0_si_wrap_be_next[12]_i_3 ),
        .O(\n_0_si_be[9]_i_6 ));
LUT6 #(
    .INIT(64'hFF503FFFFF5F3FFF)) 
     \si_ptr[0]_i_2 
       (.I0(sr_awlen[1]),
        .I1(Q[41]),
        .I2(Q[30]),
        .I3(Q[31]),
        .I4(Q[32]),
        .I5(Q[40]),
        .O(O20));
(* SOFT_HLUTNM = "soft_lutpair304" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \si_ptr[1]_i_2 
       (.I0(Q[40]),
        .I1(Q[30]),
        .I2(Q[41]),
        .O(O3));
LUT6 #(
    .INIT(64'hEEFEFEFEEEEEEEEE)) 
     \si_wrap_be_next[0]_i_1 
       (.I0(Q[32]),
        .I1(O5),
        .I2(\n_0_si_wrap_be_next[0]_i_3 ),
        .I3(sr_awaddr[4]),
        .I4(Q[41]),
        .I5(\n_0_si_wrap_be_next[0]_i_4 ),
        .O(O4));
LUT6 #(
    .INIT(64'hEEAEEEAEEEAEEEAA)) 
     \si_wrap_be_next[0]_i_2 
       (.I0(\n_0_si_wrap_be_next[3]_i_2 ),
        .I1(\n_0_m_payload_i[62]_i_3 ),
        .I2(sr_awaddr[4]),
        .I3(Q[41]),
        .I4(Q[40]),
        .I5(\n_0_si_wrap_be_next[0]_i_5 ),
        .O(O5));
LUT6 #(
    .INIT(64'hAAAAAAAAEEFEEEFF)) 
     \si_wrap_be_next[0]_i_3 
       (.I0(Q[41]),
        .I1(Q[40]),
        .I2(sr_awlen[1]),
        .I3(sr_awaddr[2]),
        .I4(sr_awaddr[1]),
        .I5(\n_0_si_wrap_be_next[0]_i_6 ),
        .O(\n_0_si_wrap_be_next[0]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair315" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \si_wrap_be_next[0]_i_4 
       (.I0(Q[31]),
        .I1(Q[30]),
        .O(\n_0_si_wrap_be_next[0]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair301" *) 
   LUT3 #(
    .INIT(8'h45)) 
     \si_wrap_be_next[0]_i_5 
       (.I0(sr_awaddr[3]),
        .I1(sr_awlen[1]),
        .I2(sr_awaddr[2]),
        .O(\n_0_si_wrap_be_next[0]_i_5 ));
(* SOFT_HLUTNM = "soft_lutpair312" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \si_wrap_be_next[0]_i_6 
       (.I0(sr_awaddr[4]),
        .I1(sr_awaddr[3]),
        .O(\n_0_si_wrap_be_next[0]_i_6 ));
LUT6 #(
    .INIT(64'hAAAAAEAAAAAAAAAA)) 
     \si_wrap_be_next[10]_i_1 
       (.I0(O58),
        .I1(sr_awaddr[3]),
        .I2(sr_awaddr[4]),
        .I3(sr_awaddr[1]),
        .I4(sr_awaddr[2]),
        .I5(\n_0_si_wrap_be_next[10]_i_2 ),
        .O(O75));
(* SOFT_HLUTNM = "soft_lutpair274" *) 
   LUT5 #(
    .INIT(32'h00000001)) 
     \si_wrap_be_next[10]_i_2 
       (.I0(Q[30]),
        .I1(sr_awlen[1]),
        .I2(Q[40]),
        .I3(Q[41]),
        .I4(Q[31]),
        .O(\n_0_si_wrap_be_next[10]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAABA)) 
     \si_wrap_be_next[11]_i_1 
       (.I0(Q[32]),
        .I1(\n_0_si_wrap_be_next[12]_i_3 ),
        .I2(Q[31]),
        .I3(Q[40]),
        .I4(Q[30]),
        .I5(sr_awlen[1]),
        .O(O58));
LUT6 #(
    .INIT(64'hAAAAEFAAAAAAAAAA)) 
     \si_wrap_be_next[12]_i_1 
       (.I0(O64),
        .I1(Q[32]),
        .I2(Q[31]),
        .I3(\n_0_si_wrap_be_next[12]_i_2 ),
        .I4(\n_0_si_wrap_be_next[12]_i_3 ),
        .I5(\n_0_si_wrap_be_next[20]_i_3 ),
        .O(O63));
(* SOFT_HLUTNM = "soft_lutpair313" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \si_wrap_be_next[12]_i_2 
       (.I0(sr_awaddr[2]),
        .I1(Q[30]),
        .O(\n_0_si_wrap_be_next[12]_i_2 ));
LUT2 #(
    .INIT(4'hB)) 
     \si_wrap_be_next[12]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(sr_awaddr[3]),
        .O(\n_0_si_wrap_be_next[12]_i_3 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAABAA)) 
     \si_wrap_be_next[13]_i_1 
       (.I0(Q[32]),
        .I1(\n_0_si_wrap_be_next[13]_i_2 ),
        .I2(sr_awlen[1]),
        .I3(Q[30]),
        .I4(\n_0_si_wrap_be_next[13]_i_3 ),
        .I5(Q[31]),
        .O(O64));
(* SOFT_HLUTNM = "soft_lutpair306" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \si_wrap_be_next[13]_i_2 
       (.I0(Q[40]),
        .I1(Q[41]),
        .O(\n_0_si_wrap_be_next[13]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair311" *) 
   LUT3 #(
    .INIT(8'hDF)) 
     \si_wrap_be_next[13]_i_3 
       (.I0(sr_awaddr[3]),
        .I1(sr_awaddr[4]),
        .I2(sr_awaddr[2]),
        .O(\n_0_si_wrap_be_next[13]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFAAAA3000AAAA)) 
     \si_wrap_be_next[14]_i_1 
       (.I0(I8),
        .I1(\n_0_si_wrap_be_next[13]_i_3 ),
        .I2(sr_awaddr[1]),
        .I3(\n_0_si_wrap_be_next[10]_i_2 ),
        .I4(load_si_ptr),
        .I5(Q[32]),
        .O(O19));
LUT6 #(
    .INIT(64'hFAFBFAFBD8D8D9D9)) 
     \si_wrap_be_next[16]_i_1 
       (.I0(Q[32]),
        .I1(Q[31]),
        .I2(O23),
        .I3(\n_0_si_wrap_be_next[17]_i_2 ),
        .I4(\n_0_si_wrap_be_next[16]_i_2 ),
        .I5(Q[30]),
        .O(O22));
LUT6 #(
    .INIT(64'h4F5F4F5F4F5F4F4F)) 
     \si_wrap_be_next[16]_i_2 
       (.I0(Q[41]),
        .I1(sr_awaddr[3]),
        .I2(sr_awaddr[4]),
        .I3(Q[40]),
        .I4(\n_0_si_wrap_be_next[16]_i_3 ),
        .I5(sr_awaddr[2]),
        .O(\n_0_si_wrap_be_next[16]_i_2 ));
LUT2 #(
    .INIT(4'h2)) 
     \si_wrap_be_next[16]_i_3 
       (.I0(sr_awaddr[1]),
        .I1(sr_awlen[1]),
        .O(\n_0_si_wrap_be_next[16]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFCCF0FFF055F0)) 
     \si_wrap_be_next[17]_i_1 
       (.I0(\n_0_si_wrap_be_next[17]_i_2 ),
        .I1(\n_0_si_wrap_be_next[17]_i_3 ),
        .I2(\n_0_si_wrap_be_next[18]_i_2 ),
        .I3(Q[30]),
        .I4(Q[32]),
        .I5(Q[31]),
        .O(O71));
LUT6 #(
    .INIT(64'hDDDDDDDDFDFFFDFD)) 
     \si_wrap_be_next[17]_i_2 
       (.I0(sr_awaddr[4]),
        .I1(Q[41]),
        .I2(sr_awaddr[3]),
        .I3(sr_awlen[1]),
        .I4(sr_awaddr[2]),
        .I5(Q[40]),
        .O(\n_0_si_wrap_be_next[17]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair317" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \si_wrap_be_next[17]_i_3 
       (.I0(sr_awaddr[4]),
        .I1(sr_awlen[1]),
        .O(\n_0_si_wrap_be_next[17]_i_3 ));
LUT6 #(
    .INIT(64'hABAAABAAABABABAA)) 
     \si_wrap_be_next[18]_i_1 
       (.I0(O12),
        .I1(Q[32]),
        .I2(Q[30]),
        .I3(\n_0_si_wrap_be_next[18]_i_2 ),
        .I4(\n_0_si_wrap_be_next[21]_i_2 ),
        .I5(\n_0_si_wrap_be_next[18]_i_3 ),
        .O(O80));
(* SOFT_HLUTNM = "soft_lutpair280" *) 
   LUT5 #(
    .INIT(32'h00A20000)) 
     \si_wrap_be_next[18]_i_2 
       (.I0(Q[31]),
        .I1(sr_awaddr[3]),
        .I2(sr_awlen[1]),
        .I3(Q[40]),
        .I4(sr_awaddr[4]),
        .O(\n_0_si_wrap_be_next[18]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair298" *) 
   LUT4 #(
    .INIT(16'hFFF7)) 
     \si_wrap_be_next[18]_i_3 
       (.I0(sr_awaddr[1]),
        .I1(sr_awaddr[4]),
        .I2(sr_awaddr[2]),
        .I3(sr_awaddr[3]),
        .O(\n_0_si_wrap_be_next[18]_i_3 ));
LUT6 #(
    .INIT(64'h0050F01000000000)) 
     \si_wrap_be_next[19]_i_1 
       (.I0(Q[40]),
        .I1(sr_awaddr[3]),
        .I2(Q[31]),
        .I3(Q[30]),
        .I4(sr_awlen[1]),
        .I5(sr_awaddr[4]),
        .O(O23));
LUT6 #(
    .INIT(64'hAAAAAAABAAAAAAAA)) 
     \si_wrap_be_next[20]_i_1 
       (.I0(O77),
        .I1(\n_0_si_wrap_be_next[20]_i_2 ),
        .I2(Q[32]),
        .I3(Q[30]),
        .I4(Q[31]),
        .I5(\n_0_si_wrap_be_next[20]_i_3 ),
        .O(O76));
(* SOFT_HLUTNM = "soft_lutpair312" *) 
   LUT3 #(
    .INIT(8'hDF)) 
     \si_wrap_be_next[20]_i_2 
       (.I0(sr_awaddr[4]),
        .I1(sr_awaddr[3]),
        .I2(sr_awaddr[2]),
        .O(\n_0_si_wrap_be_next[20]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair292" *) 
   LUT4 #(
    .INIT(16'h1011)) 
     \si_wrap_be_next[20]_i_3 
       (.I0(Q[41]),
        .I1(Q[40]),
        .I2(sr_awlen[1]),
        .I3(sr_awaddr[1]),
        .O(\n_0_si_wrap_be_next[20]_i_3 ));
LUT6 #(
    .INIT(64'hAEAAAAAAAAAAAAAA)) 
     \si_wrap_be_next[21]_i_1 
       (.I0(O12),
        .I1(sr_awaddr[2]),
        .I2(sr_awaddr[3]),
        .I3(sr_awaddr[4]),
        .I4(\n_0_si_wrap_be_next[21]_i_2 ),
        .I5(Q[30]),
        .O(O77));
(* SOFT_HLUTNM = "soft_lutpair274" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     \si_wrap_be_next[21]_i_2 
       (.I0(Q[40]),
        .I1(sr_awlen[1]),
        .I2(Q[41]),
        .I3(Q[31]),
        .O(\n_0_si_wrap_be_next[21]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAABAA)) 
     \si_wrap_be_next[22]_i_1 
       (.I0(O12),
        .I1(\n_0_si_wrap_be_next[22]_i_2 ),
        .I2(sr_awlen[1]),
        .I3(sr_awaddr[1]),
        .I4(Q[41]),
        .I5(Q[40]),
        .O(O72));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFDF)) 
     \si_wrap_be_next[22]_i_2 
       (.I0(sr_awaddr[2]),
        .I1(sr_awaddr[3]),
        .I2(sr_awaddr[4]),
        .I3(Q[32]),
        .I4(Q[30]),
        .I5(Q[31]),
        .O(\n_0_si_wrap_be_next[22]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair283" *) 
   LUT5 #(
    .INIT(32'hFF40F000)) 
     \si_wrap_be_next[23]_i_1 
       (.I0(sr_awlen[1]),
        .I1(sr_awaddr[4]),
        .I2(Q[31]),
        .I3(Q[32]),
        .I4(Q[30]),
        .O(O12));
LUT6 #(
    .INIT(64'hA0EFA0EFA0EFA0EC)) 
     \si_wrap_be_next[24]_i_1 
       (.I0(Q[31]),
        .I1(Q[30]),
        .I2(Q[32]),
        .I3(\n_0_si_wrap_be_next[25]_i_2 ),
        .I4(\n_0_si_wrap_be_next[25]_i_3 ),
        .I5(\n_0_si_wrap_be_next[24]_i_2 ),
        .O(O59));
LUT6 #(
    .INIT(64'h000000000000FF45)) 
     \si_wrap_be_next[24]_i_2 
       (.I0(sr_awaddr[2]),
        .I1(sr_awlen[1]),
        .I2(sr_awaddr[1]),
        .I3(Q[40]),
        .I4(\n_0_si_wrap_be_next[8]_i_2 ),
        .I5(\n_0_si_wrap_be_next[28]_i_2 ),
        .O(\n_0_si_wrap_be_next[24]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair285" *) 
   LUT5 #(
    .INIT(32'h8F8F8F88)) 
     \si_wrap_be_next[25]_i_1 
       (.I0(Q[32]),
        .I1(Q[31]),
        .I2(\n_0_si_wrap_be_next[25]_i_2 ),
        .I3(Q[30]),
        .I4(\n_0_si_wrap_be_next[25]_i_3 ),
        .O(O60));
LUT6 #(
    .INIT(64'hFF00FF000000FE00)) 
     \si_wrap_be_next[25]_i_2 
       (.I0(\n_0_si_wrap_be_next[25]_i_4 ),
        .I1(\n_0_si_wrap_be_next[28]_i_2 ),
        .I2(\n_0_si_wrap_be_next[13]_i_2 ),
        .I3(Q[30]),
        .I4(Q[32]),
        .I5(Q[31]),
        .O(\n_0_si_wrap_be_next[25]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair280" *) 
   LUT5 #(
    .INIT(32'h10000000)) 
     \si_wrap_be_next[25]_i_3 
       (.I0(Q[40]),
        .I1(sr_awlen[1]),
        .I2(Q[31]),
        .I3(sr_awaddr[4]),
        .I4(sr_awaddr[3]),
        .O(\n_0_si_wrap_be_next[25]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair317" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \si_wrap_be_next[25]_i_4 
       (.I0(sr_awaddr[2]),
        .I1(sr_awlen[1]),
        .O(\n_0_si_wrap_be_next[25]_i_4 ));
LUT5 #(
    .INIT(32'h000000F8)) 
     \si_wrap_be_next[26]_i_1 
       (.I0(\n_0_si_wrap_be_next[26]_i_2 ),
        .I1(\n_0_si_wrap_be_next[21]_i_2 ),
        .I2(\n_0_si_wrap_be_next[25]_i_3 ),
        .I3(Q[30]),
        .I4(Q[32]),
        .O(O82));
(* SOFT_HLUTNM = "soft_lutpair296" *) 
   LUT4 #(
    .INIT(16'h0080)) 
     \si_wrap_be_next[26]_i_2 
       (.I0(sr_awaddr[1]),
        .I1(sr_awaddr[4]),
        .I2(sr_awaddr[3]),
        .I3(sr_awaddr[2]),
        .O(\n_0_si_wrap_be_next[26]_i_2 ));
LUT6 #(
    .INIT(64'h0000000000000080)) 
     \si_wrap_be_next[27]_i_1 
       (.I0(sr_awaddr[3]),
        .I1(sr_awaddr[4]),
        .I2(Q[31]),
        .I3(sr_awlen[1]),
        .I4(Q[40]),
        .I5(Q[30]),
        .O(O83));
LUT6 #(
    .INIT(64'h0000100011111111)) 
     \si_wrap_be_next[28]_i_1 
       (.I0(Q[32]),
        .I1(Q[31]),
        .I2(\n_0_si_wrap_be_next[20]_i_3 ),
        .I3(\n_0_si_wrap_be_next[12]_i_2 ),
        .I4(\n_0_si_wrap_be_next[28]_i_2 ),
        .I5(\n_0_si_wrap_be_next[28]_i_3 ),
        .O(O65));
(* SOFT_HLUTNM = "soft_lutpair314" *) 
   LUT2 #(
    .INIT(4'h7)) 
     \si_wrap_be_next[28]_i_2 
       (.I0(sr_awaddr[4]),
        .I1(sr_awaddr[3]),
        .O(\n_0_si_wrap_be_next[28]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFFFDFFFFFFFF)) 
     \si_wrap_be_next[28]_i_3 
       (.I0(sr_awaddr[2]),
        .I1(\n_0_si_wrap_be_next[28]_i_2 ),
        .I2(Q[40]),
        .I3(Q[41]),
        .I4(sr_awlen[1]),
        .I5(Q[30]),
        .O(\n_0_si_wrap_be_next[28]_i_3 ));
LUT6 #(
    .INIT(64'h0000000000000004)) 
     \si_wrap_be_next[29]_i_1 
       (.I0(Q[31]),
        .I1(Q[30]),
        .I2(sr_awlen[1]),
        .I3(Q[41]),
        .I4(Q[40]),
        .I5(\n_0_si_wrap_be_next[29]_i_2 ),
        .O(O6));
(* SOFT_HLUTNM = "soft_lutpair311" *) 
   LUT3 #(
    .INIT(8'h7F)) 
     \si_wrap_be_next[29]_i_2 
       (.I0(sr_awaddr[3]),
        .I1(sr_awaddr[4]),
        .I2(sr_awaddr[2]),
        .O(\n_0_si_wrap_be_next[29]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair284" *) 
   LUT5 #(
    .INIT(32'hEEEFEEEE)) 
     \si_wrap_be_next[2]_i_1 
       (.I0(\n_0_si_wrap_be_next[3]_i_2 ),
        .I1(Q[32]),
        .I2(Q[30]),
        .I3(\n_0_si_wrap_be_next[2]_i_2 ),
        .I4(\n_0_si_wrap_be_next[21]_i_2 ),
        .O(O78));
(* SOFT_HLUTNM = "soft_lutpair294" *) 
   LUT4 #(
    .INIT(16'hFFEF)) 
     \si_wrap_be_next[2]_i_2 
       (.I0(sr_awaddr[3]),
        .I1(sr_awaddr[4]),
        .I2(sr_awaddr[1]),
        .I3(sr_awaddr[2]),
        .O(\n_0_si_wrap_be_next[2]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair299" *) 
   LUT4 #(
    .INIT(16'hE000)) 
     \si_wrap_be_next[30]_i_1 
       (.I0(Q[31]),
        .I1(Q[30]),
        .I2(Q[32]),
        .I3(load_si_ptr),
        .O(O18));
LUT6 #(
    .INIT(64'h0000000000010000)) 
     \si_wrap_be_next[30]_i_2 
       (.I0(Q[40]),
        .I1(sr_awlen[1]),
        .I2(Q[41]),
        .I3(Q[32]),
        .I4(\n_0_si_wrap_be_next[0]_i_4 ),
        .I5(\n_0_si_wrap_be_next[30]_i_3 ),
        .O(O66));
(* SOFT_HLUTNM = "soft_lutpair294" *) 
   LUT4 #(
    .INIT(16'h7FFF)) 
     \si_wrap_be_next[30]_i_3 
       (.I0(sr_awaddr[2]),
        .I1(sr_awaddr[4]),
        .I2(sr_awaddr[3]),
        .I3(sr_awaddr[1]),
        .O(\n_0_si_wrap_be_next[30]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair303" *) 
   LUT3 #(
    .INIT(8'hA8)) 
     \si_wrap_be_next[31]_i_1 
       (.I0(Q[32]),
        .I1(Q[30]),
        .I2(Q[31]),
        .O(O67));
(* SOFT_HLUTNM = "soft_lutpair284" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \si_wrap_be_next[3]_i_1 
       (.I0(Q[32]),
        .I1(\n_0_si_wrap_be_next[3]_i_2 ),
        .O(O79));
LUT6 #(
    .INIT(64'hFD005C00FD005D00)) 
     \si_wrap_be_next[3]_i_2 
       (.I0(sr_awaddr[4]),
        .I1(Q[40]),
        .I2(Q[30]),
        .I3(Q[31]),
        .I4(sr_awlen[1]),
        .I5(sr_awaddr[3]),
        .O(\n_0_si_wrap_be_next[3]_i_2 ));
LUT6 #(
    .INIT(64'hCCCCECEFCCCCECEC)) 
     \si_wrap_be_next[4]_i_1 
       (.I0(\n_0_si_wrap_be_next[21]_i_2 ),
        .I1(O11),
        .I2(Q[30]),
        .I3(Q[31]),
        .I4(\n_0_si_wrap_be_next[4]_i_2 ),
        .I5(\n_0_si_wrap_be_next[20]_i_3 ),
        .O(O69));
(* SOFT_HLUTNM = "soft_lutpair298" *) 
   LUT3 #(
    .INIT(8'hEF)) 
     \si_wrap_be_next[4]_i_2 
       (.I0(sr_awaddr[3]),
        .I1(sr_awaddr[4]),
        .I2(sr_awaddr[2]),
        .O(\n_0_si_wrap_be_next[4]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAEAAA)) 
     \si_wrap_be_next[5]_i_1 
       (.I0(O11),
        .I1(Q[30]),
        .I2(\n_0_si_wrap_be_next[21]_i_2 ),
        .I3(sr_awaddr[2]),
        .I4(sr_awaddr[4]),
        .I5(sr_awaddr[3]),
        .O(O81));
LUT6 #(
    .INIT(64'hAAAEAAAAAAAAAAAA)) 
     \si_wrap_be_next[6]_i_1 
       (.I0(O11),
        .I1(sr_awaddr[2]),
        .I2(sr_awaddr[4]),
        .I3(sr_awaddr[3]),
        .I4(sr_awaddr[1]),
        .I5(\n_0_si_wrap_be_next[10]_i_2 ),
        .O(O74));
(* SOFT_HLUTNM = "soft_lutpair283" *) 
   LUT5 #(
    .INIT(32'hEFAAAAAA)) 
     \si_wrap_be_next[7]_i_1 
       (.I0(Q[32]),
        .I1(sr_awlen[1]),
        .I2(sr_awaddr[4]),
        .I3(Q[31]),
        .I4(Q[30]),
        .O(O11));
LUT6 #(
    .INIT(64'hAAAAAABFAAAAAAAA)) 
     \si_wrap_be_next[8]_i_1 
       (.I0(O57),
        .I1(\n_0_si_wrap_be_next[12]_i_3 ),
        .I2(Q[40]),
        .I3(\n_0_si_wrap_be_next[8]_i_2 ),
        .I4(Q[30]),
        .I5(\n_0_si_wrap_be_next[8]_i_3 ),
        .O(O56));
(* SOFT_HLUTNM = "soft_lutpair308" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \si_wrap_be_next[8]_i_2 
       (.I0(Q[31]),
        .I1(Q[41]),
        .O(\n_0_si_wrap_be_next[8]_i_2 ));
LUT6 #(
    .INIT(64'hAAAABABAAAAAAABA)) 
     \si_wrap_be_next[8]_i_3 
       (.I0(Q[40]),
        .I1(sr_awaddr[4]),
        .I2(sr_awaddr[3]),
        .I3(sr_awaddr[1]),
        .I4(sr_awaddr[2]),
        .I5(sr_awlen[1]),
        .O(\n_0_si_wrap_be_next[8]_i_3 ));
LUT6 #(
    .INIT(64'hABAAAAAAABAAABAA)) 
     \si_wrap_be_next[9]_i_1 
       (.I0(O58),
        .I1(\n_0_si_wrap_be_next[13]_i_2 ),
        .I2(\n_0_si_wrap_be_next[12]_i_3 ),
        .I3(\n_0_m_payload_i[62]_i_3 ),
        .I4(sr_awlen[1]),
        .I5(sr_awaddr[2]),
        .O(O57));
LUT6 #(
    .INIT(64'h33305555333F5555)) 
     \si_wrap_cnt[0]_i_2 
       (.I0(\n_0_si_wrap_cnt[0]_i_3 ),
        .I1(Q[0]),
        .I2(Q[31]),
        .I3(Q[30]),
        .I4(Q[32]),
        .I5(sr_awaddr[4]),
        .O(O21));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_wrap_cnt[0]_i_3 
       (.I0(sr_awaddr[3]),
        .I1(sr_awaddr[2]),
        .I2(Q[31]),
        .I3(sr_awaddr[1]),
        .I4(Q[30]),
        .I5(sr_awaddr[0]),
        .O(\n_0_si_wrap_cnt[0]_i_3 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_wrap_cnt[1]_i_2 
       (.I0(sr_awaddr[4]),
        .I1(sr_awaddr[3]),
        .I2(Q[31]),
        .I3(sr_awaddr[2]),
        .I4(Q[30]),
        .I5(sr_awaddr[1]),
        .O(O61));
LUT6 #(
    .INIT(64'hDDDFDDD555555555)) 
     \si_wrap_cnt[1]_i_3 
       (.I0(sr_awlen[1]),
        .I1(Q[1]),
        .I2(Q[30]),
        .I3(Q[31]),
        .I4(Q[0]),
        .I5(Q[32]),
        .O(O68));
LUT6 #(
    .INIT(64'h00000000FFFD555D)) 
     \si_wrap_cnt[2]_i_3 
       (.I0(Q[32]),
        .I1(Q[1]),
        .I2(Q[31]),
        .I3(Q[30]),
        .I4(Q[2]),
        .I5(\n_0_si_wrap_cnt[2]_i_4 ),
        .O(O62));
LUT6 #(
    .INIT(64'h00000000303F5555)) 
     \si_wrap_cnt[2]_i_4 
       (.I0(\n_0_si_wrap_cnt[2]_i_5 ),
        .I1(Q[0]),
        .I2(Q[30]),
        .I3(sr_awaddr[4]),
        .I4(Q[31]),
        .I5(Q[32]),
        .O(\n_0_si_wrap_cnt[2]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair301" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \si_wrap_cnt[2]_i_5 
       (.I0(sr_awaddr[3]),
        .I1(Q[30]),
        .I2(sr_awaddr[2]),
        .O(\n_0_si_wrap_cnt[2]_i_5 ));
(* SOFT_HLUTNM = "soft_lutpair286" *) 
   LUT5 #(
    .INIT(32'h0000707F)) 
     \si_wrap_cnt[3]_i_3 
       (.I0(Q[31]),
        .I1(Q[3]),
        .I2(Q[32]),
        .I3(\n_0_si_wrap_cnt[3]_i_4 ),
        .I4(\n_0_si_wrap_cnt[3]_i_5 ),
        .O(O84));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \si_wrap_cnt[3]_i_4 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[31]),
        .I3(sr_awaddr[4]),
        .I4(Q[30]),
        .I5(sr_awaddr[3]),
        .O(\n_0_si_wrap_cnt[3]_i_4 ));
LUT6 #(
    .INIT(64'h5555F5D5555555D5)) 
     \si_wrap_cnt[3]_i_5 
       (.I0(Q[41]),
        .I1(Q[2]),
        .I2(Q[32]),
        .I3(Q[30]),
        .I4(Q[31]),
        .I5(Q[3]),
        .O(\n_0_si_wrap_cnt[3]_i_5 ));
LUT2 #(
    .INIT(4'h2)) 
     \si_wrap_word_next[0]_i_1 
       (.I0(Q[0]),
        .I1(\n_0_si_wrap_word_next[0]_i_2 ),
        .O(f_si_wrap_word_return));
LUT6 #(
    .INIT(64'h33300030CC88CC88)) 
     \si_wrap_word_next[0]_i_2 
       (.I0(sr_awlen[1]),
        .I1(Q[32]),
        .I2(Q[41]),
        .I3(Q[30]),
        .I4(Q[40]),
        .I5(Q[31]),
        .O(\n_0_si_wrap_word_next[0]_i_2 ));
endmodule

(* ORIG_REF_NAME = "axi_register_slice_v2_1_axic_register_slice" *) 
module axi_dwidth_converter_0_axi_register_slice_v2_1_axic_register_slice__parameterized3
   (m_axi_awready_i,
    O1,
    O2,
    O3,
    O4,
    O5,
    O6,
    O7,
    D,
    O8,
    O9,
    SR,
    O11,
    cmd_push_block0,
    O10,
    O12,
    O13,
    O14,
    O15,
    s_axi_awsize,
    I3,
    I43,
    I44,
    sr_awvalid,
    I1,
    s_axi_wlast,
    s_axi_wvalid,
    I2,
    I4,
    I45,
    si_wrap_be_next,
    I46,
    Q,
    I47,
    I48,
    I5,
    I6,
    I7,
    p_176_in,
    I49,
    I8,
    I9,
    I10,
    I11,
    I50,
    I12,
    I51,
    I13,
    I52,
    I14,
    I53,
    I15,
    I54,
    I16,
    I55,
    I17,
    I56,
    I18,
    I57,
    I19,
    I58,
    I20,
    I59,
    I21,
    I60,
    I22,
    I61,
    I23,
    I62,
    I24,
    I63,
    I25,
    I64,
    I26,
    I65,
    I27,
    I66,
    I28,
    I67,
    I29,
    I68,
    I30,
    I69,
    I31,
    I70,
    I32,
    I71,
    I33,
    I72,
    I34,
    I73,
    I35,
    I74,
    I36,
    I75,
    I37,
    I76,
    I38,
    I77,
    I39,
    I78,
    I40,
    I79,
    I41,
    I80,
    I42,
    I81,
    I82,
    I83,
    I84,
    I85,
    I86,
    I87,
    I88,
    I89,
    I90,
    I91,
    aw_ready,
    buf_cnt,
    aw_pop_event,
    I92,
    I93,
    I94);
  output m_axi_awready_i;
  output O1;
  output O2;
  output O3;
  output O4;
  output [0:0]O5;
  output [0:0]O6;
  output [0:0]O7;
  output [3:0]D;
  output [6:0]O8;
  output [31:0]O9;
  output [0:0]SR;
  output O11;
  output cmd_push_block0;
  output O10;
  output O12;
  output O13;
  output O14;
  output [64:0]O15;
  output [1:0]s_axi_awsize;
  input I3;
  input I43;
  input I44;
  input sr_awvalid;
  input I1;
  input s_axi_wlast;
  input s_axi_wvalid;
  input I2;
  input I4;
  input I45;
  input [0:0]si_wrap_be_next;
  input I46;
  input [47:0]Q;
  input I47;
  input I48;
  input [1:0]I5;
  input [0:0]I6;
  input I7;
  input p_176_in;
  input I49;
  input [3:0]I8;
  input I9;
  input [6:0]I10;
  input I11;
  input I50;
  input I12;
  input I51;
  input I13;
  input I52;
  input I14;
  input I53;
  input I15;
  input I54;
  input I16;
  input I55;
  input I17;
  input I56;
  input I18;
  input I57;
  input I19;
  input I58;
  input I20;
  input I59;
  input I21;
  input I60;
  input I22;
  input I61;
  input I23;
  input I62;
  input I24;
  input I63;
  input I25;
  input I64;
  input I26;
  input I65;
  input I27;
  input I66;
  input I28;
  input I67;
  input I29;
  input I68;
  input I30;
  input I69;
  input I31;
  input I70;
  input I32;
  input I71;
  input I33;
  input I72;
  input I34;
  input I73;
  input I35;
  input I74;
  input I36;
  input I75;
  input I37;
  input I76;
  input I38;
  input I77;
  input I39;
  input I78;
  input I40;
  input I79;
  input I41;
  input I80;
  input I42;
  input I81;
  input I82;
  input I83;
  input I84;
  input I85;
  input I86;
  input I87;
  input I88;
  input I89;
  input I90;
  input I91;
  input aw_ready;
  input [1:0]buf_cnt;
  input aw_pop_event;
  input [0:0]I92;
  input [25:0]I93;
  input I94;

  wire [3:0]D;
  wire I1;
  wire [6:0]I10;
  wire I11;
  wire I12;
  wire I13;
  wire I14;
  wire I15;
  wire I16;
  wire I17;
  wire I18;
  wire I19;
  wire I2;
  wire I20;
  wire I21;
  wire I22;
  wire I23;
  wire I24;
  wire I25;
  wire I26;
  wire I27;
  wire I28;
  wire I29;
  wire I3;
  wire I30;
  wire I31;
  wire I32;
  wire I33;
  wire I34;
  wire I35;
  wire I36;
  wire I37;
  wire I38;
  wire I39;
  wire I4;
  wire I40;
  wire I41;
  wire I42;
  wire I43;
  wire I44;
  wire I45;
  wire I46;
  wire I47;
  wire I48;
  wire I49;
  wire [1:0]I5;
  wire I50;
  wire I51;
  wire I52;
  wire I53;
  wire I54;
  wire I55;
  wire I56;
  wire I57;
  wire I58;
  wire I59;
  wire [0:0]I6;
  wire I60;
  wire I61;
  wire I62;
  wire I63;
  wire I64;
  wire I65;
  wire I66;
  wire I67;
  wire I68;
  wire I69;
  wire I7;
  wire I70;
  wire I71;
  wire I72;
  wire I73;
  wire I74;
  wire I75;
  wire I76;
  wire I77;
  wire I78;
  wire I79;
  wire [3:0]I8;
  wire I80;
  wire I81;
  wire I82;
  wire I83;
  wire I84;
  wire I85;
  wire I86;
  wire I87;
  wire I88;
  wire I89;
  wire I9;
  wire I90;
  wire I91;
  wire [0:0]I92;
  wire [25:0]I93;
  wire I94;
  wire O1;
  wire O10;
  wire O11;
  wire O12;
  wire O13;
  wire O14;
  wire [64:0]O15;
  wire O2;
  wire O3;
  wire O4;
  wire [0:0]O5;
  wire [0:0]O6;
  wire [0:0]O7;
  wire [6:0]O8;
  wire [31:0]O9;
  wire [47:0]Q;
  wire [0:0]SR;
  wire aw_pop_event;
  wire aw_ready;
  wire [1:0]buf_cnt;
  wire cmd_push_block0;
  wire m_axi_awready_i;
  wire \n_0_aresetn_d_reg[0] ;
  wire \n_0_aresetn_d_reg[1] ;
  wire \n_0_m_payload_i[36]_i_1 ;
  wire \n_0_m_payload_i[37]_i_1 ;
  wire \n_0_m_payload_i[67]_i_1 ;
  wire n_0_m_valid_i_i_1;
  wire n_0_m_valid_i_i_2__0;
  wire n_0_s_ready_i_i_1;
  wire \n_0_si_state[1]_i_2 ;
  wire \n_0_si_wrap_cnt[2]_i_2 ;
  wire p_176_in;
  wire s_awvalid_reg;
  wire [1:0]s_axi_awsize;
  wire s_axi_wlast;
  wire s_axi_wvalid;
  wire [0:0]si_wrap_be_next;
  wire sr_awvalid;

LUT6 #(
    .INIT(64'h00FF000000008A8A)) 
     S_AXI_WREADY_i_i_5
       (.I0(sr_awvalid),
        .I1(I44),
        .I2(I43),
        .I3(O1),
        .I4(I2),
        .I5(I4),
        .O(O11));
FDRE #(
    .INIT(1'b0)) 
     \aresetn_d_reg[0] 
       (.C(I3),
        .CE(1'b1),
        .D(1'b1),
        .Q(\n_0_aresetn_d_reg[0] ),
        .R(I92));
FDRE #(
    .INIT(1'b0)) 
     \aresetn_d_reg[1] 
       (.C(I3),
        .CE(1'b1),
        .D(\n_0_aresetn_d_reg[0] ),
        .Q(\n_0_aresetn_d_reg[1] ),
        .R(I92));
(* SOFT_HLUTNM = "soft_lutpair130" *) 
   LUT4 #(
    .INIT(16'h6698)) 
     \buf_cnt[0]_i_1 
       (.I0(O2),
        .I1(aw_pop_event),
        .I2(buf_cnt[1]),
        .I3(buf_cnt[0]),
        .O(O12));
(* SOFT_HLUTNM = "soft_lutpair130" *) 
   LUT4 #(
    .INIT(16'h78E0)) 
     \buf_cnt[1]_i_1 
       (.I0(O2),
        .I1(aw_pop_event),
        .I2(buf_cnt[1]),
        .I3(buf_cnt[0]),
        .O(O10));
LUT2 #(
    .INIT(4'h1)) 
     cmd_push_block_i_1
       (.I0(m_axi_awready_i),
        .I1(I45),
        .O(cmd_push_block0));
LUT6 #(
    .INIT(64'h00000000FF800000)) 
     dw_fifogen_aw_i_2
       (.I0(I1),
        .I1(s_axi_wlast),
        .I2(s_axi_wvalid),
        .I3(I2),
        .I4(I4),
        .I5(O1),
        .O(O2));
LUT4 #(
    .INIT(16'h77F7)) 
     dw_fifogen_aw_i_4
       (.I0(aw_ready),
        .I1(s_awvalid_reg),
        .I2(buf_cnt[1]),
        .I3(buf_cnt[0]),
        .O(O1));
LUT4 #(
    .INIT(16'hACAF)) 
     \m_payload_i[36]_i_1 
       (.I0(s_axi_awsize[0]),
        .I1(Q[29]),
        .I2(s_awvalid_reg),
        .I3(I94),
        .O(\n_0_m_payload_i[36]_i_1 ));
LUT4 #(
    .INIT(16'hACAF)) 
     \m_payload_i[37]_i_1 
       (.I0(s_axi_awsize[1]),
        .I1(Q[30]),
        .I2(s_awvalid_reg),
        .I3(I94),
        .O(\n_0_m_payload_i[37]_i_1 ));
LUT1 #(
    .INIT(2'h1)) 
     \m_payload_i[67]_i_1 
       (.I0(s_awvalid_reg),
        .O(\n_0_m_payload_i[67]_i_1 ));
FDRE \m_payload_i_reg[0] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[0]),
        .Q(O15[0]),
        .R(1'b0));
FDRE \m_payload_i_reg[10] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[4]),
        .Q(O15[10]),
        .R(1'b0));
FDRE \m_payload_i_reg[11] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[5]),
        .Q(O15[11]),
        .R(1'b0));
FDRE \m_payload_i_reg[12] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[6]),
        .Q(O15[12]),
        .R(1'b0));
FDRE \m_payload_i_reg[13] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[7]),
        .Q(O15[13]),
        .R(1'b0));
FDRE \m_payload_i_reg[14] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[8]),
        .Q(O15[14]),
        .R(1'b0));
FDRE \m_payload_i_reg[15] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[9]),
        .Q(O15[15]),
        .R(1'b0));
FDRE \m_payload_i_reg[16] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[10]),
        .Q(O15[16]),
        .R(1'b0));
FDRE \m_payload_i_reg[17] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[11]),
        .Q(O15[17]),
        .R(1'b0));
FDRE \m_payload_i_reg[18] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[12]),
        .Q(O15[18]),
        .R(1'b0));
FDRE \m_payload_i_reg[19] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[13]),
        .Q(O15[19]),
        .R(1'b0));
FDRE \m_payload_i_reg[1] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[1]),
        .Q(O15[1]),
        .R(1'b0));
FDRE \m_payload_i_reg[20] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[14]),
        .Q(O15[20]),
        .R(1'b0));
FDRE \m_payload_i_reg[21] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[15]),
        .Q(O15[21]),
        .R(1'b0));
FDRE \m_payload_i_reg[22] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[16]),
        .Q(O15[22]),
        .R(1'b0));
FDRE \m_payload_i_reg[23] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[17]),
        .Q(O15[23]),
        .R(1'b0));
FDRE \m_payload_i_reg[24] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[18]),
        .Q(O15[24]),
        .R(1'b0));
FDRE \m_payload_i_reg[25] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[19]),
        .Q(O15[25]),
        .R(1'b0));
FDRE \m_payload_i_reg[26] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[20]),
        .Q(O15[26]),
        .R(1'b0));
FDRE \m_payload_i_reg[27] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[21]),
        .Q(O15[27]),
        .R(1'b0));
FDRE \m_payload_i_reg[28] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[22]),
        .Q(O15[28]),
        .R(1'b0));
FDRE \m_payload_i_reg[29] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[23]),
        .Q(O15[29]),
        .R(1'b0));
FDRE \m_payload_i_reg[2] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[2]),
        .Q(O15[2]),
        .R(1'b0));
FDRE \m_payload_i_reg[30] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[24]),
        .Q(O15[30]),
        .R(1'b0));
FDRE \m_payload_i_reg[31] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[25]),
        .Q(O15[31]),
        .R(1'b0));
FDRE \m_payload_i_reg[32] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[26]),
        .Q(O15[32]),
        .R(1'b0));
FDRE \m_payload_i_reg[33] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[27]),
        .Q(O15[33]),
        .R(1'b0));
FDRE \m_payload_i_reg[34] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[28]),
        .Q(O15[34]),
        .R(1'b0));
FDRE \m_payload_i_reg[35] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[9]),
        .Q(O15[35]),
        .R(1'b0));
FDRE \m_payload_i_reg[36] 
       (.C(I3),
        .CE(1'b1),
        .D(\n_0_m_payload_i[36]_i_1 ),
        .Q(s_axi_awsize[0]),
        .R(1'b0));
FDRE \m_payload_i_reg[37] 
       (.C(I3),
        .CE(1'b1),
        .D(\n_0_m_payload_i[37]_i_1 ),
        .Q(s_axi_awsize[1]),
        .R(1'b0));
FDRE \m_payload_i_reg[38] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[10]),
        .Q(O15[36]),
        .R(1'b0));
FDRE \m_payload_i_reg[39] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[11]),
        .Q(O15[37]),
        .R(1'b0));
FDRE \m_payload_i_reg[3] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[3]),
        .Q(O15[3]),
        .R(1'b0));
FDRE \m_payload_i_reg[40] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[33]),
        .Q(O15[38]),
        .R(1'b0));
FDRE \m_payload_i_reg[41] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[34]),
        .Q(O15[39]),
        .R(1'b0));
FDRE \m_payload_i_reg[42] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[35]),
        .Q(O15[40]),
        .R(1'b0));
FDRE \m_payload_i_reg[43] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[36]),
        .Q(O15[41]),
        .R(1'b0));
FDRE \m_payload_i_reg[44] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[12]),
        .Q(O15[42]),
        .R(1'b0));
FDRE \m_payload_i_reg[45] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[13]),
        .Q(O15[43]),
        .R(1'b0));
FDRE \m_payload_i_reg[46] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[14]),
        .Q(O15[44]),
        .R(1'b0));
FDRE \m_payload_i_reg[47] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[15]),
        .Q(O15[45]),
        .R(1'b0));
FDRE \m_payload_i_reg[48] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[16]),
        .Q(O15[46]),
        .R(1'b0));
FDRE \m_payload_i_reg[49] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[17]),
        .Q(O15[47]),
        .R(1'b0));
FDRE \m_payload_i_reg[4] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[4]),
        .Q(O15[4]),
        .R(1'b0));
FDRE \m_payload_i_reg[50] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[18]),
        .Q(O15[48]),
        .R(1'b0));
FDRE \m_payload_i_reg[51] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[19]),
        .Q(O15[49]),
        .R(1'b0));
FDRE \m_payload_i_reg[52] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[39]),
        .Q(O15[50]),
        .R(1'b0));
FDRE \m_payload_i_reg[54] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[40]),
        .Q(O15[51]),
        .R(1'b0));
FDRE \m_payload_i_reg[55] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[41]),
        .Q(O15[52]),
        .R(1'b0));
FDRE \m_payload_i_reg[56] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[42]),
        .Q(O15[53]),
        .R(1'b0));
FDRE \m_payload_i_reg[57] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[43]),
        .Q(O15[54]),
        .R(1'b0));
FDRE \m_payload_i_reg[58] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[44]),
        .Q(O15[55]),
        .R(1'b0));
FDRE \m_payload_i_reg[59] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[45]),
        .Q(O15[56]),
        .R(1'b0));
FDRE \m_payload_i_reg[5] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[5]),
        .Q(O15[5]),
        .R(1'b0));
FDRE \m_payload_i_reg[60] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[46]),
        .Q(O15[57]),
        .R(1'b0));
FDRE \m_payload_i_reg[61] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[47]),
        .Q(O15[58]),
        .R(1'b0));
FDRE \m_payload_i_reg[62] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[20]),
        .Q(O15[59]),
        .R(1'b0));
FDRE \m_payload_i_reg[63] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[21]),
        .Q(O15[60]),
        .R(1'b0));
FDRE \m_payload_i_reg[64] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[22]),
        .Q(O15[61]),
        .R(1'b0));
FDRE \m_payload_i_reg[65] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[23]),
        .Q(O15[62]),
        .R(1'b0));
FDRE \m_payload_i_reg[66] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[24]),
        .Q(O15[63]),
        .R(1'b0));
FDRE \m_payload_i_reg[67] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[25]),
        .Q(O15[64]),
        .R(1'b0));
FDRE \m_payload_i_reg[6] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[6]),
        .Q(O15[6]),
        .R(1'b0));
FDRE \m_payload_i_reg[7] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[7]),
        .Q(O15[7]),
        .R(1'b0));
FDRE \m_payload_i_reg[8] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(I93[8]),
        .Q(O15[8]),
        .R(1'b0));
FDRE \m_payload_i_reg[9] 
       (.C(I3),
        .CE(\n_0_m_payload_i[67]_i_1 ),
        .D(Q[3]),
        .Q(O15[9]),
        .R(1'b0));
LUT6 #(
    .INIT(64'hA8A808A808080808)) 
     m_valid_i_i_1
       (.I0(\n_0_aresetn_d_reg[1] ),
        .I1(n_0_m_valid_i_i_2__0),
        .I2(m_axi_awready_i),
        .I3(I43),
        .I4(I44),
        .I5(sr_awvalid),
        .O(n_0_m_valid_i_i_1));
LUT6 #(
    .INIT(64'hFFFF007FFFFFFFFF)) 
     m_valid_i_i_2__0
       (.I0(I1),
        .I1(s_axi_wlast),
        .I2(s_axi_wvalid),
        .I3(I2),
        .I4(O1),
        .I5(I4),
        .O(n_0_m_valid_i_i_2__0));
FDRE m_valid_i_reg
       (.C(I3),
        .CE(1'b1),
        .D(n_0_m_valid_i_i_1),
        .Q(s_awvalid_reg),
        .R(1'b0));
LUT5 #(
    .INIT(32'h8A8AAA8A)) 
     s_ready_i_i_1
       (.I0(\n_0_aresetn_d_reg[0] ),
        .I1(O2),
        .I2(\n_0_aresetn_d_reg[1] ),
        .I3(I45),
        .I4(s_awvalid_reg),
        .O(n_0_s_ready_i_i_1));
FDRE s_ready_i_reg
       (.C(I3),
        .CE(1'b1),
        .D(n_0_s_ready_i_i_1),
        .Q(m_axi_awready_i),
        .R(1'b0));
(* SOFT_HLUTNM = "soft_lutpair127" *) 
   LUT5 #(
    .INIT(32'hFEAAAAAA)) 
     \si_be[31]_i_1 
       (.I0(O4),
        .I1(I5[1]),
        .I2(I5[0]),
        .I3(I1),
        .I4(s_axi_wvalid),
        .O(O6));
MUXF7 \si_be_reg[0]_i_1 
       (.I0(I42),
        .I1(I81),
        .O(O9[0]),
        .S(O4));
MUXF7 \si_be_reg[10]_i_1 
       (.I0(I32),
        .I1(I71),
        .O(O9[10]),
        .S(O4));
MUXF7 \si_be_reg[11]_i_1 
       (.I0(I31),
        .I1(I70),
        .O(O9[11]),
        .S(O4));
MUXF7 \si_be_reg[12]_i_1 
       (.I0(I30),
        .I1(I69),
        .O(O9[12]),
        .S(O4));
MUXF7 \si_be_reg[13]_i_1 
       (.I0(I29),
        .I1(I68),
        .O(O9[13]),
        .S(O4));
MUXF7 \si_be_reg[14]_i_1 
       (.I0(I28),
        .I1(I67),
        .O(O9[14]),
        .S(O4));
MUXF7 \si_be_reg[15]_i_1 
       (.I0(I27),
        .I1(I66),
        .O(O9[15]),
        .S(O4));
MUXF7 \si_be_reg[16]_i_1 
       (.I0(I26),
        .I1(I65),
        .O(O9[16]),
        .S(O4));
MUXF7 \si_be_reg[17]_i_1 
       (.I0(I25),
        .I1(I64),
        .O(O9[17]),
        .S(O4));
MUXF7 \si_be_reg[18]_i_1 
       (.I0(I24),
        .I1(I63),
        .O(O9[18]),
        .S(O4));
MUXF7 \si_be_reg[19]_i_1 
       (.I0(I23),
        .I1(I62),
        .O(O9[19]),
        .S(O4));
MUXF7 \si_be_reg[1]_i_1 
       (.I0(I41),
        .I1(I80),
        .O(O9[1]),
        .S(O4));
MUXF7 \si_be_reg[20]_i_1 
       (.I0(I22),
        .I1(I61),
        .O(O9[20]),
        .S(O4));
MUXF7 \si_be_reg[21]_i_1 
       (.I0(I21),
        .I1(I60),
        .O(O9[21]),
        .S(O4));
MUXF7 \si_be_reg[22]_i_1 
       (.I0(I20),
        .I1(I59),
        .O(O9[22]),
        .S(O4));
MUXF7 \si_be_reg[23]_i_1 
       (.I0(I19),
        .I1(I58),
        .O(O9[23]),
        .S(O4));
MUXF7 \si_be_reg[24]_i_1 
       (.I0(I18),
        .I1(I57),
        .O(O9[24]),
        .S(O4));
MUXF7 \si_be_reg[25]_i_1 
       (.I0(I17),
        .I1(I56),
        .O(O9[25]),
        .S(O4));
MUXF7 \si_be_reg[26]_i_1 
       (.I0(I16),
        .I1(I55),
        .O(O9[26]),
        .S(O4));
MUXF7 \si_be_reg[27]_i_1 
       (.I0(I15),
        .I1(I54),
        .O(O9[27]),
        .S(O4));
MUXF7 \si_be_reg[28]_i_1 
       (.I0(I14),
        .I1(I53),
        .O(O9[28]),
        .S(O4));
MUXF7 \si_be_reg[29]_i_1 
       (.I0(I13),
        .I1(I52),
        .O(O9[29]),
        .S(O4));
MUXF7 \si_be_reg[2]_i_1 
       (.I0(I40),
        .I1(I79),
        .O(O9[2]),
        .S(O4));
MUXF7 \si_be_reg[30]_i_1 
       (.I0(I12),
        .I1(I51),
        .O(O9[30]),
        .S(O4));
MUXF7 \si_be_reg[31]_i_2 
       (.I0(I11),
        .I1(I50),
        .O(O9[31]),
        .S(O4));
MUXF7 \si_be_reg[3]_i_1 
       (.I0(I39),
        .I1(I78),
        .O(O9[3]),
        .S(O4));
MUXF7 \si_be_reg[4]_i_1 
       (.I0(I38),
        .I1(I77),
        .O(O9[4]),
        .S(O4));
MUXF7 \si_be_reg[5]_i_1 
       (.I0(I37),
        .I1(I76),
        .O(O9[5]),
        .S(O4));
MUXF7 \si_be_reg[6]_i_1 
       (.I0(I36),
        .I1(I75),
        .O(O9[6]),
        .S(O4));
MUXF7 \si_be_reg[7]_i_1 
       (.I0(I35),
        .I1(I74),
        .O(O9[7]),
        .S(O4));
MUXF7 \si_be_reg[8]_i_1 
       (.I0(I34),
        .I1(I73),
        .O(O9[8]),
        .S(O4));
MUXF7 \si_be_reg[9]_i_1 
       (.I0(I33),
        .I1(I72),
        .O(O9[9]),
        .S(O4));
LUT6 #(
    .INIT(64'hF100F1F100000000)) 
     \si_burst[1]_i_1 
       (.I0(I4),
        .I1(I2),
        .I2(O2),
        .I3(I44),
        .I4(I43),
        .I5(sr_awvalid),
        .O(O4));
LUT4 #(
    .INIT(16'h4474)) 
     \si_ptr[0]_i_1 
       (.I0(I10[0]),
        .I1(\n_0_si_wrap_cnt[2]_i_2 ),
        .I2(Q[0]),
        .I3(I83),
        .O(O8[0]));
LUT6 #(
    .INIT(64'h6F60606060606060)) 
     \si_ptr[1]_i_1 
       (.I0(I10[0]),
        .I1(I10[1]),
        .I2(\n_0_si_wrap_cnt[2]_i_2 ),
        .I3(I84),
        .I4(I85),
        .I5(Q[1]),
        .O(O8[1]));
LUT6 #(
    .INIT(64'h6F60606060606060)) 
     \si_ptr[2]_i_1 
       (.I0(I10[2]),
        .I1(I86),
        .I2(\n_0_si_wrap_cnt[2]_i_2 ),
        .I3(I87),
        .I4(Q[2]),
        .I5(Q[38]),
        .O(O8[2]));
LUT5 #(
    .INIT(32'h2AAA8000)) 
     \si_ptr[3]_i_1 
       (.I0(\n_0_si_wrap_cnt[2]_i_2 ),
        .I1(I10[2]),
        .I2(I10[1]),
        .I3(I10[0]),
        .I4(I10[3]),
        .O(O8[3]));
LUT6 #(
    .INIT(64'h2AAAAAAA80000000)) 
     \si_ptr[4]_i_1 
       (.I0(\n_0_si_wrap_cnt[2]_i_2 ),
        .I1(I10[0]),
        .I2(I10[1]),
        .I3(I10[2]),
        .I4(I10[3]),
        .I5(I10[4]),
        .O(O8[4]));
(* SOFT_HLUTNM = "soft_lutpair129" *) 
   LUT3 #(
    .INIT(8'h28)) 
     \si_ptr[5]_i_1 
       (.I0(\n_0_si_wrap_cnt[2]_i_2 ),
        .I1(I9),
        .I2(I10[5]),
        .O(O8[5]));
LUT6 #(
    .INIT(64'h08FF080008FF08FF)) 
     \si_ptr[6]_i_1 
       (.I0(s_axi_wvalid),
        .I1(I1),
        .I2(I82),
        .I3(\n_0_si_wrap_cnt[2]_i_2 ),
        .I4(Q[31]),
        .I5(Q[32]),
        .O(SR));
LUT6 #(
    .INIT(64'hFFABABABAAAAAAAA)) 
     \si_ptr[6]_i_2 
       (.I0(O4),
        .I1(I5[0]),
        .I2(I5[1]),
        .I3(I6),
        .I4(I7),
        .I5(p_176_in),
        .O(O7));
(* SOFT_HLUTNM = "soft_lutpair129" *) 
   LUT4 #(
    .INIT(16'h0078)) 
     \si_ptr[6]_i_3 
       (.I0(I9),
        .I1(I10[5]),
        .I2(I10[6]),
        .I3(O4),
        .O(O8[6]));
(* SOFT_HLUTNM = "soft_lutpair128" *) 
   LUT5 #(
    .INIT(32'h74FF3300)) 
     \si_state[0]_i_1 
       (.I0(I45),
        .I1(I2),
        .I2(O1),
        .I3(\n_0_si_state[1]_i_2 ),
        .I4(I4),
        .O(O14));
(* SOFT_HLUTNM = "soft_lutpair128" *) 
   LUT4 #(
    .INIT(16'h0F80)) 
     \si_state[1]_i_1 
       (.I0(O1),
        .I1(I4),
        .I2(\n_0_si_state[1]_i_2 ),
        .I3(I2),
        .O(O13));
LUT6 #(
    .INIT(64'hAFAEAEAEEFEEEEEE)) 
     \si_state[1]_i_2 
       (.I0(I47),
        .I1(I2),
        .I2(I4),
        .I3(sr_awvalid),
        .I4(I48),
        .I5(O1),
        .O(\n_0_si_state[1]_i_2 ));
LUT4 #(
    .INIT(16'hFACA)) 
     \si_wrap_be_next[1]_i_1 
       (.I0(si_wrap_be_next),
        .I1(I46),
        .I2(O4),
        .I3(Q[30]),
        .O(O3));
LUT3 #(
    .INIT(8'h74)) 
     \si_wrap_cnt[0]_i_1 
       (.I0(I8[0]),
        .I1(\n_0_si_wrap_cnt[2]_i_2 ),
        .I2(I88),
        .O(D[0]));
LUT6 #(
    .INIT(64'h909090909F9F909F)) 
     \si_wrap_cnt[1]_i_1 
       (.I0(I8[0]),
        .I1(I8[1]),
        .I2(\n_0_si_wrap_cnt[2]_i_2 ),
        .I3(I89),
        .I4(Q[30]),
        .I5(I90),
        .O(D[1]));
LUT6 #(
    .INIT(64'hA900A900A9FFA900)) 
     \si_wrap_cnt[2]_i_1 
       (.I0(I8[2]),
        .I1(I8[1]),
        .I2(I8[0]),
        .I3(\n_0_si_wrap_cnt[2]_i_2 ),
        .I4(Q[37]),
        .I5(I91),
        .O(D[2]));
LUT6 #(
    .INIT(64'h7773FFFF77737773)) 
     \si_wrap_cnt[2]_i_2 
       (.I0(O2),
        .I1(sr_awvalid),
        .I2(I4),
        .I3(I2),
        .I4(I44),
        .I5(I43),
        .O(\n_0_si_wrap_cnt[2]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair127" *) 
   LUT3 #(
    .INIT(8'hF8)) 
     \si_wrap_cnt[3]_i_1 
       (.I0(s_axi_wvalid),
        .I1(I1),
        .I2(O4),
        .O(O5));
LUT6 #(
    .INIT(64'hB8B8B8B8B8B8B88B)) 
     \si_wrap_cnt[3]_i_2 
       (.I0(I49),
        .I1(O4),
        .I2(I8[3]),
        .I3(I8[2]),
        .I4(I8[0]),
        .I5(I8[1]),
        .O(D[3]));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module axi_dwidth_converter_0_blk_mem_gen_generic_cstr
   (doutb,
    enb,
    clkb,
    ena,
    clka,
    addrb,
    addra,
    dina,
    wea);
  output [575:0]doutb;
  input enb;
  input clkb;
  input ena;
  input clka;
  input [8:0]addrb;
  input [8:0]addra;
  input [575:0]dina;
  input [63:0]wea;

  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [575:0]dina;
  wire [575:0]doutb;
  wire ena;
  wire enb;
  wire [63:0]wea;

axi_dwidth_converter_0_blk_mem_gen_prim_width \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina[71:0]),
        .doutb(doutb[71:0]),
        .ena(ena),
        .enb(enb),
        .wea(wea[7:0]));
axi_dwidth_converter_0_blk_mem_gen_prim_width__parameterized0 \ramloop[1].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina[143:72]),
        .doutb(doutb[143:72]),
        .ena(ena),
        .enb(enb),
        .wea(wea[15:8]));
axi_dwidth_converter_0_blk_mem_gen_prim_width__parameterized1 \ramloop[2].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina[215:144]),
        .doutb(doutb[215:144]),
        .ena(ena),
        .enb(enb),
        .wea(wea[23:16]));
axi_dwidth_converter_0_blk_mem_gen_prim_width__parameterized2 \ramloop[3].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina[287:216]),
        .doutb(doutb[287:216]),
        .ena(ena),
        .enb(enb),
        .wea(wea[31:24]));
axi_dwidth_converter_0_blk_mem_gen_prim_width__parameterized3 \ramloop[4].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina[359:288]),
        .doutb(doutb[359:288]),
        .ena(ena),
        .enb(enb),
        .wea(wea[39:32]));
axi_dwidth_converter_0_blk_mem_gen_prim_width__parameterized4 \ramloop[5].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina[431:360]),
        .doutb(doutb[431:360]),
        .ena(ena),
        .enb(enb),
        .wea(wea[47:40]));
axi_dwidth_converter_0_blk_mem_gen_prim_width__parameterized5 \ramloop[6].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina[503:432]),
        .doutb(doutb[503:432]),
        .ena(ena),
        .enb(enb),
        .wea(wea[55:48]));
axi_dwidth_converter_0_blk_mem_gen_prim_width__parameterized6 \ramloop[7].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina[575:504]),
        .doutb(doutb[575:504]),
        .ena(ena),
        .enb(enb),
        .wea(wea[63:56]));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module axi_dwidth_converter_0_blk_mem_gen_prim_width
   (doutb,
    enb,
    clkb,
    ena,
    clka,
    addrb,
    addra,
    dina,
    wea);
  output [71:0]doutb;
  input enb;
  input clkb;
  input ena;
  input clka;
  input [8:0]addrb;
  input [8:0]addra;
  input [71:0]dina;
  input [7:0]wea;

  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [71:0]dina;
  wire [71:0]doutb;
  wire ena;
  wire enb;
  wire [7:0]wea;

axi_dwidth_converter_0_blk_mem_gen_prim_wrapper \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module axi_dwidth_converter_0_blk_mem_gen_prim_width__parameterized0
   (doutb,
    enb,
    clkb,
    ena,
    clka,
    addrb,
    addra,
    dina,
    wea);
  output [71:0]doutb;
  input enb;
  input clkb;
  input ena;
  input clka;
  input [8:0]addrb;
  input [8:0]addra;
  input [71:0]dina;
  input [7:0]wea;

  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [71:0]dina;
  wire [71:0]doutb;
  wire ena;
  wire enb;
  wire [7:0]wea;

axi_dwidth_converter_0_blk_mem_gen_prim_wrapper__parameterized0 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module axi_dwidth_converter_0_blk_mem_gen_prim_width__parameterized1
   (doutb,
    enb,
    clkb,
    ena,
    clka,
    addrb,
    addra,
    dina,
    wea);
  output [71:0]doutb;
  input enb;
  input clkb;
  input ena;
  input clka;
  input [8:0]addrb;
  input [8:0]addra;
  input [71:0]dina;
  input [7:0]wea;

  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [71:0]dina;
  wire [71:0]doutb;
  wire ena;
  wire enb;
  wire [7:0]wea;

axi_dwidth_converter_0_blk_mem_gen_prim_wrapper__parameterized1 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module axi_dwidth_converter_0_blk_mem_gen_prim_width__parameterized2
   (doutb,
    enb,
    clkb,
    ena,
    clka,
    addrb,
    addra,
    dina,
    wea);
  output [71:0]doutb;
  input enb;
  input clkb;
  input ena;
  input clka;
  input [8:0]addrb;
  input [8:0]addra;
  input [71:0]dina;
  input [7:0]wea;

  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [71:0]dina;
  wire [71:0]doutb;
  wire ena;
  wire enb;
  wire [7:0]wea;

axi_dwidth_converter_0_blk_mem_gen_prim_wrapper__parameterized2 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module axi_dwidth_converter_0_blk_mem_gen_prim_width__parameterized3
   (doutb,
    enb,
    clkb,
    ena,
    clka,
    addrb,
    addra,
    dina,
    wea);
  output [71:0]doutb;
  input enb;
  input clkb;
  input ena;
  input clka;
  input [8:0]addrb;
  input [8:0]addra;
  input [71:0]dina;
  input [7:0]wea;

  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [71:0]dina;
  wire [71:0]doutb;
  wire ena;
  wire enb;
  wire [7:0]wea;

axi_dwidth_converter_0_blk_mem_gen_prim_wrapper__parameterized3 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module axi_dwidth_converter_0_blk_mem_gen_prim_width__parameterized4
   (doutb,
    enb,
    clkb,
    ena,
    clka,
    addrb,
    addra,
    dina,
    wea);
  output [71:0]doutb;
  input enb;
  input clkb;
  input ena;
  input clka;
  input [8:0]addrb;
  input [8:0]addra;
  input [71:0]dina;
  input [7:0]wea;

  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [71:0]dina;
  wire [71:0]doutb;
  wire ena;
  wire enb;
  wire [7:0]wea;

axi_dwidth_converter_0_blk_mem_gen_prim_wrapper__parameterized4 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module axi_dwidth_converter_0_blk_mem_gen_prim_width__parameterized5
   (doutb,
    enb,
    clkb,
    ena,
    clka,
    addrb,
    addra,
    dina,
    wea);
  output [71:0]doutb;
  input enb;
  input clkb;
  input ena;
  input clka;
  input [8:0]addrb;
  input [8:0]addra;
  input [71:0]dina;
  input [7:0]wea;

  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [71:0]dina;
  wire [71:0]doutb;
  wire ena;
  wire enb;
  wire [7:0]wea;

axi_dwidth_converter_0_blk_mem_gen_prim_wrapper__parameterized5 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module axi_dwidth_converter_0_blk_mem_gen_prim_width__parameterized6
   (doutb,
    enb,
    clkb,
    ena,
    clka,
    addrb,
    addra,
    dina,
    wea);
  output [71:0]doutb;
  input enb;
  input clkb;
  input ena;
  input clka;
  input [8:0]addrb;
  input [8:0]addra;
  input [71:0]dina;
  input [7:0]wea;

  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [71:0]dina;
  wire [71:0]doutb;
  wire ena;
  wire enb;
  wire [7:0]wea;

axi_dwidth_converter_0_blk_mem_gen_prim_wrapper__parameterized6 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module axi_dwidth_converter_0_blk_mem_gen_prim_wrapper
   (doutb,
    enb,
    clkb,
    ena,
    clka,
    addrb,
    addra,
    dina,
    wea);
  output [71:0]doutb;
  input enb;
  input clkb;
  input ena;
  input clka;
  input [8:0]addrb;
  input [8:0]addra;
  input [71:0]dina;
  input [7:0]wea;

  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [71:0]dina;
  wire [71:0]doutb;
  wire ena;
  wire enb;
  wire [7:0]wea;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED ;

(* box_type = "PRIMITIVE" *) 
   RAMB36E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("GENERATE_X_ONLY"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
     \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram 
       (.ADDRARDADDR({1'b1,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ),
        .DIADI({dina[34:27],dina[25:18],dina[16:9],dina[7:0]}),
        .DIBDI({dina[70:63],dina[61:54],dina[52:45],dina[43:36]}),
        .DIPADIP({dina[35],dina[26],dina[17],dina[8]}),
        .DIPBDIP({dina[71],dina[62],dina[53],dina[44]}),
        .DOADO({doutb[34:27],doutb[25:18],doutb[16:9],doutb[7:0]}),
        .DOBDO({doutb[70:63],doutb[61:54],doutb[52:45],doutb[43:36]}),
        .DOPADOP({doutb[35],doutb[26],doutb[17],doutb[8]}),
        .DOPBDOP({doutb[71],doutb[62],doutb[53],doutb[44]}),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(enb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module axi_dwidth_converter_0_blk_mem_gen_prim_wrapper__parameterized0
   (doutb,
    enb,
    clkb,
    ena,
    clka,
    addrb,
    addra,
    dina,
    wea);
  output [71:0]doutb;
  input enb;
  input clkb;
  input ena;
  input clka;
  input [8:0]addrb;
  input [8:0]addra;
  input [71:0]dina;
  input [7:0]wea;

  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [71:0]dina;
  wire [71:0]doutb;
  wire ena;
  wire enb;
  wire [7:0]wea;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED ;

(* box_type = "PRIMITIVE" *) 
   RAMB36E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("GENERATE_X_ONLY"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
     \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram 
       (.ADDRARDADDR({1'b1,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ),
        .DIADI({dina[34:27],dina[25:18],dina[16:9],dina[7:0]}),
        .DIBDI({dina[70:63],dina[61:54],dina[52:45],dina[43:36]}),
        .DIPADIP({dina[35],dina[26],dina[17],dina[8]}),
        .DIPBDIP({dina[71],dina[62],dina[53],dina[44]}),
        .DOADO({doutb[34:27],doutb[25:18],doutb[16:9],doutb[7:0]}),
        .DOBDO({doutb[70:63],doutb[61:54],doutb[52:45],doutb[43:36]}),
        .DOPADOP({doutb[35],doutb[26],doutb[17],doutb[8]}),
        .DOPBDOP({doutb[71],doutb[62],doutb[53],doutb[44]}),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(enb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module axi_dwidth_converter_0_blk_mem_gen_prim_wrapper__parameterized1
   (doutb,
    enb,
    clkb,
    ena,
    clka,
    addrb,
    addra,
    dina,
    wea);
  output [71:0]doutb;
  input enb;
  input clkb;
  input ena;
  input clka;
  input [8:0]addrb;
  input [8:0]addra;
  input [71:0]dina;
  input [7:0]wea;

  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [71:0]dina;
  wire [71:0]doutb;
  wire ena;
  wire enb;
  wire [7:0]wea;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED ;

(* box_type = "PRIMITIVE" *) 
   RAMB36E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("GENERATE_X_ONLY"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
     \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram 
       (.ADDRARDADDR({1'b1,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ),
        .DIADI({dina[34:27],dina[25:18],dina[16:9],dina[7:0]}),
        .DIBDI({dina[70:63],dina[61:54],dina[52:45],dina[43:36]}),
        .DIPADIP({dina[35],dina[26],dina[17],dina[8]}),
        .DIPBDIP({dina[71],dina[62],dina[53],dina[44]}),
        .DOADO({doutb[34:27],doutb[25:18],doutb[16:9],doutb[7:0]}),
        .DOBDO({doutb[70:63],doutb[61:54],doutb[52:45],doutb[43:36]}),
        .DOPADOP({doutb[35],doutb[26],doutb[17],doutb[8]}),
        .DOPBDOP({doutb[71],doutb[62],doutb[53],doutb[44]}),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(enb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module axi_dwidth_converter_0_blk_mem_gen_prim_wrapper__parameterized2
   (doutb,
    enb,
    clkb,
    ena,
    clka,
    addrb,
    addra,
    dina,
    wea);
  output [71:0]doutb;
  input enb;
  input clkb;
  input ena;
  input clka;
  input [8:0]addrb;
  input [8:0]addra;
  input [71:0]dina;
  input [7:0]wea;

  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [71:0]dina;
  wire [71:0]doutb;
  wire ena;
  wire enb;
  wire [7:0]wea;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED ;

(* box_type = "PRIMITIVE" *) 
   RAMB36E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("GENERATE_X_ONLY"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
     \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram 
       (.ADDRARDADDR({1'b1,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ),
        .DIADI({dina[34:27],dina[25:18],dina[16:9],dina[7:0]}),
        .DIBDI({dina[70:63],dina[61:54],dina[52:45],dina[43:36]}),
        .DIPADIP({dina[35],dina[26],dina[17],dina[8]}),
        .DIPBDIP({dina[71],dina[62],dina[53],dina[44]}),
        .DOADO({doutb[34:27],doutb[25:18],doutb[16:9],doutb[7:0]}),
        .DOBDO({doutb[70:63],doutb[61:54],doutb[52:45],doutb[43:36]}),
        .DOPADOP({doutb[35],doutb[26],doutb[17],doutb[8]}),
        .DOPBDOP({doutb[71],doutb[62],doutb[53],doutb[44]}),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(enb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module axi_dwidth_converter_0_blk_mem_gen_prim_wrapper__parameterized3
   (doutb,
    enb,
    clkb,
    ena,
    clka,
    addrb,
    addra,
    dina,
    wea);
  output [71:0]doutb;
  input enb;
  input clkb;
  input ena;
  input clka;
  input [8:0]addrb;
  input [8:0]addra;
  input [71:0]dina;
  input [7:0]wea;

  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [71:0]dina;
  wire [71:0]doutb;
  wire ena;
  wire enb;
  wire [7:0]wea;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED ;

(* box_type = "PRIMITIVE" *) 
   RAMB36E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("GENERATE_X_ONLY"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
     \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram 
       (.ADDRARDADDR({1'b1,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ),
        .DIADI({dina[34:27],dina[25:18],dina[16:9],dina[7:0]}),
        .DIBDI({dina[70:63],dina[61:54],dina[52:45],dina[43:36]}),
        .DIPADIP({dina[35],dina[26],dina[17],dina[8]}),
        .DIPBDIP({dina[71],dina[62],dina[53],dina[44]}),
        .DOADO({doutb[34:27],doutb[25:18],doutb[16:9],doutb[7:0]}),
        .DOBDO({doutb[70:63],doutb[61:54],doutb[52:45],doutb[43:36]}),
        .DOPADOP({doutb[35],doutb[26],doutb[17],doutb[8]}),
        .DOPBDOP({doutb[71],doutb[62],doutb[53],doutb[44]}),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(enb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module axi_dwidth_converter_0_blk_mem_gen_prim_wrapper__parameterized4
   (doutb,
    enb,
    clkb,
    ena,
    clka,
    addrb,
    addra,
    dina,
    wea);
  output [71:0]doutb;
  input enb;
  input clkb;
  input ena;
  input clka;
  input [8:0]addrb;
  input [8:0]addra;
  input [71:0]dina;
  input [7:0]wea;

  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [71:0]dina;
  wire [71:0]doutb;
  wire ena;
  wire enb;
  wire [7:0]wea;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED ;

(* box_type = "PRIMITIVE" *) 
   RAMB36E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("GENERATE_X_ONLY"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
     \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram 
       (.ADDRARDADDR({1'b1,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ),
        .DIADI({dina[34:27],dina[25:18],dina[16:9],dina[7:0]}),
        .DIBDI({dina[70:63],dina[61:54],dina[52:45],dina[43:36]}),
        .DIPADIP({dina[35],dina[26],dina[17],dina[8]}),
        .DIPBDIP({dina[71],dina[62],dina[53],dina[44]}),
        .DOADO({doutb[34:27],doutb[25:18],doutb[16:9],doutb[7:0]}),
        .DOBDO({doutb[70:63],doutb[61:54],doutb[52:45],doutb[43:36]}),
        .DOPADOP({doutb[35],doutb[26],doutb[17],doutb[8]}),
        .DOPBDOP({doutb[71],doutb[62],doutb[53],doutb[44]}),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(enb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module axi_dwidth_converter_0_blk_mem_gen_prim_wrapper__parameterized5
   (doutb,
    enb,
    clkb,
    ena,
    clka,
    addrb,
    addra,
    dina,
    wea);
  output [71:0]doutb;
  input enb;
  input clkb;
  input ena;
  input clka;
  input [8:0]addrb;
  input [8:0]addra;
  input [71:0]dina;
  input [7:0]wea;

  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [71:0]dina;
  wire [71:0]doutb;
  wire ena;
  wire enb;
  wire [7:0]wea;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED ;

(* box_type = "PRIMITIVE" *) 
   RAMB36E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("GENERATE_X_ONLY"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
     \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram 
       (.ADDRARDADDR({1'b1,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ),
        .DIADI({dina[34:27],dina[25:18],dina[16:9],dina[7:0]}),
        .DIBDI({dina[70:63],dina[61:54],dina[52:45],dina[43:36]}),
        .DIPADIP({dina[35],dina[26],dina[17],dina[8]}),
        .DIPBDIP({dina[71],dina[62],dina[53],dina[44]}),
        .DOADO({doutb[34:27],doutb[25:18],doutb[16:9],doutb[7:0]}),
        .DOBDO({doutb[70:63],doutb[61:54],doutb[52:45],doutb[43:36]}),
        .DOPADOP({doutb[35],doutb[26],doutb[17],doutb[8]}),
        .DOPBDOP({doutb[71],doutb[62],doutb[53],doutb[44]}),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(enb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module axi_dwidth_converter_0_blk_mem_gen_prim_wrapper__parameterized6
   (doutb,
    enb,
    clkb,
    ena,
    clka,
    addrb,
    addra,
    dina,
    wea);
  output [71:0]doutb;
  input enb;
  input clkb;
  input ena;
  input clka;
  input [8:0]addrb;
  input [8:0]addra;
  input [71:0]dina;
  input [7:0]wea;

  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [71:0]dina;
  wire [71:0]doutb;
  wire ena;
  wire enb;
  wire [7:0]wea;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED ;

(* box_type = "PRIMITIVE" *) 
   RAMB36E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("GENERATE_X_ONLY"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
     \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram 
       (.ADDRARDADDR({1'b1,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ),
        .DIADI({dina[34:27],dina[25:18],dina[16:9],dina[7:0]}),
        .DIBDI({dina[70:63],dina[61:54],dina[52:45],dina[43:36]}),
        .DIPADIP({dina[35],dina[26],dina[17],dina[8]}),
        .DIPBDIP({dina[71],dina[62],dina[53],dina[44]}),
        .DOADO({doutb[34:27],doutb[25:18],doutb[16:9],doutb[7:0]}),
        .DOBDO({doutb[70:63],doutb[61:54],doutb[52:45],doutb[43:36]}),
        .DOPADOP({doutb[35],doutb[26],doutb[17],doutb[8]}),
        .DOPBDOP({doutb[71],doutb[62],doutb[53],doutb[44]}),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(enb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module axi_dwidth_converter_0_blk_mem_gen_top
   (doutb,
    enb,
    clkb,
    ena,
    clka,
    addrb,
    addra,
    dina,
    wea);
  output [575:0]doutb;
  input enb;
  input clkb;
  input ena;
  input clka;
  input [8:0]addrb;
  input [8:0]addra;
  input [575:0]dina;
  input [63:0]wea;

  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [575:0]dina;
  wire [575:0]doutb;
  wire ena;
  wire enb;
  wire [63:0]wea;

axi_dwidth_converter_0_blk_mem_gen_generic_cstr \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* C_FAMILY = "virtex7" *) (* C_XDEVICEFAMILY = "virtex7" *) (* C_ELABORATION_DIR = "" *) 
(* C_INTERFACE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) (* C_AXI_SLAVE_TYPE = "0" *) 
(* C_USE_BRAM_BLOCK = "0" *) (* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_CTRL_ECC_ALGO = "ECCHSIAO32-7" *) 
(* C_HAS_AXI_ID = "0" *) (* C_AXI_ID_WIDTH = "4" *) (* C_MEM_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_ALGORITHM = "1" *) (* C_PRIM_TYPE = "1" *) 
(* C_LOAD_INIT_FILE = "0" *) (* C_INIT_FILE_NAME = "BlankString" *) (* C_INIT_FILE = "BlankString" *) 
(* C_USE_DEFAULT_DATA = "0" *) (* C_DEFAULT_DATA = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_RST_PRIORITY_A = "CE" *) (* C_RSTRAM_A = "0" *) (* C_INITA_VAL = "0" *) 
(* C_HAS_ENA = "1" *) (* C_HAS_REGCEA = "0" *) (* C_USE_BYTE_WEA = "1" *) 
(* C_WEA_WIDTH = "64" *) (* C_WRITE_MODE_A = "WRITE_FIRST" *) (* C_WRITE_WIDTH_A = "576" *) 
(* C_READ_WIDTH_A = "576" *) (* C_WRITE_DEPTH_A = "512" *) (* C_READ_DEPTH_A = "512" *) 
(* C_ADDRA_WIDTH = "9" *) (* C_HAS_RSTB = "0" *) (* C_RST_PRIORITY_B = "CE" *) 
(* C_RSTRAM_B = "0" *) (* C_INITB_VAL = "0" *) (* C_HAS_ENB = "1" *) 
(* C_HAS_REGCEB = "0" *) (* C_USE_BYTE_WEB = "1" *) (* C_WEB_WIDTH = "64" *) 
(* C_WRITE_MODE_B = "WRITE_FIRST" *) (* C_WRITE_WIDTH_B = "576" *) (* C_READ_WIDTH_B = "576" *) 
(* C_WRITE_DEPTH_B = "512" *) (* C_READ_DEPTH_B = "512" *) (* C_ADDRB_WIDTH = "9" *) 
(* C_HAS_MEM_OUTPUT_REGS_A = "0" *) (* C_HAS_MEM_OUTPUT_REGS_B = "1" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MUX_OUTPUT_REGS_B = "0" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
(* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_ECC = "0" *) 
(* C_EN_ECC_PIPE = "0" *) (* C_HAS_INJECTERR = "0" *) (* C_SIM_COLLISION_CHECK = "GENERATE_X_ONLY" *) 
(* C_COMMON_CLK = "0" *) (* C_DISABLE_WARN_BHV_COLL = "1" *) (* C_EN_SLEEP_PIN = "0" *) 
(* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_COUNT_36K_BRAM = "" *) (* C_COUNT_18K_BRAM = "" *) 
(* C_EST_POWER_SUMMARY = "" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "blk_mem_gen_v8_2" *) 
module axi_dwidth_converter_0_blk_mem_gen_v8_2
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [63:0]wea;
  input [8:0]addra;
  input [575:0]dina;
  output [575:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [63:0]web;
  input [8:0]addrb;
  input [575:0]dinb;
  output [575:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [8:0]rdaddrecc;
  input sleep;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [575:0]s_axi_wdata;
  input [63:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [575:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [8:0]s_axi_rdaddrecc;

  wire \<const0> ;
  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [575:0]dina;
  wire [575:0]dinb;
  wire [575:0]doutb;
  wire eccpipece;
  wire ena;
  wire enb;
  wire injectdbiterr;
  wire injectsbiterr;
  wire regcea;
  wire regceb;
  wire rsta;
  wire rstb;
  wire s_aclk;
  wire s_aresetn;
  wire [31:0]s_axi_araddr;
  wire [1:0]s_axi_arburst;
  wire [3:0]s_axi_arid;
  wire [7:0]s_axi_arlen;
  wire [2:0]s_axi_arsize;
  wire s_axi_arvalid;
  wire [31:0]s_axi_awaddr;
  wire [1:0]s_axi_awburst;
  wire [3:0]s_axi_awid;
  wire [7:0]s_axi_awlen;
  wire [2:0]s_axi_awsize;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_injectdbiterr;
  wire s_axi_injectsbiterr;
  wire s_axi_rready;
  wire [575:0]s_axi_wdata;
  wire s_axi_wlast;
  wire [63:0]s_axi_wstrb;
  wire s_axi_wvalid;
  wire sleep;
  wire [63:0]wea;
  wire [63:0]web;

  assign dbiterr = \<const0> ;
  assign douta[575] = \<const0> ;
  assign douta[574] = \<const0> ;
  assign douta[573] = \<const0> ;
  assign douta[572] = \<const0> ;
  assign douta[571] = \<const0> ;
  assign douta[570] = \<const0> ;
  assign douta[569] = \<const0> ;
  assign douta[568] = \<const0> ;
  assign douta[567] = \<const0> ;
  assign douta[566] = \<const0> ;
  assign douta[565] = \<const0> ;
  assign douta[564] = \<const0> ;
  assign douta[563] = \<const0> ;
  assign douta[562] = \<const0> ;
  assign douta[561] = \<const0> ;
  assign douta[560] = \<const0> ;
  assign douta[559] = \<const0> ;
  assign douta[558] = \<const0> ;
  assign douta[557] = \<const0> ;
  assign douta[556] = \<const0> ;
  assign douta[555] = \<const0> ;
  assign douta[554] = \<const0> ;
  assign douta[553] = \<const0> ;
  assign douta[552] = \<const0> ;
  assign douta[551] = \<const0> ;
  assign douta[550] = \<const0> ;
  assign douta[549] = \<const0> ;
  assign douta[548] = \<const0> ;
  assign douta[547] = \<const0> ;
  assign douta[546] = \<const0> ;
  assign douta[545] = \<const0> ;
  assign douta[544] = \<const0> ;
  assign douta[543] = \<const0> ;
  assign douta[542] = \<const0> ;
  assign douta[541] = \<const0> ;
  assign douta[540] = \<const0> ;
  assign douta[539] = \<const0> ;
  assign douta[538] = \<const0> ;
  assign douta[537] = \<const0> ;
  assign douta[536] = \<const0> ;
  assign douta[535] = \<const0> ;
  assign douta[534] = \<const0> ;
  assign douta[533] = \<const0> ;
  assign douta[532] = \<const0> ;
  assign douta[531] = \<const0> ;
  assign douta[530] = \<const0> ;
  assign douta[529] = \<const0> ;
  assign douta[528] = \<const0> ;
  assign douta[527] = \<const0> ;
  assign douta[526] = \<const0> ;
  assign douta[525] = \<const0> ;
  assign douta[524] = \<const0> ;
  assign douta[523] = \<const0> ;
  assign douta[522] = \<const0> ;
  assign douta[521] = \<const0> ;
  assign douta[520] = \<const0> ;
  assign douta[519] = \<const0> ;
  assign douta[518] = \<const0> ;
  assign douta[517] = \<const0> ;
  assign douta[516] = \<const0> ;
  assign douta[515] = \<const0> ;
  assign douta[514] = \<const0> ;
  assign douta[513] = \<const0> ;
  assign douta[512] = \<const0> ;
  assign douta[511] = \<const0> ;
  assign douta[510] = \<const0> ;
  assign douta[509] = \<const0> ;
  assign douta[508] = \<const0> ;
  assign douta[507] = \<const0> ;
  assign douta[506] = \<const0> ;
  assign douta[505] = \<const0> ;
  assign douta[504] = \<const0> ;
  assign douta[503] = \<const0> ;
  assign douta[502] = \<const0> ;
  assign douta[501] = \<const0> ;
  assign douta[500] = \<const0> ;
  assign douta[499] = \<const0> ;
  assign douta[498] = \<const0> ;
  assign douta[497] = \<const0> ;
  assign douta[496] = \<const0> ;
  assign douta[495] = \<const0> ;
  assign douta[494] = \<const0> ;
  assign douta[493] = \<const0> ;
  assign douta[492] = \<const0> ;
  assign douta[491] = \<const0> ;
  assign douta[490] = \<const0> ;
  assign douta[489] = \<const0> ;
  assign douta[488] = \<const0> ;
  assign douta[487] = \<const0> ;
  assign douta[486] = \<const0> ;
  assign douta[485] = \<const0> ;
  assign douta[484] = \<const0> ;
  assign douta[483] = \<const0> ;
  assign douta[482] = \<const0> ;
  assign douta[481] = \<const0> ;
  assign douta[480] = \<const0> ;
  assign douta[479] = \<const0> ;
  assign douta[478] = \<const0> ;
  assign douta[477] = \<const0> ;
  assign douta[476] = \<const0> ;
  assign douta[475] = \<const0> ;
  assign douta[474] = \<const0> ;
  assign douta[473] = \<const0> ;
  assign douta[472] = \<const0> ;
  assign douta[471] = \<const0> ;
  assign douta[470] = \<const0> ;
  assign douta[469] = \<const0> ;
  assign douta[468] = \<const0> ;
  assign douta[467] = \<const0> ;
  assign douta[466] = \<const0> ;
  assign douta[465] = \<const0> ;
  assign douta[464] = \<const0> ;
  assign douta[463] = \<const0> ;
  assign douta[462] = \<const0> ;
  assign douta[461] = \<const0> ;
  assign douta[460] = \<const0> ;
  assign douta[459] = \<const0> ;
  assign douta[458] = \<const0> ;
  assign douta[457] = \<const0> ;
  assign douta[456] = \<const0> ;
  assign douta[455] = \<const0> ;
  assign douta[454] = \<const0> ;
  assign douta[453] = \<const0> ;
  assign douta[452] = \<const0> ;
  assign douta[451] = \<const0> ;
  assign douta[450] = \<const0> ;
  assign douta[449] = \<const0> ;
  assign douta[448] = \<const0> ;
  assign douta[447] = \<const0> ;
  assign douta[446] = \<const0> ;
  assign douta[445] = \<const0> ;
  assign douta[444] = \<const0> ;
  assign douta[443] = \<const0> ;
  assign douta[442] = \<const0> ;
  assign douta[441] = \<const0> ;
  assign douta[440] = \<const0> ;
  assign douta[439] = \<const0> ;
  assign douta[438] = \<const0> ;
  assign douta[437] = \<const0> ;
  assign douta[436] = \<const0> ;
  assign douta[435] = \<const0> ;
  assign douta[434] = \<const0> ;
  assign douta[433] = \<const0> ;
  assign douta[432] = \<const0> ;
  assign douta[431] = \<const0> ;
  assign douta[430] = \<const0> ;
  assign douta[429] = \<const0> ;
  assign douta[428] = \<const0> ;
  assign douta[427] = \<const0> ;
  assign douta[426] = \<const0> ;
  assign douta[425] = \<const0> ;
  assign douta[424] = \<const0> ;
  assign douta[423] = \<const0> ;
  assign douta[422] = \<const0> ;
  assign douta[421] = \<const0> ;
  assign douta[420] = \<const0> ;
  assign douta[419] = \<const0> ;
  assign douta[418] = \<const0> ;
  assign douta[417] = \<const0> ;
  assign douta[416] = \<const0> ;
  assign douta[415] = \<const0> ;
  assign douta[414] = \<const0> ;
  assign douta[413] = \<const0> ;
  assign douta[412] = \<const0> ;
  assign douta[411] = \<const0> ;
  assign douta[410] = \<const0> ;
  assign douta[409] = \<const0> ;
  assign douta[408] = \<const0> ;
  assign douta[407] = \<const0> ;
  assign douta[406] = \<const0> ;
  assign douta[405] = \<const0> ;
  assign douta[404] = \<const0> ;
  assign douta[403] = \<const0> ;
  assign douta[402] = \<const0> ;
  assign douta[401] = \<const0> ;
  assign douta[400] = \<const0> ;
  assign douta[399] = \<const0> ;
  assign douta[398] = \<const0> ;
  assign douta[397] = \<const0> ;
  assign douta[396] = \<const0> ;
  assign douta[395] = \<const0> ;
  assign douta[394] = \<const0> ;
  assign douta[393] = \<const0> ;
  assign douta[392] = \<const0> ;
  assign douta[391] = \<const0> ;
  assign douta[390] = \<const0> ;
  assign douta[389] = \<const0> ;
  assign douta[388] = \<const0> ;
  assign douta[387] = \<const0> ;
  assign douta[386] = \<const0> ;
  assign douta[385] = \<const0> ;
  assign douta[384] = \<const0> ;
  assign douta[383] = \<const0> ;
  assign douta[382] = \<const0> ;
  assign douta[381] = \<const0> ;
  assign douta[380] = \<const0> ;
  assign douta[379] = \<const0> ;
  assign douta[378] = \<const0> ;
  assign douta[377] = \<const0> ;
  assign douta[376] = \<const0> ;
  assign douta[375] = \<const0> ;
  assign douta[374] = \<const0> ;
  assign douta[373] = \<const0> ;
  assign douta[372] = \<const0> ;
  assign douta[371] = \<const0> ;
  assign douta[370] = \<const0> ;
  assign douta[369] = \<const0> ;
  assign douta[368] = \<const0> ;
  assign douta[367] = \<const0> ;
  assign douta[366] = \<const0> ;
  assign douta[365] = \<const0> ;
  assign douta[364] = \<const0> ;
  assign douta[363] = \<const0> ;
  assign douta[362] = \<const0> ;
  assign douta[361] = \<const0> ;
  assign douta[360] = \<const0> ;
  assign douta[359] = \<const0> ;
  assign douta[358] = \<const0> ;
  assign douta[357] = \<const0> ;
  assign douta[356] = \<const0> ;
  assign douta[355] = \<const0> ;
  assign douta[354] = \<const0> ;
  assign douta[353] = \<const0> ;
  assign douta[352] = \<const0> ;
  assign douta[351] = \<const0> ;
  assign douta[350] = \<const0> ;
  assign douta[349] = \<const0> ;
  assign douta[348] = \<const0> ;
  assign douta[347] = \<const0> ;
  assign douta[346] = \<const0> ;
  assign douta[345] = \<const0> ;
  assign douta[344] = \<const0> ;
  assign douta[343] = \<const0> ;
  assign douta[342] = \<const0> ;
  assign douta[341] = \<const0> ;
  assign douta[340] = \<const0> ;
  assign douta[339] = \<const0> ;
  assign douta[338] = \<const0> ;
  assign douta[337] = \<const0> ;
  assign douta[336] = \<const0> ;
  assign douta[335] = \<const0> ;
  assign douta[334] = \<const0> ;
  assign douta[333] = \<const0> ;
  assign douta[332] = \<const0> ;
  assign douta[331] = \<const0> ;
  assign douta[330] = \<const0> ;
  assign douta[329] = \<const0> ;
  assign douta[328] = \<const0> ;
  assign douta[327] = \<const0> ;
  assign douta[326] = \<const0> ;
  assign douta[325] = \<const0> ;
  assign douta[324] = \<const0> ;
  assign douta[323] = \<const0> ;
  assign douta[322] = \<const0> ;
  assign douta[321] = \<const0> ;
  assign douta[320] = \<const0> ;
  assign douta[319] = \<const0> ;
  assign douta[318] = \<const0> ;
  assign douta[317] = \<const0> ;
  assign douta[316] = \<const0> ;
  assign douta[315] = \<const0> ;
  assign douta[314] = \<const0> ;
  assign douta[313] = \<const0> ;
  assign douta[312] = \<const0> ;
  assign douta[311] = \<const0> ;
  assign douta[310] = \<const0> ;
  assign douta[309] = \<const0> ;
  assign douta[308] = \<const0> ;
  assign douta[307] = \<const0> ;
  assign douta[306] = \<const0> ;
  assign douta[305] = \<const0> ;
  assign douta[304] = \<const0> ;
  assign douta[303] = \<const0> ;
  assign douta[302] = \<const0> ;
  assign douta[301] = \<const0> ;
  assign douta[300] = \<const0> ;
  assign douta[299] = \<const0> ;
  assign douta[298] = \<const0> ;
  assign douta[297] = \<const0> ;
  assign douta[296] = \<const0> ;
  assign douta[295] = \<const0> ;
  assign douta[294] = \<const0> ;
  assign douta[293] = \<const0> ;
  assign douta[292] = \<const0> ;
  assign douta[291] = \<const0> ;
  assign douta[290] = \<const0> ;
  assign douta[289] = \<const0> ;
  assign douta[288] = \<const0> ;
  assign douta[287] = \<const0> ;
  assign douta[286] = \<const0> ;
  assign douta[285] = \<const0> ;
  assign douta[284] = \<const0> ;
  assign douta[283] = \<const0> ;
  assign douta[282] = \<const0> ;
  assign douta[281] = \<const0> ;
  assign douta[280] = \<const0> ;
  assign douta[279] = \<const0> ;
  assign douta[278] = \<const0> ;
  assign douta[277] = \<const0> ;
  assign douta[276] = \<const0> ;
  assign douta[275] = \<const0> ;
  assign douta[274] = \<const0> ;
  assign douta[273] = \<const0> ;
  assign douta[272] = \<const0> ;
  assign douta[271] = \<const0> ;
  assign douta[270] = \<const0> ;
  assign douta[269] = \<const0> ;
  assign douta[268] = \<const0> ;
  assign douta[267] = \<const0> ;
  assign douta[266] = \<const0> ;
  assign douta[265] = \<const0> ;
  assign douta[264] = \<const0> ;
  assign douta[263] = \<const0> ;
  assign douta[262] = \<const0> ;
  assign douta[261] = \<const0> ;
  assign douta[260] = \<const0> ;
  assign douta[259] = \<const0> ;
  assign douta[258] = \<const0> ;
  assign douta[257] = \<const0> ;
  assign douta[256] = \<const0> ;
  assign douta[255] = \<const0> ;
  assign douta[254] = \<const0> ;
  assign douta[253] = \<const0> ;
  assign douta[252] = \<const0> ;
  assign douta[251] = \<const0> ;
  assign douta[250] = \<const0> ;
  assign douta[249] = \<const0> ;
  assign douta[248] = \<const0> ;
  assign douta[247] = \<const0> ;
  assign douta[246] = \<const0> ;
  assign douta[245] = \<const0> ;
  assign douta[244] = \<const0> ;
  assign douta[243] = \<const0> ;
  assign douta[242] = \<const0> ;
  assign douta[241] = \<const0> ;
  assign douta[240] = \<const0> ;
  assign douta[239] = \<const0> ;
  assign douta[238] = \<const0> ;
  assign douta[237] = \<const0> ;
  assign douta[236] = \<const0> ;
  assign douta[235] = \<const0> ;
  assign douta[234] = \<const0> ;
  assign douta[233] = \<const0> ;
  assign douta[232] = \<const0> ;
  assign douta[231] = \<const0> ;
  assign douta[230] = \<const0> ;
  assign douta[229] = \<const0> ;
  assign douta[228] = \<const0> ;
  assign douta[227] = \<const0> ;
  assign douta[226] = \<const0> ;
  assign douta[225] = \<const0> ;
  assign douta[224] = \<const0> ;
  assign douta[223] = \<const0> ;
  assign douta[222] = \<const0> ;
  assign douta[221] = \<const0> ;
  assign douta[220] = \<const0> ;
  assign douta[219] = \<const0> ;
  assign douta[218] = \<const0> ;
  assign douta[217] = \<const0> ;
  assign douta[216] = \<const0> ;
  assign douta[215] = \<const0> ;
  assign douta[214] = \<const0> ;
  assign douta[213] = \<const0> ;
  assign douta[212] = \<const0> ;
  assign douta[211] = \<const0> ;
  assign douta[210] = \<const0> ;
  assign douta[209] = \<const0> ;
  assign douta[208] = \<const0> ;
  assign douta[207] = \<const0> ;
  assign douta[206] = \<const0> ;
  assign douta[205] = \<const0> ;
  assign douta[204] = \<const0> ;
  assign douta[203] = \<const0> ;
  assign douta[202] = \<const0> ;
  assign douta[201] = \<const0> ;
  assign douta[200] = \<const0> ;
  assign douta[199] = \<const0> ;
  assign douta[198] = \<const0> ;
  assign douta[197] = \<const0> ;
  assign douta[196] = \<const0> ;
  assign douta[195] = \<const0> ;
  assign douta[194] = \<const0> ;
  assign douta[193] = \<const0> ;
  assign douta[192] = \<const0> ;
  assign douta[191] = \<const0> ;
  assign douta[190] = \<const0> ;
  assign douta[189] = \<const0> ;
  assign douta[188] = \<const0> ;
  assign douta[187] = \<const0> ;
  assign douta[186] = \<const0> ;
  assign douta[185] = \<const0> ;
  assign douta[184] = \<const0> ;
  assign douta[183] = \<const0> ;
  assign douta[182] = \<const0> ;
  assign douta[181] = \<const0> ;
  assign douta[180] = \<const0> ;
  assign douta[179] = \<const0> ;
  assign douta[178] = \<const0> ;
  assign douta[177] = \<const0> ;
  assign douta[176] = \<const0> ;
  assign douta[175] = \<const0> ;
  assign douta[174] = \<const0> ;
  assign douta[173] = \<const0> ;
  assign douta[172] = \<const0> ;
  assign douta[171] = \<const0> ;
  assign douta[170] = \<const0> ;
  assign douta[169] = \<const0> ;
  assign douta[168] = \<const0> ;
  assign douta[167] = \<const0> ;
  assign douta[166] = \<const0> ;
  assign douta[165] = \<const0> ;
  assign douta[164] = \<const0> ;
  assign douta[163] = \<const0> ;
  assign douta[162] = \<const0> ;
  assign douta[161] = \<const0> ;
  assign douta[160] = \<const0> ;
  assign douta[159] = \<const0> ;
  assign douta[158] = \<const0> ;
  assign douta[157] = \<const0> ;
  assign douta[156] = \<const0> ;
  assign douta[155] = \<const0> ;
  assign douta[154] = \<const0> ;
  assign douta[153] = \<const0> ;
  assign douta[152] = \<const0> ;
  assign douta[151] = \<const0> ;
  assign douta[150] = \<const0> ;
  assign douta[149] = \<const0> ;
  assign douta[148] = \<const0> ;
  assign douta[147] = \<const0> ;
  assign douta[146] = \<const0> ;
  assign douta[145] = \<const0> ;
  assign douta[144] = \<const0> ;
  assign douta[143] = \<const0> ;
  assign douta[142] = \<const0> ;
  assign douta[141] = \<const0> ;
  assign douta[140] = \<const0> ;
  assign douta[139] = \<const0> ;
  assign douta[138] = \<const0> ;
  assign douta[137] = \<const0> ;
  assign douta[136] = \<const0> ;
  assign douta[135] = \<const0> ;
  assign douta[134] = \<const0> ;
  assign douta[133] = \<const0> ;
  assign douta[132] = \<const0> ;
  assign douta[131] = \<const0> ;
  assign douta[130] = \<const0> ;
  assign douta[129] = \<const0> ;
  assign douta[128] = \<const0> ;
  assign douta[127] = \<const0> ;
  assign douta[126] = \<const0> ;
  assign douta[125] = \<const0> ;
  assign douta[124] = \<const0> ;
  assign douta[123] = \<const0> ;
  assign douta[122] = \<const0> ;
  assign douta[121] = \<const0> ;
  assign douta[120] = \<const0> ;
  assign douta[119] = \<const0> ;
  assign douta[118] = \<const0> ;
  assign douta[117] = \<const0> ;
  assign douta[116] = \<const0> ;
  assign douta[115] = \<const0> ;
  assign douta[114] = \<const0> ;
  assign douta[113] = \<const0> ;
  assign douta[112] = \<const0> ;
  assign douta[111] = \<const0> ;
  assign douta[110] = \<const0> ;
  assign douta[109] = \<const0> ;
  assign douta[108] = \<const0> ;
  assign douta[107] = \<const0> ;
  assign douta[106] = \<const0> ;
  assign douta[105] = \<const0> ;
  assign douta[104] = \<const0> ;
  assign douta[103] = \<const0> ;
  assign douta[102] = \<const0> ;
  assign douta[101] = \<const0> ;
  assign douta[100] = \<const0> ;
  assign douta[99] = \<const0> ;
  assign douta[98] = \<const0> ;
  assign douta[97] = \<const0> ;
  assign douta[96] = \<const0> ;
  assign douta[95] = \<const0> ;
  assign douta[94] = \<const0> ;
  assign douta[93] = \<const0> ;
  assign douta[92] = \<const0> ;
  assign douta[91] = \<const0> ;
  assign douta[90] = \<const0> ;
  assign douta[89] = \<const0> ;
  assign douta[88] = \<const0> ;
  assign douta[87] = \<const0> ;
  assign douta[86] = \<const0> ;
  assign douta[85] = \<const0> ;
  assign douta[84] = \<const0> ;
  assign douta[83] = \<const0> ;
  assign douta[82] = \<const0> ;
  assign douta[81] = \<const0> ;
  assign douta[80] = \<const0> ;
  assign douta[79] = \<const0> ;
  assign douta[78] = \<const0> ;
  assign douta[77] = \<const0> ;
  assign douta[76] = \<const0> ;
  assign douta[75] = \<const0> ;
  assign douta[74] = \<const0> ;
  assign douta[73] = \<const0> ;
  assign douta[72] = \<const0> ;
  assign douta[71] = \<const0> ;
  assign douta[70] = \<const0> ;
  assign douta[69] = \<const0> ;
  assign douta[68] = \<const0> ;
  assign douta[67] = \<const0> ;
  assign douta[66] = \<const0> ;
  assign douta[65] = \<const0> ;
  assign douta[64] = \<const0> ;
  assign douta[63] = \<const0> ;
  assign douta[62] = \<const0> ;
  assign douta[61] = \<const0> ;
  assign douta[60] = \<const0> ;
  assign douta[59] = \<const0> ;
  assign douta[58] = \<const0> ;
  assign douta[57] = \<const0> ;
  assign douta[56] = \<const0> ;
  assign douta[55] = \<const0> ;
  assign douta[54] = \<const0> ;
  assign douta[53] = \<const0> ;
  assign douta[52] = \<const0> ;
  assign douta[51] = \<const0> ;
  assign douta[50] = \<const0> ;
  assign douta[49] = \<const0> ;
  assign douta[48] = \<const0> ;
  assign douta[47] = \<const0> ;
  assign douta[46] = \<const0> ;
  assign douta[45] = \<const0> ;
  assign douta[44] = \<const0> ;
  assign douta[43] = \<const0> ;
  assign douta[42] = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign rdaddrecc[8] = \<const0> ;
  assign rdaddrecc[7] = \<const0> ;
  assign rdaddrecc[6] = \<const0> ;
  assign rdaddrecc[5] = \<const0> ;
  assign rdaddrecc[4] = \<const0> ;
  assign rdaddrecc[3] = \<const0> ;
  assign rdaddrecc[2] = \<const0> ;
  assign rdaddrecc[1] = \<const0> ;
  assign rdaddrecc[0] = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_dbiterr = \<const0> ;
  assign s_axi_rdaddrecc[8] = \<const0> ;
  assign s_axi_rdaddrecc[7] = \<const0> ;
  assign s_axi_rdaddrecc[6] = \<const0> ;
  assign s_axi_rdaddrecc[5] = \<const0> ;
  assign s_axi_rdaddrecc[4] = \<const0> ;
  assign s_axi_rdaddrecc[3] = \<const0> ;
  assign s_axi_rdaddrecc[2] = \<const0> ;
  assign s_axi_rdaddrecc[1] = \<const0> ;
  assign s_axi_rdaddrecc[0] = \<const0> ;
  assign s_axi_rdata[575] = \<const0> ;
  assign s_axi_rdata[574] = \<const0> ;
  assign s_axi_rdata[573] = \<const0> ;
  assign s_axi_rdata[572] = \<const0> ;
  assign s_axi_rdata[571] = \<const0> ;
  assign s_axi_rdata[570] = \<const0> ;
  assign s_axi_rdata[569] = \<const0> ;
  assign s_axi_rdata[568] = \<const0> ;
  assign s_axi_rdata[567] = \<const0> ;
  assign s_axi_rdata[566] = \<const0> ;
  assign s_axi_rdata[565] = \<const0> ;
  assign s_axi_rdata[564] = \<const0> ;
  assign s_axi_rdata[563] = \<const0> ;
  assign s_axi_rdata[562] = \<const0> ;
  assign s_axi_rdata[561] = \<const0> ;
  assign s_axi_rdata[560] = \<const0> ;
  assign s_axi_rdata[559] = \<const0> ;
  assign s_axi_rdata[558] = \<const0> ;
  assign s_axi_rdata[557] = \<const0> ;
  assign s_axi_rdata[556] = \<const0> ;
  assign s_axi_rdata[555] = \<const0> ;
  assign s_axi_rdata[554] = \<const0> ;
  assign s_axi_rdata[553] = \<const0> ;
  assign s_axi_rdata[552] = \<const0> ;
  assign s_axi_rdata[551] = \<const0> ;
  assign s_axi_rdata[550] = \<const0> ;
  assign s_axi_rdata[549] = \<const0> ;
  assign s_axi_rdata[548] = \<const0> ;
  assign s_axi_rdata[547] = \<const0> ;
  assign s_axi_rdata[546] = \<const0> ;
  assign s_axi_rdata[545] = \<const0> ;
  assign s_axi_rdata[544] = \<const0> ;
  assign s_axi_rdata[543] = \<const0> ;
  assign s_axi_rdata[542] = \<const0> ;
  assign s_axi_rdata[541] = \<const0> ;
  assign s_axi_rdata[540] = \<const0> ;
  assign s_axi_rdata[539] = \<const0> ;
  assign s_axi_rdata[538] = \<const0> ;
  assign s_axi_rdata[537] = \<const0> ;
  assign s_axi_rdata[536] = \<const0> ;
  assign s_axi_rdata[535] = \<const0> ;
  assign s_axi_rdata[534] = \<const0> ;
  assign s_axi_rdata[533] = \<const0> ;
  assign s_axi_rdata[532] = \<const0> ;
  assign s_axi_rdata[531] = \<const0> ;
  assign s_axi_rdata[530] = \<const0> ;
  assign s_axi_rdata[529] = \<const0> ;
  assign s_axi_rdata[528] = \<const0> ;
  assign s_axi_rdata[527] = \<const0> ;
  assign s_axi_rdata[526] = \<const0> ;
  assign s_axi_rdata[525] = \<const0> ;
  assign s_axi_rdata[524] = \<const0> ;
  assign s_axi_rdata[523] = \<const0> ;
  assign s_axi_rdata[522] = \<const0> ;
  assign s_axi_rdata[521] = \<const0> ;
  assign s_axi_rdata[520] = \<const0> ;
  assign s_axi_rdata[519] = \<const0> ;
  assign s_axi_rdata[518] = \<const0> ;
  assign s_axi_rdata[517] = \<const0> ;
  assign s_axi_rdata[516] = \<const0> ;
  assign s_axi_rdata[515] = \<const0> ;
  assign s_axi_rdata[514] = \<const0> ;
  assign s_axi_rdata[513] = \<const0> ;
  assign s_axi_rdata[512] = \<const0> ;
  assign s_axi_rdata[511] = \<const0> ;
  assign s_axi_rdata[510] = \<const0> ;
  assign s_axi_rdata[509] = \<const0> ;
  assign s_axi_rdata[508] = \<const0> ;
  assign s_axi_rdata[507] = \<const0> ;
  assign s_axi_rdata[506] = \<const0> ;
  assign s_axi_rdata[505] = \<const0> ;
  assign s_axi_rdata[504] = \<const0> ;
  assign s_axi_rdata[503] = \<const0> ;
  assign s_axi_rdata[502] = \<const0> ;
  assign s_axi_rdata[501] = \<const0> ;
  assign s_axi_rdata[500] = \<const0> ;
  assign s_axi_rdata[499] = \<const0> ;
  assign s_axi_rdata[498] = \<const0> ;
  assign s_axi_rdata[497] = \<const0> ;
  assign s_axi_rdata[496] = \<const0> ;
  assign s_axi_rdata[495] = \<const0> ;
  assign s_axi_rdata[494] = \<const0> ;
  assign s_axi_rdata[493] = \<const0> ;
  assign s_axi_rdata[492] = \<const0> ;
  assign s_axi_rdata[491] = \<const0> ;
  assign s_axi_rdata[490] = \<const0> ;
  assign s_axi_rdata[489] = \<const0> ;
  assign s_axi_rdata[488] = \<const0> ;
  assign s_axi_rdata[487] = \<const0> ;
  assign s_axi_rdata[486] = \<const0> ;
  assign s_axi_rdata[485] = \<const0> ;
  assign s_axi_rdata[484] = \<const0> ;
  assign s_axi_rdata[483] = \<const0> ;
  assign s_axi_rdata[482] = \<const0> ;
  assign s_axi_rdata[481] = \<const0> ;
  assign s_axi_rdata[480] = \<const0> ;
  assign s_axi_rdata[479] = \<const0> ;
  assign s_axi_rdata[478] = \<const0> ;
  assign s_axi_rdata[477] = \<const0> ;
  assign s_axi_rdata[476] = \<const0> ;
  assign s_axi_rdata[475] = \<const0> ;
  assign s_axi_rdata[474] = \<const0> ;
  assign s_axi_rdata[473] = \<const0> ;
  assign s_axi_rdata[472] = \<const0> ;
  assign s_axi_rdata[471] = \<const0> ;
  assign s_axi_rdata[470] = \<const0> ;
  assign s_axi_rdata[469] = \<const0> ;
  assign s_axi_rdata[468] = \<const0> ;
  assign s_axi_rdata[467] = \<const0> ;
  assign s_axi_rdata[466] = \<const0> ;
  assign s_axi_rdata[465] = \<const0> ;
  assign s_axi_rdata[464] = \<const0> ;
  assign s_axi_rdata[463] = \<const0> ;
  assign s_axi_rdata[462] = \<const0> ;
  assign s_axi_rdata[461] = \<const0> ;
  assign s_axi_rdata[460] = \<const0> ;
  assign s_axi_rdata[459] = \<const0> ;
  assign s_axi_rdata[458] = \<const0> ;
  assign s_axi_rdata[457] = \<const0> ;
  assign s_axi_rdata[456] = \<const0> ;
  assign s_axi_rdata[455] = \<const0> ;
  assign s_axi_rdata[454] = \<const0> ;
  assign s_axi_rdata[453] = \<const0> ;
  assign s_axi_rdata[452] = \<const0> ;
  assign s_axi_rdata[451] = \<const0> ;
  assign s_axi_rdata[450] = \<const0> ;
  assign s_axi_rdata[449] = \<const0> ;
  assign s_axi_rdata[448] = \<const0> ;
  assign s_axi_rdata[447] = \<const0> ;
  assign s_axi_rdata[446] = \<const0> ;
  assign s_axi_rdata[445] = \<const0> ;
  assign s_axi_rdata[444] = \<const0> ;
  assign s_axi_rdata[443] = \<const0> ;
  assign s_axi_rdata[442] = \<const0> ;
  assign s_axi_rdata[441] = \<const0> ;
  assign s_axi_rdata[440] = \<const0> ;
  assign s_axi_rdata[439] = \<const0> ;
  assign s_axi_rdata[438] = \<const0> ;
  assign s_axi_rdata[437] = \<const0> ;
  assign s_axi_rdata[436] = \<const0> ;
  assign s_axi_rdata[435] = \<const0> ;
  assign s_axi_rdata[434] = \<const0> ;
  assign s_axi_rdata[433] = \<const0> ;
  assign s_axi_rdata[432] = \<const0> ;
  assign s_axi_rdata[431] = \<const0> ;
  assign s_axi_rdata[430] = \<const0> ;
  assign s_axi_rdata[429] = \<const0> ;
  assign s_axi_rdata[428] = \<const0> ;
  assign s_axi_rdata[427] = \<const0> ;
  assign s_axi_rdata[426] = \<const0> ;
  assign s_axi_rdata[425] = \<const0> ;
  assign s_axi_rdata[424] = \<const0> ;
  assign s_axi_rdata[423] = \<const0> ;
  assign s_axi_rdata[422] = \<const0> ;
  assign s_axi_rdata[421] = \<const0> ;
  assign s_axi_rdata[420] = \<const0> ;
  assign s_axi_rdata[419] = \<const0> ;
  assign s_axi_rdata[418] = \<const0> ;
  assign s_axi_rdata[417] = \<const0> ;
  assign s_axi_rdata[416] = \<const0> ;
  assign s_axi_rdata[415] = \<const0> ;
  assign s_axi_rdata[414] = \<const0> ;
  assign s_axi_rdata[413] = \<const0> ;
  assign s_axi_rdata[412] = \<const0> ;
  assign s_axi_rdata[411] = \<const0> ;
  assign s_axi_rdata[410] = \<const0> ;
  assign s_axi_rdata[409] = \<const0> ;
  assign s_axi_rdata[408] = \<const0> ;
  assign s_axi_rdata[407] = \<const0> ;
  assign s_axi_rdata[406] = \<const0> ;
  assign s_axi_rdata[405] = \<const0> ;
  assign s_axi_rdata[404] = \<const0> ;
  assign s_axi_rdata[403] = \<const0> ;
  assign s_axi_rdata[402] = \<const0> ;
  assign s_axi_rdata[401] = \<const0> ;
  assign s_axi_rdata[400] = \<const0> ;
  assign s_axi_rdata[399] = \<const0> ;
  assign s_axi_rdata[398] = \<const0> ;
  assign s_axi_rdata[397] = \<const0> ;
  assign s_axi_rdata[396] = \<const0> ;
  assign s_axi_rdata[395] = \<const0> ;
  assign s_axi_rdata[394] = \<const0> ;
  assign s_axi_rdata[393] = \<const0> ;
  assign s_axi_rdata[392] = \<const0> ;
  assign s_axi_rdata[391] = \<const0> ;
  assign s_axi_rdata[390] = \<const0> ;
  assign s_axi_rdata[389] = \<const0> ;
  assign s_axi_rdata[388] = \<const0> ;
  assign s_axi_rdata[387] = \<const0> ;
  assign s_axi_rdata[386] = \<const0> ;
  assign s_axi_rdata[385] = \<const0> ;
  assign s_axi_rdata[384] = \<const0> ;
  assign s_axi_rdata[383] = \<const0> ;
  assign s_axi_rdata[382] = \<const0> ;
  assign s_axi_rdata[381] = \<const0> ;
  assign s_axi_rdata[380] = \<const0> ;
  assign s_axi_rdata[379] = \<const0> ;
  assign s_axi_rdata[378] = \<const0> ;
  assign s_axi_rdata[377] = \<const0> ;
  assign s_axi_rdata[376] = \<const0> ;
  assign s_axi_rdata[375] = \<const0> ;
  assign s_axi_rdata[374] = \<const0> ;
  assign s_axi_rdata[373] = \<const0> ;
  assign s_axi_rdata[372] = \<const0> ;
  assign s_axi_rdata[371] = \<const0> ;
  assign s_axi_rdata[370] = \<const0> ;
  assign s_axi_rdata[369] = \<const0> ;
  assign s_axi_rdata[368] = \<const0> ;
  assign s_axi_rdata[367] = \<const0> ;
  assign s_axi_rdata[366] = \<const0> ;
  assign s_axi_rdata[365] = \<const0> ;
  assign s_axi_rdata[364] = \<const0> ;
  assign s_axi_rdata[363] = \<const0> ;
  assign s_axi_rdata[362] = \<const0> ;
  assign s_axi_rdata[361] = \<const0> ;
  assign s_axi_rdata[360] = \<const0> ;
  assign s_axi_rdata[359] = \<const0> ;
  assign s_axi_rdata[358] = \<const0> ;
  assign s_axi_rdata[357] = \<const0> ;
  assign s_axi_rdata[356] = \<const0> ;
  assign s_axi_rdata[355] = \<const0> ;
  assign s_axi_rdata[354] = \<const0> ;
  assign s_axi_rdata[353] = \<const0> ;
  assign s_axi_rdata[352] = \<const0> ;
  assign s_axi_rdata[351] = \<const0> ;
  assign s_axi_rdata[350] = \<const0> ;
  assign s_axi_rdata[349] = \<const0> ;
  assign s_axi_rdata[348] = \<const0> ;
  assign s_axi_rdata[347] = \<const0> ;
  assign s_axi_rdata[346] = \<const0> ;
  assign s_axi_rdata[345] = \<const0> ;
  assign s_axi_rdata[344] = \<const0> ;
  assign s_axi_rdata[343] = \<const0> ;
  assign s_axi_rdata[342] = \<const0> ;
  assign s_axi_rdata[341] = \<const0> ;
  assign s_axi_rdata[340] = \<const0> ;
  assign s_axi_rdata[339] = \<const0> ;
  assign s_axi_rdata[338] = \<const0> ;
  assign s_axi_rdata[337] = \<const0> ;
  assign s_axi_rdata[336] = \<const0> ;
  assign s_axi_rdata[335] = \<const0> ;
  assign s_axi_rdata[334] = \<const0> ;
  assign s_axi_rdata[333] = \<const0> ;
  assign s_axi_rdata[332] = \<const0> ;
  assign s_axi_rdata[331] = \<const0> ;
  assign s_axi_rdata[330] = \<const0> ;
  assign s_axi_rdata[329] = \<const0> ;
  assign s_axi_rdata[328] = \<const0> ;
  assign s_axi_rdata[327] = \<const0> ;
  assign s_axi_rdata[326] = \<const0> ;
  assign s_axi_rdata[325] = \<const0> ;
  assign s_axi_rdata[324] = \<const0> ;
  assign s_axi_rdata[323] = \<const0> ;
  assign s_axi_rdata[322] = \<const0> ;
  assign s_axi_rdata[321] = \<const0> ;
  assign s_axi_rdata[320] = \<const0> ;
  assign s_axi_rdata[319] = \<const0> ;
  assign s_axi_rdata[318] = \<const0> ;
  assign s_axi_rdata[317] = \<const0> ;
  assign s_axi_rdata[316] = \<const0> ;
  assign s_axi_rdata[315] = \<const0> ;
  assign s_axi_rdata[314] = \<const0> ;
  assign s_axi_rdata[313] = \<const0> ;
  assign s_axi_rdata[312] = \<const0> ;
  assign s_axi_rdata[311] = \<const0> ;
  assign s_axi_rdata[310] = \<const0> ;
  assign s_axi_rdata[309] = \<const0> ;
  assign s_axi_rdata[308] = \<const0> ;
  assign s_axi_rdata[307] = \<const0> ;
  assign s_axi_rdata[306] = \<const0> ;
  assign s_axi_rdata[305] = \<const0> ;
  assign s_axi_rdata[304] = \<const0> ;
  assign s_axi_rdata[303] = \<const0> ;
  assign s_axi_rdata[302] = \<const0> ;
  assign s_axi_rdata[301] = \<const0> ;
  assign s_axi_rdata[300] = \<const0> ;
  assign s_axi_rdata[299] = \<const0> ;
  assign s_axi_rdata[298] = \<const0> ;
  assign s_axi_rdata[297] = \<const0> ;
  assign s_axi_rdata[296] = \<const0> ;
  assign s_axi_rdata[295] = \<const0> ;
  assign s_axi_rdata[294] = \<const0> ;
  assign s_axi_rdata[293] = \<const0> ;
  assign s_axi_rdata[292] = \<const0> ;
  assign s_axi_rdata[291] = \<const0> ;
  assign s_axi_rdata[290] = \<const0> ;
  assign s_axi_rdata[289] = \<const0> ;
  assign s_axi_rdata[288] = \<const0> ;
  assign s_axi_rdata[287] = \<const0> ;
  assign s_axi_rdata[286] = \<const0> ;
  assign s_axi_rdata[285] = \<const0> ;
  assign s_axi_rdata[284] = \<const0> ;
  assign s_axi_rdata[283] = \<const0> ;
  assign s_axi_rdata[282] = \<const0> ;
  assign s_axi_rdata[281] = \<const0> ;
  assign s_axi_rdata[280] = \<const0> ;
  assign s_axi_rdata[279] = \<const0> ;
  assign s_axi_rdata[278] = \<const0> ;
  assign s_axi_rdata[277] = \<const0> ;
  assign s_axi_rdata[276] = \<const0> ;
  assign s_axi_rdata[275] = \<const0> ;
  assign s_axi_rdata[274] = \<const0> ;
  assign s_axi_rdata[273] = \<const0> ;
  assign s_axi_rdata[272] = \<const0> ;
  assign s_axi_rdata[271] = \<const0> ;
  assign s_axi_rdata[270] = \<const0> ;
  assign s_axi_rdata[269] = \<const0> ;
  assign s_axi_rdata[268] = \<const0> ;
  assign s_axi_rdata[267] = \<const0> ;
  assign s_axi_rdata[266] = \<const0> ;
  assign s_axi_rdata[265] = \<const0> ;
  assign s_axi_rdata[264] = \<const0> ;
  assign s_axi_rdata[263] = \<const0> ;
  assign s_axi_rdata[262] = \<const0> ;
  assign s_axi_rdata[261] = \<const0> ;
  assign s_axi_rdata[260] = \<const0> ;
  assign s_axi_rdata[259] = \<const0> ;
  assign s_axi_rdata[258] = \<const0> ;
  assign s_axi_rdata[257] = \<const0> ;
  assign s_axi_rdata[256] = \<const0> ;
  assign s_axi_rdata[255] = \<const0> ;
  assign s_axi_rdata[254] = \<const0> ;
  assign s_axi_rdata[253] = \<const0> ;
  assign s_axi_rdata[252] = \<const0> ;
  assign s_axi_rdata[251] = \<const0> ;
  assign s_axi_rdata[250] = \<const0> ;
  assign s_axi_rdata[249] = \<const0> ;
  assign s_axi_rdata[248] = \<const0> ;
  assign s_axi_rdata[247] = \<const0> ;
  assign s_axi_rdata[246] = \<const0> ;
  assign s_axi_rdata[245] = \<const0> ;
  assign s_axi_rdata[244] = \<const0> ;
  assign s_axi_rdata[243] = \<const0> ;
  assign s_axi_rdata[242] = \<const0> ;
  assign s_axi_rdata[241] = \<const0> ;
  assign s_axi_rdata[240] = \<const0> ;
  assign s_axi_rdata[239] = \<const0> ;
  assign s_axi_rdata[238] = \<const0> ;
  assign s_axi_rdata[237] = \<const0> ;
  assign s_axi_rdata[236] = \<const0> ;
  assign s_axi_rdata[235] = \<const0> ;
  assign s_axi_rdata[234] = \<const0> ;
  assign s_axi_rdata[233] = \<const0> ;
  assign s_axi_rdata[232] = \<const0> ;
  assign s_axi_rdata[231] = \<const0> ;
  assign s_axi_rdata[230] = \<const0> ;
  assign s_axi_rdata[229] = \<const0> ;
  assign s_axi_rdata[228] = \<const0> ;
  assign s_axi_rdata[227] = \<const0> ;
  assign s_axi_rdata[226] = \<const0> ;
  assign s_axi_rdata[225] = \<const0> ;
  assign s_axi_rdata[224] = \<const0> ;
  assign s_axi_rdata[223] = \<const0> ;
  assign s_axi_rdata[222] = \<const0> ;
  assign s_axi_rdata[221] = \<const0> ;
  assign s_axi_rdata[220] = \<const0> ;
  assign s_axi_rdata[219] = \<const0> ;
  assign s_axi_rdata[218] = \<const0> ;
  assign s_axi_rdata[217] = \<const0> ;
  assign s_axi_rdata[216] = \<const0> ;
  assign s_axi_rdata[215] = \<const0> ;
  assign s_axi_rdata[214] = \<const0> ;
  assign s_axi_rdata[213] = \<const0> ;
  assign s_axi_rdata[212] = \<const0> ;
  assign s_axi_rdata[211] = \<const0> ;
  assign s_axi_rdata[210] = \<const0> ;
  assign s_axi_rdata[209] = \<const0> ;
  assign s_axi_rdata[208] = \<const0> ;
  assign s_axi_rdata[207] = \<const0> ;
  assign s_axi_rdata[206] = \<const0> ;
  assign s_axi_rdata[205] = \<const0> ;
  assign s_axi_rdata[204] = \<const0> ;
  assign s_axi_rdata[203] = \<const0> ;
  assign s_axi_rdata[202] = \<const0> ;
  assign s_axi_rdata[201] = \<const0> ;
  assign s_axi_rdata[200] = \<const0> ;
  assign s_axi_rdata[199] = \<const0> ;
  assign s_axi_rdata[198] = \<const0> ;
  assign s_axi_rdata[197] = \<const0> ;
  assign s_axi_rdata[196] = \<const0> ;
  assign s_axi_rdata[195] = \<const0> ;
  assign s_axi_rdata[194] = \<const0> ;
  assign s_axi_rdata[193] = \<const0> ;
  assign s_axi_rdata[192] = \<const0> ;
  assign s_axi_rdata[191] = \<const0> ;
  assign s_axi_rdata[190] = \<const0> ;
  assign s_axi_rdata[189] = \<const0> ;
  assign s_axi_rdata[188] = \<const0> ;
  assign s_axi_rdata[187] = \<const0> ;
  assign s_axi_rdata[186] = \<const0> ;
  assign s_axi_rdata[185] = \<const0> ;
  assign s_axi_rdata[184] = \<const0> ;
  assign s_axi_rdata[183] = \<const0> ;
  assign s_axi_rdata[182] = \<const0> ;
  assign s_axi_rdata[181] = \<const0> ;
  assign s_axi_rdata[180] = \<const0> ;
  assign s_axi_rdata[179] = \<const0> ;
  assign s_axi_rdata[178] = \<const0> ;
  assign s_axi_rdata[177] = \<const0> ;
  assign s_axi_rdata[176] = \<const0> ;
  assign s_axi_rdata[175] = \<const0> ;
  assign s_axi_rdata[174] = \<const0> ;
  assign s_axi_rdata[173] = \<const0> ;
  assign s_axi_rdata[172] = \<const0> ;
  assign s_axi_rdata[171] = \<const0> ;
  assign s_axi_rdata[170] = \<const0> ;
  assign s_axi_rdata[169] = \<const0> ;
  assign s_axi_rdata[168] = \<const0> ;
  assign s_axi_rdata[167] = \<const0> ;
  assign s_axi_rdata[166] = \<const0> ;
  assign s_axi_rdata[165] = \<const0> ;
  assign s_axi_rdata[164] = \<const0> ;
  assign s_axi_rdata[163] = \<const0> ;
  assign s_axi_rdata[162] = \<const0> ;
  assign s_axi_rdata[161] = \<const0> ;
  assign s_axi_rdata[160] = \<const0> ;
  assign s_axi_rdata[159] = \<const0> ;
  assign s_axi_rdata[158] = \<const0> ;
  assign s_axi_rdata[157] = \<const0> ;
  assign s_axi_rdata[156] = \<const0> ;
  assign s_axi_rdata[155] = \<const0> ;
  assign s_axi_rdata[154] = \<const0> ;
  assign s_axi_rdata[153] = \<const0> ;
  assign s_axi_rdata[152] = \<const0> ;
  assign s_axi_rdata[151] = \<const0> ;
  assign s_axi_rdata[150] = \<const0> ;
  assign s_axi_rdata[149] = \<const0> ;
  assign s_axi_rdata[148] = \<const0> ;
  assign s_axi_rdata[147] = \<const0> ;
  assign s_axi_rdata[146] = \<const0> ;
  assign s_axi_rdata[145] = \<const0> ;
  assign s_axi_rdata[144] = \<const0> ;
  assign s_axi_rdata[143] = \<const0> ;
  assign s_axi_rdata[142] = \<const0> ;
  assign s_axi_rdata[141] = \<const0> ;
  assign s_axi_rdata[140] = \<const0> ;
  assign s_axi_rdata[139] = \<const0> ;
  assign s_axi_rdata[138] = \<const0> ;
  assign s_axi_rdata[137] = \<const0> ;
  assign s_axi_rdata[136] = \<const0> ;
  assign s_axi_rdata[135] = \<const0> ;
  assign s_axi_rdata[134] = \<const0> ;
  assign s_axi_rdata[133] = \<const0> ;
  assign s_axi_rdata[132] = \<const0> ;
  assign s_axi_rdata[131] = \<const0> ;
  assign s_axi_rdata[130] = \<const0> ;
  assign s_axi_rdata[129] = \<const0> ;
  assign s_axi_rdata[128] = \<const0> ;
  assign s_axi_rdata[127] = \<const0> ;
  assign s_axi_rdata[126] = \<const0> ;
  assign s_axi_rdata[125] = \<const0> ;
  assign s_axi_rdata[124] = \<const0> ;
  assign s_axi_rdata[123] = \<const0> ;
  assign s_axi_rdata[122] = \<const0> ;
  assign s_axi_rdata[121] = \<const0> ;
  assign s_axi_rdata[120] = \<const0> ;
  assign s_axi_rdata[119] = \<const0> ;
  assign s_axi_rdata[118] = \<const0> ;
  assign s_axi_rdata[117] = \<const0> ;
  assign s_axi_rdata[116] = \<const0> ;
  assign s_axi_rdata[115] = \<const0> ;
  assign s_axi_rdata[114] = \<const0> ;
  assign s_axi_rdata[113] = \<const0> ;
  assign s_axi_rdata[112] = \<const0> ;
  assign s_axi_rdata[111] = \<const0> ;
  assign s_axi_rdata[110] = \<const0> ;
  assign s_axi_rdata[109] = \<const0> ;
  assign s_axi_rdata[108] = \<const0> ;
  assign s_axi_rdata[107] = \<const0> ;
  assign s_axi_rdata[106] = \<const0> ;
  assign s_axi_rdata[105] = \<const0> ;
  assign s_axi_rdata[104] = \<const0> ;
  assign s_axi_rdata[103] = \<const0> ;
  assign s_axi_rdata[102] = \<const0> ;
  assign s_axi_rdata[101] = \<const0> ;
  assign s_axi_rdata[100] = \<const0> ;
  assign s_axi_rdata[99] = \<const0> ;
  assign s_axi_rdata[98] = \<const0> ;
  assign s_axi_rdata[97] = \<const0> ;
  assign s_axi_rdata[96] = \<const0> ;
  assign s_axi_rdata[95] = \<const0> ;
  assign s_axi_rdata[94] = \<const0> ;
  assign s_axi_rdata[93] = \<const0> ;
  assign s_axi_rdata[92] = \<const0> ;
  assign s_axi_rdata[91] = \<const0> ;
  assign s_axi_rdata[90] = \<const0> ;
  assign s_axi_rdata[89] = \<const0> ;
  assign s_axi_rdata[88] = \<const0> ;
  assign s_axi_rdata[87] = \<const0> ;
  assign s_axi_rdata[86] = \<const0> ;
  assign s_axi_rdata[85] = \<const0> ;
  assign s_axi_rdata[84] = \<const0> ;
  assign s_axi_rdata[83] = \<const0> ;
  assign s_axi_rdata[82] = \<const0> ;
  assign s_axi_rdata[81] = \<const0> ;
  assign s_axi_rdata[80] = \<const0> ;
  assign s_axi_rdata[79] = \<const0> ;
  assign s_axi_rdata[78] = \<const0> ;
  assign s_axi_rdata[77] = \<const0> ;
  assign s_axi_rdata[76] = \<const0> ;
  assign s_axi_rdata[75] = \<const0> ;
  assign s_axi_rdata[74] = \<const0> ;
  assign s_axi_rdata[73] = \<const0> ;
  assign s_axi_rdata[72] = \<const0> ;
  assign s_axi_rdata[71] = \<const0> ;
  assign s_axi_rdata[70] = \<const0> ;
  assign s_axi_rdata[69] = \<const0> ;
  assign s_axi_rdata[68] = \<const0> ;
  assign s_axi_rdata[67] = \<const0> ;
  assign s_axi_rdata[66] = \<const0> ;
  assign s_axi_rdata[65] = \<const0> ;
  assign s_axi_rdata[64] = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_sbiterr = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign sbiterr = \<const0> ;
GND GND
       (.G(\<const0> ));
axi_dwidth_converter_0_blk_mem_gen_v8_2_synth inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_2_synth" *) 
module axi_dwidth_converter_0_blk_mem_gen_v8_2_synth
   (doutb,
    enb,
    clkb,
    ena,
    clka,
    addrb,
    addra,
    dina,
    wea);
  output [575:0]doutb;
  input enb;
  input clkb;
  input ena;
  input clka;
  input [8:0]addrb;
  input [8:0]addra;
  input [575:0]dina;
  input [63:0]wea;

  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [575:0]dina;
  wire [575:0]doutb;
  wire ena;
  wire enb;
  wire [63:0]wea;

axi_dwidth_converter_0_blk_mem_gen_top \gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module axi_dwidth_converter_0_clk_x_pntrs
   (O1,
    O2,
    O3,
    O4,
    I1,
    I2,
    I3,
    I4,
    I5,
    I6,
    wr_clk,
    I7,
    rd_clk,
    I8,
    D);
  output O1;
  output O2;
  output [4:0]O3;
  output [0:0]O4;
  input I1;
  input I2;
  input [3:0]I3;
  input [3:0]I4;
  input [3:0]I5;
  input [4:0]I6;
  input wr_clk;
  input [0:0]I7;
  input rd_clk;
  input [0:0]I8;
  input [3:0]D;

  wire [3:0]D;
  wire I1;
  wire I2;
  wire [3:0]I3;
  wire [3:0]I4;
  wire [3:0]I5;
  wire [4:0]I6;
  wire [0:0]I7;
  wire [0:0]I8;
  wire O1;
  wire O2;
  wire [4:0]O3;
  wire [0:0]O4;
  wire [4:0]Q;
  wire \n_0_gsync_stage[1].wr_stg_inst ;
  wire \n_0_gsync_stage[2].rd_stg_inst ;
  wire \n_0_gsync_stage[2].wr_stg_inst ;
  wire \n_0_gsync_stage[3].wr_stg_inst ;
  wire n_0_ram_full_i_i_2;
  wire n_0_ram_full_i_i_3;
  wire n_0_ram_full_i_i_5;
  wire n_0_ram_full_i_i_6;
  wire \n_1_gsync_stage[1].wr_stg_inst ;
  wire \n_1_gsync_stage[2].rd_stg_inst ;
  wire \n_1_gsync_stage[2].wr_stg_inst ;
  wire \n_1_gsync_stage[3].wr_stg_inst ;
  wire \n_2_gsync_stage[1].wr_stg_inst ;
  wire \n_2_gsync_stage[2].rd_stg_inst ;
  wire \n_2_gsync_stage[2].wr_stg_inst ;
  wire \n_2_gsync_stage[3].wr_stg_inst ;
  wire \n_3_gsync_stage[1].wr_stg_inst ;
  wire \n_3_gsync_stage[2].rd_stg_inst ;
  wire \n_3_gsync_stage[2].wr_stg_inst ;
  wire \n_3_gsync_stage[3].wr_stg_inst ;
  wire \n_4_gsync_stage[1].wr_stg_inst ;
  wire \n_4_gsync_stage[2].rd_stg_inst ;
  wire \n_4_gsync_stage[2].wr_stg_inst ;
  wire \n_4_gsync_stage[3].wr_stg_inst ;
  wire [4:0]p_0_in;
  wire [3:0]p_0_in3_out;
  wire [4:0]p_0_out;
  wire rd_clk;
  wire [4:0]rd_pntr_gc;
  wire wr_clk;
  wire [4:0]wr_pntr_gc;

axi_dwidth_converter_0_synchronizer_ff \gsync_stage[1].rd_stg_inst 
       (.I1(wr_pntr_gc),
        .I8(I8),
        .Q(Q),
        .rd_clk(rd_clk));
axi_dwidth_converter_0_synchronizer_ff_1 \gsync_stage[1].wr_stg_inst 
       (.I1(rd_pntr_gc),
        .I7(I7),
        .Q({\n_0_gsync_stage[1].wr_stg_inst ,\n_1_gsync_stage[1].wr_stg_inst ,\n_2_gsync_stage[1].wr_stg_inst ,\n_3_gsync_stage[1].wr_stg_inst ,\n_4_gsync_stage[1].wr_stg_inst }),
        .wr_clk(wr_clk));
axi_dwidth_converter_0_synchronizer_ff_2 \gsync_stage[2].rd_stg_inst 
       (.D(Q),
        .I8(I8),
        .Q({\n_0_gsync_stage[2].rd_stg_inst ,\n_1_gsync_stage[2].rd_stg_inst ,\n_2_gsync_stage[2].rd_stg_inst ,\n_3_gsync_stage[2].rd_stg_inst ,\n_4_gsync_stage[2].rd_stg_inst }),
        .rd_clk(rd_clk));
axi_dwidth_converter_0_synchronizer_ff_3 \gsync_stage[2].wr_stg_inst 
       (.D({\n_0_gsync_stage[1].wr_stg_inst ,\n_1_gsync_stage[1].wr_stg_inst ,\n_2_gsync_stage[1].wr_stg_inst ,\n_3_gsync_stage[1].wr_stg_inst ,\n_4_gsync_stage[1].wr_stg_inst }),
        .I7(I7),
        .Q({\n_0_gsync_stage[2].wr_stg_inst ,\n_1_gsync_stage[2].wr_stg_inst ,\n_2_gsync_stage[2].wr_stg_inst ,\n_3_gsync_stage[2].wr_stg_inst ,\n_4_gsync_stage[2].wr_stg_inst }),
        .wr_clk(wr_clk));
axi_dwidth_converter_0_synchronizer_ff_4 \gsync_stage[3].rd_stg_inst 
       (.D({\n_0_gsync_stage[2].rd_stg_inst ,\n_1_gsync_stage[2].rd_stg_inst ,\n_2_gsync_stage[2].rd_stg_inst ,\n_3_gsync_stage[2].rd_stg_inst ,\n_4_gsync_stage[2].rd_stg_inst }),
        .I8(I8),
        .p_0_in(p_0_in),
        .rd_clk(rd_clk));
axi_dwidth_converter_0_synchronizer_ff_5 \gsync_stage[3].wr_stg_inst 
       (.D({\n_0_gsync_stage[2].wr_stg_inst ,\n_1_gsync_stage[2].wr_stg_inst ,\n_2_gsync_stage[2].wr_stg_inst ,\n_3_gsync_stage[2].wr_stg_inst ,\n_4_gsync_stage[2].wr_stg_inst }),
        .I7(I7),
        .O1({\n_1_gsync_stage[3].wr_stg_inst ,\n_2_gsync_stage[3].wr_stg_inst ,\n_3_gsync_stage[3].wr_stg_inst ,\n_4_gsync_stage[3].wr_stg_inst }),
        .Q(\n_0_gsync_stage[3].wr_stg_inst ),
        .wr_clk(wr_clk));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     ram_empty_fb_i_i_5
       (.I0(O3[2]),
        .I1(I3[2]),
        .I2(O3[1]),
        .I3(I3[1]),
        .I4(I3[0]),
        .I5(O3[0]),
        .O(O2));
LUT6 #(
    .INIT(64'h01010101010101FF)) 
     ram_full_i_i_1
       (.I0(n_0_ram_full_i_i_2),
        .I1(n_0_ram_full_i_i_3),
        .I2(I1),
        .I3(n_0_ram_full_i_i_5),
        .I4(n_0_ram_full_i_i_6),
        .I5(I2),
        .O(O1));
LUT4 #(
    .INIT(16'h6FF6)) 
     ram_full_i_i_2
       (.I0(p_0_out[4]),
        .I1(I4[3]),
        .I2(p_0_out[2]),
        .I3(I4[2]),
        .O(n_0_ram_full_i_i_2));
LUT4 #(
    .INIT(16'h6FF6)) 
     ram_full_i_i_3
       (.I0(p_0_out[1]),
        .I1(I4[1]),
        .I2(p_0_out[0]),
        .I3(I4[0]),
        .O(n_0_ram_full_i_i_3));
LUT4 #(
    .INIT(16'h6FF6)) 
     ram_full_i_i_5
       (.I0(p_0_out[0]),
        .I1(I5[0]),
        .I2(p_0_out[1]),
        .I3(I5[1]),
        .O(n_0_ram_full_i_i_5));
LUT4 #(
    .INIT(16'h6FF6)) 
     ram_full_i_i_6
       (.I0(p_0_out[2]),
        .I1(I5[2]),
        .I2(p_0_out[4]),
        .I3(I5[3]),
        .O(n_0_ram_full_i_i_6));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(\n_4_gsync_stage[3].wr_stg_inst ),
        .Q(p_0_out[0]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(\n_3_gsync_stage[3].wr_stg_inst ),
        .Q(p_0_out[1]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(\n_2_gsync_stage[3].wr_stg_inst ),
        .Q(p_0_out[2]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(\n_1_gsync_stage[3].wr_stg_inst ),
        .Q(O4));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(\n_0_gsync_stage[3].wr_stg_inst ),
        .Q(p_0_out[4]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(D[0]),
        .Q(rd_pntr_gc[0]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(D[1]),
        .Q(rd_pntr_gc[1]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(D[2]),
        .Q(rd_pntr_gc[2]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(D[3]),
        .Q(rd_pntr_gc[3]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(I3[3]),
        .Q(rd_pntr_gc[4]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(p_0_in[0]),
        .Q(O3[0]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(p_0_in[1]),
        .Q(O3[1]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(p_0_in[2]),
        .Q(O3[2]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(p_0_in[3]),
        .Q(O3[3]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(p_0_in[4]),
        .Q(O3[4]));
(* SOFT_HLUTNM = "soft_lutpair116" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[0]_i_1 
       (.I0(I6[0]),
        .I1(I6[1]),
        .O(p_0_in3_out[0]));
(* SOFT_HLUTNM = "soft_lutpair116" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[1]_i_1 
       (.I0(I6[1]),
        .I1(I6[2]),
        .O(p_0_in3_out[1]));
(* SOFT_HLUTNM = "soft_lutpair117" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[2]_i_1 
       (.I0(I6[2]),
        .I1(I6[3]),
        .O(p_0_in3_out[2]));
(* SOFT_HLUTNM = "soft_lutpair117" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[3]_i_1 
       (.I0(I6[3]),
        .I1(I6[4]),
        .O(p_0_in3_out[3]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(p_0_in3_out[0]),
        .Q(wr_pntr_gc[0]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(p_0_in3_out[1]),
        .Q(wr_pntr_gc[1]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(p_0_in3_out[2]),
        .Q(wr_pntr_gc[2]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(p_0_in3_out[3]),
        .Q(wr_pntr_gc[3]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(I6[4]),
        .Q(wr_pntr_gc[4]));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module axi_dwidth_converter_0_clk_x_pntrs_34
   (O1,
    Q,
    O2,
    O3,
    O4,
    I1,
    I2,
    I3,
    I4,
    s_aclk,
    I5,
    m_aclk,
    I6,
    D);
  output O1;
  output [4:0]Q;
  output O2;
  output [2:0]O3;
  output O4;
  input [3:0]I1;
  input [1:0]I2;
  input [3:0]I3;
  input [4:0]I4;
  input s_aclk;
  input [0:0]I5;
  input m_aclk;
  input [0:0]I6;
  input [3:0]D;

  wire [3:0]D;
  wire [3:0]I1;
  wire [1:0]I2;
  wire [3:0]I3;
  wire [4:0]I4;
  wire [0:0]I5;
  wire [0:0]I6;
  wire O1;
  wire O2;
  wire [2:0]O3;
  wire O4;
  wire [4:0]Q;
  wire m_aclk;
  wire \n_0_gsync_stage[1].rd_stg_inst ;
  wire \n_0_gsync_stage[1].wr_stg_inst ;
  wire \n_0_gsync_stage[2].rd_stg_inst ;
  wire \n_0_gsync_stage[2].wr_stg_inst ;
  wire \n_0_gsync_stage[3].wr_stg_inst ;
  wire n_0_ram_full_fb_i_i_6;
  wire \n_1_gsync_stage[1].rd_stg_inst ;
  wire \n_1_gsync_stage[1].wr_stg_inst ;
  wire \n_1_gsync_stage[2].rd_stg_inst ;
  wire \n_1_gsync_stage[2].wr_stg_inst ;
  wire \n_1_gsync_stage[3].wr_stg_inst ;
  wire \n_2_gsync_stage[1].rd_stg_inst ;
  wire \n_2_gsync_stage[1].wr_stg_inst ;
  wire \n_2_gsync_stage[2].rd_stg_inst ;
  wire \n_2_gsync_stage[2].wr_stg_inst ;
  wire \n_2_gsync_stage[3].wr_stg_inst ;
  wire \n_3_gsync_stage[1].rd_stg_inst ;
  wire \n_3_gsync_stage[1].wr_stg_inst ;
  wire \n_3_gsync_stage[2].rd_stg_inst ;
  wire \n_3_gsync_stage[2].wr_stg_inst ;
  wire \n_3_gsync_stage[3].wr_stg_inst ;
  wire \n_4_gsync_stage[1].rd_stg_inst ;
  wire \n_4_gsync_stage[1].wr_stg_inst ;
  wire \n_4_gsync_stage[2].rd_stg_inst ;
  wire \n_4_gsync_stage[2].wr_stg_inst ;
  wire \n_4_gsync_stage[3].wr_stg_inst ;
  wire [4:0]p_0_in;
  wire [3:0]p_0_in3_out;
  wire [1:0]p_0_out;
  wire [4:0]rd_pntr_gc;
  wire s_aclk;
  wire [4:0]wr_pntr_gc;

axi_dwidth_converter_0_synchronizer_ff_41 \gsync_stage[1].rd_stg_inst 
       (.I1(wr_pntr_gc),
        .I6(I6),
        .Q({\n_0_gsync_stage[1].rd_stg_inst ,\n_1_gsync_stage[1].rd_stg_inst ,\n_2_gsync_stage[1].rd_stg_inst ,\n_3_gsync_stage[1].rd_stg_inst ,\n_4_gsync_stage[1].rd_stg_inst }),
        .m_aclk(m_aclk));
axi_dwidth_converter_0_synchronizer_ff_42 \gsync_stage[1].wr_stg_inst 
       (.I1(rd_pntr_gc),
        .I5(I5),
        .Q({\n_0_gsync_stage[1].wr_stg_inst ,\n_1_gsync_stage[1].wr_stg_inst ,\n_2_gsync_stage[1].wr_stg_inst ,\n_3_gsync_stage[1].wr_stg_inst ,\n_4_gsync_stage[1].wr_stg_inst }),
        .s_aclk(s_aclk));
axi_dwidth_converter_0_synchronizer_ff_43 \gsync_stage[2].rd_stg_inst 
       (.D({\n_0_gsync_stage[1].rd_stg_inst ,\n_1_gsync_stage[1].rd_stg_inst ,\n_2_gsync_stage[1].rd_stg_inst ,\n_3_gsync_stage[1].rd_stg_inst ,\n_4_gsync_stage[1].rd_stg_inst }),
        .I6(I6),
        .Q({\n_0_gsync_stage[2].rd_stg_inst ,\n_1_gsync_stage[2].rd_stg_inst ,\n_2_gsync_stage[2].rd_stg_inst ,\n_3_gsync_stage[2].rd_stg_inst ,\n_4_gsync_stage[2].rd_stg_inst }),
        .m_aclk(m_aclk));
axi_dwidth_converter_0_synchronizer_ff_44 \gsync_stage[2].wr_stg_inst 
       (.D({\n_0_gsync_stage[1].wr_stg_inst ,\n_1_gsync_stage[1].wr_stg_inst ,\n_2_gsync_stage[1].wr_stg_inst ,\n_3_gsync_stage[1].wr_stg_inst ,\n_4_gsync_stage[1].wr_stg_inst }),
        .I5(I5),
        .Q({\n_0_gsync_stage[2].wr_stg_inst ,\n_1_gsync_stage[2].wr_stg_inst ,\n_2_gsync_stage[2].wr_stg_inst ,\n_3_gsync_stage[2].wr_stg_inst ,\n_4_gsync_stage[2].wr_stg_inst }),
        .s_aclk(s_aclk));
axi_dwidth_converter_0_synchronizer_ff_45 \gsync_stage[3].rd_stg_inst 
       (.D({\n_0_gsync_stage[2].rd_stg_inst ,\n_1_gsync_stage[2].rd_stg_inst ,\n_2_gsync_stage[2].rd_stg_inst ,\n_3_gsync_stage[2].rd_stg_inst ,\n_4_gsync_stage[2].rd_stg_inst }),
        .I6(I6),
        .m_aclk(m_aclk),
        .p_0_in(p_0_in));
axi_dwidth_converter_0_synchronizer_ff_46 \gsync_stage[3].wr_stg_inst 
       (.D({\n_0_gsync_stage[2].wr_stg_inst ,\n_1_gsync_stage[2].wr_stg_inst ,\n_2_gsync_stage[2].wr_stg_inst ,\n_3_gsync_stage[2].wr_stg_inst ,\n_4_gsync_stage[2].wr_stg_inst }),
        .I5(I5),
        .O1({\n_1_gsync_stage[3].wr_stg_inst ,\n_2_gsync_stage[3].wr_stg_inst ,\n_3_gsync_stage[3].wr_stg_inst ,\n_4_gsync_stage[3].wr_stg_inst }),
        .Q(\n_0_gsync_stage[3].wr_stg_inst ),
        .s_aclk(s_aclk));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     ram_empty_fb_i_i_5
       (.I0(Q[2]),
        .I1(I1[2]),
        .I2(Q[1]),
        .I3(I1[1]),
        .I4(I1[0]),
        .I5(Q[0]),
        .O(O1));
LUT5 #(
    .INIT(32'h00009009)) 
     ram_full_fb_i_i_3
       (.I0(I3[0]),
        .I1(p_0_out[0]),
        .I2(I3[1]),
        .I3(p_0_out[1]),
        .I4(n_0_ram_full_fb_i_i_6),
        .O(O4));
LUT4 #(
    .INIT(16'h6FF6)) 
     ram_full_fb_i_i_5
       (.I0(p_0_out[1]),
        .I1(I2[1]),
        .I2(p_0_out[0]),
        .I3(I2[0]),
        .O(O2));
LUT4 #(
    .INIT(16'h6FF6)) 
     ram_full_fb_i_i_6
       (.I0(O3[0]),
        .I1(I3[2]),
        .I2(O3[2]),
        .I3(I3[3]),
        .O(n_0_ram_full_fb_i_i_6));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(\n_4_gsync_stage[3].wr_stg_inst ),
        .Q(p_0_out[0]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(\n_3_gsync_stage[3].wr_stg_inst ),
        .Q(p_0_out[1]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[2] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(\n_2_gsync_stage[3].wr_stg_inst ),
        .Q(O3[0]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[3] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(\n_1_gsync_stage[3].wr_stg_inst ),
        .Q(O3[1]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[4] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(\n_0_gsync_stage[3].wr_stg_inst ),
        .Q(O3[2]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[0]),
        .Q(rd_pntr_gc[0]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[1]),
        .Q(rd_pntr_gc[1]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[2]),
        .Q(rd_pntr_gc[2]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[3]),
        .Q(rd_pntr_gc[3]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(I1[3]),
        .Q(rd_pntr_gc[4]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(p_0_in[0]),
        .Q(Q[0]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(p_0_in[1]),
        .Q(Q[1]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(p_0_in[2]),
        .Q(Q[2]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(p_0_in[3]),
        .Q(Q[3]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(p_0_in[4]),
        .Q(Q[4]));
(* SOFT_HLUTNM = "soft_lutpair18" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[0]_i_1 
       (.I0(I4[0]),
        .I1(I4[1]),
        .O(p_0_in3_out[0]));
(* SOFT_HLUTNM = "soft_lutpair18" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[1]_i_1 
       (.I0(I4[1]),
        .I1(I4[2]),
        .O(p_0_in3_out[1]));
(* SOFT_HLUTNM = "soft_lutpair19" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[2]_i_1 
       (.I0(I4[2]),
        .I1(I4[3]),
        .O(p_0_in3_out[2]));
(* SOFT_HLUTNM = "soft_lutpair19" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[3]_i_1 
       (.I0(I4[3]),
        .I1(I4[4]),
        .O(p_0_in3_out[3]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(p_0_in3_out[0]),
        .Q(wr_pntr_gc[0]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(p_0_in3_out[1]),
        .Q(wr_pntr_gc[1]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[2] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(p_0_in3_out[2]),
        .Q(wr_pntr_gc[2]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[3] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(p_0_in3_out[3]),
        .Q(wr_pntr_gc[3]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[4] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(I4[4]),
        .Q(wr_pntr_gc[4]));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module axi_dwidth_converter_0_clk_x_pntrs_47
   (O1,
    Q,
    O2,
    O3,
    O4,
    I1,
    I2,
    I3,
    I4,
    m_aclk,
    I5,
    s_aclk,
    I6,
    D);
  output O1;
  output [4:0]Q;
  output O2;
  output [2:0]O3;
  output O4;
  input [3:0]I1;
  input [1:0]I2;
  input [3:0]I3;
  input [4:0]I4;
  input m_aclk;
  input [0:0]I5;
  input s_aclk;
  input [0:0]I6;
  input [3:0]D;

  wire [3:0]D;
  wire [3:0]I1;
  wire [1:0]I2;
  wire [3:0]I3;
  wire [4:0]I4;
  wire [0:0]I5;
  wire [0:0]I6;
  wire O1;
  wire O2;
  wire [2:0]O3;
  wire O4;
  wire [4:0]Q;
  wire m_aclk;
  wire \n_0_gsync_stage[1].rd_stg_inst ;
  wire \n_0_gsync_stage[1].wr_stg_inst ;
  wire \n_0_gsync_stage[2].rd_stg_inst ;
  wire \n_0_gsync_stage[2].wr_stg_inst ;
  wire \n_0_gsync_stage[3].wr_stg_inst ;
  wire n_0_ram_full_fb_i_i_6;
  wire \n_1_gsync_stage[1].rd_stg_inst ;
  wire \n_1_gsync_stage[1].wr_stg_inst ;
  wire \n_1_gsync_stage[2].rd_stg_inst ;
  wire \n_1_gsync_stage[2].wr_stg_inst ;
  wire \n_1_gsync_stage[3].wr_stg_inst ;
  wire \n_2_gsync_stage[1].rd_stg_inst ;
  wire \n_2_gsync_stage[1].wr_stg_inst ;
  wire \n_2_gsync_stage[2].rd_stg_inst ;
  wire \n_2_gsync_stage[2].wr_stg_inst ;
  wire \n_2_gsync_stage[3].wr_stg_inst ;
  wire \n_3_gsync_stage[1].rd_stg_inst ;
  wire \n_3_gsync_stage[1].wr_stg_inst ;
  wire \n_3_gsync_stage[2].rd_stg_inst ;
  wire \n_3_gsync_stage[2].wr_stg_inst ;
  wire \n_3_gsync_stage[3].wr_stg_inst ;
  wire \n_4_gsync_stage[1].rd_stg_inst ;
  wire \n_4_gsync_stage[1].wr_stg_inst ;
  wire \n_4_gsync_stage[2].rd_stg_inst ;
  wire \n_4_gsync_stage[2].wr_stg_inst ;
  wire \n_4_gsync_stage[3].wr_stg_inst ;
  wire [4:0]p_0_in;
  wire [3:0]p_0_in3_out;
  wire [1:0]p_0_out;
  wire [4:0]rd_pntr_gc;
  wire s_aclk;
  wire [4:0]wr_pntr_gc;

axi_dwidth_converter_0_synchronizer_ff_55 \gsync_stage[1].rd_stg_inst 
       (.I1(wr_pntr_gc),
        .I6(I6),
        .Q({\n_0_gsync_stage[1].rd_stg_inst ,\n_1_gsync_stage[1].rd_stg_inst ,\n_2_gsync_stage[1].rd_stg_inst ,\n_3_gsync_stage[1].rd_stg_inst ,\n_4_gsync_stage[1].rd_stg_inst }),
        .s_aclk(s_aclk));
axi_dwidth_converter_0_synchronizer_ff_56 \gsync_stage[1].wr_stg_inst 
       (.I1(rd_pntr_gc),
        .I5(I5),
        .Q({\n_0_gsync_stage[1].wr_stg_inst ,\n_1_gsync_stage[1].wr_stg_inst ,\n_2_gsync_stage[1].wr_stg_inst ,\n_3_gsync_stage[1].wr_stg_inst ,\n_4_gsync_stage[1].wr_stg_inst }),
        .m_aclk(m_aclk));
axi_dwidth_converter_0_synchronizer_ff_57 \gsync_stage[2].rd_stg_inst 
       (.D({\n_0_gsync_stage[1].rd_stg_inst ,\n_1_gsync_stage[1].rd_stg_inst ,\n_2_gsync_stage[1].rd_stg_inst ,\n_3_gsync_stage[1].rd_stg_inst ,\n_4_gsync_stage[1].rd_stg_inst }),
        .I6(I6),
        .Q({\n_0_gsync_stage[2].rd_stg_inst ,\n_1_gsync_stage[2].rd_stg_inst ,\n_2_gsync_stage[2].rd_stg_inst ,\n_3_gsync_stage[2].rd_stg_inst ,\n_4_gsync_stage[2].rd_stg_inst }),
        .s_aclk(s_aclk));
axi_dwidth_converter_0_synchronizer_ff_58 \gsync_stage[2].wr_stg_inst 
       (.D({\n_0_gsync_stage[1].wr_stg_inst ,\n_1_gsync_stage[1].wr_stg_inst ,\n_2_gsync_stage[1].wr_stg_inst ,\n_3_gsync_stage[1].wr_stg_inst ,\n_4_gsync_stage[1].wr_stg_inst }),
        .I5(I5),
        .Q({\n_0_gsync_stage[2].wr_stg_inst ,\n_1_gsync_stage[2].wr_stg_inst ,\n_2_gsync_stage[2].wr_stg_inst ,\n_3_gsync_stage[2].wr_stg_inst ,\n_4_gsync_stage[2].wr_stg_inst }),
        .m_aclk(m_aclk));
axi_dwidth_converter_0_synchronizer_ff_59 \gsync_stage[3].rd_stg_inst 
       (.D({\n_0_gsync_stage[2].rd_stg_inst ,\n_1_gsync_stage[2].rd_stg_inst ,\n_2_gsync_stage[2].rd_stg_inst ,\n_3_gsync_stage[2].rd_stg_inst ,\n_4_gsync_stage[2].rd_stg_inst }),
        .I6(I6),
        .p_0_in(p_0_in),
        .s_aclk(s_aclk));
axi_dwidth_converter_0_synchronizer_ff_60 \gsync_stage[3].wr_stg_inst 
       (.D({\n_0_gsync_stage[2].wr_stg_inst ,\n_1_gsync_stage[2].wr_stg_inst ,\n_2_gsync_stage[2].wr_stg_inst ,\n_3_gsync_stage[2].wr_stg_inst ,\n_4_gsync_stage[2].wr_stg_inst }),
        .I5(I5),
        .O1({\n_1_gsync_stage[3].wr_stg_inst ,\n_2_gsync_stage[3].wr_stg_inst ,\n_3_gsync_stage[3].wr_stg_inst ,\n_4_gsync_stage[3].wr_stg_inst }),
        .Q(\n_0_gsync_stage[3].wr_stg_inst ),
        .m_aclk(m_aclk));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     ram_empty_fb_i_i_5
       (.I0(Q[2]),
        .I1(I1[2]),
        .I2(Q[1]),
        .I3(I1[1]),
        .I4(I1[0]),
        .I5(Q[0]),
        .O(O1));
LUT5 #(
    .INIT(32'h00009009)) 
     ram_full_fb_i_i_3
       (.I0(I3[0]),
        .I1(p_0_out[0]),
        .I2(I3[1]),
        .I3(p_0_out[1]),
        .I4(n_0_ram_full_fb_i_i_6),
        .O(O4));
LUT4 #(
    .INIT(16'h6FF6)) 
     ram_full_fb_i_i_5
       (.I0(p_0_out[1]),
        .I1(I2[1]),
        .I2(p_0_out[0]),
        .I3(I2[0]),
        .O(O2));
LUT4 #(
    .INIT(16'h6FF6)) 
     ram_full_fb_i_i_6
       (.I0(O3[0]),
        .I1(I3[2]),
        .I2(O3[2]),
        .I3(I3[3]),
        .O(n_0_ram_full_fb_i_i_6));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(\n_4_gsync_stage[3].wr_stg_inst ),
        .Q(p_0_out[0]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(\n_3_gsync_stage[3].wr_stg_inst ),
        .Q(p_0_out[1]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(\n_2_gsync_stage[3].wr_stg_inst ),
        .Q(O3[0]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(\n_1_gsync_stage[3].wr_stg_inst ),
        .Q(O3[1]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(\n_0_gsync_stage[3].wr_stg_inst ),
        .Q(O3[2]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[0]),
        .Q(rd_pntr_gc[0]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[1]),
        .Q(rd_pntr_gc[1]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[2] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[2]),
        .Q(rd_pntr_gc[2]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[3] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[3]),
        .Q(rd_pntr_gc[3]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[4] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(I1[3]),
        .Q(rd_pntr_gc[4]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(p_0_in[0]),
        .Q(Q[0]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(p_0_in[1]),
        .Q(Q[1]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[2] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(p_0_in[2]),
        .Q(Q[2]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[3] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(p_0_in[3]),
        .Q(Q[3]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[4] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(p_0_in[4]),
        .Q(Q[4]));
(* SOFT_HLUTNM = "soft_lutpair4" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[0]_i_1 
       (.I0(I4[0]),
        .I1(I4[1]),
        .O(p_0_in3_out[0]));
(* SOFT_HLUTNM = "soft_lutpair4" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[1]_i_1 
       (.I0(I4[1]),
        .I1(I4[2]),
        .O(p_0_in3_out[1]));
(* SOFT_HLUTNM = "soft_lutpair5" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[2]_i_1 
       (.I0(I4[2]),
        .I1(I4[3]),
        .O(p_0_in3_out[2]));
(* SOFT_HLUTNM = "soft_lutpair5" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[3]_i_1 
       (.I0(I4[3]),
        .I1(I4[4]),
        .O(p_0_in3_out[3]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(p_0_in3_out[0]),
        .Q(wr_pntr_gc[0]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(p_0_in3_out[1]),
        .Q(wr_pntr_gc[1]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(p_0_in3_out[2]),
        .Q(wr_pntr_gc[2]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(p_0_in3_out[3]),
        .Q(wr_pntr_gc[3]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(I4[4]),
        .Q(wr_pntr_gc[4]));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module axi_dwidth_converter_0_clk_x_pntrs_6
   (O1,
    Q,
    O2,
    O3,
    O4,
    I1,
    I2,
    I3,
    I4,
    s_aclk,
    I5,
    m_aclk,
    I6,
    D);
  output O1;
  output [4:0]Q;
  output O2;
  output [2:0]O3;
  output O4;
  input [3:0]I1;
  input [1:0]I2;
  input [3:0]I3;
  input [4:0]I4;
  input s_aclk;
  input [0:0]I5;
  input m_aclk;
  input [0:0]I6;
  input [3:0]D;

  wire [3:0]D;
  wire [3:0]I1;
  wire [1:0]I2;
  wire [3:0]I3;
  wire [4:0]I4;
  wire [0:0]I5;
  wire [0:0]I6;
  wire O1;
  wire O2;
  wire [2:0]O3;
  wire O4;
  wire [4:0]Q;
  wire m_aclk;
  wire \n_0_gsync_stage[1].rd_stg_inst ;
  wire \n_0_gsync_stage[1].wr_stg_inst ;
  wire \n_0_gsync_stage[2].rd_stg_inst ;
  wire \n_0_gsync_stage[2].wr_stg_inst ;
  wire \n_0_gsync_stage[3].wr_stg_inst ;
  wire n_0_ram_full_fb_i_i_6;
  wire \n_1_gsync_stage[1].rd_stg_inst ;
  wire \n_1_gsync_stage[1].wr_stg_inst ;
  wire \n_1_gsync_stage[2].rd_stg_inst ;
  wire \n_1_gsync_stage[2].wr_stg_inst ;
  wire \n_1_gsync_stage[3].wr_stg_inst ;
  wire \n_2_gsync_stage[1].rd_stg_inst ;
  wire \n_2_gsync_stage[1].wr_stg_inst ;
  wire \n_2_gsync_stage[2].rd_stg_inst ;
  wire \n_2_gsync_stage[2].wr_stg_inst ;
  wire \n_2_gsync_stage[3].wr_stg_inst ;
  wire \n_3_gsync_stage[1].rd_stg_inst ;
  wire \n_3_gsync_stage[1].wr_stg_inst ;
  wire \n_3_gsync_stage[2].rd_stg_inst ;
  wire \n_3_gsync_stage[2].wr_stg_inst ;
  wire \n_3_gsync_stage[3].wr_stg_inst ;
  wire \n_4_gsync_stage[1].rd_stg_inst ;
  wire \n_4_gsync_stage[1].wr_stg_inst ;
  wire \n_4_gsync_stage[2].rd_stg_inst ;
  wire \n_4_gsync_stage[2].wr_stg_inst ;
  wire \n_4_gsync_stage[3].wr_stg_inst ;
  wire [4:0]p_0_in;
  wire [3:0]p_0_in3_out;
  wire [1:0]p_0_out;
  wire [4:0]rd_pntr_gc;
  wire s_aclk;
  wire [4:0]wr_pntr_gc;

axi_dwidth_converter_0_synchronizer_ff_11 \gsync_stage[1].rd_stg_inst 
       (.I1(wr_pntr_gc),
        .I6(I6),
        .Q({\n_0_gsync_stage[1].rd_stg_inst ,\n_1_gsync_stage[1].rd_stg_inst ,\n_2_gsync_stage[1].rd_stg_inst ,\n_3_gsync_stage[1].rd_stg_inst ,\n_4_gsync_stage[1].rd_stg_inst }),
        .m_aclk(m_aclk));
axi_dwidth_converter_0_synchronizer_ff_12 \gsync_stage[1].wr_stg_inst 
       (.I1(rd_pntr_gc),
        .I5(I5),
        .Q({\n_0_gsync_stage[1].wr_stg_inst ,\n_1_gsync_stage[1].wr_stg_inst ,\n_2_gsync_stage[1].wr_stg_inst ,\n_3_gsync_stage[1].wr_stg_inst ,\n_4_gsync_stage[1].wr_stg_inst }),
        .s_aclk(s_aclk));
axi_dwidth_converter_0_synchronizer_ff_13 \gsync_stage[2].rd_stg_inst 
       (.D({\n_0_gsync_stage[1].rd_stg_inst ,\n_1_gsync_stage[1].rd_stg_inst ,\n_2_gsync_stage[1].rd_stg_inst ,\n_3_gsync_stage[1].rd_stg_inst ,\n_4_gsync_stage[1].rd_stg_inst }),
        .I6(I6),
        .Q({\n_0_gsync_stage[2].rd_stg_inst ,\n_1_gsync_stage[2].rd_stg_inst ,\n_2_gsync_stage[2].rd_stg_inst ,\n_3_gsync_stage[2].rd_stg_inst ,\n_4_gsync_stage[2].rd_stg_inst }),
        .m_aclk(m_aclk));
axi_dwidth_converter_0_synchronizer_ff_14 \gsync_stage[2].wr_stg_inst 
       (.D({\n_0_gsync_stage[1].wr_stg_inst ,\n_1_gsync_stage[1].wr_stg_inst ,\n_2_gsync_stage[1].wr_stg_inst ,\n_3_gsync_stage[1].wr_stg_inst ,\n_4_gsync_stage[1].wr_stg_inst }),
        .I5(I5),
        .Q({\n_0_gsync_stage[2].wr_stg_inst ,\n_1_gsync_stage[2].wr_stg_inst ,\n_2_gsync_stage[2].wr_stg_inst ,\n_3_gsync_stage[2].wr_stg_inst ,\n_4_gsync_stage[2].wr_stg_inst }),
        .s_aclk(s_aclk));
axi_dwidth_converter_0_synchronizer_ff_15 \gsync_stage[3].rd_stg_inst 
       (.D({\n_0_gsync_stage[2].rd_stg_inst ,\n_1_gsync_stage[2].rd_stg_inst ,\n_2_gsync_stage[2].rd_stg_inst ,\n_3_gsync_stage[2].rd_stg_inst ,\n_4_gsync_stage[2].rd_stg_inst }),
        .I6(I6),
        .m_aclk(m_aclk),
        .p_0_in(p_0_in));
axi_dwidth_converter_0_synchronizer_ff_16 \gsync_stage[3].wr_stg_inst 
       (.D({\n_0_gsync_stage[2].wr_stg_inst ,\n_1_gsync_stage[2].wr_stg_inst ,\n_2_gsync_stage[2].wr_stg_inst ,\n_3_gsync_stage[2].wr_stg_inst ,\n_4_gsync_stage[2].wr_stg_inst }),
        .I5(I5),
        .O1({\n_1_gsync_stage[3].wr_stg_inst ,\n_2_gsync_stage[3].wr_stg_inst ,\n_3_gsync_stage[3].wr_stg_inst ,\n_4_gsync_stage[3].wr_stg_inst }),
        .Q(\n_0_gsync_stage[3].wr_stg_inst ),
        .s_aclk(s_aclk));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     ram_empty_fb_i_i_5
       (.I0(Q[2]),
        .I1(I1[2]),
        .I2(Q[1]),
        .I3(I1[1]),
        .I4(I1[0]),
        .I5(Q[0]),
        .O(O1));
LUT5 #(
    .INIT(32'h00009009)) 
     ram_full_fb_i_i_3
       (.I0(I3[0]),
        .I1(p_0_out[0]),
        .I2(I3[1]),
        .I3(p_0_out[1]),
        .I4(n_0_ram_full_fb_i_i_6),
        .O(O4));
LUT4 #(
    .INIT(16'h6FF6)) 
     ram_full_fb_i_i_5
       (.I0(p_0_out[1]),
        .I1(I2[1]),
        .I2(p_0_out[0]),
        .I3(I2[0]),
        .O(O2));
LUT4 #(
    .INIT(16'h6FF6)) 
     ram_full_fb_i_i_6
       (.I0(O3[0]),
        .I1(I3[2]),
        .I2(O3[2]),
        .I3(I3[3]),
        .O(n_0_ram_full_fb_i_i_6));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(\n_4_gsync_stage[3].wr_stg_inst ),
        .Q(p_0_out[0]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(\n_3_gsync_stage[3].wr_stg_inst ),
        .Q(p_0_out[1]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[2] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(\n_2_gsync_stage[3].wr_stg_inst ),
        .Q(O3[0]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[3] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(\n_1_gsync_stage[3].wr_stg_inst ),
        .Q(O3[1]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[4] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(\n_0_gsync_stage[3].wr_stg_inst ),
        .Q(O3[2]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[0]),
        .Q(rd_pntr_gc[0]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[1]),
        .Q(rd_pntr_gc[1]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[2]),
        .Q(rd_pntr_gc[2]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[3]),
        .Q(rd_pntr_gc[3]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(I1[3]),
        .Q(rd_pntr_gc[4]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(p_0_in[0]),
        .Q(Q[0]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(p_0_in[1]),
        .Q(Q[1]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(p_0_in[2]),
        .Q(Q[2]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(p_0_in[3]),
        .Q(Q[3]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(p_0_in[4]),
        .Q(Q[4]));
(* SOFT_HLUTNM = "soft_lutpair101" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[0]_i_1 
       (.I0(I4[0]),
        .I1(I4[1]),
        .O(p_0_in3_out[0]));
(* SOFT_HLUTNM = "soft_lutpair101" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[1]_i_1 
       (.I0(I4[1]),
        .I1(I4[2]),
        .O(p_0_in3_out[1]));
(* SOFT_HLUTNM = "soft_lutpair102" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[2]_i_1 
       (.I0(I4[2]),
        .I1(I4[3]),
        .O(p_0_in3_out[2]));
(* SOFT_HLUTNM = "soft_lutpair102" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[3]_i_1 
       (.I0(I4[3]),
        .I1(I4[4]),
        .O(p_0_in3_out[3]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(p_0_in3_out[0]),
        .Q(wr_pntr_gc[0]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(p_0_in3_out[1]),
        .Q(wr_pntr_gc[1]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[2] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(p_0_in3_out[2]),
        .Q(wr_pntr_gc[2]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[3] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(p_0_in3_out[3]),
        .Q(wr_pntr_gc[3]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[4] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(I4[4]),
        .Q(wr_pntr_gc[4]));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module axi_dwidth_converter_0_clk_x_pntrs__parameterized0
   (O1,
    WR_PNTR_RD,
    v1_reg,
    v1_reg_0,
    RD_PNTR_WR,
    Q,
    I1,
    I2,
    I3,
    wr_clk,
    I4,
    rd_clk,
    I5);
  output O1;
  output [8:0]WR_PNTR_RD;
  output [3:0]v1_reg;
  output [0:0]v1_reg_0;
  output [8:0]RD_PNTR_WR;
  input [8:0]Q;
  input [7:0]I1;
  input [0:0]I2;
  input [8:0]I3;
  input wr_clk;
  input [0:0]I4;
  input rd_clk;
  input [0:0]I5;

  wire [7:0]I1;
  wire [0:0]I2;
  wire [8:0]I3;
  wire [0:0]I4;
  wire [0:0]I5;
  wire O1;
  wire [8:0]Q;
  wire [8:0]Q_0;
  wire [8:0]RD_PNTR_WR;
  wire [8:0]WR_PNTR_RD;
  wire \n_0_gsync_stage[1].wr_stg_inst ;
  wire \n_0_gsync_stage[2].rd_stg_inst ;
  wire \n_0_gsync_stage[2].wr_stg_inst ;
  wire \n_0_gsync_stage[3].wr_stg_inst ;
  wire \n_0_rd_pntr_gc[0]_i_1 ;
  wire \n_0_rd_pntr_gc[1]_i_1 ;
  wire \n_0_rd_pntr_gc[2]_i_1 ;
  wire \n_0_rd_pntr_gc[3]_i_1 ;
  wire \n_0_rd_pntr_gc[4]_i_1 ;
  wire \n_0_rd_pntr_gc[5]_i_1 ;
  wire \n_0_rd_pntr_gc[6]_i_1 ;
  wire \n_0_rd_pntr_gc[7]_i_1 ;
  wire \n_1_gsync_stage[1].wr_stg_inst ;
  wire \n_1_gsync_stage[2].rd_stg_inst ;
  wire \n_1_gsync_stage[2].wr_stg_inst ;
  wire \n_1_gsync_stage[3].wr_stg_inst ;
  wire \n_2_gsync_stage[1].wr_stg_inst ;
  wire \n_2_gsync_stage[2].rd_stg_inst ;
  wire \n_2_gsync_stage[2].wr_stg_inst ;
  wire \n_2_gsync_stage[3].wr_stg_inst ;
  wire \n_3_gsync_stage[1].wr_stg_inst ;
  wire \n_3_gsync_stage[2].rd_stg_inst ;
  wire \n_3_gsync_stage[2].wr_stg_inst ;
  wire \n_3_gsync_stage[3].wr_stg_inst ;
  wire \n_4_gsync_stage[1].wr_stg_inst ;
  wire \n_4_gsync_stage[2].rd_stg_inst ;
  wire \n_4_gsync_stage[2].wr_stg_inst ;
  wire \n_4_gsync_stage[3].wr_stg_inst ;
  wire \n_5_gsync_stage[1].wr_stg_inst ;
  wire \n_5_gsync_stage[2].rd_stg_inst ;
  wire \n_5_gsync_stage[2].wr_stg_inst ;
  wire \n_5_gsync_stage[3].wr_stg_inst ;
  wire \n_6_gsync_stage[1].wr_stg_inst ;
  wire \n_6_gsync_stage[2].rd_stg_inst ;
  wire \n_6_gsync_stage[2].wr_stg_inst ;
  wire \n_6_gsync_stage[3].wr_stg_inst ;
  wire \n_7_gsync_stage[1].wr_stg_inst ;
  wire \n_7_gsync_stage[2].rd_stg_inst ;
  wire \n_7_gsync_stage[2].wr_stg_inst ;
  wire \n_7_gsync_stage[3].wr_stg_inst ;
  wire \n_8_gsync_stage[1].wr_stg_inst ;
  wire \n_8_gsync_stage[2].rd_stg_inst ;
  wire \n_8_gsync_stage[2].wr_stg_inst ;
  wire \n_8_gsync_stage[3].wr_stg_inst ;
  wire [8:0]p_0_in;
  wire [7:0]p_0_in7_out;
  wire rd_clk;
  wire [8:0]rd_pntr_gc;
  wire [3:0]v1_reg;
  wire [0:0]v1_reg_0;
  wire wr_clk;
  wire [8:0]wr_pntr_gc;

LUT4 #(
    .INIT(16'h9009)) 
     \gmux.gm[0].gm1.m1_i_1__0 
       (.I0(WR_PNTR_RD[1]),
        .I1(I1[1]),
        .I2(WR_PNTR_RD[0]),
        .I3(I1[0]),
        .O(v1_reg[0]));
LUT4 #(
    .INIT(16'h9009)) 
     \gmux.gm[1].gms.ms_i_1__0 
       (.I0(WR_PNTR_RD[3]),
        .I1(I1[3]),
        .I2(WR_PNTR_RD[2]),
        .I3(I1[2]),
        .O(v1_reg[1]));
LUT4 #(
    .INIT(16'h9009)) 
     \gmux.gm[2].gms.ms_i_1__0 
       (.I0(WR_PNTR_RD[5]),
        .I1(I1[5]),
        .I2(WR_PNTR_RD[4]),
        .I3(I1[4]),
        .O(v1_reg[2]));
LUT4 #(
    .INIT(16'h9009)) 
     \gmux.gm[3].gms.ms_i_1__0 
       (.I0(WR_PNTR_RD[7]),
        .I1(I1[7]),
        .I2(WR_PNTR_RD[6]),
        .I3(I1[6]),
        .O(v1_reg[3]));
LUT2 #(
    .INIT(4'h9)) 
     \gmux.gm[4].gms.ms_i_1__0 
       (.I0(RD_PNTR_WR[8]),
        .I1(I2),
        .O(v1_reg_0));
LUT2 #(
    .INIT(4'h9)) 
     \gmux.gm[4].gms.ms_i_1__2 
       (.I0(WR_PNTR_RD[8]),
        .I1(Q[8]),
        .O(O1));
axi_dwidth_converter_0_synchronizer_ff__parameterized0 \gsync_stage[1].rd_stg_inst 
       (.I1(wr_pntr_gc),
        .I5(I5),
        .Q(Q_0),
        .rd_clk(rd_clk));
axi_dwidth_converter_0_synchronizer_ff__parameterized0_22 \gsync_stage[1].wr_stg_inst 
       (.I1(rd_pntr_gc),
        .I4(I4),
        .Q({\n_0_gsync_stage[1].wr_stg_inst ,\n_1_gsync_stage[1].wr_stg_inst ,\n_2_gsync_stage[1].wr_stg_inst ,\n_3_gsync_stage[1].wr_stg_inst ,\n_4_gsync_stage[1].wr_stg_inst ,\n_5_gsync_stage[1].wr_stg_inst ,\n_6_gsync_stage[1].wr_stg_inst ,\n_7_gsync_stage[1].wr_stg_inst ,\n_8_gsync_stage[1].wr_stg_inst }),
        .wr_clk(wr_clk));
axi_dwidth_converter_0_synchronizer_ff__parameterized0_23 \gsync_stage[2].rd_stg_inst 
       (.D(Q_0),
        .I5(I5),
        .Q({\n_0_gsync_stage[2].rd_stg_inst ,\n_1_gsync_stage[2].rd_stg_inst ,\n_2_gsync_stage[2].rd_stg_inst ,\n_3_gsync_stage[2].rd_stg_inst ,\n_4_gsync_stage[2].rd_stg_inst ,\n_5_gsync_stage[2].rd_stg_inst ,\n_6_gsync_stage[2].rd_stg_inst ,\n_7_gsync_stage[2].rd_stg_inst ,\n_8_gsync_stage[2].rd_stg_inst }),
        .rd_clk(rd_clk));
axi_dwidth_converter_0_synchronizer_ff__parameterized0_24 \gsync_stage[2].wr_stg_inst 
       (.D({\n_0_gsync_stage[1].wr_stg_inst ,\n_1_gsync_stage[1].wr_stg_inst ,\n_2_gsync_stage[1].wr_stg_inst ,\n_3_gsync_stage[1].wr_stg_inst ,\n_4_gsync_stage[1].wr_stg_inst ,\n_5_gsync_stage[1].wr_stg_inst ,\n_6_gsync_stage[1].wr_stg_inst ,\n_7_gsync_stage[1].wr_stg_inst ,\n_8_gsync_stage[1].wr_stg_inst }),
        .I4(I4),
        .Q({\n_0_gsync_stage[2].wr_stg_inst ,\n_1_gsync_stage[2].wr_stg_inst ,\n_2_gsync_stage[2].wr_stg_inst ,\n_3_gsync_stage[2].wr_stg_inst ,\n_4_gsync_stage[2].wr_stg_inst ,\n_5_gsync_stage[2].wr_stg_inst ,\n_6_gsync_stage[2].wr_stg_inst ,\n_7_gsync_stage[2].wr_stg_inst ,\n_8_gsync_stage[2].wr_stg_inst }),
        .wr_clk(wr_clk));
axi_dwidth_converter_0_synchronizer_ff__parameterized0_25 \gsync_stage[3].rd_stg_inst 
       (.D({\n_0_gsync_stage[2].rd_stg_inst ,\n_1_gsync_stage[2].rd_stg_inst ,\n_2_gsync_stage[2].rd_stg_inst ,\n_3_gsync_stage[2].rd_stg_inst ,\n_4_gsync_stage[2].rd_stg_inst ,\n_5_gsync_stage[2].rd_stg_inst ,\n_6_gsync_stage[2].rd_stg_inst ,\n_7_gsync_stage[2].rd_stg_inst ,\n_8_gsync_stage[2].rd_stg_inst }),
        .I5(I5),
        .p_0_in(p_0_in),
        .rd_clk(rd_clk));
axi_dwidth_converter_0_synchronizer_ff__parameterized0_26 \gsync_stage[3].wr_stg_inst 
       (.D({\n_0_gsync_stage[2].wr_stg_inst ,\n_1_gsync_stage[2].wr_stg_inst ,\n_2_gsync_stage[2].wr_stg_inst ,\n_3_gsync_stage[2].wr_stg_inst ,\n_4_gsync_stage[2].wr_stg_inst ,\n_5_gsync_stage[2].wr_stg_inst ,\n_6_gsync_stage[2].wr_stg_inst ,\n_7_gsync_stage[2].wr_stg_inst ,\n_8_gsync_stage[2].wr_stg_inst }),
        .I4(I4),
        .O1({\n_1_gsync_stage[3].wr_stg_inst ,\n_2_gsync_stage[3].wr_stg_inst ,\n_3_gsync_stage[3].wr_stg_inst ,\n_4_gsync_stage[3].wr_stg_inst ,\n_5_gsync_stage[3].wr_stg_inst ,\n_6_gsync_stage[3].wr_stg_inst ,\n_7_gsync_stage[3].wr_stg_inst ,\n_8_gsync_stage[3].wr_stg_inst }),
        .Q(\n_0_gsync_stage[3].wr_stg_inst ),
        .wr_clk(wr_clk));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(\n_8_gsync_stage[3].wr_stg_inst ),
        .Q(RD_PNTR_WR[0]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(\n_7_gsync_stage[3].wr_stg_inst ),
        .Q(RD_PNTR_WR[1]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(\n_6_gsync_stage[3].wr_stg_inst ),
        .Q(RD_PNTR_WR[2]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(\n_5_gsync_stage[3].wr_stg_inst ),
        .Q(RD_PNTR_WR[3]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(\n_4_gsync_stage[3].wr_stg_inst ),
        .Q(RD_PNTR_WR[4]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(\n_3_gsync_stage[3].wr_stg_inst ),
        .Q(RD_PNTR_WR[5]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(\n_2_gsync_stage[3].wr_stg_inst ),
        .Q(RD_PNTR_WR[6]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(\n_1_gsync_stage[3].wr_stg_inst ),
        .Q(RD_PNTR_WR[7]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_bin_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(\n_0_gsync_stage[3].wr_stg_inst ),
        .Q(RD_PNTR_WR[8]));
(* SOFT_HLUTNM = "soft_lutpair53" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[0]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\n_0_rd_pntr_gc[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair53" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[1]_i_1 
       (.I0(Q[1]),
        .I1(Q[2]),
        .O(\n_0_rd_pntr_gc[1]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair54" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[2]_i_1 
       (.I0(Q[2]),
        .I1(Q[3]),
        .O(\n_0_rd_pntr_gc[2]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair54" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[3]_i_1 
       (.I0(Q[3]),
        .I1(Q[4]),
        .O(\n_0_rd_pntr_gc[3]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair55" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[4]_i_1 
       (.I0(Q[4]),
        .I1(Q[5]),
        .O(\n_0_rd_pntr_gc[4]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair55" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[5]_i_1 
       (.I0(Q[5]),
        .I1(Q[6]),
        .O(\n_0_rd_pntr_gc[5]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair56" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[6]_i_1 
       (.I0(Q[6]),
        .I1(Q[7]),
        .O(\n_0_rd_pntr_gc[6]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair56" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[7]_i_1 
       (.I0(Q[7]),
        .I1(Q[8]),
        .O(\n_0_rd_pntr_gc[7]_i_1 ));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(\n_0_rd_pntr_gc[0]_i_1 ),
        .Q(rd_pntr_gc[0]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(\n_0_rd_pntr_gc[1]_i_1 ),
        .Q(rd_pntr_gc[1]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(\n_0_rd_pntr_gc[2]_i_1 ),
        .Q(rd_pntr_gc[2]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(\n_0_rd_pntr_gc[3]_i_1 ),
        .Q(rd_pntr_gc[3]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(\n_0_rd_pntr_gc[4]_i_1 ),
        .Q(rd_pntr_gc[4]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(\n_0_rd_pntr_gc[5]_i_1 ),
        .Q(rd_pntr_gc[5]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(\n_0_rd_pntr_gc[6]_i_1 ),
        .Q(rd_pntr_gc[6]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(\n_0_rd_pntr_gc[7]_i_1 ),
        .Q(rd_pntr_gc[7]));
FDCE #(
    .INIT(1'b0)) 
     \rd_pntr_gc_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(Q[8]),
        .Q(rd_pntr_gc[8]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(p_0_in[0]),
        .Q(WR_PNTR_RD[0]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(p_0_in[1]),
        .Q(WR_PNTR_RD[1]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(p_0_in[2]),
        .Q(WR_PNTR_RD[2]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(p_0_in[3]),
        .Q(WR_PNTR_RD[3]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(p_0_in[4]),
        .Q(WR_PNTR_RD[4]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(p_0_in[5]),
        .Q(WR_PNTR_RD[5]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(p_0_in[6]),
        .Q(WR_PNTR_RD[6]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(p_0_in[7]),
        .Q(WR_PNTR_RD[7]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_bin_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(p_0_in[8]),
        .Q(WR_PNTR_RD[8]));
(* SOFT_HLUTNM = "soft_lutpair49" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[0]_i_1 
       (.I0(I3[0]),
        .I1(I3[1]),
        .O(p_0_in7_out[0]));
(* SOFT_HLUTNM = "soft_lutpair49" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[1]_i_1 
       (.I0(I3[1]),
        .I1(I3[2]),
        .O(p_0_in7_out[1]));
(* SOFT_HLUTNM = "soft_lutpair50" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[2]_i_1 
       (.I0(I3[2]),
        .I1(I3[3]),
        .O(p_0_in7_out[2]));
(* SOFT_HLUTNM = "soft_lutpair50" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[3]_i_1 
       (.I0(I3[3]),
        .I1(I3[4]),
        .O(p_0_in7_out[3]));
(* SOFT_HLUTNM = "soft_lutpair51" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[4]_i_1 
       (.I0(I3[4]),
        .I1(I3[5]),
        .O(p_0_in7_out[4]));
(* SOFT_HLUTNM = "soft_lutpair51" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[5]_i_1 
       (.I0(I3[5]),
        .I1(I3[6]),
        .O(p_0_in7_out[5]));
(* SOFT_HLUTNM = "soft_lutpair52" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[6]_i_1 
       (.I0(I3[6]),
        .I1(I3[7]),
        .O(p_0_in7_out[6]));
(* SOFT_HLUTNM = "soft_lutpair52" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_gc[7]_i_1 
       (.I0(I3[7]),
        .I1(I3[8]),
        .O(p_0_in7_out[7]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(p_0_in7_out[0]),
        .Q(wr_pntr_gc[0]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(p_0_in7_out[1]),
        .Q(wr_pntr_gc[1]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(p_0_in7_out[2]),
        .Q(wr_pntr_gc[2]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(p_0_in7_out[3]),
        .Q(wr_pntr_gc[3]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(p_0_in7_out[4]),
        .Q(wr_pntr_gc[4]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(p_0_in7_out[5]),
        .Q(wr_pntr_gc[5]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(p_0_in7_out[6]),
        .Q(wr_pntr_gc[6]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(p_0_in7_out[7]),
        .Q(wr_pntr_gc[7]));
FDCE #(
    .INIT(1'b0)) 
     \wr_pntr_gc_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(I3[8]),
        .Q(wr_pntr_gc[8]));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module axi_dwidth_converter_0_compare__parameterized0
   (comp1,
    v1_reg);
  output comp1;
  input [4:0]v1_reg;

  wire comp1;
  wire \n_0_gmux.gm[3].gms.ms ;
  wire [4:0]v1_reg;
  wire [2:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

(* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
   (* box_type = "PRIMITIVE" *) 
   CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({\n_0_gmux.gm[3].gms.ms ,\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg[3:0]));
(* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
   (* box_type = "PRIMITIVE" *) 
   CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(\n_0_gmux.gm[3].gms.ms ),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp1}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg[4]}));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module axi_dwidth_converter_0_compare__parameterized0_18
   (comp2,
    v1_reg_0,
    I1);
  output comp2;
  input [3:0]v1_reg_0;
  input [0:0]I1;

  wire [0:0]I1;
  wire comp2;
  wire \n_0_gmux.gm[3].gms.ms ;
  wire [3:0]v1_reg_0;
  wire [2:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

(* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
   (* box_type = "PRIMITIVE" *) 
   CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({\n_0_gmux.gm[3].gms.ms ,\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg_0));
(* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
   (* box_type = "PRIMITIVE" *) 
   CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(\n_0_gmux.gm[3].gms.ms ),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp2}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],I1}));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module axi_dwidth_converter_0_compare__parameterized0_20
   (comp0,
    v1_reg_0,
    I1);
  output comp0;
  input [3:0]v1_reg_0;
  input I1;

  wire I1;
  wire comp0;
  wire \n_0_gmux.gm[3].gms.ms ;
  wire [3:0]v1_reg_0;
  wire [2:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

(* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
   (* box_type = "PRIMITIVE" *) 
   CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({\n_0_gmux.gm[3].gms.ms ,\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg_0));
(* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
   (* box_type = "PRIMITIVE" *) 
   CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(\n_0_gmux.gm[3].gms.ms ),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp0}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],I1}));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module axi_dwidth_converter_0_compare__parameterized0_21
   (comp1,
    v1_reg,
    I2);
  output comp1;
  input [3:0]v1_reg;
  input I2;

  wire I2;
  wire comp1;
  wire \n_0_gmux.gm[3].gms.ms ;
  wire [3:0]v1_reg;
  wire [2:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

(* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
   (* box_type = "PRIMITIVE" *) 
   CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({\n_0_gmux.gm[3].gms.ms ,\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg));
(* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
   (* box_type = "PRIMITIVE" *) 
   CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(\n_0_gmux.gm[3].gms.ms ),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp1}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],I2}));
endmodule

(* ORIG_REF_NAME = "dmem" *) 
module axi_dwidth_converter_0_dmem
   (D,
    ram_rd_en_i,
    m_aclk,
    s_aclk,
    E,
    DI,
    O1,
    O2);
  output [66:0]D;
  input ram_rd_en_i;
  input m_aclk;
  input s_aclk;
  input [0:0]E;
  input [66:0]DI;
  input [4:0]O1;
  input [4:0]O2;

  wire [66:0]D;
  wire [66:0]DI;
  wire [0:0]E;
  wire [4:0]O1;
  wire [4:0]O2;
  wire m_aclk;
  wire [66:0]p_0_out;
  wire ram_rd_en_i;
  wire s_aclk;
  wire [1:0]NLW_RAM_reg_0_31_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_12_17_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_18_23_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_24_29_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_30_35_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_36_41_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_42_47_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_48_53_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_54_59_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_60_65_DOD_UNCONNECTED;
  wire [1:1]NLW_RAM_reg_0_31_66_66_DOA_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_66_66_DOB_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_66_66_DOC_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_66_66_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_6_11_DOD_UNCONNECTED;

RAM32M RAM_reg_0_31_0_5
       (.ADDRA(O1),
        .ADDRB(O1),
        .ADDRC(O1),
        .ADDRD(O2),
        .DIA(DI[1:0]),
        .DIB(DI[3:2]),
        .DIC(DI[5:4]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[1:0]),
        .DOB(p_0_out[3:2]),
        .DOC(p_0_out[5:4]),
        .DOD(NLW_RAM_reg_0_31_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(s_aclk),
        .WE(E));
RAM32M RAM_reg_0_31_12_17
       (.ADDRA(O1),
        .ADDRB(O1),
        .ADDRC(O1),
        .ADDRD(O2),
        .DIA(DI[13:12]),
        .DIB(DI[15:14]),
        .DIC(DI[17:16]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[13:12]),
        .DOB(p_0_out[15:14]),
        .DOC(p_0_out[17:16]),
        .DOD(NLW_RAM_reg_0_31_12_17_DOD_UNCONNECTED[1:0]),
        .WCLK(s_aclk),
        .WE(E));
RAM32M RAM_reg_0_31_18_23
       (.ADDRA(O1),
        .ADDRB(O1),
        .ADDRC(O1),
        .ADDRD(O2),
        .DIA(DI[19:18]),
        .DIB(DI[21:20]),
        .DIC(DI[23:22]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[19:18]),
        .DOB(p_0_out[21:20]),
        .DOC(p_0_out[23:22]),
        .DOD(NLW_RAM_reg_0_31_18_23_DOD_UNCONNECTED[1:0]),
        .WCLK(s_aclk),
        .WE(E));
RAM32M RAM_reg_0_31_24_29
       (.ADDRA(O1),
        .ADDRB(O1),
        .ADDRC(O1),
        .ADDRD(O2),
        .DIA(DI[25:24]),
        .DIB(DI[27:26]),
        .DIC(DI[29:28]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[25:24]),
        .DOB(p_0_out[27:26]),
        .DOC(p_0_out[29:28]),
        .DOD(NLW_RAM_reg_0_31_24_29_DOD_UNCONNECTED[1:0]),
        .WCLK(s_aclk),
        .WE(E));
RAM32M RAM_reg_0_31_30_35
       (.ADDRA(O1),
        .ADDRB(O1),
        .ADDRC(O1),
        .ADDRD(O2),
        .DIA(DI[31:30]),
        .DIB(DI[33:32]),
        .DIC(DI[35:34]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[31:30]),
        .DOB(p_0_out[33:32]),
        .DOC(p_0_out[35:34]),
        .DOD(NLW_RAM_reg_0_31_30_35_DOD_UNCONNECTED[1:0]),
        .WCLK(s_aclk),
        .WE(E));
RAM32M RAM_reg_0_31_36_41
       (.ADDRA(O1),
        .ADDRB(O1),
        .ADDRC(O1),
        .ADDRD(O2),
        .DIA(DI[37:36]),
        .DIB(DI[39:38]),
        .DIC(DI[41:40]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[37:36]),
        .DOB(p_0_out[39:38]),
        .DOC(p_0_out[41:40]),
        .DOD(NLW_RAM_reg_0_31_36_41_DOD_UNCONNECTED[1:0]),
        .WCLK(s_aclk),
        .WE(E));
RAM32M RAM_reg_0_31_42_47
       (.ADDRA(O1),
        .ADDRB(O1),
        .ADDRC(O1),
        .ADDRD(O2),
        .DIA(DI[43:42]),
        .DIB(DI[45:44]),
        .DIC(DI[47:46]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[43:42]),
        .DOB(p_0_out[45:44]),
        .DOC(p_0_out[47:46]),
        .DOD(NLW_RAM_reg_0_31_42_47_DOD_UNCONNECTED[1:0]),
        .WCLK(s_aclk),
        .WE(E));
RAM32M RAM_reg_0_31_48_53
       (.ADDRA(O1),
        .ADDRB(O1),
        .ADDRC(O1),
        .ADDRD(O2),
        .DIA(DI[49:48]),
        .DIB(DI[51:50]),
        .DIC(DI[53:52]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[49:48]),
        .DOB(p_0_out[51:50]),
        .DOC(p_0_out[53:52]),
        .DOD(NLW_RAM_reg_0_31_48_53_DOD_UNCONNECTED[1:0]),
        .WCLK(s_aclk),
        .WE(E));
RAM32M RAM_reg_0_31_54_59
       (.ADDRA(O1),
        .ADDRB(O1),
        .ADDRC(O1),
        .ADDRD(O2),
        .DIA(DI[55:54]),
        .DIB(DI[57:56]),
        .DIC(DI[59:58]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[55:54]),
        .DOB(p_0_out[57:56]),
        .DOC(p_0_out[59:58]),
        .DOD(NLW_RAM_reg_0_31_54_59_DOD_UNCONNECTED[1:0]),
        .WCLK(s_aclk),
        .WE(E));
RAM32M RAM_reg_0_31_60_65
       (.ADDRA(O1),
        .ADDRB(O1),
        .ADDRC(O1),
        .ADDRD(O2),
        .DIA(DI[61:60]),
        .DIB(DI[63:62]),
        .DIC(DI[65:64]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[61:60]),
        .DOB(p_0_out[63:62]),
        .DOC(p_0_out[65:64]),
        .DOD(NLW_RAM_reg_0_31_60_65_DOD_UNCONNECTED[1:0]),
        .WCLK(s_aclk),
        .WE(E));
RAM32M RAM_reg_0_31_66_66
       (.ADDRA(O1),
        .ADDRB(O1),
        .ADDRC(O1),
        .ADDRD(O2),
        .DIA({1'b0,DI[66]}),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA({NLW_RAM_reg_0_31_66_66_DOA_UNCONNECTED[1],p_0_out[66]}),
        .DOB(NLW_RAM_reg_0_31_66_66_DOB_UNCONNECTED[1:0]),
        .DOC(NLW_RAM_reg_0_31_66_66_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_RAM_reg_0_31_66_66_DOD_UNCONNECTED[1:0]),
        .WCLK(s_aclk),
        .WE(E));
RAM32M RAM_reg_0_31_6_11
       (.ADDRA(O1),
        .ADDRB(O1),
        .ADDRC(O1),
        .ADDRD(O2),
        .DIA(DI[7:6]),
        .DIB(DI[9:8]),
        .DIC(DI[11:10]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[7:6]),
        .DOB(p_0_out[9:8]),
        .DOC(p_0_out[11:10]),
        .DOD(NLW_RAM_reg_0_31_6_11_DOD_UNCONNECTED[1:0]),
        .WCLK(s_aclk),
        .WE(E));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[0] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[0]),
        .Q(D[0]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[10] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[10]),
        .Q(D[10]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[11] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[11]),
        .Q(D[11]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[12] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[12]),
        .Q(D[12]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[13] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[13]),
        .Q(D[13]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[14] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[14]),
        .Q(D[14]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[15] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[15]),
        .Q(D[15]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[16] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[16]),
        .Q(D[16]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[17] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[17]),
        .Q(D[17]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[18] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[18]),
        .Q(D[18]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[19] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[19]),
        .Q(D[19]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[1] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[1]),
        .Q(D[1]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[20] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[20]),
        .Q(D[20]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[21] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[21]),
        .Q(D[21]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[22] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[22]),
        .Q(D[22]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[23] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[23]),
        .Q(D[23]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[24] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[24]),
        .Q(D[24]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[25] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[25]),
        .Q(D[25]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[26] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[26]),
        .Q(D[26]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[27] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[27]),
        .Q(D[27]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[28] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[28]),
        .Q(D[28]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[29] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[29]),
        .Q(D[29]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[2] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[2]),
        .Q(D[2]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[30] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[30]),
        .Q(D[30]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[31] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[31]),
        .Q(D[31]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[32] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[32]),
        .Q(D[32]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[33] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[33]),
        .Q(D[33]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[34] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[34]),
        .Q(D[34]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[35] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[35]),
        .Q(D[35]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[36] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[36]),
        .Q(D[36]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[37] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[37]),
        .Q(D[37]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[38] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[38]),
        .Q(D[38]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[39] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[39]),
        .Q(D[39]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[3] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[3]),
        .Q(D[3]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[40] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[40]),
        .Q(D[40]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[41] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[41]),
        .Q(D[41]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[42] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[42]),
        .Q(D[42]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[43] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[43]),
        .Q(D[43]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[44] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[44]),
        .Q(D[44]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[45] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[45]),
        .Q(D[45]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[46] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[46]),
        .Q(D[46]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[47] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[47]),
        .Q(D[47]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[48] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[48]),
        .Q(D[48]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[49] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[49]),
        .Q(D[49]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[4] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[4]),
        .Q(D[4]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[50] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[50]),
        .Q(D[50]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[51] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[51]),
        .Q(D[51]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[52] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[52]),
        .Q(D[52]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[53] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[53]),
        .Q(D[53]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[54] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[54]),
        .Q(D[54]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[55] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[55]),
        .Q(D[55]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[56] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[56]),
        .Q(D[56]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[57] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[57]),
        .Q(D[57]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[58] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[58]),
        .Q(D[58]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[59] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[59]),
        .Q(D[59]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[5] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[5]),
        .Q(D[5]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[60] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[60]),
        .Q(D[60]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[61] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[61]),
        .Q(D[61]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[62] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[62]),
        .Q(D[62]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[63] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[63]),
        .Q(D[63]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[64] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[64]),
        .Q(D[64]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[65] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[65]),
        .Q(D[65]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[66] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[66]),
        .Q(D[66]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[6] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[6]),
        .Q(D[6]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[7] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[7]),
        .Q(D[7]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[8] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[8]),
        .Q(D[8]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[9] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[9]),
        .Q(D[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "dmem" *) 
module axi_dwidth_converter_0_dmem__parameterized0
   (p_0_out,
    p_0_out_0,
    O1,
    wr_clk,
    din,
    E,
    O6,
    O2,
    I1,
    rd_clk,
    Q,
    I2,
    rd_en,
    dout);
  output p_0_out;
  output p_0_out_0;
  output O1;
  input wr_clk;
  input [0:0]din;
  input [0:0]E;
  input [4:0]O6;
  input [4:0]O2;
  input I1;
  input rd_clk;
  input [0:0]Q;
  input [1:0]I2;
  input rd_en;
  input [0:0]dout;

  wire [0:0]E;
  wire I1;
  wire [1:0]I2;
  wire O1;
  wire [4:0]O2;
  wire [4:0]O6;
  wire [0:0]Q;
  wire [0:0]din;
  wire [0:0]dout;
  wire p_0_out;
  wire p_0_out_0;
  wire rd_clk;
  wire rd_en;
  wire wr_clk;
  wire NLW_RAM_reg_0_31_0_0_SPO_UNCONNECTED;

RAM32X1D RAM_reg_0_31_0_0
       (.A0(O6[0]),
        .A1(O6[1]),
        .A2(O6[2]),
        .A3(O6[3]),
        .A4(O6[4]),
        .D(din),
        .DPO(p_0_out),
        .DPRA0(O2[0]),
        .DPRA1(O2[1]),
        .DPRA2(O2[2]),
        .DPRA3(O2[3]),
        .DPRA4(O2[4]),
        .SPO(NLW_RAM_reg_0_31_0_0_SPO_UNCONNECTED),
        .WCLK(wr_clk),
        .WE(E));
LUT6 #(
    .INIT(64'hEFEFFFEF20200020)) 
     \goreg_dm.dout_i[0]_i_1 
       (.I0(p_0_out_0),
        .I1(Q),
        .I2(I2[1]),
        .I3(I2[0]),
        .I4(rd_en),
        .I5(dout),
        .O(O1));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(I1),
        .Q(p_0_out_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "dmem" *) 
module axi_dwidth_converter_0_dmem__parameterized1
   (p_0_out,
    m_aclk,
    E,
    m_axi_bresp,
    m_axi_bid,
    O2,
    I1,
    ram_rd_en_i,
    s_aclk);
  output [2:0]p_0_out;
  input m_aclk;
  input [0:0]E;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_bid;
  input [4:0]O2;
  input [4:0]I1;
  input ram_rd_en_i;
  input s_aclk;

  wire [0:0]E;
  wire [4:0]I1;
  wire [4:0]O2;
  wire m_aclk;
  wire [0:0]m_axi_bid;
  wire [1:0]m_axi_bresp;
  wire [2:0]p_0_out;
  wire [2:0]p_0_out_0;
  wire ram_rd_en_i;
  wire s_aclk;
  wire [1:1]NLW_RAM_reg_0_31_0_2_DOB_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_0_2_DOC_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_0_2_DOD_UNCONNECTED;

RAM32M RAM_reg_0_31_0_2
       (.ADDRA(O2),
        .ADDRB(O2),
        .ADDRC(O2),
        .ADDRD(I1),
        .DIA(m_axi_bresp),
        .DIB({1'b0,m_axi_bid}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out_0[1:0]),
        .DOB({NLW_RAM_reg_0_31_0_2_DOB_UNCONNECTED[1],p_0_out_0[2]}),
        .DOC(NLW_RAM_reg_0_31_0_2_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_RAM_reg_0_31_0_2_DOD_UNCONNECTED[1:0]),
        .WCLK(m_aclk),
        .WE(E));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[0] 
       (.C(s_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out_0[0]),
        .Q(p_0_out[0]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[1] 
       (.C(s_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out_0[1]),
        .Q(p_0_out[1]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[2] 
       (.C(s_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out_0[2]),
        .Q(p_0_out[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "dmem" *) 
module axi_dwidth_converter_0_dmem__parameterized2
   (D,
    ram_rd_en_i,
    m_aclk,
    s_aclk,
    E,
    DI,
    O1,
    O2);
  output [60:0]D;
  input ram_rd_en_i;
  input m_aclk;
  input s_aclk;
  input [0:0]E;
  input [60:0]DI;
  input [4:0]O1;
  input [4:0]O2;

  wire [60:0]D;
  wire [60:0]DI;
  wire [0:0]E;
  wire [4:0]O1;
  wire [4:0]O2;
  wire m_aclk;
  wire [60:0]p_0_out;
  wire ram_rd_en_i;
  wire s_aclk;
  wire [1:0]NLW_RAM_reg_0_31_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_12_17_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_18_23_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_24_29_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_30_35_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_36_41_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_42_47_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_48_53_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_54_59_DOD_UNCONNECTED;
  wire [1:1]NLW_RAM_reg_0_31_60_60_DOA_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_60_60_DOB_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_60_60_DOC_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_60_60_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_6_11_DOD_UNCONNECTED;

RAM32M RAM_reg_0_31_0_5
       (.ADDRA(O1),
        .ADDRB(O1),
        .ADDRC(O1),
        .ADDRD(O2),
        .DIA(DI[1:0]),
        .DIB(DI[3:2]),
        .DIC(DI[5:4]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[1:0]),
        .DOB(p_0_out[3:2]),
        .DOC(p_0_out[5:4]),
        .DOD(NLW_RAM_reg_0_31_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(s_aclk),
        .WE(E));
RAM32M RAM_reg_0_31_12_17
       (.ADDRA(O1),
        .ADDRB(O1),
        .ADDRC(O1),
        .ADDRD(O2),
        .DIA(DI[13:12]),
        .DIB(DI[15:14]),
        .DIC(DI[17:16]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[13:12]),
        .DOB(p_0_out[15:14]),
        .DOC(p_0_out[17:16]),
        .DOD(NLW_RAM_reg_0_31_12_17_DOD_UNCONNECTED[1:0]),
        .WCLK(s_aclk),
        .WE(E));
RAM32M RAM_reg_0_31_18_23
       (.ADDRA(O1),
        .ADDRB(O1),
        .ADDRC(O1),
        .ADDRD(O2),
        .DIA(DI[19:18]),
        .DIB(DI[21:20]),
        .DIC(DI[23:22]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[19:18]),
        .DOB(p_0_out[21:20]),
        .DOC(p_0_out[23:22]),
        .DOD(NLW_RAM_reg_0_31_18_23_DOD_UNCONNECTED[1:0]),
        .WCLK(s_aclk),
        .WE(E));
RAM32M RAM_reg_0_31_24_29
       (.ADDRA(O1),
        .ADDRB(O1),
        .ADDRC(O1),
        .ADDRD(O2),
        .DIA(DI[25:24]),
        .DIB(DI[27:26]),
        .DIC(DI[29:28]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[25:24]),
        .DOB(p_0_out[27:26]),
        .DOC(p_0_out[29:28]),
        .DOD(NLW_RAM_reg_0_31_24_29_DOD_UNCONNECTED[1:0]),
        .WCLK(s_aclk),
        .WE(E));
RAM32M RAM_reg_0_31_30_35
       (.ADDRA(O1),
        .ADDRB(O1),
        .ADDRC(O1),
        .ADDRD(O2),
        .DIA(DI[31:30]),
        .DIB(DI[33:32]),
        .DIC(DI[35:34]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[31:30]),
        .DOB(p_0_out[33:32]),
        .DOC(p_0_out[35:34]),
        .DOD(NLW_RAM_reg_0_31_30_35_DOD_UNCONNECTED[1:0]),
        .WCLK(s_aclk),
        .WE(E));
RAM32M RAM_reg_0_31_36_41
       (.ADDRA(O1),
        .ADDRB(O1),
        .ADDRC(O1),
        .ADDRD(O2),
        .DIA(DI[37:36]),
        .DIB(DI[39:38]),
        .DIC(DI[41:40]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[37:36]),
        .DOB(p_0_out[39:38]),
        .DOC(p_0_out[41:40]),
        .DOD(NLW_RAM_reg_0_31_36_41_DOD_UNCONNECTED[1:0]),
        .WCLK(s_aclk),
        .WE(E));
RAM32M RAM_reg_0_31_42_47
       (.ADDRA(O1),
        .ADDRB(O1),
        .ADDRC(O1),
        .ADDRD(O2),
        .DIA(DI[43:42]),
        .DIB(DI[45:44]),
        .DIC(DI[47:46]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[43:42]),
        .DOB(p_0_out[45:44]),
        .DOC(p_0_out[47:46]),
        .DOD(NLW_RAM_reg_0_31_42_47_DOD_UNCONNECTED[1:0]),
        .WCLK(s_aclk),
        .WE(E));
RAM32M RAM_reg_0_31_48_53
       (.ADDRA(O1),
        .ADDRB(O1),
        .ADDRC(O1),
        .ADDRD(O2),
        .DIA(DI[49:48]),
        .DIB(DI[51:50]),
        .DIC(DI[53:52]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[49:48]),
        .DOB(p_0_out[51:50]),
        .DOC(p_0_out[53:52]),
        .DOD(NLW_RAM_reg_0_31_48_53_DOD_UNCONNECTED[1:0]),
        .WCLK(s_aclk),
        .WE(E));
RAM32M RAM_reg_0_31_54_59
       (.ADDRA(O1),
        .ADDRB(O1),
        .ADDRC(O1),
        .ADDRD(O2),
        .DIA(DI[55:54]),
        .DIB(DI[57:56]),
        .DIC(DI[59:58]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[55:54]),
        .DOB(p_0_out[57:56]),
        .DOC(p_0_out[59:58]),
        .DOD(NLW_RAM_reg_0_31_54_59_DOD_UNCONNECTED[1:0]),
        .WCLK(s_aclk),
        .WE(E));
RAM32M RAM_reg_0_31_60_60
       (.ADDRA(O1),
        .ADDRB(O1),
        .ADDRC(O1),
        .ADDRD(O2),
        .DIA({1'b0,DI[60]}),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA({NLW_RAM_reg_0_31_60_60_DOA_UNCONNECTED[1],p_0_out[60]}),
        .DOB(NLW_RAM_reg_0_31_60_60_DOB_UNCONNECTED[1:0]),
        .DOC(NLW_RAM_reg_0_31_60_60_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_RAM_reg_0_31_60_60_DOD_UNCONNECTED[1:0]),
        .WCLK(s_aclk),
        .WE(E));
RAM32M RAM_reg_0_31_6_11
       (.ADDRA(O1),
        .ADDRB(O1),
        .ADDRC(O1),
        .ADDRD(O2),
        .DIA(DI[7:6]),
        .DIB(DI[9:8]),
        .DIC(DI[11:10]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[7:6]),
        .DOB(p_0_out[9:8]),
        .DOC(p_0_out[11:10]),
        .DOD(NLW_RAM_reg_0_31_6_11_DOD_UNCONNECTED[1:0]),
        .WCLK(s_aclk),
        .WE(E));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[0] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[0]),
        .Q(D[0]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[10] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[10]),
        .Q(D[10]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[11] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[11]),
        .Q(D[11]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[12] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[12]),
        .Q(D[12]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[13] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[13]),
        .Q(D[13]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[14] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[14]),
        .Q(D[14]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[15] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[15]),
        .Q(D[15]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[16] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[16]),
        .Q(D[16]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[17] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[17]),
        .Q(D[17]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[18] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[18]),
        .Q(D[18]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[19] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[19]),
        .Q(D[19]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[1] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[1]),
        .Q(D[1]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[20] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[20]),
        .Q(D[20]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[21] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[21]),
        .Q(D[21]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[22] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[22]),
        .Q(D[22]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[23] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[23]),
        .Q(D[23]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[24] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[24]),
        .Q(D[24]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[25] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[25]),
        .Q(D[25]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[26] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[26]),
        .Q(D[26]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[27] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[27]),
        .Q(D[27]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[28] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[28]),
        .Q(D[28]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[29] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[29]),
        .Q(D[29]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[2] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[2]),
        .Q(D[2]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[30] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[30]),
        .Q(D[30]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[31] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[31]),
        .Q(D[31]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[32] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[32]),
        .Q(D[32]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[33] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[33]),
        .Q(D[33]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[34] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[34]),
        .Q(D[34]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[35] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[35]),
        .Q(D[35]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[36] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[36]),
        .Q(D[36]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[37] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[37]),
        .Q(D[37]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[38] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[38]),
        .Q(D[38]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[39] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[39]),
        .Q(D[39]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[3] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[3]),
        .Q(D[3]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[40] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[40]),
        .Q(D[40]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[41] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[41]),
        .Q(D[41]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[42] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[42]),
        .Q(D[42]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[43] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[43]),
        .Q(D[43]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[44] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[44]),
        .Q(D[44]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[45] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[45]),
        .Q(D[45]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[46] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[46]),
        .Q(D[46]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[47] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[47]),
        .Q(D[47]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[48] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[48]),
        .Q(D[48]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[49] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[49]),
        .Q(D[49]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[4] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[4]),
        .Q(D[4]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[50] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[50]),
        .Q(D[50]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[51] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[51]),
        .Q(D[51]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[52] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[52]),
        .Q(D[52]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[53] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[53]),
        .Q(D[53]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[54] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[54]),
        .Q(D[54]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[55] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[55]),
        .Q(D[55]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[56] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[56]),
        .Q(D[56]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[57] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[57]),
        .Q(D[57]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[58] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[58]),
        .Q(D[58]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[59] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[59]),
        .Q(D[59]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[5] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[5]),
        .Q(D[5]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[60] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[60]),
        .Q(D[60]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[6] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[6]),
        .Q(D[6]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[7] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[7]),
        .Q(D[7]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[8] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[8]),
        .Q(D[8]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[9] 
       (.C(m_aclk),
        .CE(ram_rd_en_i),
        .D(p_0_out[9]),
        .Q(D[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "dmem" *) 
module axi_dwidth_converter_0_dmem__parameterized3
   (D,
    dm_rd_en,
    clk,
    E,
    din,
    O2,
    Q);
  output [30:0]D;
  input dm_rd_en;
  input clk;
  input [0:0]E;
  input [30:0]din;
  input [4:0]O2;
  input [4:0]Q;

  wire [30:0]D;
  wire [0:0]E;
  wire [4:0]O2;
  wire [4:0]Q;
  wire clk;
  wire [30:0]din;
  wire dm_rd_en;
  wire [30:0]p_0_out;
  wire [1:0]NLW_RAM_reg_0_31_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_12_17_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_18_23_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_24_29_DOD_UNCONNECTED;
  wire [1:1]NLW_RAM_reg_0_31_30_30_DOA_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_30_30_DOB_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_30_30_DOC_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_30_30_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_6_11_DOD_UNCONNECTED;

RAM32M RAM_reg_0_31_0_5
       (.ADDRA(O2),
        .ADDRB(O2),
        .ADDRC(O2),
        .ADDRD(Q),
        .DIA(din[1:0]),
        .DIB(din[3:2]),
        .DIC(din[5:4]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[1:0]),
        .DOB(p_0_out[3:2]),
        .DOC(p_0_out[5:4]),
        .DOD(NLW_RAM_reg_0_31_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(E));
RAM32M RAM_reg_0_31_12_17
       (.ADDRA(O2),
        .ADDRB(O2),
        .ADDRC(O2),
        .ADDRD(Q),
        .DIA(din[13:12]),
        .DIB(din[15:14]),
        .DIC(din[17:16]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[13:12]),
        .DOB(p_0_out[15:14]),
        .DOC(p_0_out[17:16]),
        .DOD(NLW_RAM_reg_0_31_12_17_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(E));
RAM32M RAM_reg_0_31_18_23
       (.ADDRA(O2),
        .ADDRB(O2),
        .ADDRC(O2),
        .ADDRD(Q),
        .DIA(din[19:18]),
        .DIB(din[21:20]),
        .DIC(din[23:22]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[19:18]),
        .DOB(p_0_out[21:20]),
        .DOC(p_0_out[23:22]),
        .DOD(NLW_RAM_reg_0_31_18_23_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(E));
RAM32M RAM_reg_0_31_24_29
       (.ADDRA(O2),
        .ADDRB(O2),
        .ADDRC(O2),
        .ADDRD(Q),
        .DIA(din[25:24]),
        .DIB(din[27:26]),
        .DIC(din[29:28]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[25:24]),
        .DOB(p_0_out[27:26]),
        .DOC(p_0_out[29:28]),
        .DOD(NLW_RAM_reg_0_31_24_29_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(E));
RAM32M RAM_reg_0_31_30_30
       (.ADDRA(O2),
        .ADDRB(O2),
        .ADDRC(O2),
        .ADDRD(Q),
        .DIA({1'b0,din[30]}),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA({NLW_RAM_reg_0_31_30_30_DOA_UNCONNECTED[1],p_0_out[30]}),
        .DOB(NLW_RAM_reg_0_31_30_30_DOB_UNCONNECTED[1:0]),
        .DOC(NLW_RAM_reg_0_31_30_30_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_RAM_reg_0_31_30_30_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(E));
RAM32M RAM_reg_0_31_6_11
       (.ADDRA(O2),
        .ADDRB(O2),
        .ADDRC(O2),
        .ADDRD(Q),
        .DIA(din[7:6]),
        .DIB(din[9:8]),
        .DIC(din[11:10]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[7:6]),
        .DOB(p_0_out[9:8]),
        .DOC(p_0_out[11:10]),
        .DOD(NLW_RAM_reg_0_31_6_11_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(E));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[0] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[0]),
        .Q(D[0]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[10] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[10]),
        .Q(D[10]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[11] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[11]),
        .Q(D[11]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[12] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[12]),
        .Q(D[12]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[13] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[13]),
        .Q(D[13]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[14] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[14]),
        .Q(D[14]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[15] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[15]),
        .Q(D[15]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[16] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[16]),
        .Q(D[16]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[17] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[17]),
        .Q(D[17]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[18] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[18]),
        .Q(D[18]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[19] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[19]),
        .Q(D[19]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[1] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[1]),
        .Q(D[1]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[20] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[20]),
        .Q(D[20]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[21] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[21]),
        .Q(D[21]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[22] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[22]),
        .Q(D[22]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[23] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[23]),
        .Q(D[23]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[24] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[24]),
        .Q(D[24]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[25] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[25]),
        .Q(D[25]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[26] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[26]),
        .Q(D[26]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[27] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[27]),
        .Q(D[27]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[28] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[28]),
        .Q(D[28]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[29] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[29]),
        .Q(D[29]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[2] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[2]),
        .Q(D[2]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[30] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[30]),
        .Q(D[30]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[3] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[3]),
        .Q(D[3]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[4] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[4]),
        .Q(D[4]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[5] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[5]),
        .Q(D[5]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[6] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[6]),
        .Q(D[6]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[7] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[7]),
        .Q(D[7]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[8] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[8]),
        .Q(D[8]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[9] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[9]),
        .Q(D[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "dmem" *) 
module axi_dwidth_converter_0_dmem__parameterized4
   (D,
    dm_rd_en,
    clk,
    E,
    din,
    O2,
    Q);
  output [22:0]D;
  input dm_rd_en;
  input clk;
  input [0:0]E;
  input [22:0]din;
  input [4:0]O2;
  input [4:0]Q;

  wire [22:0]D;
  wire [0:0]E;
  wire [4:0]O2;
  wire [4:0]Q;
  wire clk;
  wire [22:0]din;
  wire dm_rd_en;
  wire [22:0]p_0_out;
  wire [1:0]NLW_RAM_reg_0_31_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_12_17_DOD_UNCONNECTED;
  wire [1:1]NLW_RAM_reg_0_31_18_22_DOC_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_18_22_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_6_11_DOD_UNCONNECTED;

RAM32M RAM_reg_0_31_0_5
       (.ADDRA(O2),
        .ADDRB(O2),
        .ADDRC(O2),
        .ADDRD(Q),
        .DIA(din[1:0]),
        .DIB(din[3:2]),
        .DIC(din[5:4]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[1:0]),
        .DOB(p_0_out[3:2]),
        .DOC(p_0_out[5:4]),
        .DOD(NLW_RAM_reg_0_31_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(E));
RAM32M RAM_reg_0_31_12_17
       (.ADDRA(O2),
        .ADDRB(O2),
        .ADDRC(O2),
        .ADDRD(Q),
        .DIA(din[13:12]),
        .DIB(din[15:14]),
        .DIC(din[17:16]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[13:12]),
        .DOB(p_0_out[15:14]),
        .DOC(p_0_out[17:16]),
        .DOD(NLW_RAM_reg_0_31_12_17_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(E));
RAM32M RAM_reg_0_31_18_22
       (.ADDRA(O2),
        .ADDRB(O2),
        .ADDRC(O2),
        .ADDRD(Q),
        .DIA(din[19:18]),
        .DIB(din[21:20]),
        .DIC({1'b0,din[22]}),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[19:18]),
        .DOB(p_0_out[21:20]),
        .DOC({NLW_RAM_reg_0_31_18_22_DOC_UNCONNECTED[1],p_0_out[22]}),
        .DOD(NLW_RAM_reg_0_31_18_22_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(E));
RAM32M RAM_reg_0_31_6_11
       (.ADDRA(O2),
        .ADDRB(O2),
        .ADDRC(O2),
        .ADDRD(Q),
        .DIA(din[7:6]),
        .DIB(din[9:8]),
        .DIC(din[11:10]),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[7:6]),
        .DOB(p_0_out[9:8]),
        .DOC(p_0_out[11:10]),
        .DOD(NLW_RAM_reg_0_31_6_11_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(E));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[0] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[0]),
        .Q(D[0]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[10] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[10]),
        .Q(D[10]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[11] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[11]),
        .Q(D[11]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[12] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[12]),
        .Q(D[12]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[13] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[13]),
        .Q(D[13]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[14] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[14]),
        .Q(D[14]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[15] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[15]),
        .Q(D[15]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[16] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[16]),
        .Q(D[16]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[17] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[17]),
        .Q(D[17]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[18] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[18]),
        .Q(D[18]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[19] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[19]),
        .Q(D[19]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[1] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[1]),
        .Q(D[1]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[20] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[20]),
        .Q(D[20]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[21] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[21]),
        .Q(D[21]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[22] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[22]),
        .Q(D[22]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[2] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[2]),
        .Q(D[2]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[3] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[3]),
        .Q(D[3]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[4] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[4]),
        .Q(D[4]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[5] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[5]),
        .Q(D[5]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[6] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[6]),
        .Q(D[6]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[7] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[7]),
        .Q(D[7]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[8] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[8]),
        .Q(D[8]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[9] 
       (.C(clk),
        .CE(dm_rd_en),
        .D(p_0_out[9]),
        .Q(D[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "dmem" *) 
module axi_dwidth_converter_0_dmem__parameterized5
   (D,
    wr_clk,
    din,
    I1,
    O3,
    O2,
    I2,
    I3,
    I4,
    I5,
    I6,
    I7,
    I8,
    I9,
    I10,
    I11,
    I12,
    I13,
    I14,
    I15,
    I16,
    I17,
    rd_clk);
  output [3:0]D;
  input wr_clk;
  input [3:0]din;
  input I1;
  input [8:0]O3;
  input [5:0]O2;
  input I2;
  input I3;
  input I4;
  input I5;
  input I6;
  input I7;
  input I8;
  input I9;
  input I10;
  input I11;
  input I12;
  input I13;
  input I14;
  input I15;
  input I16;
  input I17;
  input rd_clk;

  wire [3:0]D;
  wire I1;
  wire I10;
  wire I11;
  wire I12;
  wire I13;
  wire I14;
  wire I15;
  wire I16;
  wire I17;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire I6;
  wire I7;
  wire I8;
  wire I9;
  wire [5:0]O2;
  wire [8:0]O3;
  wire [3:0]din;
  wire n_0_RAM_reg_0_63_0_2;
  wire n_0_RAM_reg_0_63_3_3;
  wire n_0_RAM_reg_128_191_0_2;
  wire n_0_RAM_reg_128_191_3_3;
  wire n_0_RAM_reg_192_255_0_2;
  wire n_0_RAM_reg_192_255_3_3;
  wire n_0_RAM_reg_256_319_0_2;
  wire n_0_RAM_reg_256_319_3_3;
  wire n_0_RAM_reg_320_383_0_2;
  wire n_0_RAM_reg_320_383_3_3;
  wire n_0_RAM_reg_384_447_0_2;
  wire n_0_RAM_reg_384_447_3_3;
  wire n_0_RAM_reg_448_511_0_2;
  wire n_0_RAM_reg_448_511_3_3;
  wire n_0_RAM_reg_64_127_0_2;
  wire n_0_RAM_reg_64_127_3_3;
  wire \n_0_gpr1.dout_i[0]_i_2 ;
  wire \n_0_gpr1.dout_i[0]_i_3 ;
  wire \n_0_gpr1.dout_i[1]_i_2 ;
  wire \n_0_gpr1.dout_i[1]_i_3 ;
  wire \n_0_gpr1.dout_i[2]_i_2 ;
  wire \n_0_gpr1.dout_i[2]_i_3 ;
  wire \n_0_gpr1.dout_i[3]_i_3 ;
  wire \n_0_gpr1.dout_i[3]_i_4 ;
  wire n_1_RAM_reg_0_63_0_2;
  wire n_1_RAM_reg_128_191_0_2;
  wire n_1_RAM_reg_192_255_0_2;
  wire n_1_RAM_reg_256_319_0_2;
  wire n_1_RAM_reg_320_383_0_2;
  wire n_1_RAM_reg_384_447_0_2;
  wire n_1_RAM_reg_448_511_0_2;
  wire n_1_RAM_reg_64_127_0_2;
  wire n_2_RAM_reg_0_63_0_2;
  wire n_2_RAM_reg_128_191_0_2;
  wire n_2_RAM_reg_192_255_0_2;
  wire n_2_RAM_reg_256_319_0_2;
  wire n_2_RAM_reg_320_383_0_2;
  wire n_2_RAM_reg_384_447_0_2;
  wire n_2_RAM_reg_448_511_0_2;
  wire n_2_RAM_reg_64_127_0_2;
  wire [3:0]p_0_out;
  wire rd_clk;
  wire wr_clk;
  wire NLW_RAM_reg_0_63_0_2_DOD_UNCONNECTED;
  wire NLW_RAM_reg_0_63_3_3_SPO_UNCONNECTED;
  wire NLW_RAM_reg_128_191_0_2_DOD_UNCONNECTED;
  wire NLW_RAM_reg_128_191_3_3_SPO_UNCONNECTED;
  wire NLW_RAM_reg_192_255_0_2_DOD_UNCONNECTED;
  wire NLW_RAM_reg_192_255_3_3_SPO_UNCONNECTED;
  wire NLW_RAM_reg_256_319_0_2_DOD_UNCONNECTED;
  wire NLW_RAM_reg_256_319_3_3_SPO_UNCONNECTED;
  wire NLW_RAM_reg_320_383_0_2_DOD_UNCONNECTED;
  wire NLW_RAM_reg_320_383_3_3_SPO_UNCONNECTED;
  wire NLW_RAM_reg_384_447_0_2_DOD_UNCONNECTED;
  wire NLW_RAM_reg_384_447_3_3_SPO_UNCONNECTED;
  wire NLW_RAM_reg_448_511_0_2_DOD_UNCONNECTED;
  wire NLW_RAM_reg_448_511_3_3_SPO_UNCONNECTED;
  wire NLW_RAM_reg_64_127_0_2_DOD_UNCONNECTED;
  wire NLW_RAM_reg_64_127_3_3_SPO_UNCONNECTED;

RAM64M RAM_reg_0_63_0_2
       (.ADDRA(O3[5:0]),
        .ADDRB(O3[5:0]),
        .ADDRC(O3[5:0]),
        .ADDRD(O2),
        .DIA(din[0]),
        .DIB(din[1]),
        .DIC(din[2]),
        .DID(1'b0),
        .DOA(n_0_RAM_reg_0_63_0_2),
        .DOB(n_1_RAM_reg_0_63_0_2),
        .DOC(n_2_RAM_reg_0_63_0_2),
        .DOD(NLW_RAM_reg_0_63_0_2_DOD_UNCONNECTED),
        .WCLK(wr_clk),
        .WE(I1));
RAM64X1D RAM_reg_0_63_3_3
       (.A0(O2[0]),
        .A1(O2[1]),
        .A2(O2[2]),
        .A3(O2[3]),
        .A4(O2[4]),
        .A5(O2[5]),
        .D(din[3]),
        .DPO(n_0_RAM_reg_0_63_3_3),
        .DPRA0(O3[0]),
        .DPRA1(O3[1]),
        .DPRA2(O3[2]),
        .DPRA3(O3[3]),
        .DPRA4(O3[4]),
        .DPRA5(O3[5]),
        .SPO(NLW_RAM_reg_0_63_3_3_SPO_UNCONNECTED),
        .WCLK(wr_clk),
        .WE(I9));
RAM64M RAM_reg_128_191_0_2
       (.ADDRA(O3[5:0]),
        .ADDRB(O3[5:0]),
        .ADDRC(O3[5:0]),
        .ADDRD(O2),
        .DIA(din[0]),
        .DIB(din[1]),
        .DIC(din[2]),
        .DID(1'b0),
        .DOA(n_0_RAM_reg_128_191_0_2),
        .DOB(n_1_RAM_reg_128_191_0_2),
        .DOC(n_2_RAM_reg_128_191_0_2),
        .DOD(NLW_RAM_reg_128_191_0_2_DOD_UNCONNECTED),
        .WCLK(wr_clk),
        .WE(I3));
RAM64X1D RAM_reg_128_191_3_3
       (.A0(O2[0]),
        .A1(O2[1]),
        .A2(O2[2]),
        .A3(O2[3]),
        .A4(O2[4]),
        .A5(O2[5]),
        .D(din[3]),
        .DPO(n_0_RAM_reg_128_191_3_3),
        .DPRA0(O3[0]),
        .DPRA1(O3[1]),
        .DPRA2(O3[2]),
        .DPRA3(O3[3]),
        .DPRA4(O3[4]),
        .DPRA5(O3[5]),
        .SPO(NLW_RAM_reg_128_191_3_3_SPO_UNCONNECTED),
        .WCLK(wr_clk),
        .WE(I11));
RAM64M RAM_reg_192_255_0_2
       (.ADDRA(O3[5:0]),
        .ADDRB(O3[5:0]),
        .ADDRC(O3[5:0]),
        .ADDRD(O2),
        .DIA(din[0]),
        .DIB(din[1]),
        .DIC(din[2]),
        .DID(1'b0),
        .DOA(n_0_RAM_reg_192_255_0_2),
        .DOB(n_1_RAM_reg_192_255_0_2),
        .DOC(n_2_RAM_reg_192_255_0_2),
        .DOD(NLW_RAM_reg_192_255_0_2_DOD_UNCONNECTED),
        .WCLK(wr_clk),
        .WE(I4));
RAM64X1D RAM_reg_192_255_3_3
       (.A0(O2[0]),
        .A1(O2[1]),
        .A2(O2[2]),
        .A3(O2[3]),
        .A4(O2[4]),
        .A5(O2[5]),
        .D(din[3]),
        .DPO(n_0_RAM_reg_192_255_3_3),
        .DPRA0(O3[0]),
        .DPRA1(O3[1]),
        .DPRA2(O3[2]),
        .DPRA3(O3[3]),
        .DPRA4(O3[4]),
        .DPRA5(O3[5]),
        .SPO(NLW_RAM_reg_192_255_3_3_SPO_UNCONNECTED),
        .WCLK(wr_clk),
        .WE(I12));
RAM64M RAM_reg_256_319_0_2
       (.ADDRA(O3[5:0]),
        .ADDRB(O3[5:0]),
        .ADDRC(O3[5:0]),
        .ADDRD(O2),
        .DIA(din[0]),
        .DIB(din[1]),
        .DIC(din[2]),
        .DID(1'b0),
        .DOA(n_0_RAM_reg_256_319_0_2),
        .DOB(n_1_RAM_reg_256_319_0_2),
        .DOC(n_2_RAM_reg_256_319_0_2),
        .DOD(NLW_RAM_reg_256_319_0_2_DOD_UNCONNECTED),
        .WCLK(wr_clk),
        .WE(I5));
RAM64X1D RAM_reg_256_319_3_3
       (.A0(O2[0]),
        .A1(O2[1]),
        .A2(O2[2]),
        .A3(O2[3]),
        .A4(O2[4]),
        .A5(O2[5]),
        .D(din[3]),
        .DPO(n_0_RAM_reg_256_319_3_3),
        .DPRA0(O3[0]),
        .DPRA1(O3[1]),
        .DPRA2(O3[2]),
        .DPRA3(O3[3]),
        .DPRA4(O3[4]),
        .DPRA5(O3[5]),
        .SPO(NLW_RAM_reg_256_319_3_3_SPO_UNCONNECTED),
        .WCLK(wr_clk),
        .WE(I13));
RAM64M RAM_reg_320_383_0_2
       (.ADDRA(O3[5:0]),
        .ADDRB(O3[5:0]),
        .ADDRC(O3[5:0]),
        .ADDRD(O2),
        .DIA(din[0]),
        .DIB(din[1]),
        .DIC(din[2]),
        .DID(1'b0),
        .DOA(n_0_RAM_reg_320_383_0_2),
        .DOB(n_1_RAM_reg_320_383_0_2),
        .DOC(n_2_RAM_reg_320_383_0_2),
        .DOD(NLW_RAM_reg_320_383_0_2_DOD_UNCONNECTED),
        .WCLK(wr_clk),
        .WE(I6));
RAM64X1D RAM_reg_320_383_3_3
       (.A0(O2[0]),
        .A1(O2[1]),
        .A2(O2[2]),
        .A3(O2[3]),
        .A4(O2[4]),
        .A5(O2[5]),
        .D(din[3]),
        .DPO(n_0_RAM_reg_320_383_3_3),
        .DPRA0(O3[0]),
        .DPRA1(O3[1]),
        .DPRA2(O3[2]),
        .DPRA3(O3[3]),
        .DPRA4(O3[4]),
        .DPRA5(O3[5]),
        .SPO(NLW_RAM_reg_320_383_3_3_SPO_UNCONNECTED),
        .WCLK(wr_clk),
        .WE(I14));
RAM64M RAM_reg_384_447_0_2
       (.ADDRA(O3[5:0]),
        .ADDRB(O3[5:0]),
        .ADDRC(O3[5:0]),
        .ADDRD(O2),
        .DIA(din[0]),
        .DIB(din[1]),
        .DIC(din[2]),
        .DID(1'b0),
        .DOA(n_0_RAM_reg_384_447_0_2),
        .DOB(n_1_RAM_reg_384_447_0_2),
        .DOC(n_2_RAM_reg_384_447_0_2),
        .DOD(NLW_RAM_reg_384_447_0_2_DOD_UNCONNECTED),
        .WCLK(wr_clk),
        .WE(I7));
RAM64X1D RAM_reg_384_447_3_3
       (.A0(O2[0]),
        .A1(O2[1]),
        .A2(O2[2]),
        .A3(O2[3]),
        .A4(O2[4]),
        .A5(O2[5]),
        .D(din[3]),
        .DPO(n_0_RAM_reg_384_447_3_3),
        .DPRA0(O3[0]),
        .DPRA1(O3[1]),
        .DPRA2(O3[2]),
        .DPRA3(O3[3]),
        .DPRA4(O3[4]),
        .DPRA5(O3[5]),
        .SPO(NLW_RAM_reg_384_447_3_3_SPO_UNCONNECTED),
        .WCLK(wr_clk),
        .WE(I15));
RAM64M RAM_reg_448_511_0_2
       (.ADDRA(O3[5:0]),
        .ADDRB(O3[5:0]),
        .ADDRC(O3[5:0]),
        .ADDRD(O2),
        .DIA(din[0]),
        .DIB(din[1]),
        .DIC(din[2]),
        .DID(1'b0),
        .DOA(n_0_RAM_reg_448_511_0_2),
        .DOB(n_1_RAM_reg_448_511_0_2),
        .DOC(n_2_RAM_reg_448_511_0_2),
        .DOD(NLW_RAM_reg_448_511_0_2_DOD_UNCONNECTED),
        .WCLK(wr_clk),
        .WE(I8));
RAM64X1D RAM_reg_448_511_3_3
       (.A0(O2[0]),
        .A1(O2[1]),
        .A2(O2[2]),
        .A3(O2[3]),
        .A4(O2[4]),
        .A5(O2[5]),
        .D(din[3]),
        .DPO(n_0_RAM_reg_448_511_3_3),
        .DPRA0(O3[0]),
        .DPRA1(O3[1]),
        .DPRA2(O3[2]),
        .DPRA3(O3[3]),
        .DPRA4(O3[4]),
        .DPRA5(O3[5]),
        .SPO(NLW_RAM_reg_448_511_3_3_SPO_UNCONNECTED),
        .WCLK(wr_clk),
        .WE(I16));
RAM64M RAM_reg_64_127_0_2
       (.ADDRA(O3[5:0]),
        .ADDRB(O3[5:0]),
        .ADDRC(O3[5:0]),
        .ADDRD(O2),
        .DIA(din[0]),
        .DIB(din[1]),
        .DIC(din[2]),
        .DID(1'b0),
        .DOA(n_0_RAM_reg_64_127_0_2),
        .DOB(n_1_RAM_reg_64_127_0_2),
        .DOC(n_2_RAM_reg_64_127_0_2),
        .DOD(NLW_RAM_reg_64_127_0_2_DOD_UNCONNECTED),
        .WCLK(wr_clk),
        .WE(I2));
RAM64X1D RAM_reg_64_127_3_3
       (.A0(O2[0]),
        .A1(O2[1]),
        .A2(O2[2]),
        .A3(O2[3]),
        .A4(O2[4]),
        .A5(O2[5]),
        .D(din[3]),
        .DPO(n_0_RAM_reg_64_127_3_3),
        .DPRA0(O3[0]),
        .DPRA1(O3[1]),
        .DPRA2(O3[2]),
        .DPRA3(O3[3]),
        .DPRA4(O3[4]),
        .DPRA5(O3[5]),
        .SPO(NLW_RAM_reg_64_127_3_3_SPO_UNCONNECTED),
        .WCLK(wr_clk),
        .WE(I10));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \gpr1.dout_i[0]_i_2 
       (.I0(n_0_RAM_reg_192_255_0_2),
        .I1(n_0_RAM_reg_64_127_0_2),
        .I2(O3[6]),
        .I3(n_0_RAM_reg_128_191_0_2),
        .I4(O3[7]),
        .I5(n_0_RAM_reg_0_63_0_2),
        .O(\n_0_gpr1.dout_i[0]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \gpr1.dout_i[0]_i_3 
       (.I0(n_0_RAM_reg_448_511_0_2),
        .I1(n_0_RAM_reg_320_383_0_2),
        .I2(O3[6]),
        .I3(n_0_RAM_reg_384_447_0_2),
        .I4(O3[7]),
        .I5(n_0_RAM_reg_256_319_0_2),
        .O(\n_0_gpr1.dout_i[0]_i_3 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \gpr1.dout_i[1]_i_2 
       (.I0(n_1_RAM_reg_192_255_0_2),
        .I1(n_1_RAM_reg_64_127_0_2),
        .I2(O3[6]),
        .I3(n_1_RAM_reg_128_191_0_2),
        .I4(O3[7]),
        .I5(n_1_RAM_reg_0_63_0_2),
        .O(\n_0_gpr1.dout_i[1]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \gpr1.dout_i[1]_i_3 
       (.I0(n_1_RAM_reg_448_511_0_2),
        .I1(n_1_RAM_reg_320_383_0_2),
        .I2(O3[6]),
        .I3(n_1_RAM_reg_384_447_0_2),
        .I4(O3[7]),
        .I5(n_1_RAM_reg_256_319_0_2),
        .O(\n_0_gpr1.dout_i[1]_i_3 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \gpr1.dout_i[2]_i_2 
       (.I0(n_2_RAM_reg_192_255_0_2),
        .I1(n_2_RAM_reg_64_127_0_2),
        .I2(O3[6]),
        .I3(n_2_RAM_reg_128_191_0_2),
        .I4(O3[7]),
        .I5(n_2_RAM_reg_0_63_0_2),
        .O(\n_0_gpr1.dout_i[2]_i_2 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \gpr1.dout_i[2]_i_3 
       (.I0(n_2_RAM_reg_448_511_0_2),
        .I1(n_2_RAM_reg_320_383_0_2),
        .I2(O3[6]),
        .I3(n_2_RAM_reg_384_447_0_2),
        .I4(O3[7]),
        .I5(n_2_RAM_reg_256_319_0_2),
        .O(\n_0_gpr1.dout_i[2]_i_3 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \gpr1.dout_i[3]_i_3 
       (.I0(n_0_RAM_reg_192_255_3_3),
        .I1(n_0_RAM_reg_64_127_3_3),
        .I2(O3[6]),
        .I3(n_0_RAM_reg_128_191_3_3),
        .I4(O3[7]),
        .I5(n_0_RAM_reg_0_63_3_3),
        .O(\n_0_gpr1.dout_i[3]_i_3 ));
LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
     \gpr1.dout_i[3]_i_4 
       (.I0(n_0_RAM_reg_448_511_3_3),
        .I1(n_0_RAM_reg_320_383_3_3),
        .I2(O3[6]),
        .I3(n_0_RAM_reg_384_447_3_3),
        .I4(O3[7]),
        .I5(n_0_RAM_reg_256_319_3_3),
        .O(\n_0_gpr1.dout_i[3]_i_4 ));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(I17),
        .D(p_0_out[0]),
        .Q(D[0]),
        .R(1'b0));
MUXF7 \gpr1.dout_i_reg[0]_i_1 
       (.I0(\n_0_gpr1.dout_i[0]_i_2 ),
        .I1(\n_0_gpr1.dout_i[0]_i_3 ),
        .O(p_0_out[0]),
        .S(O3[8]));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(I17),
        .D(p_0_out[1]),
        .Q(D[1]),
        .R(1'b0));
MUXF7 \gpr1.dout_i_reg[1]_i_1 
       (.I0(\n_0_gpr1.dout_i[1]_i_2 ),
        .I1(\n_0_gpr1.dout_i[1]_i_3 ),
        .O(p_0_out[1]),
        .S(O3[8]));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(I17),
        .D(p_0_out[2]),
        .Q(D[2]),
        .R(1'b0));
MUXF7 \gpr1.dout_i_reg[2]_i_1 
       (.I0(\n_0_gpr1.dout_i[2]_i_2 ),
        .I1(\n_0_gpr1.dout_i[2]_i_3 ),
        .O(p_0_out[2]),
        .S(O3[8]));
FDRE #(
    .INIT(1'b0)) 
     \gpr1.dout_i_reg[3] 
       (.C(rd_clk),
        .CE(I17),
        .D(p_0_out[3]),
        .Q(D[3]),
        .R(1'b0));
MUXF7 \gpr1.dout_i_reg[3]_i_2 
       (.I0(\n_0_gpr1.dout_i[3]_i_3 ),
        .I1(\n_0_gpr1.dout_i[3]_i_4 ),
        .O(p_0_out[3]),
        .S(O3[8]));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module axi_dwidth_converter_0_fifo_generator_ramfifo
   (Q,
    s_axi_awready,
    m_axi_awvalid,
    m_axi_awready,
    s_axi_awvalid,
    m_aclk,
    s_aclk,
    DI,
    s_aresetn);
  output [66:0]Q;
  output s_axi_awready;
  output m_axi_awvalid;
  input m_axi_awready;
  input s_axi_awvalid;
  input m_aclk;
  input s_aclk;
  input [66:0]DI;
  input s_aresetn;

  wire [66:0]DI;
  wire [66:0]Q;
  wire RD_RST;
  wire RST;
  wire m_aclk;
  wire m_axi_awready;
  wire m_axi_awvalid;
  wire \n_0_gntv_or_sync_fifo.gcx.clkx ;
  wire \n_10_gntv_or_sync_fifo.gcx.clkx ;
  wire \n_1_gntv_or_sync_fifo.gl0.rd ;
  wire \n_2_gntv_or_sync_fifo.gl0.rd ;
  wire n_2_rstblk;
  wire \n_3_gntv_or_sync_fifo.gl0.rd ;
  wire \n_4_gntv_or_sync_fifo.gl0.rd ;
  wire \n_5_gntv_or_sync_fifo.gl0.rd ;
  wire \n_6_gntv_or_sync_fifo.gcx.clkx ;
  wire n_6_rstblk;
  wire [4:2]p_0_out;
  wire [4:0]p_1_out;
  wire [4:0]p_20_out;
  wire p_3_out;
  wire [4:0]p_8_out;
  wire [4:0]p_9_out;
  wire ram_rd_en_i;
  wire [0:0]rd_rst_i;
  wire rst_d2;
  wire rst_full_gen_i;
  wire s_aclk;
  wire s_aresetn;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire [1:0]wr_pntr_plus2;

axi_dwidth_converter_0_clk_x_pntrs_6 \gntv_or_sync_fifo.gcx.clkx 
       (.D({\n_2_gntv_or_sync_fifo.gl0.rd ,\n_3_gntv_or_sync_fifo.gl0.rd ,\n_4_gntv_or_sync_fifo.gl0.rd ,\n_5_gntv_or_sync_fifo.gl0.rd }),
        .I1({p_20_out[4],p_20_out[2:0]}),
        .I2(wr_pntr_plus2),
        .I3({p_8_out[4],p_8_out[2:0]}),
        .I4(p_9_out),
        .I5(n_6_rstblk),
        .I6(RD_RST),
        .O1(\n_0_gntv_or_sync_fifo.gcx.clkx ),
        .O2(\n_6_gntv_or_sync_fifo.gcx.clkx ),
        .O3(p_0_out),
        .O4(\n_10_gntv_or_sync_fifo.gcx.clkx ),
        .Q(p_1_out),
        .m_aclk(m_aclk),
        .s_aclk(s_aclk));
axi_dwidth_converter_0_rd_logic \gntv_or_sync_fifo.gl0.rd 
       (.D({\n_2_gntv_or_sync_fifo.gl0.rd ,\n_3_gntv_or_sync_fifo.gl0.rd ,\n_4_gntv_or_sync_fifo.gl0.rd ,\n_5_gntv_or_sync_fifo.gl0.rd }),
        .E(\n_1_gntv_or_sync_fifo.gl0.rd ),
        .I1(p_1_out),
        .I2(\n_0_gntv_or_sync_fifo.gcx.clkx ),
        .O1(p_20_out),
        .Q({n_2_rstblk,rd_rst_i}),
        .m_aclk(m_aclk),
        .m_axi_awready(m_axi_awready),
        .m_axi_awvalid(m_axi_awvalid),
        .ram_rd_en_i(ram_rd_en_i));
axi_dwidth_converter_0_wr_logic \gntv_or_sync_fifo.gl0.wr 
       (.E(p_3_out),
        .I1(\n_6_gntv_or_sync_fifo.gcx.clkx ),
        .I2(\n_10_gntv_or_sync_fifo.gcx.clkx ),
        .I3(RST),
        .O1({p_8_out[4],p_8_out[2:0]}),
        .O2(p_9_out),
        .O3(p_0_out),
        .Q(wr_pntr_plus2),
        .rst_d2(rst_d2),
        .rst_full_gen_i(rst_full_gen_i),
        .s_aclk(s_aclk),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid));
axi_dwidth_converter_0_memory \gntv_or_sync_fifo.mem 
       (.DI(DI),
        .E(p_3_out),
        .I1(\n_1_gntv_or_sync_fifo.gl0.rd ),
        .O1(p_20_out),
        .O2(p_9_out),
        .Q(Q),
        .m_aclk(m_aclk),
        .ram_rd_en_i(ram_rd_en_i),
        .s_aclk(s_aclk));
axi_dwidth_converter_0_reset_blk_ramfifo rstblk
       (.O1({RST,n_6_rstblk}),
        .Q({n_2_rstblk,RD_RST,rd_rst_i}),
        .m_aclk(m_aclk),
        .rst_d2(rst_d2),
        .rst_full_gen_i(rst_full_gen_i),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module axi_dwidth_converter_0_fifo_generator_ramfifo__parameterized0
   (empty,
    full,
    dout,
    rd_en,
    wr_en,
    wr_clk,
    rst,
    rd_clk,
    din);
  output empty;
  output full;
  output [0:0]dout;
  input rd_en;
  input wr_en;
  input wr_clk;
  input rst;
  input rd_clk;
  input [0:0]din;

  wire RD_RST;
  wire RST;
  wire [0:0]din;
  wire [0:0]dout;
  wire empty;
  wire full;
  wire \gdm.dm/p_0_out ;
  wire [0:0]\gr1.rfwft/curr_fwft_state ;
  wire \n_0_gntv_or_sync_fifo.gcx.clkx ;
  wire n_0_rstblk;
  wire \n_12_gntv_or_sync_fifo.gl0.rd ;
  wire \n_1_gntv_or_sync_fifo.gcx.clkx ;
  wire \n_1_gntv_or_sync_fifo.gl0.rd ;
  wire \n_1_gntv_or_sync_fifo.gl0.wr ;
  wire \n_3_gntv_or_sync_fifo.gl0.rd ;
  wire \n_4_gntv_or_sync_fifo.gl0.rd ;
  wire n_4_rstblk;
  wire \n_5_gntv_or_sync_fifo.gl0.rd ;
  wire \n_6_gntv_or_sync_fifo.gl0.rd ;
  wire \n_7_gntv_or_sync_fifo.gl0.wr ;
  wire [3:3]p_0_out;
  wire p_0_out_0;
  wire [4:0]p_1_out;
  wire [4:0]p_20_out;
  wire p_3_out;
  wire [4:0]p_8_out;
  wire [4:0]p_9_out;
  wire rd_clk;
  wire rd_en;
  wire [0:0]rd_rst_i;
  wire rst;
  wire wr_clk;
  wire wr_en;
  wire [4:0]wr_pntr_plus2;

axi_dwidth_converter_0_clk_x_pntrs \gntv_or_sync_fifo.gcx.clkx 
       (.D({\n_3_gntv_or_sync_fifo.gl0.rd ,\n_4_gntv_or_sync_fifo.gl0.rd ,\n_5_gntv_or_sync_fifo.gl0.rd ,\n_6_gntv_or_sync_fifo.gl0.rd }),
        .I1(\n_1_gntv_or_sync_fifo.gl0.wr ),
        .I2(\n_7_gntv_or_sync_fifo.gl0.wr ),
        .I3({p_20_out[4],p_20_out[2:0]}),
        .I4({wr_pntr_plus2[4],wr_pntr_plus2[2:0]}),
        .I5({p_8_out[4],p_8_out[2:0]}),
        .I6(p_9_out),
        .I7(n_4_rstblk),
        .I8(RD_RST),
        .O1(\n_0_gntv_or_sync_fifo.gcx.clkx ),
        .O2(\n_1_gntv_or_sync_fifo.gcx.clkx ),
        .O3(p_1_out),
        .O4(p_0_out),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
axi_dwidth_converter_0_rd_logic__parameterized0 \gntv_or_sync_fifo.gl0.rd 
       (.D({\n_3_gntv_or_sync_fifo.gl0.rd ,\n_4_gntv_or_sync_fifo.gl0.rd ,\n_5_gntv_or_sync_fifo.gl0.rd ,\n_6_gntv_or_sync_fifo.gl0.rd }),
        .I1(\n_1_gntv_or_sync_fifo.gcx.clkx ),
        .O1({\n_1_gntv_or_sync_fifo.gl0.rd ,\gr1.rfwft/curr_fwft_state }),
        .O2(p_20_out),
        .O3(p_1_out),
        .O4(\n_12_gntv_or_sync_fifo.gl0.rd ),
        .Q(n_0_rstblk),
        .empty(empty),
        .p_0_out(\gdm.dm/p_0_out ),
        .p_0_out_0(p_0_out_0),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
axi_dwidth_converter_0_wr_logic__parameterized0 \gntv_or_sync_fifo.gl0.wr 
       (.E(p_3_out),
        .I1(\n_0_gntv_or_sync_fifo.gcx.clkx ),
        .O1(\n_1_gntv_or_sync_fifo.gl0.wr ),
        .O2({wr_pntr_plus2[4],wr_pntr_plus2[2:0]}),
        .O3(\n_7_gntv_or_sync_fifo.gl0.wr ),
        .O4(p_0_out),
        .O5({p_8_out[4],p_8_out[2:0]}),
        .O6(p_9_out),
        .Q({RST,n_4_rstblk}),
        .full(full),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
axi_dwidth_converter_0_memory__parameterized0 \gntv_or_sync_fifo.mem 
       (.E(p_3_out),
        .I1(\n_12_gntv_or_sync_fifo.gl0.rd ),
        .O1({\n_1_gntv_or_sync_fifo.gl0.rd ,\gr1.rfwft/curr_fwft_state }),
        .O2(p_20_out),
        .O6(p_9_out),
        .Q(rd_rst_i),
        .din(din),
        .dout(dout),
        .p_0_out(\gdm.dm/p_0_out ),
        .p_0_out_0(p_0_out_0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .wr_clk(wr_clk));
axi_dwidth_converter_0_reset_blk_ramfifo__parameterized0 rstblk
       (.O1({RST,n_4_rstblk}),
        .Q({n_0_rstblk,RD_RST,rd_rst_i}),
        .rd_clk(rd_clk),
        .rst(rst),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module axi_dwidth_converter_0_fifo_generator_ramfifo__parameterized1
   (s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    m_axi_bready,
    s_axi_bready,
    m_axi_bvalid,
    s_aclk,
    m_aclk,
    m_axi_bresp,
    m_axi_bid,
    s_aresetn);
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  output m_axi_bready;
  input s_axi_bready;
  input m_axi_bvalid;
  input s_aclk;
  input m_aclk;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_bid;
  input s_aresetn;

  wire RD_RST;
  wire RST;
  wire [0:0]\gr1.rfwft/curr_fwft_state ;
  wire m_aclk;
  wire [0:0]m_axi_bid;
  wire m_axi_bready;
  wire [1:0]m_axi_bresp;
  wire m_axi_bvalid;
  wire \n_0_gntv_or_sync_fifo.gcx.clkx ;
  wire \n_0_gntv_or_sync_fifo.gl0.rd ;
  wire \n_10_gntv_or_sync_fifo.gcx.clkx ;
  wire n_2_rstblk;
  wire \n_3_gntv_or_sync_fifo.gl0.rd ;
  wire \n_4_gntv_or_sync_fifo.gl0.rd ;
  wire \n_5_gntv_or_sync_fifo.gl0.rd ;
  wire \n_6_gntv_or_sync_fifo.gcx.clkx ;
  wire \n_6_gntv_or_sync_fifo.gl0.rd ;
  wire n_6_rstblk;
  wire [4:2]p_0_out;
  wire [4:0]p_1_out;
  wire [4:0]p_20_out;
  wire p_3_out;
  wire [4:0]p_8_out;
  wire [4:0]p_9_out;
  wire ram_rd_en_i;
  wire [0:0]rd_rst_i;
  wire rst_d2;
  wire rst_full_gen_i;
  wire s_aclk;
  wire s_aresetn;
  wire [0:0]s_axi_bid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire [1:0]wr_pntr_plus2;

axi_dwidth_converter_0_clk_x_pntrs_47 \gntv_or_sync_fifo.gcx.clkx 
       (.D({\n_3_gntv_or_sync_fifo.gl0.rd ,\n_4_gntv_or_sync_fifo.gl0.rd ,\n_5_gntv_or_sync_fifo.gl0.rd ,\n_6_gntv_or_sync_fifo.gl0.rd }),
        .I1({p_20_out[4],p_20_out[2:0]}),
        .I2(wr_pntr_plus2),
        .I3({p_8_out[4],p_8_out[2:0]}),
        .I4(p_9_out),
        .I5(n_6_rstblk),
        .I6(RD_RST),
        .O1(\n_0_gntv_or_sync_fifo.gcx.clkx ),
        .O2(\n_6_gntv_or_sync_fifo.gcx.clkx ),
        .O3(p_0_out),
        .O4(\n_10_gntv_or_sync_fifo.gcx.clkx ),
        .Q(p_1_out),
        .m_aclk(m_aclk),
        .s_aclk(s_aclk));
axi_dwidth_converter_0_rd_logic__parameterized1 \gntv_or_sync_fifo.gl0.rd 
       (.D({\n_3_gntv_or_sync_fifo.gl0.rd ,\n_4_gntv_or_sync_fifo.gl0.rd ,\n_5_gntv_or_sync_fifo.gl0.rd ,\n_6_gntv_or_sync_fifo.gl0.rd }),
        .I1(p_1_out),
        .I2(\n_0_gntv_or_sync_fifo.gcx.clkx ),
        .O1({\n_0_gntv_or_sync_fifo.gl0.rd ,\gr1.rfwft/curr_fwft_state }),
        .O2(p_20_out),
        .Q(n_2_rstblk),
        .ram_rd_en_i(ram_rd_en_i),
        .s_aclk(s_aclk),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid(s_axi_bvalid));
axi_dwidth_converter_0_wr_logic_48 \gntv_or_sync_fifo.gl0.wr 
       (.E(p_3_out),
        .I1(\n_6_gntv_or_sync_fifo.gcx.clkx ),
        .I2(\n_10_gntv_or_sync_fifo.gcx.clkx ),
        .I3(RST),
        .O1({p_8_out[4],p_8_out[2:0]}),
        .O2(p_9_out),
        .O3(p_0_out),
        .Q(wr_pntr_plus2),
        .m_aclk(m_aclk),
        .m_axi_bready(m_axi_bready),
        .m_axi_bvalid(m_axi_bvalid),
        .rst_d2(rst_d2),
        .rst_full_gen_i(rst_full_gen_i));
axi_dwidth_converter_0_memory__parameterized1 \gntv_or_sync_fifo.mem 
       (.E(p_3_out),
        .I1(p_9_out),
        .O1({\n_0_gntv_or_sync_fifo.gl0.rd ,\gr1.rfwft/curr_fwft_state }),
        .O2(p_20_out),
        .Q(rd_rst_i),
        .m_aclk(m_aclk),
        .m_axi_bid(m_axi_bid),
        .m_axi_bresp(m_axi_bresp),
        .ram_rd_en_i(ram_rd_en_i),
        .s_aclk(s_aclk),
        .s_axi_bid(s_axi_bid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(s_axi_bresp));
axi_dwidth_converter_0_reset_blk_ramfifo_49 rstblk
       (.O1({RST,n_6_rstblk}),
        .Q({n_2_rstblk,RD_RST,rd_rst_i}),
        .m_aclk(m_aclk),
        .rst_d2(rst_d2),
        .rst_full_gen_i(rst_full_gen_i),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module axi_dwidth_converter_0_fifo_generator_ramfifo__parameterized2
   (Q,
    s_axi_arready,
    m_axi_arvalid,
    m_axi_arready,
    s_axi_arvalid,
    m_aclk,
    s_aclk,
    DI,
    s_aresetn);
  output [60:0]Q;
  output s_axi_arready;
  output m_axi_arvalid;
  input m_axi_arready;
  input s_axi_arvalid;
  input m_aclk;
  input s_aclk;
  input [60:0]DI;
  input s_aresetn;

  wire [60:0]DI;
  wire [60:0]Q;
  wire RD_RST;
  wire RST;
  wire m_aclk;
  wire m_axi_arready;
  wire m_axi_arvalid;
  wire \n_0_gntv_or_sync_fifo.gcx.clkx ;
  wire \n_10_gntv_or_sync_fifo.gcx.clkx ;
  wire \n_1_gntv_or_sync_fifo.gl0.rd ;
  wire \n_2_gntv_or_sync_fifo.gl0.rd ;
  wire n_2_rstblk;
  wire \n_3_gntv_or_sync_fifo.gl0.rd ;
  wire \n_4_gntv_or_sync_fifo.gl0.rd ;
  wire \n_5_gntv_or_sync_fifo.gl0.rd ;
  wire \n_6_gntv_or_sync_fifo.gcx.clkx ;
  wire n_6_rstblk;
  wire [4:2]p_0_out;
  wire [4:0]p_1_out;
  wire [4:0]p_20_out;
  wire p_3_out;
  wire [4:0]p_8_out;
  wire [4:0]p_9_out;
  wire ram_rd_en_i;
  wire [0:0]rd_rst_i;
  wire rst_d2;
  wire rst_full_gen_i;
  wire s_aclk;
  wire s_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [1:0]wr_pntr_plus2;

axi_dwidth_converter_0_clk_x_pntrs_34 \gntv_or_sync_fifo.gcx.clkx 
       (.D({\n_2_gntv_or_sync_fifo.gl0.rd ,\n_3_gntv_or_sync_fifo.gl0.rd ,\n_4_gntv_or_sync_fifo.gl0.rd ,\n_5_gntv_or_sync_fifo.gl0.rd }),
        .I1({p_20_out[4],p_20_out[2:0]}),
        .I2(wr_pntr_plus2),
        .I3({p_8_out[4],p_8_out[2:0]}),
        .I4(p_9_out),
        .I5(n_6_rstblk),
        .I6(RD_RST),
        .O1(\n_0_gntv_or_sync_fifo.gcx.clkx ),
        .O2(\n_6_gntv_or_sync_fifo.gcx.clkx ),
        .O3(p_0_out),
        .O4(\n_10_gntv_or_sync_fifo.gcx.clkx ),
        .Q(p_1_out),
        .m_aclk(m_aclk),
        .s_aclk(s_aclk));
axi_dwidth_converter_0_rd_logic__parameterized2 \gntv_or_sync_fifo.gl0.rd 
       (.D({\n_2_gntv_or_sync_fifo.gl0.rd ,\n_3_gntv_or_sync_fifo.gl0.rd ,\n_4_gntv_or_sync_fifo.gl0.rd ,\n_5_gntv_or_sync_fifo.gl0.rd }),
        .E(\n_1_gntv_or_sync_fifo.gl0.rd ),
        .I1(p_1_out),
        .I2(\n_0_gntv_or_sync_fifo.gcx.clkx ),
        .O1(p_20_out),
        .Q({n_2_rstblk,rd_rst_i}),
        .m_aclk(m_aclk),
        .m_axi_arready(m_axi_arready),
        .m_axi_arvalid(m_axi_arvalid),
        .ram_rd_en_i(ram_rd_en_i));
axi_dwidth_converter_0_wr_logic__parameterized1 \gntv_or_sync_fifo.gl0.wr 
       (.E(p_3_out),
        .I1(\n_6_gntv_or_sync_fifo.gcx.clkx ),
        .I2(\n_10_gntv_or_sync_fifo.gcx.clkx ),
        .I3(RST),
        .O1({p_8_out[4],p_8_out[2:0]}),
        .O2(p_9_out),
        .O3(p_0_out),
        .Q(wr_pntr_plus2),
        .rst_d2(rst_d2),
        .rst_full_gen_i(rst_full_gen_i),
        .s_aclk(s_aclk),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid));
axi_dwidth_converter_0_memory__parameterized2 \gntv_or_sync_fifo.mem 
       (.DI(DI),
        .E(p_3_out),
        .I1(\n_1_gntv_or_sync_fifo.gl0.rd ),
        .O1(p_20_out),
        .O2(p_9_out),
        .Q(Q),
        .m_aclk(m_aclk),
        .ram_rd_en_i(ram_rd_en_i),
        .s_aclk(s_aclk));
axi_dwidth_converter_0_reset_blk_ramfifo_35 rstblk
       (.O1({RST,n_6_rstblk}),
        .Q({n_2_rstblk,RD_RST,rd_rst_i}),
        .m_aclk(m_aclk),
        .rst_d2(rst_d2),
        .rst_full_gen_i(rst_full_gen_i),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module axi_dwidth_converter_0_fifo_generator_ramfifo__parameterized3
   (dout,
    full,
    empty,
    rd_en,
    wr_en,
    clk,
    srst,
    din);
  output [30:0]dout;
  output full;
  output empty;
  input rd_en;
  input wr_en;
  input clk;
  input srst;
  input [30:0]din;

  wire clk;
  wire [30:0]din;
  wire dm_rd_en;
  wire [30:0]dout;
  wire empty;
  wire full;
  wire \gwss.wsts/ram_full_i ;
  wire \n_12_gntv_or_sync_fifo.gl0.rd ;
  wire \n_2_gntv_or_sync_fifo.gl0.wr ;
  wire \n_8_gntv_or_sync_fifo.gl0.wr ;
  wire [4:0]p_10_out;
  wire p_1_out;
  wire [4:0]p_20_out;
  wire p_4_out;
  wire [4:0]p_9_out;
  wire rd_en;
  wire [4:0]rd_pntr_plus1;
  wire srst;
  wire wr_en;

axi_dwidth_converter_0_rd_logic__parameterized3_27 \gntv_or_sync_fifo.gl0.rd 
       (.E(\n_12_gntv_or_sync_fifo.gl0.rd ),
        .I1(\n_2_gntv_or_sync_fifo.gl0.wr ),
        .I2(\n_8_gntv_or_sync_fifo.gl0.wr ),
        .I3(p_9_out),
        .O1({rd_pntr_plus1[4],rd_pntr_plus1[2:0]}),
        .O2(p_20_out),
        .Q(p_10_out),
        .clk(clk),
        .dm_rd_en(dm_rd_en),
        .empty(empty),
        .p_1_out(p_1_out),
        .ram_full_i(\gwss.wsts/ram_full_i ),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
axi_dwidth_converter_0_wr_logic__parameterized2_28 \gntv_or_sync_fifo.gl0.wr 
       (.E(p_4_out),
        .I1({rd_pntr_plus1[4],rd_pntr_plus1[2:0]}),
        .O1(\n_2_gntv_or_sync_fifo.gl0.wr ),
        .O2(\n_8_gntv_or_sync_fifo.gl0.wr ),
        .O3(p_9_out),
        .Q(p_10_out),
        .clk(clk),
        .full(full),
        .p_1_out(p_1_out),
        .ram_full_i(\gwss.wsts/ram_full_i ),
        .srst(srst),
        .wr_en(wr_en));
axi_dwidth_converter_0_memory__parameterized3 \gntv_or_sync_fifo.mem 
       (.E(p_4_out),
        .I1(\n_12_gntv_or_sync_fifo.gl0.rd ),
        .O2(p_20_out),
        .Q(p_10_out),
        .clk(clk),
        .din(din),
        .dm_rd_en(dm_rd_en),
        .dout(dout));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module axi_dwidth_converter_0_fifo_generator_ramfifo__parameterized4
   (dout,
    full,
    empty,
    rd_en,
    wr_en,
    clk,
    srst,
    din);
  output [22:0]dout;
  output full;
  output empty;
  input rd_en;
  input wr_en;
  input clk;
  input srst;
  input [22:0]din;

  wire clk;
  wire [22:0]din;
  wire dm_rd_en;
  wire [22:0]dout;
  wire empty;
  wire full;
  wire \gwss.wsts/ram_full_i ;
  wire \n_12_gntv_or_sync_fifo.gl0.rd ;
  wire \n_2_gntv_or_sync_fifo.gl0.wr ;
  wire \n_8_gntv_or_sync_fifo.gl0.wr ;
  wire [4:0]p_10_out;
  wire p_1_out;
  wire [4:0]p_20_out;
  wire p_4_out;
  wire [4:0]p_9_out;
  wire rd_en;
  wire [4:0]rd_pntr_plus1;
  wire srst;
  wire wr_en;

axi_dwidth_converter_0_rd_logic__parameterized3 \gntv_or_sync_fifo.gl0.rd 
       (.E(\n_12_gntv_or_sync_fifo.gl0.rd ),
        .I1(\n_2_gntv_or_sync_fifo.gl0.wr ),
        .I2(\n_8_gntv_or_sync_fifo.gl0.wr ),
        .I3(p_9_out),
        .O1({rd_pntr_plus1[4],rd_pntr_plus1[2:0]}),
        .O2(p_20_out),
        .Q(p_10_out),
        .clk(clk),
        .dm_rd_en(dm_rd_en),
        .empty(empty),
        .p_1_out(p_1_out),
        .ram_full_i(\gwss.wsts/ram_full_i ),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
axi_dwidth_converter_0_wr_logic__parameterized2 \gntv_or_sync_fifo.gl0.wr 
       (.E(p_4_out),
        .I1({rd_pntr_plus1[4],rd_pntr_plus1[2:0]}),
        .O1(\n_2_gntv_or_sync_fifo.gl0.wr ),
        .O2(\n_8_gntv_or_sync_fifo.gl0.wr ),
        .O3(p_9_out),
        .Q(p_10_out),
        .clk(clk),
        .full(full),
        .p_1_out(p_1_out),
        .ram_full_i(\gwss.wsts/ram_full_i ),
        .srst(srst),
        .wr_en(wr_en));
axi_dwidth_converter_0_memory__parameterized4 \gntv_or_sync_fifo.mem 
       (.E(p_4_out),
        .I1(\n_12_gntv_or_sync_fifo.gl0.rd ),
        .O2(p_20_out),
        .Q(p_10_out),
        .clk(clk),
        .din(din),
        .dm_rd_en(dm_rd_en),
        .dout(dout));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module axi_dwidth_converter_0_fifo_generator_ramfifo__parameterized5
   (dout,
    empty,
    full,
    rd_en,
    wr_en,
    rd_clk,
    wr_clk,
    rst,
    din);
  output [3:0]dout;
  output empty;
  output full;
  input rd_en;
  input wr_en;
  input rd_clk;
  input wr_clk;
  input rst;
  input [3:0]din;

  wire RD_RST;
  wire RST;
  wire [3:0]din;
  wire [3:0]dout;
  wire empty;
  wire full;
  wire [3:0]\gras.rsts/c1/v1_reg ;
  wire [4:4]\gwas.wsts/c2/v1_reg ;
  wire \n_0_gntv_or_sync_fifo.gcx.clkx ;
  wire \n_10_gntv_or_sync_fifo.gl0.rd ;
  wire \n_11_gntv_or_sync_fifo.gl0.wr ;
  wire \n_12_gntv_or_sync_fifo.gl0.wr ;
  wire \n_13_gntv_or_sync_fifo.gl0.wr ;
  wire \n_14_gntv_or_sync_fifo.gl0.wr ;
  wire \n_15_gntv_or_sync_fifo.gl0.wr ;
  wire \n_16_gntv_or_sync_fifo.gl0.wr ;
  wire \n_17_gntv_or_sync_fifo.gl0.wr ;
  wire \n_18_gntv_or_sync_fifo.gl0.wr ;
  wire \n_19_gntv_or_sync_fifo.gl0.wr ;
  wire \n_1_gntv_or_sync_fifo.gl0.rd ;
  wire \n_1_gntv_or_sync_fifo.gl0.wr ;
  wire \n_20_gntv_or_sync_fifo.gl0.wr ;
  wire \n_21_gntv_or_sync_fifo.gl0.wr ;
  wire \n_22_gntv_or_sync_fifo.gl0.wr ;
  wire \n_23_gntv_or_sync_fifo.gl0.wr ;
  wire \n_24_gntv_or_sync_fifo.gl0.wr ;
  wire \n_25_gntv_or_sync_fifo.gl0.wr ;
  wire [8:0]p_0_out;
  wire [8:0]p_1_out;
  wire [8:0]p_20_out;
  wire [8:0]p_9_out;
  wire rd_clk;
  wire rd_en;
  wire [7:0]rd_pntr_plus1;
  wire [1:0]rd_rst_i;
  wire rst;
  wire rst_full_ff_i;
  wire wr_clk;
  wire wr_en;
  wire [8:8]wr_pntr_plus2;

axi_dwidth_converter_0_clk_x_pntrs__parameterized0 \gntv_or_sync_fifo.gcx.clkx 
       (.I1(rd_pntr_plus1),
        .I2(wr_pntr_plus2),
        .I3(p_9_out),
        .I4(rst_full_ff_i),
        .I5(rd_rst_i[1]),
        .O1(\n_0_gntv_or_sync_fifo.gcx.clkx ),
        .Q(p_20_out),
        .RD_PNTR_WR(p_0_out),
        .WR_PNTR_RD(p_1_out),
        .rd_clk(rd_clk),
        .v1_reg(\gras.rsts/c1/v1_reg ),
        .v1_reg_0(\gwas.wsts/c2/v1_reg ),
        .wr_clk(wr_clk));
axi_dwidth_converter_0_rd_logic__parameterized4 \gntv_or_sync_fifo.gl0.rd 
       (.E(\n_10_gntv_or_sync_fifo.gl0.rd ),
        .I1(\n_0_gntv_or_sync_fifo.gcx.clkx ),
        .O1(\n_1_gntv_or_sync_fifo.gl0.rd ),
        .O2(rd_pntr_plus1),
        .O3(p_20_out),
        .Q({RD_RST,rd_rst_i[0]}),
        .WR_PNTR_RD(p_1_out),
        .empty(empty),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .v1_reg(\gras.rsts/c1/v1_reg ));
axi_dwidth_converter_0_wr_logic__parameterized3 \gntv_or_sync_fifo.gl0.wr 
       (.I1(\gwas.wsts/c2/v1_reg ),
        .O1(\n_1_gntv_or_sync_fifo.gl0.wr ),
        .O10(\n_18_gntv_or_sync_fifo.gl0.wr ),
        .O11(\n_19_gntv_or_sync_fifo.gl0.wr ),
        .O12(\n_20_gntv_or_sync_fifo.gl0.wr ),
        .O13(\n_21_gntv_or_sync_fifo.gl0.wr ),
        .O14(\n_22_gntv_or_sync_fifo.gl0.wr ),
        .O15(\n_23_gntv_or_sync_fifo.gl0.wr ),
        .O16(\n_24_gntv_or_sync_fifo.gl0.wr ),
        .O17(\n_25_gntv_or_sync_fifo.gl0.wr ),
        .O18(wr_pntr_plus2),
        .O2(p_9_out),
        .O3(\n_11_gntv_or_sync_fifo.gl0.wr ),
        .O4(\n_12_gntv_or_sync_fifo.gl0.wr ),
        .O5(\n_13_gntv_or_sync_fifo.gl0.wr ),
        .O6(\n_14_gntv_or_sync_fifo.gl0.wr ),
        .O7(\n_15_gntv_or_sync_fifo.gl0.wr ),
        .O8(\n_16_gntv_or_sync_fifo.gl0.wr ),
        .O9(\n_17_gntv_or_sync_fifo.gl0.wr ),
        .Q({RST,rst_full_ff_i}),
        .RD_PNTR_WR(p_0_out),
        .full(full),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
axi_dwidth_converter_0_memory__parameterized5 \gntv_or_sync_fifo.mem 
       (.E(\n_10_gntv_or_sync_fifo.gl0.rd ),
        .I1(\n_17_gntv_or_sync_fifo.gl0.wr ),
        .I10(\n_12_gntv_or_sync_fifo.gl0.wr ),
        .I11(\n_11_gntv_or_sync_fifo.gl0.wr ),
        .I12(\n_1_gntv_or_sync_fifo.gl0.wr ),
        .I13(\n_18_gntv_or_sync_fifo.gl0.wr ),
        .I14(\n_20_gntv_or_sync_fifo.gl0.wr ),
        .I15(\n_22_gntv_or_sync_fifo.gl0.wr ),
        .I16(\n_24_gntv_or_sync_fifo.gl0.wr ),
        .I17(\n_1_gntv_or_sync_fifo.gl0.rd ),
        .I2(\n_16_gntv_or_sync_fifo.gl0.wr ),
        .I3(\n_15_gntv_or_sync_fifo.gl0.wr ),
        .I4(\n_14_gntv_or_sync_fifo.gl0.wr ),
        .I5(\n_19_gntv_or_sync_fifo.gl0.wr ),
        .I6(\n_21_gntv_or_sync_fifo.gl0.wr ),
        .I7(\n_23_gntv_or_sync_fifo.gl0.wr ),
        .I8(\n_25_gntv_or_sync_fifo.gl0.wr ),
        .I9(\n_13_gntv_or_sync_fifo.gl0.wr ),
        .O2(p_9_out[5:0]),
        .O3(p_20_out),
        .din(din),
        .dout(dout),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
axi_dwidth_converter_0_reset_blk_ramfifo__parameterized0_17 rstblk
       (.O1({RD_RST,rd_rst_i}),
        .Q({RST,rst_full_ff_i}),
        .rd_clk(rd_clk),
        .rst(rst),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module axi_dwidth_converter_0_fifo_generator_top
   (Q,
    s_axi_awready,
    m_axi_awvalid,
    m_axi_awready,
    s_axi_awvalid,
    m_aclk,
    s_aclk,
    DI,
    s_aresetn);
  output [66:0]Q;
  output s_axi_awready;
  output m_axi_awvalid;
  input m_axi_awready;
  input s_axi_awvalid;
  input m_aclk;
  input s_aclk;
  input [66:0]DI;
  input s_aresetn;

  wire [66:0]DI;
  wire [66:0]Q;
  wire m_aclk;
  wire m_axi_awready;
  wire m_axi_awvalid;
  wire s_aclk;
  wire s_aresetn;
  wire s_axi_awready;
  wire s_axi_awvalid;

axi_dwidth_converter_0_fifo_generator_ramfifo \grf.rf 
       (.DI(DI),
        .Q(Q),
        .m_aclk(m_aclk),
        .m_axi_awready(m_axi_awready),
        .m_axi_awvalid(m_axi_awvalid),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module axi_dwidth_converter_0_fifo_generator_top__parameterized0
   (empty,
    full,
    dout,
    rd_en,
    wr_en,
    wr_clk,
    rst,
    rd_clk,
    din);
  output empty;
  output full;
  output [0:0]dout;
  input rd_en;
  input wr_en;
  input wr_clk;
  input rst;
  input rd_clk;
  input [0:0]din;

  wire [0:0]din;
  wire [0:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire wr_en;

axi_dwidth_converter_0_fifo_generator_ramfifo__parameterized0 \grf.rf 
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module axi_dwidth_converter_0_fifo_generator_top__parameterized1
   (s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    m_axi_bready,
    s_axi_bready,
    m_axi_bvalid,
    s_aclk,
    m_aclk,
    m_axi_bresp,
    m_axi_bid,
    s_aresetn);
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  output m_axi_bready;
  input s_axi_bready;
  input m_axi_bvalid;
  input s_aclk;
  input m_aclk;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_bid;
  input s_aresetn;

  wire m_aclk;
  wire [0:0]m_axi_bid;
  wire m_axi_bready;
  wire [1:0]m_axi_bresp;
  wire m_axi_bvalid;
  wire s_aclk;
  wire s_aresetn;
  wire [0:0]s_axi_bid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;

axi_dwidth_converter_0_fifo_generator_ramfifo__parameterized1 \grf.rf 
       (.m_aclk(m_aclk),
        .m_axi_bid(m_axi_bid),
        .m_axi_bready(m_axi_bready),
        .m_axi_bresp(m_axi_bresp),
        .m_axi_bvalid(m_axi_bvalid),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .s_axi_bid(s_axi_bid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(s_axi_bresp),
        .s_axi_bvalid(s_axi_bvalid));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module axi_dwidth_converter_0_fifo_generator_top__parameterized2
   (Q,
    s_axi_arready,
    m_axi_arvalid,
    m_axi_arready,
    s_axi_arvalid,
    m_aclk,
    s_aclk,
    DI,
    s_aresetn);
  output [60:0]Q;
  output s_axi_arready;
  output m_axi_arvalid;
  input m_axi_arready;
  input s_axi_arvalid;
  input m_aclk;
  input s_aclk;
  input [60:0]DI;
  input s_aresetn;

  wire [60:0]DI;
  wire [60:0]Q;
  wire m_aclk;
  wire m_axi_arready;
  wire m_axi_arvalid;
  wire s_aclk;
  wire s_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;

axi_dwidth_converter_0_fifo_generator_ramfifo__parameterized2 \grf.rf 
       (.DI(DI),
        .Q(Q),
        .m_aclk(m_aclk),
        .m_axi_arready(m_axi_arready),
        .m_axi_arvalid(m_axi_arvalid),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module axi_dwidth_converter_0_fifo_generator_top__parameterized3
   (dout,
    full,
    empty,
    rd_en,
    wr_en,
    clk,
    srst,
    din);
  output [30:0]dout;
  output full;
  output empty;
  input rd_en;
  input wr_en;
  input clk;
  input srst;
  input [30:0]din;

  wire clk;
  wire [30:0]din;
  wire [30:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;

axi_dwidth_converter_0_fifo_generator_ramfifo__parameterized3 \grf.rf 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module axi_dwidth_converter_0_fifo_generator_top__parameterized4
   (dout,
    full,
    empty,
    rd_en,
    wr_en,
    clk,
    srst,
    din);
  output [22:0]dout;
  output full;
  output empty;
  input rd_en;
  input wr_en;
  input clk;
  input srst;
  input [22:0]din;

  wire clk;
  wire [22:0]din;
  wire [22:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;

axi_dwidth_converter_0_fifo_generator_ramfifo__parameterized4 \grf.rf 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module axi_dwidth_converter_0_fifo_generator_top__parameterized5
   (dout,
    empty,
    full,
    rd_en,
    wr_en,
    rd_clk,
    wr_clk,
    rst,
    din);
  output [3:0]dout;
  output empty;
  output full;
  input rd_en;
  input wr_en;
  input rd_clk;
  input wr_clk;
  input rst;
  input [3:0]din;

  wire [3:0]din;
  wire [3:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire wr_en;

axi_dwidth_converter_0_fifo_generator_ramfifo__parameterized5 \grf.rf 
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) (* C_DATA_COUNT_WIDTH = "10" *) 
(* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "18" *) (* C_DOUT_RST_VAL = "0" *) 
(* C_DOUT_WIDTH = "18" *) (* C_ENABLE_RLOCS = "0" *) (* C_FAMILY = "virtex7" *) 
(* C_FULL_FLAGS_RST_VAL = "1" *) (* C_HAS_ALMOST_EMPTY = "0" *) (* C_HAS_ALMOST_FULL = "0" *) 
(* C_HAS_BACKUP = "0" *) (* C_HAS_DATA_COUNT = "0" *) (* C_HAS_INT_CLK = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_RD_DATA_COUNT = "0" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "1" *) (* C_HAS_SRST = "0" *) 
(* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) (* C_HAS_WR_ACK = "0" *) 
(* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) (* C_IMPLEMENTATION_TYPE = "0" *) 
(* C_INIT_WR_PNTR_VAL = "0" *) (* C_MEMORY_TYPE = "1" *) (* C_MIF_FILE_NAME = "BlankString" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_PRELOAD_LATENCY = "1" *) 
(* C_PRELOAD_REGS = "0" *) (* C_PRIM_FIFO_TYPE = "4kx4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "2" *) 
(* C_PROG_EMPTY_THRESH_NEGATE_VAL = "3" *) (* C_PROG_EMPTY_TYPE = "0" *) (* C_PROG_FULL_THRESH_ASSERT_VAL = "1022" *) 
(* C_PROG_FULL_THRESH_NEGATE_VAL = "1021" *) (* C_PROG_FULL_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "10" *) 
(* C_RD_DEPTH = "1024" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "10" *) 
(* C_UNDERFLOW_LOW = "0" *) (* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) 
(* C_USE_EMBEDDED_REG = "0" *) (* C_USE_PIPELINE_REG = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "0" *) (* C_VALID_LOW = "0" *) 
(* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "10" *) (* C_WR_DEPTH = "1024" *) 
(* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "10" *) (* C_WR_RESPONSE_LATENCY = "1" *) 
(* C_MSGON_VAL = "1" *) (* C_ENABLE_RST_SYNC = "1" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_SYNCHRONIZER_STAGE = "3" *) (* C_INTERFACE_TYPE = "2" *) (* C_AXI_TYPE = "1" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_RD_CHANNEL = "0" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_MASTER_CE = "0" *) (* C_ADD_NGC_CONSTRAINT = "0" *) (* C_USE_COMMON_OVERFLOW = "0" *) 
(* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) (* C_AXI_ID_WIDTH = "1" *) 
(* C_AXI_ADDR_WIDTH = "32" *) (* C_AXI_DATA_WIDTH = "32" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_AWUSER = "1" *) 
(* C_HAS_AXI_WUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) (* C_HAS_AXI_ARUSER = "1" *) 
(* C_HAS_AXI_RUSER = "0" *) (* C_AXI_ARUSER_WIDTH = "6" *) (* C_AXI_AWUSER_WIDTH = "6" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) 
(* C_HAS_AXIS_TDATA = "0" *) (* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TUSER = "0" *) (* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_AXIS_TDATA_WIDTH = "64" *) 
(* C_AXIS_TID_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "4" *) (* C_AXIS_TUSER_WIDTH = "4" *) 
(* C_AXIS_TSTRB_WIDTH = "4" *) (* C_AXIS_TKEEP_WIDTH = "4" *) (* C_WACH_TYPE = "0" *) 
(* C_WDCH_TYPE = "2" *) (* C_WRCH_TYPE = "2" *) (* C_RACH_TYPE = "0" *) 
(* C_RDCH_TYPE = "0" *) (* C_AXIS_TYPE = "0" *) (* C_IMPLEMENTATION_TYPE_WACH = "12" *) 
(* C_IMPLEMENTATION_TYPE_WDCH = "11" *) (* C_IMPLEMENTATION_TYPE_WRCH = "12" *) (* C_IMPLEMENTATION_TYPE_RACH = "12" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "11" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_APPLICATION_TYPE_WACH = "0" *) 
(* C_APPLICATION_TYPE_WDCH = "0" *) (* C_APPLICATION_TYPE_WRCH = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
(* C_PRIM_FIFO_TYPE_WDCH = "512x36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
(* C_PRIM_FIFO_TYPE_RDCH = "512x36" *) (* C_PRIM_FIFO_TYPE_AXIS = "512x36" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_ECC_RACH = "0" *) 
(* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
(* C_ERROR_INJECTION_TYPE_RDCH = "0" *) (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_DIN_WIDTH_WACH = "67" *) 
(* C_DIN_WIDTH_WDCH = "37" *) (* C_DIN_WIDTH_WRCH = "2" *) (* C_DIN_WIDTH_RACH = "67" *) 
(* C_DIN_WIDTH_RDCH = "35" *) (* C_DIN_WIDTH_AXIS = "1" *) (* C_WR_DEPTH_WACH = "32" *) 
(* C_WR_DEPTH_WDCH = "1024" *) (* C_WR_DEPTH_WRCH = "16" *) (* C_WR_DEPTH_RACH = "32" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_PNTR_WIDTH_WACH = "5" *) 
(* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) (* C_WR_PNTR_WIDTH_RACH = "5" *) 
(* C_WR_PNTR_WIDTH_RDCH = "10" *) (* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) 
(* C_HAS_DATA_COUNTS_WDCH = "0" *) (* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_PROG_FLAGS_RACH = "0" *) 
(* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) (* C_PROG_FULL_TYPE_WACH = "0" *) 
(* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) 
(* C_PROG_FULL_TYPE_RDCH = "0" *) (* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "31" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "15" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "15" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
(* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
(* C_PROG_EMPTY_TYPE_RDCH = "0" *) (* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "30" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "14" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "14" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_REG_SLICE_MODE_WACH = "0" *) 
(* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) 
(* C_REG_SLICE_MODE_RDCH = "0" *) (* C_REG_SLICE_MODE_AXIS = "0" *) (* ORIG_REF_NAME = "fifo_generator_v12_0" *) 
module axi_dwidth_converter_0_fifo_generator_v12_0
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [17:0]din;
  input wr_en;
  input rd_en;
  input [9:0]prog_empty_thresh;
  input [9:0]prog_empty_thresh_assert;
  input [9:0]prog_empty_thresh_negate;
  input [9:0]prog_full_thresh;
  input [9:0]prog_full_thresh_assert;
  input [9:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [17:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [9:0]data_count;
  output [9:0]rd_data_count;
  output [9:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [5:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [5:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [31:0]m_axi_wdata;
  output [3:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [5:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [5:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [31:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [63:0]s_axis_tdata;
  input [3:0]s_axis_tstrb;
  input [3:0]s_axis_tkeep;
  input s_axis_tlast;
  input [7:0]s_axis_tid;
  input [3:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [63:0]m_axis_tdata;
  output [3:0]m_axis_tstrb;
  output [3:0]m_axis_tkeep;
  output m_axis_tlast;
  output [7:0]m_axis_tid;
  output [3:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [4:0]axi_aw_prog_full_thresh;
  input [4:0]axi_aw_prog_empty_thresh;
  output [5:0]axi_aw_data_count;
  output [5:0]axi_aw_wr_data_count;
  output [5:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [4:0]axi_ar_prog_full_thresh;
  input [4:0]axi_ar_prog_empty_thresh;
  output [5:0]axi_ar_data_count;
  output [5:0]axi_ar_wr_data_count;
  output [5:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire axi_ar_injectdbiterr;
  wire axi_ar_injectsbiterr;
  wire [4:0]axi_ar_prog_empty_thresh;
  wire [4:0]axi_ar_prog_full_thresh;
  wire axi_aw_injectdbiterr;
  wire axi_aw_injectsbiterr;
  wire [4:0]axi_aw_prog_empty_thresh;
  wire [4:0]axi_aw_prog_full_thresh;
  wire axi_b_injectdbiterr;
  wire axi_b_injectsbiterr;
  wire [3:0]axi_b_prog_empty_thresh;
  wire [3:0]axi_b_prog_full_thresh;
  wire axi_r_injectdbiterr;
  wire axi_r_injectsbiterr;
  wire [9:0]axi_r_prog_empty_thresh;
  wire [9:0]axi_r_prog_full_thresh;
  wire axi_w_injectdbiterr;
  wire axi_w_injectsbiterr;
  wire [9:0]axi_w_prog_empty_thresh;
  wire [9:0]axi_w_prog_full_thresh;
  wire axis_injectdbiterr;
  wire axis_injectsbiterr;
  wire [9:0]axis_prog_empty_thresh;
  wire [9:0]axis_prog_full_thresh;
  wire backup;
  wire backup_marker;
  wire clk;
  wire [17:0]din;
  wire injectdbiterr;
  wire injectsbiterr;
  wire int_clk;
  wire m_aclk;
  wire m_aclk_en;
  wire m_axi_arready;
  wire [31:0]m_axi_awaddr;
  wire [1:0]m_axi_awburst;
  wire [3:0]m_axi_awcache;
  wire [7:0]m_axi_awlen;
  wire [0:0]m_axi_awlock;
  wire [2:0]m_axi_awprot;
  wire [3:0]m_axi_awqos;
  wire m_axi_awready;
  wire [3:0]m_axi_awregion;
  wire [2:0]m_axi_awsize;
  wire [5:0]m_axi_awuser;
  wire m_axi_awvalid;
  wire [0:0]m_axi_bid;
  wire [1:0]m_axi_bresp;
  wire [0:0]m_axi_buser;
  wire m_axi_bvalid;
  wire [31:0]m_axi_rdata;
  wire [0:0]m_axi_rid;
  wire m_axi_rlast;
  wire [1:0]m_axi_rresp;
  wire [0:0]m_axi_ruser;
  wire m_axi_rvalid;
  wire m_axi_wready;
  wire m_axis_tready;
  wire [9:0]prog_empty_thresh;
  wire [9:0]prog_empty_thresh_assert;
  wire [9:0]prog_empty_thresh_negate;
  wire [9:0]prog_full_thresh;
  wire [9:0]prog_full_thresh_assert;
  wire [9:0]prog_full_thresh_negate;
  wire rd_clk;
  wire rd_en;
  wire rd_rst;
  wire rst;
  wire s_aclk;
  wire s_aclk_en;
  wire s_aresetn;
  wire [31:0]s_axi_araddr;
  wire [1:0]s_axi_arburst;
  wire [3:0]s_axi_arcache;
  wire [0:0]s_axi_arid;
  wire [7:0]s_axi_arlen;
  wire [0:0]s_axi_arlock;
  wire [2:0]s_axi_arprot;
  wire [3:0]s_axi_arqos;
  wire [3:0]s_axi_arregion;
  wire [2:0]s_axi_arsize;
  wire [5:0]s_axi_aruser;
  wire s_axi_arvalid;
  wire [31:0]s_axi_awaddr;
  wire [1:0]s_axi_awburst;
  wire [3:0]s_axi_awcache;
  wire [0:0]s_axi_awid;
  wire [7:0]s_axi_awlen;
  wire [0:0]s_axi_awlock;
  wire [2:0]s_axi_awprot;
  wire [3:0]s_axi_awqos;
  wire s_axi_awready;
  wire [3:0]s_axi_awregion;
  wire [2:0]s_axi_awsize;
  wire [5:0]s_axi_awuser;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_rready;
  wire [31:0]s_axi_wdata;
  wire [0:0]s_axi_wid;
  wire s_axi_wlast;
  wire [3:0]s_axi_wstrb;
  wire [0:0]s_axi_wuser;
  wire s_axi_wvalid;
  wire [63:0]s_axis_tdata;
  wire [3:0]s_axis_tdest;
  wire [7:0]s_axis_tid;
  wire [3:0]s_axis_tkeep;
  wire s_axis_tlast;
  wire [3:0]s_axis_tstrb;
  wire [3:0]s_axis_tuser;
  wire s_axis_tvalid;
  wire srst;
  wire wr_clk;
  wire wr_en;
  wire wr_rst;

  assign almost_empty = \<const1> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[5] = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[5] = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[5] = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[5] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const0> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[5] = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[5] = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[9] = \<const0> ;
  assign data_count[8] = \<const0> ;
  assign data_count[7] = \<const0> ;
  assign data_count[6] = \<const0> ;
  assign data_count[5] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign dout[17] = \<const0> ;
  assign dout[16] = \<const0> ;
  assign dout[15] = \<const0> ;
  assign dout[14] = \<const0> ;
  assign dout[13] = \<const0> ;
  assign dout[12] = \<const0> ;
  assign dout[11] = \<const0> ;
  assign dout[10] = \<const0> ;
  assign dout[9] = \<const0> ;
  assign dout[8] = \<const0> ;
  assign dout[7] = \<const0> ;
  assign dout[6] = \<const0> ;
  assign dout[5] = \<const0> ;
  assign dout[4] = \<const0> ;
  assign dout[3] = \<const0> ;
  assign dout[2] = \<const0> ;
  assign dout[1] = \<const0> ;
  assign dout[0] = \<const0> ;
  assign empty = \<const1> ;
  assign full = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[5] = \<const0> ;
  assign m_axi_aruser[4] = \<const0> ;
  assign m_axi_aruser[3] = \<const0> ;
  assign m_axi_aruser[2] = \<const0> ;
  assign m_axi_aruser[1] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_bready = s_axi_bready;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[31:0] = s_axi_wdata;
  assign m_axi_wid[0] = s_axi_wid;
  assign m_axi_wlast = s_axi_wlast;
  assign m_axi_wstrb[3:0] = s_axi_wstrb;
  assign m_axi_wuser[0] = s_axi_wuser;
  assign m_axi_wvalid = s_axi_wvalid;
  assign m_axis_tdata[63] = \<const0> ;
  assign m_axis_tdata[62] = \<const0> ;
  assign m_axis_tdata[61] = \<const0> ;
  assign m_axis_tdata[60] = \<const0> ;
  assign m_axis_tdata[59] = \<const0> ;
  assign m_axis_tdata[58] = \<const0> ;
  assign m_axis_tdata[57] = \<const0> ;
  assign m_axis_tdata[56] = \<const0> ;
  assign m_axis_tdata[55] = \<const0> ;
  assign m_axis_tdata[54] = \<const0> ;
  assign m_axis_tdata[53] = \<const0> ;
  assign m_axis_tdata[52] = \<const0> ;
  assign m_axis_tdata[51] = \<const0> ;
  assign m_axis_tdata[50] = \<const0> ;
  assign m_axis_tdata[49] = \<const0> ;
  assign m_axis_tdata[48] = \<const0> ;
  assign m_axis_tdata[47] = \<const0> ;
  assign m_axis_tdata[46] = \<const0> ;
  assign m_axis_tdata[45] = \<const0> ;
  assign m_axis_tdata[44] = \<const0> ;
  assign m_axis_tdata[43] = \<const0> ;
  assign m_axis_tdata[42] = \<const0> ;
  assign m_axis_tdata[41] = \<const0> ;
  assign m_axis_tdata[40] = \<const0> ;
  assign m_axis_tdata[39] = \<const0> ;
  assign m_axis_tdata[38] = \<const0> ;
  assign m_axis_tdata[37] = \<const0> ;
  assign m_axis_tdata[36] = \<const0> ;
  assign m_axis_tdata[35] = \<const0> ;
  assign m_axis_tdata[34] = \<const0> ;
  assign m_axis_tdata[33] = \<const0> ;
  assign m_axis_tdata[32] = \<const0> ;
  assign m_axis_tdata[31] = \<const0> ;
  assign m_axis_tdata[30] = \<const0> ;
  assign m_axis_tdata[29] = \<const0> ;
  assign m_axis_tdata[28] = \<const0> ;
  assign m_axis_tdata[27] = \<const0> ;
  assign m_axis_tdata[26] = \<const0> ;
  assign m_axis_tdata[25] = \<const0> ;
  assign m_axis_tdata[24] = \<const0> ;
  assign m_axis_tdata[23] = \<const0> ;
  assign m_axis_tdata[22] = \<const0> ;
  assign m_axis_tdata[21] = \<const0> ;
  assign m_axis_tdata[20] = \<const0> ;
  assign m_axis_tdata[19] = \<const0> ;
  assign m_axis_tdata[18] = \<const0> ;
  assign m_axis_tdata[17] = \<const0> ;
  assign m_axis_tdata[16] = \<const0> ;
  assign m_axis_tdata[15] = \<const0> ;
  assign m_axis_tdata[14] = \<const0> ;
  assign m_axis_tdata[13] = \<const0> ;
  assign m_axis_tdata[12] = \<const0> ;
  assign m_axis_tdata[11] = \<const0> ;
  assign m_axis_tdata[10] = \<const0> ;
  assign m_axis_tdata[9] = \<const0> ;
  assign m_axis_tdata[8] = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[3] = \<const0> ;
  assign m_axis_tdest[2] = \<const0> ;
  assign m_axis_tdest[1] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[7] = \<const0> ;
  assign m_axis_tid[6] = \<const0> ;
  assign m_axis_tid[5] = \<const0> ;
  assign m_axis_tid[4] = \<const0> ;
  assign m_axis_tid[3] = \<const0> ;
  assign m_axis_tid[2] = \<const0> ;
  assign m_axis_tid[1] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[3] = \<const0> ;
  assign m_axis_tkeep[2] = \<const0> ;
  assign m_axis_tkeep[1] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[3] = \<const0> ;
  assign m_axis_tstrb[2] = \<const0> ;
  assign m_axis_tstrb[1] = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const1> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[9] = \<const0> ;
  assign rd_data_count[8] = \<const0> ;
  assign rd_data_count[7] = \<const0> ;
  assign rd_data_count[6] = \<const0> ;
  assign rd_data_count[5] = \<const0> ;
  assign rd_data_count[4] = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_bid[0] = m_axi_bid;
  assign s_axi_bresp[1:0] = m_axi_bresp;
  assign s_axi_buser[0] = m_axi_buser;
  assign s_axi_bvalid = m_axi_bvalid;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = m_axi_wready;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[9] = \<const0> ;
  assign wr_data_count[8] = \<const0> ;
  assign wr_data_count[7] = \<const0> ;
  assign wr_data_count[6] = \<const0> ;
  assign wr_data_count[5] = \<const0> ;
  assign wr_data_count[4] = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  assign wr_rst_busy = \<const0> ;
GND GND
       (.G(\<const0> ));
VCC VCC
       (.P(\<const1> ));
axi_dwidth_converter_0_fifo_generator_v12_0_synth inst_fifo_gen
       (.DI({s_axi_awaddr,s_axi_awlen,s_axi_awsize,s_axi_awburst,s_axi_awlock,s_axi_awcache,s_axi_awprot,s_axi_awqos,s_axi_awregion,s_axi_awuser}),
        .Q({m_axi_awaddr,m_axi_awlen,m_axi_awsize,m_axi_awburst,m_axi_awlock,m_axi_awcache,m_axi_awprot,m_axi_awqos,m_axi_awregion,m_axi_awuser}),
        .m_aclk(m_aclk),
        .m_axi_awready(m_axi_awready),
        .m_axi_awvalid(m_axi_awvalid),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v12_0" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "5" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "1" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "1" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_FAMILY = "virtex7" *) (* C_FULL_FLAGS_RST_VAL = "0" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_BACKUP = "0" *) (* C_HAS_DATA_COUNT = "0" *) 
(* C_HAS_INT_CLK = "0" *) (* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) 
(* C_HAS_RD_DATA_COUNT = "0" *) (* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "1" *) 
(* C_HAS_SRST = "0" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "2" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_MEMORY_TYPE = "2" *) 
(* C_MIF_FILE_NAME = "BlankString" *) (* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "31" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "30" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_RD_DATA_COUNT_WIDTH = "5" *) (* C_RD_DEPTH = "32" *) (* C_RD_FREQ = "1" *) 
(* C_RD_PNTR_WIDTH = "5" *) (* C_UNDERFLOW_LOW = "0" *) (* C_USE_DOUT_RST = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_EMBEDDED_REG = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_POWER_SAVING_MODE = "0" *) (* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "1" *) 
(* C_VALID_LOW = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "5" *) 
(* C_WR_DEPTH = "32" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "5" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* C_MSGON_VAL = "1" *) (* C_ENABLE_RST_SYNC = "1" *) 
(* C_ERROR_INJECTION_TYPE = "0" *) (* C_SYNCHRONIZER_STAGE = "3" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_AXI_TYPE = "0" *) (* C_HAS_AXI_WR_CHANNEL = "0" *) (* C_HAS_AXI_RD_CHANNEL = "0" *) 
(* C_HAS_SLAVE_CE = "0" *) (* C_HAS_MASTER_CE = "0" *) (* C_ADD_NGC_CONSTRAINT = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_ADDR_WIDTH = "32" *) (* C_AXI_DATA_WIDTH = "64" *) 
(* C_AXI_LEN_WIDTH = "8" *) (* C_AXI_LOCK_WIDTH = "2" *) (* C_HAS_AXI_ID = "0" *) 
(* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_RUSER = "0" *) (* C_AXI_ARUSER_WIDTH = "1" *) 
(* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_WUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_RUSER_WIDTH = "1" *) (* C_HAS_AXIS_TDATA = "0" *) (* C_HAS_AXIS_TID = "0" *) 
(* C_HAS_AXIS_TDEST = "0" *) (* C_HAS_AXIS_TUSER = "0" *) (* C_HAS_AXIS_TREADY = "1" *) 
(* C_HAS_AXIS_TLAST = "0" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) 
(* C_AXIS_TDATA_WIDTH = "64" *) (* C_AXIS_TID_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "4" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TSTRB_WIDTH = "4" *) (* C_AXIS_TKEEP_WIDTH = "4" *) 
(* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) (* C_WRCH_TYPE = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_AXIS_TYPE = "0" *) 
(* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RACH = "1" *) (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
(* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) (* C_APPLICATION_TYPE_WRCH = "0" *) 
(* C_APPLICATION_TYPE_RACH = "0" *) (* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "512x36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "512x36" *) (* C_PRIM_FIFO_TYPE_AXIS = "512x36" *) 
(* C_USE_ECC_WACH = "0" *) (* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
(* C_DIN_WIDTH_WACH = "32" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) (* C_DIN_WIDTH_AXIS = "1" *) 
(* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) (* C_WR_DEPTH_WRCH = "16" *) 
(* C_WR_DEPTH_RACH = "16" *) (* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_AXIS = "1024" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
(* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
(* C_HAS_DATA_COUNTS_RACH = "0" *) (* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_WACH = "0" *) (* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) (* C_PROG_FULL_TYPE_AXIS = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) (* C_REG_SLICE_MODE_AXIS = "0" *) 
module axi_dwidth_converter_0_fifo_generator_v12_0__parameterized0
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [0:0]din;
  input wr_en;
  input rd_en;
  input [4:0]prog_empty_thresh;
  input [4:0]prog_empty_thresh_assert;
  input [4:0]prog_empty_thresh_negate;
  input [4:0]prog_full_thresh;
  input [4:0]prog_full_thresh_assert;
  input [4:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [0:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [4:0]data_count;
  output [4:0]rd_data_count;
  output [4:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [1:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [3:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [3:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [1:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [3:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [3:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [1:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [3:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [1:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [3:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [63:0]s_axis_tdata;
  input [3:0]s_axis_tstrb;
  input [3:0]s_axis_tkeep;
  input s_axis_tlast;
  input [7:0]s_axis_tid;
  input [3:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [63:0]m_axis_tdata;
  output [3:0]m_axis_tstrb;
  output [3:0]m_axis_tkeep;
  output m_axis_tlast;
  output [7:0]m_axis_tid;
  output [3:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire axi_ar_injectdbiterr;
  wire axi_ar_injectsbiterr;
  wire [3:0]axi_ar_prog_empty_thresh;
  wire [3:0]axi_ar_prog_full_thresh;
  wire axi_aw_injectdbiterr;
  wire axi_aw_injectsbiterr;
  wire [3:0]axi_aw_prog_empty_thresh;
  wire [3:0]axi_aw_prog_full_thresh;
  wire axi_b_injectdbiterr;
  wire axi_b_injectsbiterr;
  wire [3:0]axi_b_prog_empty_thresh;
  wire [3:0]axi_b_prog_full_thresh;
  wire axi_r_injectdbiterr;
  wire axi_r_injectsbiterr;
  wire [9:0]axi_r_prog_empty_thresh;
  wire [9:0]axi_r_prog_full_thresh;
  wire axi_w_injectdbiterr;
  wire axi_w_injectsbiterr;
  wire [9:0]axi_w_prog_empty_thresh;
  wire [9:0]axi_w_prog_full_thresh;
  wire axis_injectdbiterr;
  wire axis_injectsbiterr;
  wire [9:0]axis_prog_empty_thresh;
  wire [9:0]axis_prog_full_thresh;
  wire backup;
  wire backup_marker;
  wire clk;
  wire [0:0]din;
  wire [0:0]dout;
  wire empty;
  wire full;
  wire injectdbiterr;
  wire injectsbiterr;
  wire int_clk;
  wire m_aclk;
  wire m_aclk_en;
  wire m_axi_arready;
  wire m_axi_awready;
  wire [3:0]m_axi_bid;
  wire [1:0]m_axi_bresp;
  wire [0:0]m_axi_buser;
  wire m_axi_bvalid;
  wire [63:0]m_axi_rdata;
  wire [3:0]m_axi_rid;
  wire m_axi_rlast;
  wire [1:0]m_axi_rresp;
  wire [0:0]m_axi_ruser;
  wire m_axi_rvalid;
  wire m_axi_wready;
  wire m_axis_tready;
  wire [4:0]prog_empty_thresh;
  wire [4:0]prog_empty_thresh_assert;
  wire [4:0]prog_empty_thresh_negate;
  wire [4:0]prog_full_thresh;
  wire [4:0]prog_full_thresh_assert;
  wire [4:0]prog_full_thresh_negate;
  wire rd_clk;
  wire rd_en;
  wire rd_rst;
  wire rst;
  wire s_aclk;
  wire s_aclk_en;
  wire s_aresetn;
  wire [31:0]s_axi_araddr;
  wire [1:0]s_axi_arburst;
  wire [3:0]s_axi_arcache;
  wire [3:0]s_axi_arid;
  wire [7:0]s_axi_arlen;
  wire [1:0]s_axi_arlock;
  wire [2:0]s_axi_arprot;
  wire [3:0]s_axi_arqos;
  wire [3:0]s_axi_arregion;
  wire [2:0]s_axi_arsize;
  wire [0:0]s_axi_aruser;
  wire s_axi_arvalid;
  wire [31:0]s_axi_awaddr;
  wire [1:0]s_axi_awburst;
  wire [3:0]s_axi_awcache;
  wire [3:0]s_axi_awid;
  wire [7:0]s_axi_awlen;
  wire [1:0]s_axi_awlock;
  wire [2:0]s_axi_awprot;
  wire [3:0]s_axi_awqos;
  wire [3:0]s_axi_awregion;
  wire [2:0]s_axi_awsize;
  wire [0:0]s_axi_awuser;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_rready;
  wire [63:0]s_axi_wdata;
  wire [3:0]s_axi_wid;
  wire s_axi_wlast;
  wire [7:0]s_axi_wstrb;
  wire [0:0]s_axi_wuser;
  wire s_axi_wvalid;
  wire [63:0]s_axis_tdata;
  wire [3:0]s_axis_tdest;
  wire [7:0]s_axis_tid;
  wire [3:0]s_axis_tkeep;
  wire s_axis_tlast;
  wire [3:0]s_axis_tstrb;
  wire [3:0]s_axis_tuser;
  wire s_axis_tvalid;
  wire srst;
  wire wr_clk;
  wire wr_en;
  wire wr_rst;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[3] = \<const0> ;
  assign m_axi_arid[2] = \<const0> ;
  assign m_axi_arid[1] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[1] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[3] = \<const0> ;
  assign m_axi_awid[2] = \<const0> ;
  assign m_axi_awid[1] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[1] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[3] = \<const0> ;
  assign m_axi_wid[2] = \<const0> ;
  assign m_axi_wid[1] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[63] = \<const0> ;
  assign m_axis_tdata[62] = \<const0> ;
  assign m_axis_tdata[61] = \<const0> ;
  assign m_axis_tdata[60] = \<const0> ;
  assign m_axis_tdata[59] = \<const0> ;
  assign m_axis_tdata[58] = \<const0> ;
  assign m_axis_tdata[57] = \<const0> ;
  assign m_axis_tdata[56] = \<const0> ;
  assign m_axis_tdata[55] = \<const0> ;
  assign m_axis_tdata[54] = \<const0> ;
  assign m_axis_tdata[53] = \<const0> ;
  assign m_axis_tdata[52] = \<const0> ;
  assign m_axis_tdata[51] = \<const0> ;
  assign m_axis_tdata[50] = \<const0> ;
  assign m_axis_tdata[49] = \<const0> ;
  assign m_axis_tdata[48] = \<const0> ;
  assign m_axis_tdata[47] = \<const0> ;
  assign m_axis_tdata[46] = \<const0> ;
  assign m_axis_tdata[45] = \<const0> ;
  assign m_axis_tdata[44] = \<const0> ;
  assign m_axis_tdata[43] = \<const0> ;
  assign m_axis_tdata[42] = \<const0> ;
  assign m_axis_tdata[41] = \<const0> ;
  assign m_axis_tdata[40] = \<const0> ;
  assign m_axis_tdata[39] = \<const0> ;
  assign m_axis_tdata[38] = \<const0> ;
  assign m_axis_tdata[37] = \<const0> ;
  assign m_axis_tdata[36] = \<const0> ;
  assign m_axis_tdata[35] = \<const0> ;
  assign m_axis_tdata[34] = \<const0> ;
  assign m_axis_tdata[33] = \<const0> ;
  assign m_axis_tdata[32] = \<const0> ;
  assign m_axis_tdata[31] = \<const0> ;
  assign m_axis_tdata[30] = \<const0> ;
  assign m_axis_tdata[29] = \<const0> ;
  assign m_axis_tdata[28] = \<const0> ;
  assign m_axis_tdata[27] = \<const0> ;
  assign m_axis_tdata[26] = \<const0> ;
  assign m_axis_tdata[25] = \<const0> ;
  assign m_axis_tdata[24] = \<const0> ;
  assign m_axis_tdata[23] = \<const0> ;
  assign m_axis_tdata[22] = \<const0> ;
  assign m_axis_tdata[21] = \<const0> ;
  assign m_axis_tdata[20] = \<const0> ;
  assign m_axis_tdata[19] = \<const0> ;
  assign m_axis_tdata[18] = \<const0> ;
  assign m_axis_tdata[17] = \<const0> ;
  assign m_axis_tdata[16] = \<const0> ;
  assign m_axis_tdata[15] = \<const0> ;
  assign m_axis_tdata[14] = \<const0> ;
  assign m_axis_tdata[13] = \<const0> ;
  assign m_axis_tdata[12] = \<const0> ;
  assign m_axis_tdata[11] = \<const0> ;
  assign m_axis_tdata[10] = \<const0> ;
  assign m_axis_tdata[9] = \<const0> ;
  assign m_axis_tdata[8] = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[3] = \<const0> ;
  assign m_axis_tdest[2] = \<const0> ;
  assign m_axis_tdest[1] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[7] = \<const0> ;
  assign m_axis_tid[6] = \<const0> ;
  assign m_axis_tid[5] = \<const0> ;
  assign m_axis_tid[4] = \<const0> ;
  assign m_axis_tid[3] = \<const0> ;
  assign m_axis_tid[2] = \<const0> ;
  assign m_axis_tid[1] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[3] = \<const0> ;
  assign m_axis_tkeep[2] = \<const0> ;
  assign m_axis_tkeep[1] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[3] = \<const0> ;
  assign m_axis_tstrb[2] = \<const0> ;
  assign m_axis_tstrb[1] = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[4] = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[4] = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  assign wr_rst_busy = \<const0> ;
GND GND
       (.G(\<const0> ));
VCC VCC
       (.P(\<const1> ));
axi_dwidth_converter_0_fifo_generator_v12_0_synth__parameterized0 inst_fifo_gen
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v12_0" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "10" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "18" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "18" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_FAMILY = "virtex7" *) (* C_FULL_FLAGS_RST_VAL = "1" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_BACKUP = "0" *) (* C_HAS_DATA_COUNT = "0" *) 
(* C_HAS_INT_CLK = "0" *) (* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) 
(* C_HAS_RD_DATA_COUNT = "0" *) (* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "1" *) 
(* C_HAS_SRST = "0" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "0" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_MEMORY_TYPE = "1" *) 
(* C_MIF_FILE_NAME = "BlankString" *) (* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) 
(* C_PRELOAD_LATENCY = "1" *) (* C_PRELOAD_REGS = "0" *) (* C_PRIM_FIFO_TYPE = "4kx4" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "2" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "3" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "1022" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "1021" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_RD_DATA_COUNT_WIDTH = "10" *) (* C_RD_DEPTH = "1024" *) (* C_RD_FREQ = "1" *) 
(* C_RD_PNTR_WIDTH = "10" *) (* C_UNDERFLOW_LOW = "0" *) (* C_USE_DOUT_RST = "1" *) 
(* C_USE_ECC = "0" *) (* C_USE_EMBEDDED_REG = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_POWER_SAVING_MODE = "0" *) (* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "10" *) 
(* C_WR_DEPTH = "1024" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "10" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* C_MSGON_VAL = "1" *) (* C_ENABLE_RST_SYNC = "1" *) 
(* C_ERROR_INJECTION_TYPE = "0" *) (* C_SYNCHRONIZER_STAGE = "3" *) (* C_INTERFACE_TYPE = "2" *) 
(* C_AXI_TYPE = "1" *) (* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_RD_CHANNEL = "0" *) 
(* C_HAS_SLAVE_CE = "0" *) (* C_HAS_MASTER_CE = "0" *) (* C_ADD_NGC_CONSTRAINT = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_AXI_ID_WIDTH = "1" *) (* C_AXI_ADDR_WIDTH = "32" *) (* C_AXI_DATA_WIDTH = "32" *) 
(* C_AXI_LEN_WIDTH = "8" *) (* C_AXI_LOCK_WIDTH = "2" *) (* C_HAS_AXI_ID = "1" *) 
(* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_RUSER = "0" *) (* C_AXI_ARUSER_WIDTH = "1" *) 
(* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_WUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_RUSER_WIDTH = "1" *) (* C_HAS_AXIS_TDATA = "0" *) (* C_HAS_AXIS_TID = "0" *) 
(* C_HAS_AXIS_TDEST = "0" *) (* C_HAS_AXIS_TUSER = "0" *) (* C_HAS_AXIS_TREADY = "1" *) 
(* C_HAS_AXIS_TLAST = "0" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) 
(* C_AXIS_TDATA_WIDTH = "64" *) (* C_AXIS_TID_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "4" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TSTRB_WIDTH = "4" *) (* C_AXIS_TKEEP_WIDTH = "4" *) 
(* C_WACH_TYPE = "2" *) (* C_WDCH_TYPE = "2" *) (* C_WRCH_TYPE = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_AXIS_TYPE = "0" *) 
(* C_IMPLEMENTATION_TYPE_WACH = "12" *) (* C_IMPLEMENTATION_TYPE_WDCH = "11" *) (* C_IMPLEMENTATION_TYPE_WRCH = "12" *) 
(* C_IMPLEMENTATION_TYPE_RACH = "12" *) (* C_IMPLEMENTATION_TYPE_RDCH = "11" *) (* C_IMPLEMENTATION_TYPE_AXIS = "11" *) 
(* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) (* C_APPLICATION_TYPE_WRCH = "0" *) 
(* C_APPLICATION_TYPE_RACH = "0" *) (* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "512x36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "512x36" *) (* C_PRIM_FIFO_TYPE_AXIS = "512x36" *) 
(* C_USE_ECC_WACH = "0" *) (* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
(* C_DIN_WIDTH_WACH = "63" *) (* C_DIN_WIDTH_WDCH = "38" *) (* C_DIN_WIDTH_WRCH = "3" *) 
(* C_DIN_WIDTH_RACH = "63" *) (* C_DIN_WIDTH_RDCH = "36" *) (* C_DIN_WIDTH_AXIS = "1" *) 
(* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) (* C_WR_DEPTH_WRCH = "32" *) 
(* C_WR_DEPTH_RACH = "16" *) (* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_AXIS = "1024" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "5" *) 
(* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
(* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
(* C_HAS_DATA_COUNTS_RACH = "0" *) (* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_WACH = "0" *) (* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) (* C_PROG_FULL_TYPE_AXIS = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "15" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "31" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "15" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "13" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1021" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "29" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "13" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1021" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1021" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) (* C_REG_SLICE_MODE_AXIS = "0" *) 
module axi_dwidth_converter_0_fifo_generator_v12_0__parameterized1
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [17:0]din;
  input wr_en;
  input rd_en;
  input [9:0]prog_empty_thresh;
  input [9:0]prog_empty_thresh_assert;
  input [9:0]prog_empty_thresh_negate;
  input [9:0]prog_full_thresh;
  input [9:0]prog_full_thresh_assert;
  input [9:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [17:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [9:0]data_count;
  output [9:0]rd_data_count;
  output [9:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [1:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [1:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [31:0]m_axi_wdata;
  output [3:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [1:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [1:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [31:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [63:0]s_axis_tdata;
  input [3:0]s_axis_tstrb;
  input [3:0]s_axis_tkeep;
  input s_axis_tlast;
  input [7:0]s_axis_tid;
  input [3:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [63:0]m_axis_tdata;
  output [3:0]m_axis_tstrb;
  output [3:0]m_axis_tkeep;
  output m_axis_tlast;
  output [7:0]m_axis_tid;
  output [3:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [4:0]axi_b_prog_full_thresh;
  input [4:0]axi_b_prog_empty_thresh;
  output [5:0]axi_b_data_count;
  output [5:0]axi_b_wr_data_count;
  output [5:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire axi_ar_injectdbiterr;
  wire axi_ar_injectsbiterr;
  wire [3:0]axi_ar_prog_empty_thresh;
  wire [3:0]axi_ar_prog_full_thresh;
  wire axi_aw_injectdbiterr;
  wire axi_aw_injectsbiterr;
  wire [3:0]axi_aw_prog_empty_thresh;
  wire [3:0]axi_aw_prog_full_thresh;
  wire axi_b_injectdbiterr;
  wire axi_b_injectsbiterr;
  wire [4:0]axi_b_prog_empty_thresh;
  wire [4:0]axi_b_prog_full_thresh;
  wire axi_r_injectdbiterr;
  wire axi_r_injectsbiterr;
  wire [9:0]axi_r_prog_empty_thresh;
  wire [9:0]axi_r_prog_full_thresh;
  wire axi_w_injectdbiterr;
  wire axi_w_injectsbiterr;
  wire [9:0]axi_w_prog_empty_thresh;
  wire [9:0]axi_w_prog_full_thresh;
  wire axis_injectdbiterr;
  wire axis_injectsbiterr;
  wire [9:0]axis_prog_empty_thresh;
  wire [9:0]axis_prog_full_thresh;
  wire backup;
  wire backup_marker;
  wire clk;
  wire [17:0]din;
  wire injectdbiterr;
  wire injectsbiterr;
  wire int_clk;
  wire m_aclk;
  wire m_aclk_en;
  wire m_axi_arready;
  wire m_axi_awready;
  wire [0:0]m_axi_bid;
  wire m_axi_bready;
  wire [1:0]m_axi_bresp;
  wire [0:0]m_axi_buser;
  wire m_axi_bvalid;
  wire [31:0]m_axi_rdata;
  wire [0:0]m_axi_rid;
  wire m_axi_rlast;
  wire [1:0]m_axi_rresp;
  wire [0:0]m_axi_ruser;
  wire m_axi_rvalid;
  wire m_axi_wready;
  wire m_axis_tready;
  wire [9:0]prog_empty_thresh;
  wire [9:0]prog_empty_thresh_assert;
  wire [9:0]prog_empty_thresh_negate;
  wire [9:0]prog_full_thresh;
  wire [9:0]prog_full_thresh_assert;
  wire [9:0]prog_full_thresh_negate;
  wire rd_clk;
  wire rd_en;
  wire rd_rst;
  wire rst;
  wire s_aclk;
  wire s_aclk_en;
  wire s_aresetn;
  wire [31:0]s_axi_araddr;
  wire [1:0]s_axi_arburst;
  wire [3:0]s_axi_arcache;
  wire [0:0]s_axi_arid;
  wire [7:0]s_axi_arlen;
  wire [1:0]s_axi_arlock;
  wire [2:0]s_axi_arprot;
  wire [3:0]s_axi_arqos;
  wire [3:0]s_axi_arregion;
  wire [2:0]s_axi_arsize;
  wire [0:0]s_axi_aruser;
  wire s_axi_arvalid;
  wire [31:0]s_axi_awaddr;
  wire [1:0]s_axi_awburst;
  wire [3:0]s_axi_awcache;
  wire [0:0]s_axi_awid;
  wire [7:0]s_axi_awlen;
  wire [1:0]s_axi_awlock;
  wire [2:0]s_axi_awprot;
  wire [3:0]s_axi_awqos;
  wire [3:0]s_axi_awregion;
  wire [2:0]s_axi_awsize;
  wire [0:0]s_axi_awuser;
  wire s_axi_awvalid;
  wire [0:0]s_axi_bid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire s_axi_rready;
  wire [31:0]s_axi_wdata;
  wire [0:0]s_axi_wid;
  wire s_axi_wlast;
  wire [3:0]s_axi_wstrb;
  wire [0:0]s_axi_wuser;
  wire s_axi_wvalid;
  wire [63:0]s_axis_tdata;
  wire [3:0]s_axis_tdest;
  wire [7:0]s_axis_tid;
  wire [3:0]s_axis_tkeep;
  wire s_axis_tlast;
  wire [3:0]s_axis_tstrb;
  wire [3:0]s_axis_tuser;
  wire s_axis_tvalid;
  wire srst;
  wire wr_clk;
  wire wr_en;
  wire wr_rst;

  assign almost_empty = \<const1> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[5] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const0> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[5] = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[5] = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[9] = \<const0> ;
  assign data_count[8] = \<const0> ;
  assign data_count[7] = \<const0> ;
  assign data_count[6] = \<const0> ;
  assign data_count[5] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign dout[17] = \<const0> ;
  assign dout[16] = \<const0> ;
  assign dout[15] = \<const0> ;
  assign dout[14] = \<const0> ;
  assign dout[13] = \<const0> ;
  assign dout[12] = \<const0> ;
  assign dout[11] = \<const0> ;
  assign dout[10] = \<const0> ;
  assign dout[9] = \<const0> ;
  assign dout[8] = \<const0> ;
  assign dout[7] = \<const0> ;
  assign dout[6] = \<const0> ;
  assign dout[5] = \<const0> ;
  assign dout[4] = \<const0> ;
  assign dout[3] = \<const0> ;
  assign dout[2] = \<const0> ;
  assign dout[1] = \<const0> ;
  assign dout[0] = \<const0> ;
  assign empty = \<const1> ;
  assign full = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[1] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31:0] = s_axi_awaddr;
  assign m_axi_awburst[1:0] = s_axi_awburst;
  assign m_axi_awcache[3:0] = s_axi_awcache;
  assign m_axi_awid[0] = s_axi_awid;
  assign m_axi_awlen[7:0] = s_axi_awlen;
  assign m_axi_awlock[1:0] = s_axi_awlock;
  assign m_axi_awprot[2:0] = s_axi_awprot;
  assign m_axi_awqos[3:0] = s_axi_awqos;
  assign m_axi_awregion[3:0] = s_axi_awregion;
  assign m_axi_awsize[2:0] = s_axi_awsize;
  assign m_axi_awuser[0] = s_axi_awuser;
  assign m_axi_awvalid = s_axi_awvalid;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[31:0] = s_axi_wdata;
  assign m_axi_wid[0] = s_axi_wid;
  assign m_axi_wlast = s_axi_wlast;
  assign m_axi_wstrb[3:0] = s_axi_wstrb;
  assign m_axi_wuser[0] = s_axi_wuser;
  assign m_axi_wvalid = s_axi_wvalid;
  assign m_axis_tdata[63] = \<const0> ;
  assign m_axis_tdata[62] = \<const0> ;
  assign m_axis_tdata[61] = \<const0> ;
  assign m_axis_tdata[60] = \<const0> ;
  assign m_axis_tdata[59] = \<const0> ;
  assign m_axis_tdata[58] = \<const0> ;
  assign m_axis_tdata[57] = \<const0> ;
  assign m_axis_tdata[56] = \<const0> ;
  assign m_axis_tdata[55] = \<const0> ;
  assign m_axis_tdata[54] = \<const0> ;
  assign m_axis_tdata[53] = \<const0> ;
  assign m_axis_tdata[52] = \<const0> ;
  assign m_axis_tdata[51] = \<const0> ;
  assign m_axis_tdata[50] = \<const0> ;
  assign m_axis_tdata[49] = \<const0> ;
  assign m_axis_tdata[48] = \<const0> ;
  assign m_axis_tdata[47] = \<const0> ;
  assign m_axis_tdata[46] = \<const0> ;
  assign m_axis_tdata[45] = \<const0> ;
  assign m_axis_tdata[44] = \<const0> ;
  assign m_axis_tdata[43] = \<const0> ;
  assign m_axis_tdata[42] = \<const0> ;
  assign m_axis_tdata[41] = \<const0> ;
  assign m_axis_tdata[40] = \<const0> ;
  assign m_axis_tdata[39] = \<const0> ;
  assign m_axis_tdata[38] = \<const0> ;
  assign m_axis_tdata[37] = \<const0> ;
  assign m_axis_tdata[36] = \<const0> ;
  assign m_axis_tdata[35] = \<const0> ;
  assign m_axis_tdata[34] = \<const0> ;
  assign m_axis_tdata[33] = \<const0> ;
  assign m_axis_tdata[32] = \<const0> ;
  assign m_axis_tdata[31] = \<const0> ;
  assign m_axis_tdata[30] = \<const0> ;
  assign m_axis_tdata[29] = \<const0> ;
  assign m_axis_tdata[28] = \<const0> ;
  assign m_axis_tdata[27] = \<const0> ;
  assign m_axis_tdata[26] = \<const0> ;
  assign m_axis_tdata[25] = \<const0> ;
  assign m_axis_tdata[24] = \<const0> ;
  assign m_axis_tdata[23] = \<const0> ;
  assign m_axis_tdata[22] = \<const0> ;
  assign m_axis_tdata[21] = \<const0> ;
  assign m_axis_tdata[20] = \<const0> ;
  assign m_axis_tdata[19] = \<const0> ;
  assign m_axis_tdata[18] = \<const0> ;
  assign m_axis_tdata[17] = \<const0> ;
  assign m_axis_tdata[16] = \<const0> ;
  assign m_axis_tdata[15] = \<const0> ;
  assign m_axis_tdata[14] = \<const0> ;
  assign m_axis_tdata[13] = \<const0> ;
  assign m_axis_tdata[12] = \<const0> ;
  assign m_axis_tdata[11] = \<const0> ;
  assign m_axis_tdata[10] = \<const0> ;
  assign m_axis_tdata[9] = \<const0> ;
  assign m_axis_tdata[8] = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[3] = \<const0> ;
  assign m_axis_tdest[2] = \<const0> ;
  assign m_axis_tdest[1] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[7] = \<const0> ;
  assign m_axis_tid[6] = \<const0> ;
  assign m_axis_tid[5] = \<const0> ;
  assign m_axis_tid[4] = \<const0> ;
  assign m_axis_tid[3] = \<const0> ;
  assign m_axis_tid[2] = \<const0> ;
  assign m_axis_tid[1] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[3] = \<const0> ;
  assign m_axis_tkeep[2] = \<const0> ;
  assign m_axis_tkeep[1] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[3] = \<const0> ;
  assign m_axis_tstrb[2] = \<const0> ;
  assign m_axis_tstrb[1] = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const1> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[9] = \<const0> ;
  assign rd_data_count[8] = \<const0> ;
  assign rd_data_count[7] = \<const0> ;
  assign rd_data_count[6] = \<const0> ;
  assign rd_data_count[5] = \<const0> ;
  assign rd_data_count[4] = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = m_axi_awready;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = m_axi_wready;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[9] = \<const0> ;
  assign wr_data_count[8] = \<const0> ;
  assign wr_data_count[7] = \<const0> ;
  assign wr_data_count[6] = \<const0> ;
  assign wr_data_count[5] = \<const0> ;
  assign wr_data_count[4] = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  assign wr_rst_busy = \<const0> ;
GND GND
       (.G(\<const0> ));
VCC VCC
       (.P(\<const1> ));
axi_dwidth_converter_0_fifo_generator_v12_0_synth__parameterized1 inst_fifo_gen
       (.m_aclk(m_aclk),
        .m_axi_bid(m_axi_bid),
        .m_axi_bready(m_axi_bready),
        .m_axi_bresp(m_axi_bresp),
        .m_axi_bvalid(m_axi_bvalid),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .s_axi_bid(s_axi_bid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(s_axi_bresp),
        .s_axi_bvalid(s_axi_bvalid));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v12_0" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "10" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "18" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "18" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_FAMILY = "virtex7" *) (* C_FULL_FLAGS_RST_VAL = "1" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_BACKUP = "0" *) (* C_HAS_DATA_COUNT = "0" *) 
(* C_HAS_INT_CLK = "0" *) (* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) 
(* C_HAS_RD_DATA_COUNT = "0" *) (* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "1" *) 
(* C_HAS_SRST = "0" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "0" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_MEMORY_TYPE = "1" *) 
(* C_MIF_FILE_NAME = "BlankString" *) (* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) 
(* C_PRELOAD_LATENCY = "1" *) (* C_PRELOAD_REGS = "0" *) (* C_PRIM_FIFO_TYPE = "4kx4" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "2" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "3" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "1022" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "1021" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_RD_DATA_COUNT_WIDTH = "10" *) (* C_RD_DEPTH = "1024" *) (* C_RD_FREQ = "1" *) 
(* C_RD_PNTR_WIDTH = "10" *) (* C_UNDERFLOW_LOW = "0" *) (* C_USE_DOUT_RST = "1" *) 
(* C_USE_ECC = "0" *) (* C_USE_EMBEDDED_REG = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_POWER_SAVING_MODE = "0" *) (* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "10" *) 
(* C_WR_DEPTH = "1024" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "10" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* C_MSGON_VAL = "1" *) (* C_ENABLE_RST_SYNC = "1" *) 
(* C_ERROR_INJECTION_TYPE = "0" *) (* C_SYNCHRONIZER_STAGE = "3" *) (* C_INTERFACE_TYPE = "2" *) 
(* C_AXI_TYPE = "1" *) (* C_HAS_AXI_WR_CHANNEL = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) 
(* C_HAS_SLAVE_CE = "0" *) (* C_HAS_MASTER_CE = "0" *) (* C_ADD_NGC_CONSTRAINT = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_AXI_ID_WIDTH = "1" *) (* C_AXI_ADDR_WIDTH = "32" *) (* C_AXI_DATA_WIDTH = "32" *) 
(* C_AXI_LEN_WIDTH = "8" *) (* C_AXI_LOCK_WIDTH = "1" *) (* C_HAS_AXI_ID = "0" *) 
(* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_RUSER = "0" *) (* C_AXI_ARUSER_WIDTH = "1" *) 
(* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_WUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_RUSER_WIDTH = "1" *) (* C_HAS_AXIS_TDATA = "0" *) (* C_HAS_AXIS_TID = "0" *) 
(* C_HAS_AXIS_TDEST = "0" *) (* C_HAS_AXIS_TUSER = "0" *) (* C_HAS_AXIS_TREADY = "1" *) 
(* C_HAS_AXIS_TLAST = "0" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) 
(* C_AXIS_TDATA_WIDTH = "64" *) (* C_AXIS_TID_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "4" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TSTRB_WIDTH = "4" *) (* C_AXIS_TKEEP_WIDTH = "4" *) 
(* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) (* C_WRCH_TYPE = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "2" *) (* C_AXIS_TYPE = "0" *) 
(* C_IMPLEMENTATION_TYPE_WACH = "12" *) (* C_IMPLEMENTATION_TYPE_WDCH = "11" *) (* C_IMPLEMENTATION_TYPE_WRCH = "12" *) 
(* C_IMPLEMENTATION_TYPE_RACH = "12" *) (* C_IMPLEMENTATION_TYPE_RDCH = "11" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
(* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) (* C_APPLICATION_TYPE_WRCH = "0" *) 
(* C_APPLICATION_TYPE_RACH = "0" *) (* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "512x36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "512x36" *) (* C_PRIM_FIFO_TYPE_AXIS = "512x36" *) 
(* C_USE_ECC_WACH = "0" *) (* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
(* C_DIN_WIDTH_WACH = "61" *) (* C_DIN_WIDTH_WDCH = "37" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DIN_WIDTH_RACH = "61" *) (* C_DIN_WIDTH_RDCH = "35" *) (* C_DIN_WIDTH_AXIS = "1" *) 
(* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) (* C_WR_DEPTH_WRCH = "16" *) 
(* C_WR_DEPTH_RACH = "32" *) (* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_AXIS = "1024" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_PNTR_WIDTH_RACH = "5" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
(* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
(* C_HAS_DATA_COUNTS_RACH = "0" *) (* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_WACH = "0" *) (* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) (* C_PROG_FULL_TYPE_AXIS = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "31" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "15" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "15" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "30" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "14" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "14" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) (* C_REG_SLICE_MODE_AXIS = "0" *) 
module axi_dwidth_converter_0_fifo_generator_v12_0__parameterized2
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [17:0]din;
  input wr_en;
  input rd_en;
  input [9:0]prog_empty_thresh;
  input [9:0]prog_empty_thresh_assert;
  input [9:0]prog_empty_thresh_negate;
  input [9:0]prog_full_thresh;
  input [9:0]prog_full_thresh_assert;
  input [9:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [17:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [9:0]data_count;
  output [9:0]rd_data_count;
  output [9:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [31:0]m_axi_wdata;
  output [3:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [31:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [63:0]s_axis_tdata;
  input [3:0]s_axis_tstrb;
  input [3:0]s_axis_tkeep;
  input s_axis_tlast;
  input [7:0]s_axis_tid;
  input [3:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [63:0]m_axis_tdata;
  output [3:0]m_axis_tstrb;
  output [3:0]m_axis_tkeep;
  output m_axis_tlast;
  output [7:0]m_axis_tid;
  output [3:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [4:0]axi_ar_prog_full_thresh;
  input [4:0]axi_ar_prog_empty_thresh;
  output [5:0]axi_ar_data_count;
  output [5:0]axi_ar_wr_data_count;
  output [5:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire axi_ar_injectdbiterr;
  wire axi_ar_injectsbiterr;
  wire [4:0]axi_ar_prog_empty_thresh;
  wire [4:0]axi_ar_prog_full_thresh;
  wire axi_aw_injectdbiterr;
  wire axi_aw_injectsbiterr;
  wire [3:0]axi_aw_prog_empty_thresh;
  wire [3:0]axi_aw_prog_full_thresh;
  wire axi_b_injectdbiterr;
  wire axi_b_injectsbiterr;
  wire [3:0]axi_b_prog_empty_thresh;
  wire [3:0]axi_b_prog_full_thresh;
  wire axi_r_injectdbiterr;
  wire axi_r_injectsbiterr;
  wire [9:0]axi_r_prog_empty_thresh;
  wire [9:0]axi_r_prog_full_thresh;
  wire axi_w_injectdbiterr;
  wire axi_w_injectsbiterr;
  wire [9:0]axi_w_prog_empty_thresh;
  wire [9:0]axi_w_prog_full_thresh;
  wire axis_injectdbiterr;
  wire axis_injectsbiterr;
  wire [9:0]axis_prog_empty_thresh;
  wire [9:0]axis_prog_full_thresh;
  wire backup;
  wire backup_marker;
  wire clk;
  wire [17:0]din;
  wire injectdbiterr;
  wire injectsbiterr;
  wire int_clk;
  wire m_aclk;
  wire m_aclk_en;
  wire [31:0]m_axi_araddr;
  wire [1:0]m_axi_arburst;
  wire [3:0]m_axi_arcache;
  wire [7:0]m_axi_arlen;
  wire [0:0]m_axi_arlock;
  wire [2:0]m_axi_arprot;
  wire [3:0]m_axi_arqos;
  wire m_axi_arready;
  wire [3:0]m_axi_arregion;
  wire [2:0]m_axi_arsize;
  wire m_axi_arvalid;
  wire m_axi_awready;
  wire [0:0]m_axi_bid;
  wire [1:0]m_axi_bresp;
  wire [0:0]m_axi_buser;
  wire m_axi_bvalid;
  wire [31:0]m_axi_rdata;
  wire [0:0]m_axi_rid;
  wire m_axi_rlast;
  wire [1:0]m_axi_rresp;
  wire [0:0]m_axi_ruser;
  wire m_axi_rvalid;
  wire m_axi_wready;
  wire m_axis_tready;
  wire [9:0]prog_empty_thresh;
  wire [9:0]prog_empty_thresh_assert;
  wire [9:0]prog_empty_thresh_negate;
  wire [9:0]prog_full_thresh;
  wire [9:0]prog_full_thresh_assert;
  wire [9:0]prog_full_thresh_negate;
  wire rd_clk;
  wire rd_en;
  wire rd_rst;
  wire rst;
  wire s_aclk;
  wire s_aclk_en;
  wire s_aresetn;
  wire [31:0]s_axi_araddr;
  wire [1:0]s_axi_arburst;
  wire [3:0]s_axi_arcache;
  wire [0:0]s_axi_arid;
  wire [7:0]s_axi_arlen;
  wire [0:0]s_axi_arlock;
  wire [2:0]s_axi_arprot;
  wire [3:0]s_axi_arqos;
  wire s_axi_arready;
  wire [3:0]s_axi_arregion;
  wire [2:0]s_axi_arsize;
  wire [0:0]s_axi_aruser;
  wire s_axi_arvalid;
  wire [31:0]s_axi_awaddr;
  wire [1:0]s_axi_awburst;
  wire [3:0]s_axi_awcache;
  wire [0:0]s_axi_awid;
  wire [7:0]s_axi_awlen;
  wire [0:0]s_axi_awlock;
  wire [2:0]s_axi_awprot;
  wire [3:0]s_axi_awqos;
  wire [3:0]s_axi_awregion;
  wire [2:0]s_axi_awsize;
  wire [0:0]s_axi_awuser;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_rready;
  wire [31:0]s_axi_wdata;
  wire [0:0]s_axi_wid;
  wire s_axi_wlast;
  wire [3:0]s_axi_wstrb;
  wire [0:0]s_axi_wuser;
  wire s_axi_wvalid;
  wire [63:0]s_axis_tdata;
  wire [3:0]s_axis_tdest;
  wire [7:0]s_axis_tid;
  wire [3:0]s_axis_tkeep;
  wire s_axis_tlast;
  wire [3:0]s_axis_tstrb;
  wire [3:0]s_axis_tuser;
  wire s_axis_tvalid;
  wire srst;
  wire wr_clk;
  wire wr_en;
  wire wr_rst;

  assign almost_empty = \<const1> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[5] = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const0> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[5] = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[5] = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[9] = \<const0> ;
  assign data_count[8] = \<const0> ;
  assign data_count[7] = \<const0> ;
  assign data_count[6] = \<const0> ;
  assign data_count[5] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign dout[17] = \<const0> ;
  assign dout[16] = \<const0> ;
  assign dout[15] = \<const0> ;
  assign dout[14] = \<const0> ;
  assign dout[13] = \<const0> ;
  assign dout[12] = \<const0> ;
  assign dout[11] = \<const0> ;
  assign dout[10] = \<const0> ;
  assign dout[9] = \<const0> ;
  assign dout[8] = \<const0> ;
  assign dout[7] = \<const0> ;
  assign dout[6] = \<const0> ;
  assign dout[5] = \<const0> ;
  assign dout[4] = \<const0> ;
  assign dout[3] = \<const0> ;
  assign dout[2] = \<const0> ;
  assign dout[1] = \<const0> ;
  assign dout[0] = \<const0> ;
  assign empty = \<const1> ;
  assign full = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = s_axi_rready;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[63] = \<const0> ;
  assign m_axis_tdata[62] = \<const0> ;
  assign m_axis_tdata[61] = \<const0> ;
  assign m_axis_tdata[60] = \<const0> ;
  assign m_axis_tdata[59] = \<const0> ;
  assign m_axis_tdata[58] = \<const0> ;
  assign m_axis_tdata[57] = \<const0> ;
  assign m_axis_tdata[56] = \<const0> ;
  assign m_axis_tdata[55] = \<const0> ;
  assign m_axis_tdata[54] = \<const0> ;
  assign m_axis_tdata[53] = \<const0> ;
  assign m_axis_tdata[52] = \<const0> ;
  assign m_axis_tdata[51] = \<const0> ;
  assign m_axis_tdata[50] = \<const0> ;
  assign m_axis_tdata[49] = \<const0> ;
  assign m_axis_tdata[48] = \<const0> ;
  assign m_axis_tdata[47] = \<const0> ;
  assign m_axis_tdata[46] = \<const0> ;
  assign m_axis_tdata[45] = \<const0> ;
  assign m_axis_tdata[44] = \<const0> ;
  assign m_axis_tdata[43] = \<const0> ;
  assign m_axis_tdata[42] = \<const0> ;
  assign m_axis_tdata[41] = \<const0> ;
  assign m_axis_tdata[40] = \<const0> ;
  assign m_axis_tdata[39] = \<const0> ;
  assign m_axis_tdata[38] = \<const0> ;
  assign m_axis_tdata[37] = \<const0> ;
  assign m_axis_tdata[36] = \<const0> ;
  assign m_axis_tdata[35] = \<const0> ;
  assign m_axis_tdata[34] = \<const0> ;
  assign m_axis_tdata[33] = \<const0> ;
  assign m_axis_tdata[32] = \<const0> ;
  assign m_axis_tdata[31] = \<const0> ;
  assign m_axis_tdata[30] = \<const0> ;
  assign m_axis_tdata[29] = \<const0> ;
  assign m_axis_tdata[28] = \<const0> ;
  assign m_axis_tdata[27] = \<const0> ;
  assign m_axis_tdata[26] = \<const0> ;
  assign m_axis_tdata[25] = \<const0> ;
  assign m_axis_tdata[24] = \<const0> ;
  assign m_axis_tdata[23] = \<const0> ;
  assign m_axis_tdata[22] = \<const0> ;
  assign m_axis_tdata[21] = \<const0> ;
  assign m_axis_tdata[20] = \<const0> ;
  assign m_axis_tdata[19] = \<const0> ;
  assign m_axis_tdata[18] = \<const0> ;
  assign m_axis_tdata[17] = \<const0> ;
  assign m_axis_tdata[16] = \<const0> ;
  assign m_axis_tdata[15] = \<const0> ;
  assign m_axis_tdata[14] = \<const0> ;
  assign m_axis_tdata[13] = \<const0> ;
  assign m_axis_tdata[12] = \<const0> ;
  assign m_axis_tdata[11] = \<const0> ;
  assign m_axis_tdata[10] = \<const0> ;
  assign m_axis_tdata[9] = \<const0> ;
  assign m_axis_tdata[8] = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[3] = \<const0> ;
  assign m_axis_tdest[2] = \<const0> ;
  assign m_axis_tdest[1] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[7] = \<const0> ;
  assign m_axis_tid[6] = \<const0> ;
  assign m_axis_tid[5] = \<const0> ;
  assign m_axis_tid[4] = \<const0> ;
  assign m_axis_tid[3] = \<const0> ;
  assign m_axis_tid[2] = \<const0> ;
  assign m_axis_tid[1] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[3] = \<const0> ;
  assign m_axis_tkeep[2] = \<const0> ;
  assign m_axis_tkeep[1] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[3] = \<const0> ;
  assign m_axis_tstrb[2] = \<const0> ;
  assign m_axis_tstrb[1] = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const1> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[9] = \<const0> ;
  assign rd_data_count[8] = \<const0> ;
  assign rd_data_count[7] = \<const0> ;
  assign rd_data_count[6] = \<const0> ;
  assign rd_data_count[5] = \<const0> ;
  assign rd_data_count[4] = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[31:0] = m_axi_rdata;
  assign s_axi_rid[0] = m_axi_rid;
  assign s_axi_rlast = m_axi_rlast;
  assign s_axi_rresp[1:0] = m_axi_rresp;
  assign s_axi_ruser[0] = m_axi_ruser;
  assign s_axi_rvalid = m_axi_rvalid;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[9] = \<const0> ;
  assign wr_data_count[8] = \<const0> ;
  assign wr_data_count[7] = \<const0> ;
  assign wr_data_count[6] = \<const0> ;
  assign wr_data_count[5] = \<const0> ;
  assign wr_data_count[4] = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  assign wr_rst_busy = \<const0> ;
GND GND
       (.G(\<const0> ));
VCC VCC
       (.P(\<const1> ));
axi_dwidth_converter_0_fifo_generator_v12_0_synth__parameterized2 inst_fifo_gen
       (.DI({s_axi_araddr,s_axi_arlen,s_axi_arsize,s_axi_arburst,s_axi_arlock,s_axi_arcache,s_axi_arprot,s_axi_arqos,s_axi_arregion}),
        .Q({m_axi_araddr,m_axi_arlen,m_axi_arsize,m_axi_arburst,m_axi_arlock,m_axi_arcache,m_axi_arprot,m_axi_arqos,m_axi_arregion}),
        .m_aclk(m_aclk),
        .m_axi_arready(m_axi_arready),
        .m_axi_arvalid(m_axi_arvalid),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v12_0" *) (* C_COMMON_CLOCK = "1" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "5" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "31" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "31" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_FAMILY = "virtex7" *) (* C_FULL_FLAGS_RST_VAL = "0" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_BACKUP = "0" *) (* C_HAS_DATA_COUNT = "0" *) 
(* C_HAS_INT_CLK = "0" *) (* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) 
(* C_HAS_RD_DATA_COUNT = "0" *) (* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "0" *) 
(* C_HAS_SRST = "1" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "0" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_MEMORY_TYPE = "2" *) 
(* C_MIF_FILE_NAME = "BlankString" *) (* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "31" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "30" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_RD_DATA_COUNT_WIDTH = "5" *) (* C_RD_DEPTH = "32" *) (* C_RD_FREQ = "1" *) 
(* C_RD_PNTR_WIDTH = "5" *) (* C_UNDERFLOW_LOW = "0" *) (* C_USE_DOUT_RST = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_EMBEDDED_REG = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_POWER_SAVING_MODE = "0" *) (* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "1" *) 
(* C_VALID_LOW = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "5" *) 
(* C_WR_DEPTH = "32" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "5" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* C_MSGON_VAL = "1" *) (* C_ENABLE_RST_SYNC = "1" *) 
(* C_ERROR_INJECTION_TYPE = "0" *) (* C_SYNCHRONIZER_STAGE = "3" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_AXI_TYPE = "0" *) (* C_HAS_AXI_WR_CHANNEL = "0" *) (* C_HAS_AXI_RD_CHANNEL = "0" *) 
(* C_HAS_SLAVE_CE = "0" *) (* C_HAS_MASTER_CE = "0" *) (* C_ADD_NGC_CONSTRAINT = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_ADDR_WIDTH = "32" *) (* C_AXI_DATA_WIDTH = "64" *) 
(* C_AXI_LEN_WIDTH = "8" *) (* C_AXI_LOCK_WIDTH = "2" *) (* C_HAS_AXI_ID = "0" *) 
(* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_RUSER = "0" *) (* C_AXI_ARUSER_WIDTH = "1" *) 
(* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_WUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_RUSER_WIDTH = "1" *) (* C_HAS_AXIS_TDATA = "0" *) (* C_HAS_AXIS_TID = "0" *) 
(* C_HAS_AXIS_TDEST = "0" *) (* C_HAS_AXIS_TUSER = "0" *) (* C_HAS_AXIS_TREADY = "1" *) 
(* C_HAS_AXIS_TLAST = "0" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) 
(* C_AXIS_TDATA_WIDTH = "64" *) (* C_AXIS_TID_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "4" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TSTRB_WIDTH = "4" *) (* C_AXIS_TKEEP_WIDTH = "4" *) 
(* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) (* C_WRCH_TYPE = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_AXIS_TYPE = "0" *) 
(* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RACH = "1" *) (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
(* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) (* C_APPLICATION_TYPE_WRCH = "0" *) 
(* C_APPLICATION_TYPE_RACH = "0" *) (* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "512x36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "512x36" *) (* C_PRIM_FIFO_TYPE_AXIS = "512x36" *) 
(* C_USE_ECC_WACH = "0" *) (* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
(* C_DIN_WIDTH_WACH = "32" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) (* C_DIN_WIDTH_AXIS = "1" *) 
(* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) (* C_WR_DEPTH_WRCH = "16" *) 
(* C_WR_DEPTH_RACH = "16" *) (* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_AXIS = "1024" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
(* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
(* C_HAS_DATA_COUNTS_RACH = "0" *) (* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_WACH = "0" *) (* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) (* C_PROG_FULL_TYPE_AXIS = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) (* C_REG_SLICE_MODE_AXIS = "0" *) 
module axi_dwidth_converter_0_fifo_generator_v12_0__parameterized3
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [30:0]din;
  input wr_en;
  input rd_en;
  input [4:0]prog_empty_thresh;
  input [4:0]prog_empty_thresh_assert;
  input [4:0]prog_empty_thresh_negate;
  input [4:0]prog_full_thresh;
  input [4:0]prog_full_thresh_assert;
  input [4:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [30:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [4:0]data_count;
  output [4:0]rd_data_count;
  output [4:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [1:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [3:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [3:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [1:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [3:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [3:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [1:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [3:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [1:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [3:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [63:0]s_axis_tdata;
  input [3:0]s_axis_tstrb;
  input [3:0]s_axis_tkeep;
  input s_axis_tlast;
  input [7:0]s_axis_tid;
  input [3:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [63:0]m_axis_tdata;
  output [3:0]m_axis_tstrb;
  output [3:0]m_axis_tkeep;
  output m_axis_tlast;
  output [7:0]m_axis_tid;
  output [3:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire axi_ar_injectdbiterr;
  wire axi_ar_injectsbiterr;
  wire [3:0]axi_ar_prog_empty_thresh;
  wire [3:0]axi_ar_prog_full_thresh;
  wire axi_aw_injectdbiterr;
  wire axi_aw_injectsbiterr;
  wire [3:0]axi_aw_prog_empty_thresh;
  wire [3:0]axi_aw_prog_full_thresh;
  wire axi_b_injectdbiterr;
  wire axi_b_injectsbiterr;
  wire [3:0]axi_b_prog_empty_thresh;
  wire [3:0]axi_b_prog_full_thresh;
  wire axi_r_injectdbiterr;
  wire axi_r_injectsbiterr;
  wire [9:0]axi_r_prog_empty_thresh;
  wire [9:0]axi_r_prog_full_thresh;
  wire axi_w_injectdbiterr;
  wire axi_w_injectsbiterr;
  wire [9:0]axi_w_prog_empty_thresh;
  wire [9:0]axi_w_prog_full_thresh;
  wire axis_injectdbiterr;
  wire axis_injectsbiterr;
  wire [9:0]axis_prog_empty_thresh;
  wire [9:0]axis_prog_full_thresh;
  wire backup;
  wire backup_marker;
  wire clk;
  wire [30:0]din;
  wire [30:0]dout;
  wire empty;
  wire full;
  wire injectdbiterr;
  wire injectsbiterr;
  wire int_clk;
  wire m_aclk;
  wire m_aclk_en;
  wire m_axi_arready;
  wire m_axi_awready;
  wire [3:0]m_axi_bid;
  wire [1:0]m_axi_bresp;
  wire [0:0]m_axi_buser;
  wire m_axi_bvalid;
  wire [63:0]m_axi_rdata;
  wire [3:0]m_axi_rid;
  wire m_axi_rlast;
  wire [1:0]m_axi_rresp;
  wire [0:0]m_axi_ruser;
  wire m_axi_rvalid;
  wire m_axi_wready;
  wire m_axis_tready;
  wire [4:0]prog_empty_thresh;
  wire [4:0]prog_empty_thresh_assert;
  wire [4:0]prog_empty_thresh_negate;
  wire [4:0]prog_full_thresh;
  wire [4:0]prog_full_thresh_assert;
  wire [4:0]prog_full_thresh_negate;
  wire rd_clk;
  wire rd_en;
  wire rd_rst;
  wire rst;
  wire s_aclk;
  wire s_aclk_en;
  wire s_aresetn;
  wire [31:0]s_axi_araddr;
  wire [1:0]s_axi_arburst;
  wire [3:0]s_axi_arcache;
  wire [3:0]s_axi_arid;
  wire [7:0]s_axi_arlen;
  wire [1:0]s_axi_arlock;
  wire [2:0]s_axi_arprot;
  wire [3:0]s_axi_arqos;
  wire [3:0]s_axi_arregion;
  wire [2:0]s_axi_arsize;
  wire [0:0]s_axi_aruser;
  wire s_axi_arvalid;
  wire [31:0]s_axi_awaddr;
  wire [1:0]s_axi_awburst;
  wire [3:0]s_axi_awcache;
  wire [3:0]s_axi_awid;
  wire [7:0]s_axi_awlen;
  wire [1:0]s_axi_awlock;
  wire [2:0]s_axi_awprot;
  wire [3:0]s_axi_awqos;
  wire [3:0]s_axi_awregion;
  wire [2:0]s_axi_awsize;
  wire [0:0]s_axi_awuser;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_rready;
  wire [63:0]s_axi_wdata;
  wire [3:0]s_axi_wid;
  wire s_axi_wlast;
  wire [7:0]s_axi_wstrb;
  wire [0:0]s_axi_wuser;
  wire s_axi_wvalid;
  wire [63:0]s_axis_tdata;
  wire [3:0]s_axis_tdest;
  wire [7:0]s_axis_tid;
  wire [3:0]s_axis_tkeep;
  wire s_axis_tlast;
  wire [3:0]s_axis_tstrb;
  wire [3:0]s_axis_tuser;
  wire s_axis_tvalid;
  wire srst;
  wire wr_clk;
  wire wr_en;
  wire wr_rst;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[3] = \<const0> ;
  assign m_axi_arid[2] = \<const0> ;
  assign m_axi_arid[1] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[1] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[3] = \<const0> ;
  assign m_axi_awid[2] = \<const0> ;
  assign m_axi_awid[1] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[1] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[3] = \<const0> ;
  assign m_axi_wid[2] = \<const0> ;
  assign m_axi_wid[1] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[63] = \<const0> ;
  assign m_axis_tdata[62] = \<const0> ;
  assign m_axis_tdata[61] = \<const0> ;
  assign m_axis_tdata[60] = \<const0> ;
  assign m_axis_tdata[59] = \<const0> ;
  assign m_axis_tdata[58] = \<const0> ;
  assign m_axis_tdata[57] = \<const0> ;
  assign m_axis_tdata[56] = \<const0> ;
  assign m_axis_tdata[55] = \<const0> ;
  assign m_axis_tdata[54] = \<const0> ;
  assign m_axis_tdata[53] = \<const0> ;
  assign m_axis_tdata[52] = \<const0> ;
  assign m_axis_tdata[51] = \<const0> ;
  assign m_axis_tdata[50] = \<const0> ;
  assign m_axis_tdata[49] = \<const0> ;
  assign m_axis_tdata[48] = \<const0> ;
  assign m_axis_tdata[47] = \<const0> ;
  assign m_axis_tdata[46] = \<const0> ;
  assign m_axis_tdata[45] = \<const0> ;
  assign m_axis_tdata[44] = \<const0> ;
  assign m_axis_tdata[43] = \<const0> ;
  assign m_axis_tdata[42] = \<const0> ;
  assign m_axis_tdata[41] = \<const0> ;
  assign m_axis_tdata[40] = \<const0> ;
  assign m_axis_tdata[39] = \<const0> ;
  assign m_axis_tdata[38] = \<const0> ;
  assign m_axis_tdata[37] = \<const0> ;
  assign m_axis_tdata[36] = \<const0> ;
  assign m_axis_tdata[35] = \<const0> ;
  assign m_axis_tdata[34] = \<const0> ;
  assign m_axis_tdata[33] = \<const0> ;
  assign m_axis_tdata[32] = \<const0> ;
  assign m_axis_tdata[31] = \<const0> ;
  assign m_axis_tdata[30] = \<const0> ;
  assign m_axis_tdata[29] = \<const0> ;
  assign m_axis_tdata[28] = \<const0> ;
  assign m_axis_tdata[27] = \<const0> ;
  assign m_axis_tdata[26] = \<const0> ;
  assign m_axis_tdata[25] = \<const0> ;
  assign m_axis_tdata[24] = \<const0> ;
  assign m_axis_tdata[23] = \<const0> ;
  assign m_axis_tdata[22] = \<const0> ;
  assign m_axis_tdata[21] = \<const0> ;
  assign m_axis_tdata[20] = \<const0> ;
  assign m_axis_tdata[19] = \<const0> ;
  assign m_axis_tdata[18] = \<const0> ;
  assign m_axis_tdata[17] = \<const0> ;
  assign m_axis_tdata[16] = \<const0> ;
  assign m_axis_tdata[15] = \<const0> ;
  assign m_axis_tdata[14] = \<const0> ;
  assign m_axis_tdata[13] = \<const0> ;
  assign m_axis_tdata[12] = \<const0> ;
  assign m_axis_tdata[11] = \<const0> ;
  assign m_axis_tdata[10] = \<const0> ;
  assign m_axis_tdata[9] = \<const0> ;
  assign m_axis_tdata[8] = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[3] = \<const0> ;
  assign m_axis_tdest[2] = \<const0> ;
  assign m_axis_tdest[1] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[7] = \<const0> ;
  assign m_axis_tid[6] = \<const0> ;
  assign m_axis_tid[5] = \<const0> ;
  assign m_axis_tid[4] = \<const0> ;
  assign m_axis_tid[3] = \<const0> ;
  assign m_axis_tid[2] = \<const0> ;
  assign m_axis_tid[1] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[3] = \<const0> ;
  assign m_axis_tkeep[2] = \<const0> ;
  assign m_axis_tkeep[1] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[3] = \<const0> ;
  assign m_axis_tstrb[2] = \<const0> ;
  assign m_axis_tstrb[1] = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[4] = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[4] = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  assign wr_rst_busy = \<const0> ;
GND GND
       (.G(\<const0> ));
VCC VCC
       (.P(\<const1> ));
axi_dwidth_converter_0_fifo_generator_v12_0_synth__parameterized3 inst_fifo_gen
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v12_0" *) (* C_COMMON_CLOCK = "1" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "5" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "23" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "23" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_FAMILY = "virtex7" *) (* C_FULL_FLAGS_RST_VAL = "0" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_BACKUP = "0" *) (* C_HAS_DATA_COUNT = "0" *) 
(* C_HAS_INT_CLK = "0" *) (* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) 
(* C_HAS_RD_DATA_COUNT = "0" *) (* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "0" *) 
(* C_HAS_SRST = "1" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "0" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_MEMORY_TYPE = "2" *) 
(* C_MIF_FILE_NAME = "BlankString" *) (* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "31" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "30" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_RD_DATA_COUNT_WIDTH = "5" *) (* C_RD_DEPTH = "32" *) (* C_RD_FREQ = "1" *) 
(* C_RD_PNTR_WIDTH = "5" *) (* C_UNDERFLOW_LOW = "0" *) (* C_USE_DOUT_RST = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_EMBEDDED_REG = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_POWER_SAVING_MODE = "0" *) (* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "1" *) 
(* C_VALID_LOW = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "5" *) 
(* C_WR_DEPTH = "32" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "5" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* C_MSGON_VAL = "1" *) (* C_ENABLE_RST_SYNC = "1" *) 
(* C_ERROR_INJECTION_TYPE = "0" *) (* C_SYNCHRONIZER_STAGE = "3" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_AXI_TYPE = "0" *) (* C_HAS_AXI_WR_CHANNEL = "0" *) (* C_HAS_AXI_RD_CHANNEL = "0" *) 
(* C_HAS_SLAVE_CE = "0" *) (* C_HAS_MASTER_CE = "0" *) (* C_ADD_NGC_CONSTRAINT = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_ADDR_WIDTH = "32" *) (* C_AXI_DATA_WIDTH = "64" *) 
(* C_AXI_LEN_WIDTH = "8" *) (* C_AXI_LOCK_WIDTH = "2" *) (* C_HAS_AXI_ID = "0" *) 
(* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_RUSER = "0" *) (* C_AXI_ARUSER_WIDTH = "1" *) 
(* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_WUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_RUSER_WIDTH = "1" *) (* C_HAS_AXIS_TDATA = "0" *) (* C_HAS_AXIS_TID = "0" *) 
(* C_HAS_AXIS_TDEST = "0" *) (* C_HAS_AXIS_TUSER = "0" *) (* C_HAS_AXIS_TREADY = "1" *) 
(* C_HAS_AXIS_TLAST = "0" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) 
(* C_AXIS_TDATA_WIDTH = "64" *) (* C_AXIS_TID_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "4" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TSTRB_WIDTH = "4" *) (* C_AXIS_TKEEP_WIDTH = "4" *) 
(* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) (* C_WRCH_TYPE = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_AXIS_TYPE = "0" *) 
(* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RACH = "1" *) (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
(* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) (* C_APPLICATION_TYPE_WRCH = "0" *) 
(* C_APPLICATION_TYPE_RACH = "0" *) (* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "512x36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "512x36" *) (* C_PRIM_FIFO_TYPE_AXIS = "512x36" *) 
(* C_USE_ECC_WACH = "0" *) (* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
(* C_DIN_WIDTH_WACH = "32" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) (* C_DIN_WIDTH_AXIS = "1" *) 
(* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) (* C_WR_DEPTH_WRCH = "16" *) 
(* C_WR_DEPTH_RACH = "16" *) (* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_AXIS = "1024" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
(* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
(* C_HAS_DATA_COUNTS_RACH = "0" *) (* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_WACH = "0" *) (* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) (* C_PROG_FULL_TYPE_AXIS = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) (* C_REG_SLICE_MODE_AXIS = "0" *) 
module axi_dwidth_converter_0_fifo_generator_v12_0__parameterized4
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [22:0]din;
  input wr_en;
  input rd_en;
  input [4:0]prog_empty_thresh;
  input [4:0]prog_empty_thresh_assert;
  input [4:0]prog_empty_thresh_negate;
  input [4:0]prog_full_thresh;
  input [4:0]prog_full_thresh_assert;
  input [4:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [22:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [4:0]data_count;
  output [4:0]rd_data_count;
  output [4:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [1:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [3:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [3:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [1:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [3:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [3:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [1:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [3:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [1:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [3:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [63:0]s_axis_tdata;
  input [3:0]s_axis_tstrb;
  input [3:0]s_axis_tkeep;
  input s_axis_tlast;
  input [7:0]s_axis_tid;
  input [3:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [63:0]m_axis_tdata;
  output [3:0]m_axis_tstrb;
  output [3:0]m_axis_tkeep;
  output m_axis_tlast;
  output [7:0]m_axis_tid;
  output [3:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire axi_ar_injectdbiterr;
  wire axi_ar_injectsbiterr;
  wire [3:0]axi_ar_prog_empty_thresh;
  wire [3:0]axi_ar_prog_full_thresh;
  wire axi_aw_injectdbiterr;
  wire axi_aw_injectsbiterr;
  wire [3:0]axi_aw_prog_empty_thresh;
  wire [3:0]axi_aw_prog_full_thresh;
  wire axi_b_injectdbiterr;
  wire axi_b_injectsbiterr;
  wire [3:0]axi_b_prog_empty_thresh;
  wire [3:0]axi_b_prog_full_thresh;
  wire axi_r_injectdbiterr;
  wire axi_r_injectsbiterr;
  wire [9:0]axi_r_prog_empty_thresh;
  wire [9:0]axi_r_prog_full_thresh;
  wire axi_w_injectdbiterr;
  wire axi_w_injectsbiterr;
  wire [9:0]axi_w_prog_empty_thresh;
  wire [9:0]axi_w_prog_full_thresh;
  wire axis_injectdbiterr;
  wire axis_injectsbiterr;
  wire [9:0]axis_prog_empty_thresh;
  wire [9:0]axis_prog_full_thresh;
  wire backup;
  wire backup_marker;
  wire clk;
  wire [22:0]din;
  wire [22:0]dout;
  wire empty;
  wire full;
  wire injectdbiterr;
  wire injectsbiterr;
  wire int_clk;
  wire m_aclk;
  wire m_aclk_en;
  wire m_axi_arready;
  wire m_axi_awready;
  wire [3:0]m_axi_bid;
  wire [1:0]m_axi_bresp;
  wire [0:0]m_axi_buser;
  wire m_axi_bvalid;
  wire [63:0]m_axi_rdata;
  wire [3:0]m_axi_rid;
  wire m_axi_rlast;
  wire [1:0]m_axi_rresp;
  wire [0:0]m_axi_ruser;
  wire m_axi_rvalid;
  wire m_axi_wready;
  wire m_axis_tready;
  wire [4:0]prog_empty_thresh;
  wire [4:0]prog_empty_thresh_assert;
  wire [4:0]prog_empty_thresh_negate;
  wire [4:0]prog_full_thresh;
  wire [4:0]prog_full_thresh_assert;
  wire [4:0]prog_full_thresh_negate;
  wire rd_clk;
  wire rd_en;
  wire rd_rst;
  wire rst;
  wire s_aclk;
  wire s_aclk_en;
  wire s_aresetn;
  wire [31:0]s_axi_araddr;
  wire [1:0]s_axi_arburst;
  wire [3:0]s_axi_arcache;
  wire [3:0]s_axi_arid;
  wire [7:0]s_axi_arlen;
  wire [1:0]s_axi_arlock;
  wire [2:0]s_axi_arprot;
  wire [3:0]s_axi_arqos;
  wire [3:0]s_axi_arregion;
  wire [2:0]s_axi_arsize;
  wire [0:0]s_axi_aruser;
  wire s_axi_arvalid;
  wire [31:0]s_axi_awaddr;
  wire [1:0]s_axi_awburst;
  wire [3:0]s_axi_awcache;
  wire [3:0]s_axi_awid;
  wire [7:0]s_axi_awlen;
  wire [1:0]s_axi_awlock;
  wire [2:0]s_axi_awprot;
  wire [3:0]s_axi_awqos;
  wire [3:0]s_axi_awregion;
  wire [2:0]s_axi_awsize;
  wire [0:0]s_axi_awuser;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_rready;
  wire [63:0]s_axi_wdata;
  wire [3:0]s_axi_wid;
  wire s_axi_wlast;
  wire [7:0]s_axi_wstrb;
  wire [0:0]s_axi_wuser;
  wire s_axi_wvalid;
  wire [63:0]s_axis_tdata;
  wire [3:0]s_axis_tdest;
  wire [7:0]s_axis_tid;
  wire [3:0]s_axis_tkeep;
  wire s_axis_tlast;
  wire [3:0]s_axis_tstrb;
  wire [3:0]s_axis_tuser;
  wire s_axis_tvalid;
  wire srst;
  wire wr_clk;
  wire wr_en;
  wire wr_rst;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[3] = \<const0> ;
  assign m_axi_arid[2] = \<const0> ;
  assign m_axi_arid[1] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[1] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[3] = \<const0> ;
  assign m_axi_awid[2] = \<const0> ;
  assign m_axi_awid[1] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[1] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[3] = \<const0> ;
  assign m_axi_wid[2] = \<const0> ;
  assign m_axi_wid[1] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[63] = \<const0> ;
  assign m_axis_tdata[62] = \<const0> ;
  assign m_axis_tdata[61] = \<const0> ;
  assign m_axis_tdata[60] = \<const0> ;
  assign m_axis_tdata[59] = \<const0> ;
  assign m_axis_tdata[58] = \<const0> ;
  assign m_axis_tdata[57] = \<const0> ;
  assign m_axis_tdata[56] = \<const0> ;
  assign m_axis_tdata[55] = \<const0> ;
  assign m_axis_tdata[54] = \<const0> ;
  assign m_axis_tdata[53] = \<const0> ;
  assign m_axis_tdata[52] = \<const0> ;
  assign m_axis_tdata[51] = \<const0> ;
  assign m_axis_tdata[50] = \<const0> ;
  assign m_axis_tdata[49] = \<const0> ;
  assign m_axis_tdata[48] = \<const0> ;
  assign m_axis_tdata[47] = \<const0> ;
  assign m_axis_tdata[46] = \<const0> ;
  assign m_axis_tdata[45] = \<const0> ;
  assign m_axis_tdata[44] = \<const0> ;
  assign m_axis_tdata[43] = \<const0> ;
  assign m_axis_tdata[42] = \<const0> ;
  assign m_axis_tdata[41] = \<const0> ;
  assign m_axis_tdata[40] = \<const0> ;
  assign m_axis_tdata[39] = \<const0> ;
  assign m_axis_tdata[38] = \<const0> ;
  assign m_axis_tdata[37] = \<const0> ;
  assign m_axis_tdata[36] = \<const0> ;
  assign m_axis_tdata[35] = \<const0> ;
  assign m_axis_tdata[34] = \<const0> ;
  assign m_axis_tdata[33] = \<const0> ;
  assign m_axis_tdata[32] = \<const0> ;
  assign m_axis_tdata[31] = \<const0> ;
  assign m_axis_tdata[30] = \<const0> ;
  assign m_axis_tdata[29] = \<const0> ;
  assign m_axis_tdata[28] = \<const0> ;
  assign m_axis_tdata[27] = \<const0> ;
  assign m_axis_tdata[26] = \<const0> ;
  assign m_axis_tdata[25] = \<const0> ;
  assign m_axis_tdata[24] = \<const0> ;
  assign m_axis_tdata[23] = \<const0> ;
  assign m_axis_tdata[22] = \<const0> ;
  assign m_axis_tdata[21] = \<const0> ;
  assign m_axis_tdata[20] = \<const0> ;
  assign m_axis_tdata[19] = \<const0> ;
  assign m_axis_tdata[18] = \<const0> ;
  assign m_axis_tdata[17] = \<const0> ;
  assign m_axis_tdata[16] = \<const0> ;
  assign m_axis_tdata[15] = \<const0> ;
  assign m_axis_tdata[14] = \<const0> ;
  assign m_axis_tdata[13] = \<const0> ;
  assign m_axis_tdata[12] = \<const0> ;
  assign m_axis_tdata[11] = \<const0> ;
  assign m_axis_tdata[10] = \<const0> ;
  assign m_axis_tdata[9] = \<const0> ;
  assign m_axis_tdata[8] = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[3] = \<const0> ;
  assign m_axis_tdest[2] = \<const0> ;
  assign m_axis_tdest[1] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[7] = \<const0> ;
  assign m_axis_tid[6] = \<const0> ;
  assign m_axis_tid[5] = \<const0> ;
  assign m_axis_tid[4] = \<const0> ;
  assign m_axis_tid[3] = \<const0> ;
  assign m_axis_tid[2] = \<const0> ;
  assign m_axis_tid[1] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[3] = \<const0> ;
  assign m_axis_tkeep[2] = \<const0> ;
  assign m_axis_tkeep[1] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[3] = \<const0> ;
  assign m_axis_tstrb[2] = \<const0> ;
  assign m_axis_tstrb[1] = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[4] = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[4] = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  assign wr_rst_busy = \<const0> ;
GND GND
       (.G(\<const0> ));
VCC VCC
       (.P(\<const1> ));
axi_dwidth_converter_0_fifo_generator_v12_0_synth__parameterized4 inst_fifo_gen
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v12_0" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "9" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "4" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "4" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_FAMILY = "virtex7" *) (* C_FULL_FLAGS_RST_VAL = "0" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_BACKUP = "0" *) (* C_HAS_DATA_COUNT = "0" *) 
(* C_HAS_INT_CLK = "0" *) (* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) 
(* C_HAS_RD_DATA_COUNT = "0" *) (* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "1" *) 
(* C_HAS_SRST = "0" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "2" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_MEMORY_TYPE = "2" *) 
(* C_MIF_FILE_NAME = "BlankString" *) (* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "31" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "30" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_RD_DATA_COUNT_WIDTH = "9" *) (* C_RD_DEPTH = "512" *) (* C_RD_FREQ = "1" *) 
(* C_RD_PNTR_WIDTH = "9" *) (* C_UNDERFLOW_LOW = "0" *) (* C_USE_DOUT_RST = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_EMBEDDED_REG = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_POWER_SAVING_MODE = "0" *) (* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "1" *) 
(* C_VALID_LOW = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "9" *) 
(* C_WR_DEPTH = "512" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "9" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* C_MSGON_VAL = "1" *) (* C_ENABLE_RST_SYNC = "1" *) 
(* C_ERROR_INJECTION_TYPE = "0" *) (* C_SYNCHRONIZER_STAGE = "3" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_AXI_TYPE = "0" *) (* C_HAS_AXI_WR_CHANNEL = "0" *) (* C_HAS_AXI_RD_CHANNEL = "0" *) 
(* C_HAS_SLAVE_CE = "0" *) (* C_HAS_MASTER_CE = "0" *) (* C_ADD_NGC_CONSTRAINT = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_ADDR_WIDTH = "32" *) (* C_AXI_DATA_WIDTH = "64" *) 
(* C_AXI_LEN_WIDTH = "8" *) (* C_AXI_LOCK_WIDTH = "2" *) (* C_HAS_AXI_ID = "0" *) 
(* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_RUSER = "0" *) (* C_AXI_ARUSER_WIDTH = "1" *) 
(* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_WUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_RUSER_WIDTH = "1" *) (* C_HAS_AXIS_TDATA = "0" *) (* C_HAS_AXIS_TID = "0" *) 
(* C_HAS_AXIS_TDEST = "0" *) (* C_HAS_AXIS_TUSER = "0" *) (* C_HAS_AXIS_TREADY = "1" *) 
(* C_HAS_AXIS_TLAST = "0" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) 
(* C_AXIS_TDATA_WIDTH = "64" *) (* C_AXIS_TID_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "4" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TSTRB_WIDTH = "4" *) (* C_AXIS_TKEEP_WIDTH = "4" *) 
(* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) (* C_WRCH_TYPE = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_AXIS_TYPE = "0" *) 
(* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RACH = "1" *) (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
(* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) (* C_APPLICATION_TYPE_WRCH = "0" *) 
(* C_APPLICATION_TYPE_RACH = "0" *) (* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "512x36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "512x36" *) (* C_PRIM_FIFO_TYPE_AXIS = "512x36" *) 
(* C_USE_ECC_WACH = "0" *) (* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
(* C_DIN_WIDTH_WACH = "32" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) (* C_DIN_WIDTH_AXIS = "1" *) 
(* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) (* C_WR_DEPTH_WRCH = "16" *) 
(* C_WR_DEPTH_RACH = "16" *) (* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_AXIS = "1024" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
(* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
(* C_HAS_DATA_COUNTS_RACH = "0" *) (* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_WACH = "0" *) (* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) (* C_PROG_FULL_TYPE_AXIS = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) (* C_REG_SLICE_MODE_AXIS = "0" *) 
module axi_dwidth_converter_0_fifo_generator_v12_0__parameterized5
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [3:0]din;
  input wr_en;
  input rd_en;
  input [8:0]prog_empty_thresh;
  input [8:0]prog_empty_thresh_assert;
  input [8:0]prog_empty_thresh_negate;
  input [8:0]prog_full_thresh;
  input [8:0]prog_full_thresh_assert;
  input [8:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [3:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [8:0]data_count;
  output [8:0]rd_data_count;
  output [8:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [1:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [3:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [3:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [1:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [3:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [3:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [1:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [3:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [1:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [3:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [63:0]s_axis_tdata;
  input [3:0]s_axis_tstrb;
  input [3:0]s_axis_tkeep;
  input s_axis_tlast;
  input [7:0]s_axis_tid;
  input [3:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [63:0]m_axis_tdata;
  output [3:0]m_axis_tstrb;
  output [3:0]m_axis_tkeep;
  output m_axis_tlast;
  output [7:0]m_axis_tid;
  output [3:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire axi_ar_injectdbiterr;
  wire axi_ar_injectsbiterr;
  wire [3:0]axi_ar_prog_empty_thresh;
  wire [3:0]axi_ar_prog_full_thresh;
  wire axi_aw_injectdbiterr;
  wire axi_aw_injectsbiterr;
  wire [3:0]axi_aw_prog_empty_thresh;
  wire [3:0]axi_aw_prog_full_thresh;
  wire axi_b_injectdbiterr;
  wire axi_b_injectsbiterr;
  wire [3:0]axi_b_prog_empty_thresh;
  wire [3:0]axi_b_prog_full_thresh;
  wire axi_r_injectdbiterr;
  wire axi_r_injectsbiterr;
  wire [9:0]axi_r_prog_empty_thresh;
  wire [9:0]axi_r_prog_full_thresh;
  wire axi_w_injectdbiterr;
  wire axi_w_injectsbiterr;
  wire [9:0]axi_w_prog_empty_thresh;
  wire [9:0]axi_w_prog_full_thresh;
  wire axis_injectdbiterr;
  wire axis_injectsbiterr;
  wire [9:0]axis_prog_empty_thresh;
  wire [9:0]axis_prog_full_thresh;
  wire backup;
  wire backup_marker;
  wire clk;
  wire [3:0]din;
  wire [3:0]dout;
  wire empty;
  wire full;
  wire injectdbiterr;
  wire injectsbiterr;
  wire int_clk;
  wire m_aclk;
  wire m_aclk_en;
  wire m_axi_arready;
  wire m_axi_awready;
  wire [3:0]m_axi_bid;
  wire [1:0]m_axi_bresp;
  wire [0:0]m_axi_buser;
  wire m_axi_bvalid;
  wire [63:0]m_axi_rdata;
  wire [3:0]m_axi_rid;
  wire m_axi_rlast;
  wire [1:0]m_axi_rresp;
  wire [0:0]m_axi_ruser;
  wire m_axi_rvalid;
  wire m_axi_wready;
  wire m_axis_tready;
  wire [8:0]prog_empty_thresh;
  wire [8:0]prog_empty_thresh_assert;
  wire [8:0]prog_empty_thresh_negate;
  wire [8:0]prog_full_thresh;
  wire [8:0]prog_full_thresh_assert;
  wire [8:0]prog_full_thresh_negate;
  wire rd_clk;
  wire rd_en;
  wire rd_rst;
  wire rst;
  wire s_aclk;
  wire s_aclk_en;
  wire s_aresetn;
  wire [31:0]s_axi_araddr;
  wire [1:0]s_axi_arburst;
  wire [3:0]s_axi_arcache;
  wire [3:0]s_axi_arid;
  wire [7:0]s_axi_arlen;
  wire [1:0]s_axi_arlock;
  wire [2:0]s_axi_arprot;
  wire [3:0]s_axi_arqos;
  wire [3:0]s_axi_arregion;
  wire [2:0]s_axi_arsize;
  wire [0:0]s_axi_aruser;
  wire s_axi_arvalid;
  wire [31:0]s_axi_awaddr;
  wire [1:0]s_axi_awburst;
  wire [3:0]s_axi_awcache;
  wire [3:0]s_axi_awid;
  wire [7:0]s_axi_awlen;
  wire [1:0]s_axi_awlock;
  wire [2:0]s_axi_awprot;
  wire [3:0]s_axi_awqos;
  wire [3:0]s_axi_awregion;
  wire [2:0]s_axi_awsize;
  wire [0:0]s_axi_awuser;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_rready;
  wire [63:0]s_axi_wdata;
  wire [3:0]s_axi_wid;
  wire s_axi_wlast;
  wire [7:0]s_axi_wstrb;
  wire [0:0]s_axi_wuser;
  wire s_axi_wvalid;
  wire [63:0]s_axis_tdata;
  wire [3:0]s_axis_tdest;
  wire [7:0]s_axis_tid;
  wire [3:0]s_axis_tkeep;
  wire s_axis_tlast;
  wire [3:0]s_axis_tstrb;
  wire [3:0]s_axis_tuser;
  wire s_axis_tvalid;
  wire srst;
  wire wr_clk;
  wire wr_en;
  wire wr_rst;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[8] = \<const0> ;
  assign data_count[7] = \<const0> ;
  assign data_count[6] = \<const0> ;
  assign data_count[5] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[3] = \<const0> ;
  assign m_axi_arid[2] = \<const0> ;
  assign m_axi_arid[1] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[1] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[3] = \<const0> ;
  assign m_axi_awid[2] = \<const0> ;
  assign m_axi_awid[1] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[1] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[3] = \<const0> ;
  assign m_axi_wid[2] = \<const0> ;
  assign m_axi_wid[1] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[63] = \<const0> ;
  assign m_axis_tdata[62] = \<const0> ;
  assign m_axis_tdata[61] = \<const0> ;
  assign m_axis_tdata[60] = \<const0> ;
  assign m_axis_tdata[59] = \<const0> ;
  assign m_axis_tdata[58] = \<const0> ;
  assign m_axis_tdata[57] = \<const0> ;
  assign m_axis_tdata[56] = \<const0> ;
  assign m_axis_tdata[55] = \<const0> ;
  assign m_axis_tdata[54] = \<const0> ;
  assign m_axis_tdata[53] = \<const0> ;
  assign m_axis_tdata[52] = \<const0> ;
  assign m_axis_tdata[51] = \<const0> ;
  assign m_axis_tdata[50] = \<const0> ;
  assign m_axis_tdata[49] = \<const0> ;
  assign m_axis_tdata[48] = \<const0> ;
  assign m_axis_tdata[47] = \<const0> ;
  assign m_axis_tdata[46] = \<const0> ;
  assign m_axis_tdata[45] = \<const0> ;
  assign m_axis_tdata[44] = \<const0> ;
  assign m_axis_tdata[43] = \<const0> ;
  assign m_axis_tdata[42] = \<const0> ;
  assign m_axis_tdata[41] = \<const0> ;
  assign m_axis_tdata[40] = \<const0> ;
  assign m_axis_tdata[39] = \<const0> ;
  assign m_axis_tdata[38] = \<const0> ;
  assign m_axis_tdata[37] = \<const0> ;
  assign m_axis_tdata[36] = \<const0> ;
  assign m_axis_tdata[35] = \<const0> ;
  assign m_axis_tdata[34] = \<const0> ;
  assign m_axis_tdata[33] = \<const0> ;
  assign m_axis_tdata[32] = \<const0> ;
  assign m_axis_tdata[31] = \<const0> ;
  assign m_axis_tdata[30] = \<const0> ;
  assign m_axis_tdata[29] = \<const0> ;
  assign m_axis_tdata[28] = \<const0> ;
  assign m_axis_tdata[27] = \<const0> ;
  assign m_axis_tdata[26] = \<const0> ;
  assign m_axis_tdata[25] = \<const0> ;
  assign m_axis_tdata[24] = \<const0> ;
  assign m_axis_tdata[23] = \<const0> ;
  assign m_axis_tdata[22] = \<const0> ;
  assign m_axis_tdata[21] = \<const0> ;
  assign m_axis_tdata[20] = \<const0> ;
  assign m_axis_tdata[19] = \<const0> ;
  assign m_axis_tdata[18] = \<const0> ;
  assign m_axis_tdata[17] = \<const0> ;
  assign m_axis_tdata[16] = \<const0> ;
  assign m_axis_tdata[15] = \<const0> ;
  assign m_axis_tdata[14] = \<const0> ;
  assign m_axis_tdata[13] = \<const0> ;
  assign m_axis_tdata[12] = \<const0> ;
  assign m_axis_tdata[11] = \<const0> ;
  assign m_axis_tdata[10] = \<const0> ;
  assign m_axis_tdata[9] = \<const0> ;
  assign m_axis_tdata[8] = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[3] = \<const0> ;
  assign m_axis_tdest[2] = \<const0> ;
  assign m_axis_tdest[1] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[7] = \<const0> ;
  assign m_axis_tid[6] = \<const0> ;
  assign m_axis_tid[5] = \<const0> ;
  assign m_axis_tid[4] = \<const0> ;
  assign m_axis_tid[3] = \<const0> ;
  assign m_axis_tid[2] = \<const0> ;
  assign m_axis_tid[1] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[3] = \<const0> ;
  assign m_axis_tkeep[2] = \<const0> ;
  assign m_axis_tkeep[1] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[3] = \<const0> ;
  assign m_axis_tstrb[2] = \<const0> ;
  assign m_axis_tstrb[1] = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[8] = \<const0> ;
  assign rd_data_count[7] = \<const0> ;
  assign rd_data_count[6] = \<const0> ;
  assign rd_data_count[5] = \<const0> ;
  assign rd_data_count[4] = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[8] = \<const0> ;
  assign wr_data_count[7] = \<const0> ;
  assign wr_data_count[6] = \<const0> ;
  assign wr_data_count[5] = \<const0> ;
  assign wr_data_count[4] = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  assign wr_rst_busy = \<const0> ;
GND GND
       (.G(\<const0> ));
VCC VCC
       (.P(\<const1> ));
axi_dwidth_converter_0_fifo_generator_v12_0_synth__parameterized5 inst_fifo_gen
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v12_0_synth" *) 
module axi_dwidth_converter_0_fifo_generator_v12_0_synth
   (Q,
    s_axi_awready,
    m_axi_awvalid,
    m_axi_awready,
    s_axi_awvalid,
    m_aclk,
    s_aclk,
    DI,
    s_aresetn);
  output [66:0]Q;
  output s_axi_awready;
  output m_axi_awvalid;
  input m_axi_awready;
  input s_axi_awvalid;
  input m_aclk;
  input s_aclk;
  input [66:0]DI;
  input s_aresetn;

  wire [66:0]DI;
  wire [66:0]Q;
  wire m_aclk;
  wire m_axi_awready;
  wire m_axi_awvalid;
  wire s_aclk;
  wire s_aresetn;
  wire s_axi_awready;
  wire s_axi_awvalid;

axi_dwidth_converter_0_fifo_generator_top \gaxi_full_lite.gwrite_ch.gwach2.axi_wach 
       (.DI(DI),
        .Q(Q),
        .m_aclk(m_aclk),
        .m_axi_awready(m_axi_awready),
        .m_axi_awvalid(m_axi_awvalid),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v12_0_synth" *) 
module axi_dwidth_converter_0_fifo_generator_v12_0_synth__parameterized0
   (empty,
    full,
    dout,
    rd_en,
    wr_en,
    wr_clk,
    rst,
    rd_clk,
    din);
  output empty;
  output full;
  output [0:0]dout;
  input rd_en;
  input wr_en;
  input wr_clk;
  input rst;
  input rd_clk;
  input [0:0]din;

  wire [0:0]din;
  wire [0:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire wr_en;

axi_dwidth_converter_0_fifo_generator_top__parameterized0 \gconvfifo.rf 
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v12_0_synth" *) 
module axi_dwidth_converter_0_fifo_generator_v12_0_synth__parameterized1
   (s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    m_axi_bready,
    s_axi_bready,
    m_axi_bvalid,
    s_aclk,
    m_aclk,
    m_axi_bresp,
    m_axi_bid,
    s_aresetn);
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  output m_axi_bready;
  input s_axi_bready;
  input m_axi_bvalid;
  input s_aclk;
  input m_aclk;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_bid;
  input s_aresetn;

  wire m_aclk;
  wire [0:0]m_axi_bid;
  wire m_axi_bready;
  wire [1:0]m_axi_bresp;
  wire m_axi_bvalid;
  wire s_aclk;
  wire s_aresetn;
  wire [0:0]s_axi_bid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;

axi_dwidth_converter_0_fifo_generator_top__parameterized1 \gaxi_full_lite.gwrite_ch.gwrch2.axi_wrch 
       (.m_aclk(m_aclk),
        .m_axi_bid(m_axi_bid),
        .m_axi_bready(m_axi_bready),
        .m_axi_bresp(m_axi_bresp),
        .m_axi_bvalid(m_axi_bvalid),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .s_axi_bid(s_axi_bid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(s_axi_bresp),
        .s_axi_bvalid(s_axi_bvalid));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v12_0_synth" *) 
module axi_dwidth_converter_0_fifo_generator_v12_0_synth__parameterized2
   (Q,
    s_axi_arready,
    m_axi_arvalid,
    m_axi_arready,
    s_axi_arvalid,
    m_aclk,
    s_aclk,
    DI,
    s_aresetn);
  output [60:0]Q;
  output s_axi_arready;
  output m_axi_arvalid;
  input m_axi_arready;
  input s_axi_arvalid;
  input m_aclk;
  input s_aclk;
  input [60:0]DI;
  input s_aresetn;

  wire [60:0]DI;
  wire [60:0]Q;
  wire m_aclk;
  wire m_axi_arready;
  wire m_axi_arvalid;
  wire s_aclk;
  wire s_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;

axi_dwidth_converter_0_fifo_generator_top__parameterized2 \gaxi_full_lite.gread_ch.grach2.axi_rach 
       (.DI(DI),
        .Q(Q),
        .m_aclk(m_aclk),
        .m_axi_arready(m_axi_arready),
        .m_axi_arvalid(m_axi_arvalid),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v12_0_synth" *) 
module axi_dwidth_converter_0_fifo_generator_v12_0_synth__parameterized3
   (dout,
    full,
    empty,
    rd_en,
    wr_en,
    clk,
    srst,
    din);
  output [30:0]dout;
  output full;
  output empty;
  input rd_en;
  input wr_en;
  input clk;
  input srst;
  input [30:0]din;

  wire clk;
  wire [30:0]din;
  wire [30:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;

axi_dwidth_converter_0_fifo_generator_top__parameterized3 \gconvfifo.rf 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v12_0_synth" *) 
module axi_dwidth_converter_0_fifo_generator_v12_0_synth__parameterized4
   (dout,
    full,
    empty,
    rd_en,
    wr_en,
    clk,
    srst,
    din);
  output [22:0]dout;
  output full;
  output empty;
  input rd_en;
  input wr_en;
  input clk;
  input srst;
  input [22:0]din;

  wire clk;
  wire [22:0]din;
  wire [22:0]dout;
  wire empty;
  wire full;
  wire rd_en;
  wire srst;
  wire wr_en;

axi_dwidth_converter_0_fifo_generator_top__parameterized4 \gconvfifo.rf 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v12_0_synth" *) 
module axi_dwidth_converter_0_fifo_generator_v12_0_synth__parameterized5
   (dout,
    empty,
    full,
    rd_en,
    wr_en,
    rd_clk,
    wr_clk,
    rst,
    din);
  output [3:0]dout;
  output empty;
  output full;
  input rd_en;
  input wr_en;
  input rd_clk;
  input wr_clk;
  input rst;
  input [3:0]din;

  wire [3:0]din;
  wire [3:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire wr_en;

axi_dwidth_converter_0_fifo_generator_top__parameterized5 \gconvfifo.rf 
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module axi_dwidth_converter_0_memory
   (Q,
    ram_rd_en_i,
    m_aclk,
    s_aclk,
    E,
    DI,
    O1,
    O2,
    I1);
  output [66:0]Q;
  input ram_rd_en_i;
  input m_aclk;
  input s_aclk;
  input [0:0]E;
  input [66:0]DI;
  input [4:0]O1;
  input [4:0]O2;
  input [0:0]I1;

  wire [66:0]DI;
  wire [0:0]E;
  wire [0:0]I1;
  wire [4:0]O1;
  wire [4:0]O2;
  wire [66:0]Q;
  wire m_aclk;
  wire [66:0]p_0_out;
  wire ram_rd_en_i;
  wire s_aclk;

axi_dwidth_converter_0_dmem \gdm.dm 
       (.D(p_0_out),
        .DI(DI),
        .E(E),
        .O1(O1),
        .O2(O2),
        .m_aclk(m_aclk),
        .ram_rd_en_i(ram_rd_en_i),
        .s_aclk(s_aclk));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[0] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[0]),
        .Q(Q[0]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[10] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[10]),
        .Q(Q[10]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[11] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[11]),
        .Q(Q[11]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[12] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[12]),
        .Q(Q[12]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[13] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[13]),
        .Q(Q[13]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[14] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[14]),
        .Q(Q[14]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[15] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[15]),
        .Q(Q[15]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[16] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[16]),
        .Q(Q[16]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[17] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[17]),
        .Q(Q[17]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[18] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[18]),
        .Q(Q[18]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[19] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[19]),
        .Q(Q[19]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[1] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[1]),
        .Q(Q[1]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[20] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[20]),
        .Q(Q[20]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[21] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[21]),
        .Q(Q[21]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[22] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[22]),
        .Q(Q[22]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[23] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[23]),
        .Q(Q[23]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[24] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[24]),
        .Q(Q[24]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[25] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[25]),
        .Q(Q[25]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[26] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[26]),
        .Q(Q[26]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[27] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[27]),
        .Q(Q[27]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[28] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[28]),
        .Q(Q[28]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[29] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[29]),
        .Q(Q[29]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[2] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[2]),
        .Q(Q[2]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[30] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[30]),
        .Q(Q[30]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[31] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[31]),
        .Q(Q[31]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[32] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[32]),
        .Q(Q[32]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[33] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[33]),
        .Q(Q[33]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[34] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[34]),
        .Q(Q[34]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[35] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[35]),
        .Q(Q[35]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[36] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[36]),
        .Q(Q[36]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[37] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[37]),
        .Q(Q[37]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[38] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[38]),
        .Q(Q[38]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[39] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[39]),
        .Q(Q[39]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[3] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[3]),
        .Q(Q[3]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[40] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[40]),
        .Q(Q[40]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[41] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[41]),
        .Q(Q[41]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[42] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[42]),
        .Q(Q[42]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[43] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[43]),
        .Q(Q[43]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[44] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[44]),
        .Q(Q[44]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[45] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[45]),
        .Q(Q[45]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[46] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[46]),
        .Q(Q[46]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[47] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[47]),
        .Q(Q[47]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[48] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[48]),
        .Q(Q[48]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[49] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[49]),
        .Q(Q[49]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[4] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[4]),
        .Q(Q[4]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[50] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[50]),
        .Q(Q[50]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[51] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[51]),
        .Q(Q[51]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[52] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[52]),
        .Q(Q[52]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[53] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[53]),
        .Q(Q[53]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[54] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[54]),
        .Q(Q[54]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[55] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[55]),
        .Q(Q[55]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[56] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[56]),
        .Q(Q[56]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[57] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[57]),
        .Q(Q[57]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[58] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[58]),
        .Q(Q[58]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[59] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[59]),
        .Q(Q[59]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[5] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[5]),
        .Q(Q[5]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[60] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[60]),
        .Q(Q[60]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[61] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[61]),
        .Q(Q[61]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[62] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[62]),
        .Q(Q[62]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[63] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[63]),
        .Q(Q[63]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[64] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[64]),
        .Q(Q[64]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[65] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[65]),
        .Q(Q[65]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[66] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[66]),
        .Q(Q[66]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[6] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[6]),
        .Q(Q[6]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[7] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[7]),
        .Q(Q[7]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[8] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[8]),
        .Q(Q[8]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[9] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[9]),
        .Q(Q[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module axi_dwidth_converter_0_memory__parameterized0
   (p_0_out,
    p_0_out_0,
    dout,
    wr_clk,
    din,
    E,
    O6,
    O2,
    I1,
    rd_clk,
    Q,
    O1,
    rd_en);
  output p_0_out;
  output p_0_out_0;
  output [0:0]dout;
  input wr_clk;
  input [0:0]din;
  input [0:0]E;
  input [4:0]O6;
  input [4:0]O2;
  input I1;
  input rd_clk;
  input [0:0]Q;
  input [1:0]O1;
  input rd_en;

  wire [0:0]E;
  wire I1;
  wire [1:0]O1;
  wire [4:0]O2;
  wire [4:0]O6;
  wire [0:0]Q;
  wire [0:0]din;
  wire [0:0]dout;
  wire \n_2_gdm.dm ;
  wire p_0_out;
  wire p_0_out_0;
  wire rd_clk;
  wire rd_en;
  wire wr_clk;

axi_dwidth_converter_0_dmem__parameterized0 \gdm.dm 
       (.E(E),
        .I1(I1),
        .I2(O1),
        .O1(\n_2_gdm.dm ),
        .O2(O2),
        .O6(O6),
        .Q(Q),
        .din(din),
        .dout(dout),
        .p_0_out(p_0_out),
        .p_0_out_0(p_0_out_0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .wr_clk(wr_clk));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\n_2_gdm.dm ),
        .Q(dout),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module axi_dwidth_converter_0_memory__parameterized1
   (s_axi_bid,
    s_axi_bresp,
    m_aclk,
    E,
    m_axi_bresp,
    m_axi_bid,
    O2,
    I1,
    ram_rd_en_i,
    s_aclk,
    Q,
    O1,
    s_axi_bready);
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  input m_aclk;
  input [0:0]E;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_bid;
  input [4:0]O2;
  input [4:0]I1;
  input ram_rd_en_i;
  input s_aclk;
  input [0:0]Q;
  input [1:0]O1;
  input s_axi_bready;

  wire [0:0]E;
  wire [4:0]I1;
  wire [1:0]O1;
  wire [4:0]O2;
  wire [0:0]Q;
  wire m_aclk;
  wire [0:0]m_axi_bid;
  wire [1:0]m_axi_bresp;
  wire \n_0_goreg_dm.dout_i[0]_i_1 ;
  wire \n_0_goreg_dm.dout_i[1]_i_1 ;
  wire \n_0_goreg_dm.dout_i[2]_i_1 ;
  wire [2:0]p_0_out;
  wire ram_rd_en_i;
  wire s_aclk;
  wire [0:0]s_axi_bid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;

axi_dwidth_converter_0_dmem__parameterized1 \gdm.dm 
       (.E(E),
        .I1(I1),
        .O2(O2),
        .m_aclk(m_aclk),
        .m_axi_bid(m_axi_bid),
        .m_axi_bresp(m_axi_bresp),
        .p_0_out(p_0_out),
        .ram_rd_en_i(ram_rd_en_i),
        .s_aclk(s_aclk));
LUT6 #(
    .INIT(64'hEFEFFFEF20200020)) 
     \goreg_dm.dout_i[0]_i_1 
       (.I0(p_0_out[0]),
        .I1(Q),
        .I2(O1[1]),
        .I3(O1[0]),
        .I4(s_axi_bready),
        .I5(s_axi_bresp[0]),
        .O(\n_0_goreg_dm.dout_i[0]_i_1 ));
LUT6 #(
    .INIT(64'hEFEFFFEF20200020)) 
     \goreg_dm.dout_i[1]_i_1 
       (.I0(p_0_out[1]),
        .I1(Q),
        .I2(O1[1]),
        .I3(O1[0]),
        .I4(s_axi_bready),
        .I5(s_axi_bresp[1]),
        .O(\n_0_goreg_dm.dout_i[1]_i_1 ));
LUT6 #(
    .INIT(64'hEFEFFFEF20200020)) 
     \goreg_dm.dout_i[2]_i_1 
       (.I0(p_0_out[2]),
        .I1(Q),
        .I2(O1[1]),
        .I3(O1[0]),
        .I4(s_axi_bready),
        .I5(s_axi_bid),
        .O(\n_0_goreg_dm.dout_i[2]_i_1 ));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(\n_0_goreg_dm.dout_i[0]_i_1 ),
        .Q(s_axi_bresp[0]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(\n_0_goreg_dm.dout_i[1]_i_1 ),
        .Q(s_axi_bresp[1]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[2] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(\n_0_goreg_dm.dout_i[2]_i_1 ),
        .Q(s_axi_bid),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module axi_dwidth_converter_0_memory__parameterized2
   (Q,
    ram_rd_en_i,
    m_aclk,
    s_aclk,
    E,
    DI,
    O1,
    O2,
    I1);
  output [60:0]Q;
  input ram_rd_en_i;
  input m_aclk;
  input s_aclk;
  input [0:0]E;
  input [60:0]DI;
  input [4:0]O1;
  input [4:0]O2;
  input [0:0]I1;

  wire [60:0]DI;
  wire [0:0]E;
  wire [0:0]I1;
  wire [4:0]O1;
  wire [4:0]O2;
  wire [60:0]Q;
  wire m_aclk;
  wire [60:0]p_0_out;
  wire ram_rd_en_i;
  wire s_aclk;

axi_dwidth_converter_0_dmem__parameterized2 \gdm.dm 
       (.D(p_0_out),
        .DI(DI),
        .E(E),
        .O1(O1),
        .O2(O2),
        .m_aclk(m_aclk),
        .ram_rd_en_i(ram_rd_en_i),
        .s_aclk(s_aclk));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[0] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[0]),
        .Q(Q[0]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[10] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[10]),
        .Q(Q[10]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[11] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[11]),
        .Q(Q[11]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[12] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[12]),
        .Q(Q[12]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[13] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[13]),
        .Q(Q[13]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[14] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[14]),
        .Q(Q[14]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[15] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[15]),
        .Q(Q[15]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[16] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[16]),
        .Q(Q[16]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[17] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[17]),
        .Q(Q[17]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[18] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[18]),
        .Q(Q[18]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[19] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[19]),
        .Q(Q[19]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[1] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[1]),
        .Q(Q[1]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[20] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[20]),
        .Q(Q[20]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[21] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[21]),
        .Q(Q[21]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[22] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[22]),
        .Q(Q[22]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[23] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[23]),
        .Q(Q[23]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[24] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[24]),
        .Q(Q[24]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[25] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[25]),
        .Q(Q[25]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[26] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[26]),
        .Q(Q[26]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[27] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[27]),
        .Q(Q[27]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[28] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[28]),
        .Q(Q[28]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[29] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[29]),
        .Q(Q[29]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[2] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[2]),
        .Q(Q[2]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[30] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[30]),
        .Q(Q[30]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[31] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[31]),
        .Q(Q[31]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[32] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[32]),
        .Q(Q[32]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[33] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[33]),
        .Q(Q[33]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[34] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[34]),
        .Q(Q[34]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[35] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[35]),
        .Q(Q[35]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[36] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[36]),
        .Q(Q[36]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[37] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[37]),
        .Q(Q[37]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[38] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[38]),
        .Q(Q[38]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[39] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[39]),
        .Q(Q[39]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[3] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[3]),
        .Q(Q[3]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[40] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[40]),
        .Q(Q[40]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[41] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[41]),
        .Q(Q[41]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[42] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[42]),
        .Q(Q[42]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[43] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[43]),
        .Q(Q[43]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[44] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[44]),
        .Q(Q[44]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[45] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[45]),
        .Q(Q[45]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[46] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[46]),
        .Q(Q[46]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[47] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[47]),
        .Q(Q[47]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[48] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[48]),
        .Q(Q[48]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[49] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[49]),
        .Q(Q[49]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[4] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[4]),
        .Q(Q[4]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[50] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[50]),
        .Q(Q[50]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[51] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[51]),
        .Q(Q[51]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[52] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[52]),
        .Q(Q[52]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[53] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[53]),
        .Q(Q[53]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[54] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[54]),
        .Q(Q[54]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[55] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[55]),
        .Q(Q[55]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[56] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[56]),
        .Q(Q[56]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[57] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[57]),
        .Q(Q[57]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[58] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[58]),
        .Q(Q[58]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[59] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[59]),
        .Q(Q[59]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[5] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[5]),
        .Q(Q[5]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[60] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[60]),
        .Q(Q[60]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[6] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[6]),
        .Q(Q[6]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[7] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[7]),
        .Q(Q[7]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[8] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[8]),
        .Q(Q[8]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[9] 
       (.C(m_aclk),
        .CE(I1),
        .D(p_0_out[9]),
        .Q(Q[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module axi_dwidth_converter_0_memory__parameterized3
   (dout,
    dm_rd_en,
    clk,
    E,
    din,
    O2,
    Q,
    I1);
  output [30:0]dout;
  input dm_rd_en;
  input clk;
  input [0:0]E;
  input [30:0]din;
  input [4:0]O2;
  input [4:0]Q;
  input [0:0]I1;

  wire [0:0]E;
  wire [0:0]I1;
  wire [4:0]O2;
  wire [4:0]Q;
  wire clk;
  wire [30:0]din;
  wire dm_rd_en;
  wire [30:0]dout;
  wire [30:0]p_0_out;

axi_dwidth_converter_0_dmem__parameterized3 \gdm.dm 
       (.D(p_0_out),
        .E(E),
        .O2(O2),
        .Q(Q),
        .clk(clk),
        .din(din),
        .dm_rd_en(dm_rd_en));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[0] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[0]),
        .Q(dout[0]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[10] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[10]),
        .Q(dout[10]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[11] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[11]),
        .Q(dout[11]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[12] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[12]),
        .Q(dout[12]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[13] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[13]),
        .Q(dout[13]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[14] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[14]),
        .Q(dout[14]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[15] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[15]),
        .Q(dout[15]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[16] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[16]),
        .Q(dout[16]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[17] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[17]),
        .Q(dout[17]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[18] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[18]),
        .Q(dout[18]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[19] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[19]),
        .Q(dout[19]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[1] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[1]),
        .Q(dout[1]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[20] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[20]),
        .Q(dout[20]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[21] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[21]),
        .Q(dout[21]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[22] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[22]),
        .Q(dout[22]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[23] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[23]),
        .Q(dout[23]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[24] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[24]),
        .Q(dout[24]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[25] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[25]),
        .Q(dout[25]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[26] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[26]),
        .Q(dout[26]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[27] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[27]),
        .Q(dout[27]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[28] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[28]),
        .Q(dout[28]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[29] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[29]),
        .Q(dout[29]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[2] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[2]),
        .Q(dout[2]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[30] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[30]),
        .Q(dout[30]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[3] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[3]),
        .Q(dout[3]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[4] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[4]),
        .Q(dout[4]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[5] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[5]),
        .Q(dout[5]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[6] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[6]),
        .Q(dout[6]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[7] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[7]),
        .Q(dout[7]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[8] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[8]),
        .Q(dout[8]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[9] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[9]),
        .Q(dout[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module axi_dwidth_converter_0_memory__parameterized4
   (dout,
    dm_rd_en,
    clk,
    E,
    din,
    O2,
    Q,
    I1);
  output [22:0]dout;
  input dm_rd_en;
  input clk;
  input [0:0]E;
  input [22:0]din;
  input [4:0]O2;
  input [4:0]Q;
  input [0:0]I1;

  wire [0:0]E;
  wire [0:0]I1;
  wire [4:0]O2;
  wire [4:0]Q;
  wire clk;
  wire [22:0]din;
  wire dm_rd_en;
  wire [22:0]dout;
  wire [22:0]p_0_out;

axi_dwidth_converter_0_dmem__parameterized4 \gdm.dm 
       (.D(p_0_out),
        .E(E),
        .O2(O2),
        .Q(Q),
        .clk(clk),
        .din(din),
        .dm_rd_en(dm_rd_en));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[0] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[0]),
        .Q(dout[0]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[10] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[10]),
        .Q(dout[10]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[11] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[11]),
        .Q(dout[11]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[12] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[12]),
        .Q(dout[12]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[13] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[13]),
        .Q(dout[13]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[14] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[14]),
        .Q(dout[14]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[15] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[15]),
        .Q(dout[15]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[16] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[16]),
        .Q(dout[16]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[17] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[17]),
        .Q(dout[17]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[18] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[18]),
        .Q(dout[18]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[19] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[19]),
        .Q(dout[19]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[1] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[1]),
        .Q(dout[1]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[20] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[20]),
        .Q(dout[20]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[21] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[21]),
        .Q(dout[21]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[22] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[22]),
        .Q(dout[22]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[2] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[2]),
        .Q(dout[2]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[3] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[3]),
        .Q(dout[3]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[4] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[4]),
        .Q(dout[4]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[5] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[5]),
        .Q(dout[5]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[6] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[6]),
        .Q(dout[6]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[7] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[7]),
        .Q(dout[7]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[8] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[8]),
        .Q(dout[8]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[9] 
       (.C(clk),
        .CE(I1),
        .D(p_0_out[9]),
        .Q(dout[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module axi_dwidth_converter_0_memory__parameterized5
   (dout,
    wr_clk,
    din,
    I1,
    O3,
    O2,
    I2,
    I3,
    I4,
    I5,
    I6,
    I7,
    I8,
    I9,
    I10,
    I11,
    I12,
    I13,
    I14,
    I15,
    I16,
    I17,
    rd_clk,
    E);
  output [3:0]dout;
  input wr_clk;
  input [3:0]din;
  input I1;
  input [8:0]O3;
  input [5:0]O2;
  input I2;
  input I3;
  input I4;
  input I5;
  input I6;
  input I7;
  input I8;
  input I9;
  input I10;
  input I11;
  input I12;
  input I13;
  input I14;
  input I15;
  input I16;
  input I17;
  input rd_clk;
  input [0:0]E;

  wire [0:0]E;
  wire I1;
  wire I10;
  wire I11;
  wire I12;
  wire I13;
  wire I14;
  wire I15;
  wire I16;
  wire I17;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire I6;
  wire I7;
  wire I8;
  wire I9;
  wire [5:0]O2;
  wire [8:0]O3;
  wire [3:0]din;
  wire [3:0]dout;
  wire [3:0]p_0_out;
  wire rd_clk;
  wire wr_clk;

axi_dwidth_converter_0_dmem__parameterized5 \gdm.dm 
       (.D(p_0_out),
        .I1(I1),
        .I10(I10),
        .I11(I11),
        .I12(I12),
        .I13(I13),
        .I14(I14),
        .I15(I15),
        .I16(I16),
        .I17(I17),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .I6(I6),
        .I7(I7),
        .I8(I8),
        .I9(I9),
        .O2(O2),
        .O3(O3),
        .din(din),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(p_0_out[0]),
        .Q(dout[0]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(p_0_out[1]),
        .Q(dout[1]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(p_0_out[2]),
        .Q(dout[2]),
        .R(1'b0));
FDRE #(
    .INIT(1'b0)) 
     \goreg_dm.dout_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(p_0_out[3]),
        .Q(dout[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module axi_dwidth_converter_0_rd_bin_cntr
   (Q,
    O1,
    D,
    O2,
    O3,
    I1,
    I2,
    E,
    rd_clk,
    I3);
  output [0:0]Q;
  output O1;
  output [3:0]D;
  output [4:0]O2;
  input [3:0]O3;
  input I1;
  input I2;
  input [0:0]E;
  input rd_clk;
  input [0:0]I3;

  wire [3:0]D;
  wire [0:0]E;
  wire I1;
  wire I2;
  wire [0:0]I3;
  wire O1;
  wire [4:0]O2;
  wire [3:0]O3;
  wire [0:0]Q;
  wire n_0_ram_empty_fb_i_i_2;
  wire n_0_ram_empty_fb_i_i_4;
  wire [4:0]plusOp;
  wire rd_clk;
  wire [4:1]rd_pntr_plus1;

LUT1 #(
    .INIT(2'h1)) 
     \gc0.count[0]_i_1 
       (.I0(Q),
        .O(plusOp[0]));
(* SOFT_HLUTNM = "soft_lutpair122" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \gc0.count[1]_i_1 
       (.I0(Q),
        .I1(rd_pntr_plus1[1]),
        .O(plusOp[1]));
(* SOFT_HLUTNM = "soft_lutpair122" *) 
   LUT3 #(
    .INIT(8'h78)) 
     \gc0.count[2]_i_1 
       (.I0(rd_pntr_plus1[1]),
        .I1(Q),
        .I2(rd_pntr_plus1[2]),
        .O(plusOp[2]));
(* SOFT_HLUTNM = "soft_lutpair120" *) 
   LUT4 #(
    .INIT(16'h7F80)) 
     \gc0.count[3]_i_1 
       (.I0(rd_pntr_plus1[2]),
        .I1(Q),
        .I2(rd_pntr_plus1[1]),
        .I3(rd_pntr_plus1[3]),
        .O(plusOp[3]));
(* SOFT_HLUTNM = "soft_lutpair120" *) 
   LUT5 #(
    .INIT(32'h7FFF8000)) 
     \gc0.count[4]_i_1 
       (.I0(rd_pntr_plus1[3]),
        .I1(rd_pntr_plus1[1]),
        .I2(Q),
        .I3(rd_pntr_plus1[2]),
        .I4(rd_pntr_plus1[4]),
        .O(plusOp[4]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I3),
        .D(Q),
        .Q(O2[0]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I3),
        .D(rd_pntr_plus1[1]),
        .Q(O2[1]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I3),
        .D(rd_pntr_plus1[2]),
        .Q(O2[2]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I3),
        .D(rd_pntr_plus1[3]),
        .Q(O2[3]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I3),
        .D(rd_pntr_plus1[4]),
        .Q(O2[4]));
FDPE #(
    .INIT(1'b1)) 
     \gc0.count_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp[0]),
        .PRE(I3),
        .Q(Q));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I3),
        .D(plusOp[1]),
        .Q(rd_pntr_plus1[1]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I3),
        .D(plusOp[2]),
        .Q(rd_pntr_plus1[2]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I3),
        .D(plusOp[3]),
        .Q(rd_pntr_plus1[3]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I3),
        .D(plusOp[4]),
        .Q(rd_pntr_plus1[4]));
LUT6 #(
    .INIT(64'hFFFF800880088008)) 
     ram_empty_fb_i_i_1
       (.I0(n_0_ram_empty_fb_i_i_2),
        .I1(I1),
        .I2(O3[3]),
        .I3(rd_pntr_plus1[4]),
        .I4(n_0_ram_empty_fb_i_i_4),
        .I5(I2),
        .O(O1));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     ram_empty_fb_i_i_2
       (.I0(rd_pntr_plus1[2]),
        .I1(O3[1]),
        .I2(O3[0]),
        .I3(rd_pntr_plus1[1]),
        .I4(O3[2]),
        .I5(rd_pntr_plus1[3]),
        .O(n_0_ram_empty_fb_i_i_2));
(* SOFT_HLUTNM = "soft_lutpair121" *) 
   LUT4 #(
    .INIT(16'h9009)) 
     ram_empty_fb_i_i_4
       (.I0(O2[3]),
        .I1(O3[2]),
        .I2(O2[4]),
        .I3(O3[3]),
        .O(n_0_ram_empty_fb_i_i_4));
LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[0]_i_1 
       (.I0(O2[0]),
        .I1(O2[1]),
        .O(D[0]));
(* SOFT_HLUTNM = "soft_lutpair123" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[1]_i_1 
       (.I0(O2[1]),
        .I1(O2[2]),
        .O(D[1]));
(* SOFT_HLUTNM = "soft_lutpair123" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[2]_i_1 
       (.I0(O2[2]),
        .I1(O2[3]),
        .O(D[2]));
(* SOFT_HLUTNM = "soft_lutpair121" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[3]_i_1 
       (.I0(O2[3]),
        .I1(O2[4]),
        .O(D[3]));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module axi_dwidth_converter_0_rd_bin_cntr_10
   (Q,
    O1,
    D,
    O2,
    I1,
    I2,
    I3,
    E,
    m_aclk,
    I4);
  output [0:0]Q;
  output O1;
  output [3:0]D;
  output [4:0]O2;
  input [3:0]I1;
  input I2;
  input I3;
  input [0:0]E;
  input m_aclk;
  input [0:0]I4;

  wire [3:0]D;
  wire [0:0]E;
  wire [3:0]I1;
  wire I2;
  wire I3;
  wire [0:0]I4;
  wire O1;
  wire [4:0]O2;
  wire [0:0]Q;
  wire m_aclk;
  wire n_0_ram_empty_fb_i_i_2;
  wire n_0_ram_empty_fb_i_i_4;
  wire [4:0]plusOp;
  wire [4:1]rd_pntr_plus1;

LUT1 #(
    .INIT(2'h1)) 
     \gc0.count[0]_i_1 
       (.I0(Q),
        .O(plusOp[0]));
(* SOFT_HLUTNM = "soft_lutpair108" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \gc0.count[1]_i_1 
       (.I0(Q),
        .I1(rd_pntr_plus1[1]),
        .O(plusOp[1]));
(* SOFT_HLUTNM = "soft_lutpair108" *) 
   LUT3 #(
    .INIT(8'h78)) 
     \gc0.count[2]_i_1 
       (.I0(rd_pntr_plus1[1]),
        .I1(Q),
        .I2(rd_pntr_plus1[2]),
        .O(plusOp[2]));
(* SOFT_HLUTNM = "soft_lutpair106" *) 
   LUT4 #(
    .INIT(16'h7F80)) 
     \gc0.count[3]_i_1 
       (.I0(rd_pntr_plus1[2]),
        .I1(Q),
        .I2(rd_pntr_plus1[1]),
        .I3(rd_pntr_plus1[3]),
        .O(plusOp[3]));
(* SOFT_HLUTNM = "soft_lutpair106" *) 
   LUT5 #(
    .INIT(32'h7FFF8000)) 
     \gc0.count[4]_i_1 
       (.I0(rd_pntr_plus1[3]),
        .I1(rd_pntr_plus1[1]),
        .I2(Q),
        .I3(rd_pntr_plus1[2]),
        .I4(rd_pntr_plus1[4]),
        .O(plusOp[4]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[0] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I4),
        .D(Q),
        .Q(O2[0]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[1] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I4),
        .D(rd_pntr_plus1[1]),
        .Q(O2[1]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[2] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I4),
        .D(rd_pntr_plus1[2]),
        .Q(O2[2]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[3] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I4),
        .D(rd_pntr_plus1[3]),
        .Q(O2[3]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[4] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I4),
        .D(rd_pntr_plus1[4]),
        .Q(O2[4]));
FDPE #(
    .INIT(1'b1)) 
     \gc0.count_reg[0] 
       (.C(m_aclk),
        .CE(E),
        .D(plusOp[0]),
        .PRE(I4),
        .Q(Q));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[1] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I4),
        .D(plusOp[1]),
        .Q(rd_pntr_plus1[1]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[2] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I4),
        .D(plusOp[2]),
        .Q(rd_pntr_plus1[2]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[3] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I4),
        .D(plusOp[3]),
        .Q(rd_pntr_plus1[3]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[4] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I4),
        .D(plusOp[4]),
        .Q(rd_pntr_plus1[4]));
LUT6 #(
    .INIT(64'hFFFF800880088008)) 
     ram_empty_fb_i_i_1
       (.I0(n_0_ram_empty_fb_i_i_2),
        .I1(I2),
        .I2(I1[3]),
        .I3(rd_pntr_plus1[4]),
        .I4(n_0_ram_empty_fb_i_i_4),
        .I5(I3),
        .O(O1));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     ram_empty_fb_i_i_2
       (.I0(rd_pntr_plus1[2]),
        .I1(I1[1]),
        .I2(I1[0]),
        .I3(rd_pntr_plus1[1]),
        .I4(I1[2]),
        .I5(rd_pntr_plus1[3]),
        .O(n_0_ram_empty_fb_i_i_2));
(* SOFT_HLUTNM = "soft_lutpair107" *) 
   LUT4 #(
    .INIT(16'h9009)) 
     ram_empty_fb_i_i_4
       (.I0(O2[3]),
        .I1(I1[2]),
        .I2(O2[4]),
        .I3(I1[3]),
        .O(n_0_ram_empty_fb_i_i_4));
LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[0]_i_1 
       (.I0(O2[0]),
        .I1(O2[1]),
        .O(D[0]));
(* SOFT_HLUTNM = "soft_lutpair109" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[1]_i_1 
       (.I0(O2[1]),
        .I1(O2[2]),
        .O(D[1]));
(* SOFT_HLUTNM = "soft_lutpair109" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[2]_i_1 
       (.I0(O2[2]),
        .I1(O2[3]),
        .O(D[2]));
(* SOFT_HLUTNM = "soft_lutpair107" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[3]_i_1 
       (.I0(O2[3]),
        .I1(O2[4]),
        .O(D[3]));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module axi_dwidth_converter_0_rd_bin_cntr_40
   (Q,
    O1,
    D,
    O2,
    I1,
    I2,
    I3,
    E,
    m_aclk,
    I4);
  output [0:0]Q;
  output O1;
  output [3:0]D;
  output [4:0]O2;
  input [3:0]I1;
  input I2;
  input I3;
  input [0:0]E;
  input m_aclk;
  input [0:0]I4;

  wire [3:0]D;
  wire [0:0]E;
  wire [3:0]I1;
  wire I2;
  wire I3;
  wire [0:0]I4;
  wire O1;
  wire [4:0]O2;
  wire [0:0]Q;
  wire m_aclk;
  wire n_0_ram_empty_fb_i_i_2;
  wire n_0_ram_empty_fb_i_i_4;
  wire [4:0]plusOp;
  wire [4:1]rd_pntr_plus1;

LUT1 #(
    .INIT(2'h1)) 
     \gc0.count[0]_i_1 
       (.I0(Q),
        .O(plusOp[0]));
(* SOFT_HLUTNM = "soft_lutpair25" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \gc0.count[1]_i_1 
       (.I0(Q),
        .I1(rd_pntr_plus1[1]),
        .O(plusOp[1]));
(* SOFT_HLUTNM = "soft_lutpair25" *) 
   LUT3 #(
    .INIT(8'h78)) 
     \gc0.count[2]_i_1 
       (.I0(rd_pntr_plus1[1]),
        .I1(Q),
        .I2(rd_pntr_plus1[2]),
        .O(plusOp[2]));
(* SOFT_HLUTNM = "soft_lutpair23" *) 
   LUT4 #(
    .INIT(16'h7F80)) 
     \gc0.count[3]_i_1 
       (.I0(rd_pntr_plus1[2]),
        .I1(Q),
        .I2(rd_pntr_plus1[1]),
        .I3(rd_pntr_plus1[3]),
        .O(plusOp[3]));
(* SOFT_HLUTNM = "soft_lutpair23" *) 
   LUT5 #(
    .INIT(32'h7FFF8000)) 
     \gc0.count[4]_i_1 
       (.I0(rd_pntr_plus1[3]),
        .I1(rd_pntr_plus1[1]),
        .I2(Q),
        .I3(rd_pntr_plus1[2]),
        .I4(rd_pntr_plus1[4]),
        .O(plusOp[4]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[0] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I4),
        .D(Q),
        .Q(O2[0]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[1] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I4),
        .D(rd_pntr_plus1[1]),
        .Q(O2[1]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[2] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I4),
        .D(rd_pntr_plus1[2]),
        .Q(O2[2]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[3] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I4),
        .D(rd_pntr_plus1[3]),
        .Q(O2[3]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[4] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I4),
        .D(rd_pntr_plus1[4]),
        .Q(O2[4]));
FDPE #(
    .INIT(1'b1)) 
     \gc0.count_reg[0] 
       (.C(m_aclk),
        .CE(E),
        .D(plusOp[0]),
        .PRE(I4),
        .Q(Q));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[1] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I4),
        .D(plusOp[1]),
        .Q(rd_pntr_plus1[1]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[2] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I4),
        .D(plusOp[2]),
        .Q(rd_pntr_plus1[2]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[3] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I4),
        .D(plusOp[3]),
        .Q(rd_pntr_plus1[3]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[4] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I4),
        .D(plusOp[4]),
        .Q(rd_pntr_plus1[4]));
LUT6 #(
    .INIT(64'hFFFF800880088008)) 
     ram_empty_fb_i_i_1
       (.I0(n_0_ram_empty_fb_i_i_2),
        .I1(I2),
        .I2(I1[3]),
        .I3(rd_pntr_plus1[4]),
        .I4(n_0_ram_empty_fb_i_i_4),
        .I5(I3),
        .O(O1));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     ram_empty_fb_i_i_2
       (.I0(rd_pntr_plus1[2]),
        .I1(I1[1]),
        .I2(I1[0]),
        .I3(rd_pntr_plus1[1]),
        .I4(I1[2]),
        .I5(rd_pntr_plus1[3]),
        .O(n_0_ram_empty_fb_i_i_2));
(* SOFT_HLUTNM = "soft_lutpair24" *) 
   LUT4 #(
    .INIT(16'h9009)) 
     ram_empty_fb_i_i_4
       (.I0(O2[3]),
        .I1(I1[2]),
        .I2(O2[4]),
        .I3(I1[3]),
        .O(n_0_ram_empty_fb_i_i_4));
LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[0]_i_1 
       (.I0(O2[0]),
        .I1(O2[1]),
        .O(D[0]));
(* SOFT_HLUTNM = "soft_lutpair26" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[1]_i_1 
       (.I0(O2[1]),
        .I1(O2[2]),
        .O(D[1]));
(* SOFT_HLUTNM = "soft_lutpair26" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[2]_i_1 
       (.I0(O2[2]),
        .I1(O2[3]),
        .O(D[2]));
(* SOFT_HLUTNM = "soft_lutpair24" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[3]_i_1 
       (.I0(O2[3]),
        .I1(O2[4]),
        .O(D[3]));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module axi_dwidth_converter_0_rd_bin_cntr_54
   (Q,
    O1,
    D,
    O2,
    I1,
    I2,
    I3,
    E,
    s_aclk,
    I4);
  output [0:0]Q;
  output O1;
  output [3:0]D;
  output [4:0]O2;
  input [3:0]I1;
  input I2;
  input I3;
  input [0:0]E;
  input s_aclk;
  input [0:0]I4;

  wire [3:0]D;
  wire [0:0]E;
  wire [3:0]I1;
  wire I2;
  wire I3;
  wire [0:0]I4;
  wire O1;
  wire [4:0]O2;
  wire [0:0]Q;
  wire n_0_ram_empty_fb_i_i_2;
  wire n_0_ram_empty_fb_i_i_4;
  wire [4:0]plusOp;
  wire [4:1]rd_pntr_plus1;
  wire s_aclk;

LUT1 #(
    .INIT(2'h1)) 
     \gc0.count[0]_i_1 
       (.I0(Q),
        .O(plusOp[0]));
(* SOFT_HLUTNM = "soft_lutpair10" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \gc0.count[1]_i_1 
       (.I0(Q),
        .I1(rd_pntr_plus1[1]),
        .O(plusOp[1]));
(* SOFT_HLUTNM = "soft_lutpair10" *) 
   LUT3 #(
    .INIT(8'h78)) 
     \gc0.count[2]_i_1 
       (.I0(rd_pntr_plus1[1]),
        .I1(Q),
        .I2(rd_pntr_plus1[2]),
        .O(plusOp[2]));
(* SOFT_HLUTNM = "soft_lutpair8" *) 
   LUT4 #(
    .INIT(16'h7F80)) 
     \gc0.count[3]_i_1 
       (.I0(rd_pntr_plus1[2]),
        .I1(Q),
        .I2(rd_pntr_plus1[1]),
        .I3(rd_pntr_plus1[3]),
        .O(plusOp[3]));
(* SOFT_HLUTNM = "soft_lutpair8" *) 
   LUT5 #(
    .INIT(32'h7FFF8000)) 
     \gc0.count[4]_i_1 
       (.I0(rd_pntr_plus1[3]),
        .I1(rd_pntr_plus1[1]),
        .I2(Q),
        .I3(rd_pntr_plus1[2]),
        .I4(rd_pntr_plus1[4]),
        .O(plusOp[4]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[0] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I4),
        .D(Q),
        .Q(O2[0]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[1] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I4),
        .D(rd_pntr_plus1[1]),
        .Q(O2[1]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[2] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I4),
        .D(rd_pntr_plus1[2]),
        .Q(O2[2]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[3] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I4),
        .D(rd_pntr_plus1[3]),
        .Q(O2[3]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[4] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I4),
        .D(rd_pntr_plus1[4]),
        .Q(O2[4]));
FDPE #(
    .INIT(1'b1)) 
     \gc0.count_reg[0] 
       (.C(s_aclk),
        .CE(E),
        .D(plusOp[0]),
        .PRE(I4),
        .Q(Q));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[1] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I4),
        .D(plusOp[1]),
        .Q(rd_pntr_plus1[1]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[2] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I4),
        .D(plusOp[2]),
        .Q(rd_pntr_plus1[2]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[3] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I4),
        .D(plusOp[3]),
        .Q(rd_pntr_plus1[3]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[4] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I4),
        .D(plusOp[4]),
        .Q(rd_pntr_plus1[4]));
LUT6 #(
    .INIT(64'hFFFF800880088008)) 
     ram_empty_fb_i_i_1
       (.I0(n_0_ram_empty_fb_i_i_2),
        .I1(I2),
        .I2(I1[3]),
        .I3(rd_pntr_plus1[4]),
        .I4(n_0_ram_empty_fb_i_i_4),
        .I5(I3),
        .O(O1));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     ram_empty_fb_i_i_2
       (.I0(rd_pntr_plus1[2]),
        .I1(I1[1]),
        .I2(I1[0]),
        .I3(rd_pntr_plus1[1]),
        .I4(I1[2]),
        .I5(rd_pntr_plus1[3]),
        .O(n_0_ram_empty_fb_i_i_2));
(* SOFT_HLUTNM = "soft_lutpair9" *) 
   LUT4 #(
    .INIT(16'h9009)) 
     ram_empty_fb_i_i_4
       (.I0(O2[3]),
        .I1(I1[2]),
        .I2(O2[4]),
        .I3(I1[3]),
        .O(n_0_ram_empty_fb_i_i_4));
LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[0]_i_1 
       (.I0(O2[0]),
        .I1(O2[1]),
        .O(D[0]));
(* SOFT_HLUTNM = "soft_lutpair11" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[1]_i_1 
       (.I0(O2[1]),
        .I1(O2[2]),
        .O(D[1]));
(* SOFT_HLUTNM = "soft_lutpair11" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[2]_i_1 
       (.I0(O2[2]),
        .I1(O2[3]),
        .O(D[2]));
(* SOFT_HLUTNM = "soft_lutpair9" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_gc[3]_i_1 
       (.I0(O2[3]),
        .I1(O2[4]),
        .O(D[3]));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module axi_dwidth_converter_0_rd_bin_cntr__parameterized0
   (O2,
    ram_full_i,
    O1,
    O3,
    wr_en,
    p_1_out,
    I3,
    E,
    srst,
    Q,
    clk);
  output [4:0]O2;
  output ram_full_i;
  output O1;
  output [4:0]O3;
  input wr_en;
  input p_1_out;
  input [4:0]I3;
  input [0:0]E;
  input srst;
  input [4:0]Q;
  input clk;

  wire [0:0]E;
  wire [4:0]I3;
  wire O1;
  wire [4:0]O2;
  wire [4:0]O3;
  wire [4:0]Q;
  wire clk;
  wire n_0_ram_full_i_i_2;
  wire n_0_ram_full_i_i_4;
  wire n_0_ram_full_i_i_5;
  wire n_0_ram_full_i_i_6;
  wire n_0_ram_full_i_i_7;
  wire p_1_out;
  wire [4:0]plusOp;
  wire ram_full_i;
  wire srst;
  wire wr_en;

LUT1 #(
    .INIT(2'h1)) 
     \gc0.count[0]_i_1 
       (.I0(O3[0]),
        .O(plusOp[0]));
(* SOFT_HLUTNM = "soft_lutpair40" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \gc0.count[1]_i_1 
       (.I0(O3[0]),
        .I1(O3[1]),
        .O(plusOp[1]));
(* SOFT_HLUTNM = "soft_lutpair40" *) 
   LUT3 #(
    .INIT(8'h6A)) 
     \gc0.count[2]_i_1 
       (.I0(O3[2]),
        .I1(O3[1]),
        .I2(O3[0]),
        .O(plusOp[2]));
(* SOFT_HLUTNM = "soft_lutpair39" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \gc0.count[3]_i_1 
       (.I0(O3[3]),
        .I1(O3[0]),
        .I2(O3[1]),
        .I3(O3[2]),
        .O(plusOp[3]));
(* SOFT_HLUTNM = "soft_lutpair39" *) 
   LUT5 #(
    .INIT(32'h6AAAAAAA)) 
     \gc0.count[4]_i_1 
       (.I0(O3[4]),
        .I1(O3[2]),
        .I2(O3[1]),
        .I3(O3[0]),
        .I4(O3[3]),
        .O(plusOp[4]));
FDRE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[0] 
       (.C(clk),
        .CE(E),
        .D(O3[0]),
        .Q(O2[0]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[1] 
       (.C(clk),
        .CE(E),
        .D(O3[1]),
        .Q(O2[1]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[2] 
       (.C(clk),
        .CE(E),
        .D(O3[2]),
        .Q(O2[2]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[3] 
       (.C(clk),
        .CE(E),
        .D(O3[3]),
        .Q(O2[3]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[4] 
       (.C(clk),
        .CE(E),
        .D(O3[4]),
        .Q(O2[4]),
        .R(srst));
FDSE #(
    .INIT(1'b1)) 
     \gc0.count_reg[0] 
       (.C(clk),
        .CE(E),
        .D(plusOp[0]),
        .Q(O3[0]),
        .S(srst));
FDRE #(
    .INIT(1'b0)) 
     \gc0.count_reg[1] 
       (.C(clk),
        .CE(E),
        .D(plusOp[1]),
        .Q(O3[1]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gc0.count_reg[2] 
       (.C(clk),
        .CE(E),
        .D(plusOp[2]),
        .Q(O3[2]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gc0.count_reg[3] 
       (.C(clk),
        .CE(E),
        .D(plusOp[3]),
        .Q(O3[3]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gc0.count_reg[4] 
       (.C(clk),
        .CE(E),
        .D(plusOp[4]),
        .Q(O3[4]),
        .R(srst));
LUT5 #(
    .INIT(32'h0000F111)) 
     ram_full_i_i_1
       (.I0(E),
        .I1(n_0_ram_full_i_i_2),
        .I2(O1),
        .I3(p_1_out),
        .I4(srst),
        .O(ram_full_i));
LUT6 #(
    .INIT(64'h00EF00FF00FF00EF)) 
     ram_full_i_i_2
       (.I0(n_0_ram_full_i_i_4),
        .I1(n_0_ram_full_i_i_5),
        .I2(wr_en),
        .I3(p_1_out),
        .I4(I3[3]),
        .I5(O2[3]),
        .O(n_0_ram_full_i_i_2));
LUT4 #(
    .INIT(16'hFFF6)) 
     ram_full_i_i_3
       (.I0(O2[3]),
        .I1(Q[3]),
        .I2(n_0_ram_full_i_i_6),
        .I3(n_0_ram_full_i_i_7),
        .O(O1));
LUT4 #(
    .INIT(16'h6FF6)) 
     ram_full_i_i_4
       (.I0(O2[4]),
        .I1(I3[4]),
        .I2(O2[2]),
        .I3(I3[2]),
        .O(n_0_ram_full_i_i_4));
LUT4 #(
    .INIT(16'h6FF6)) 
     ram_full_i_i_5
       (.I0(O2[1]),
        .I1(I3[1]),
        .I2(O2[0]),
        .I3(I3[0]),
        .O(n_0_ram_full_i_i_5));
LUT4 #(
    .INIT(16'h6FF6)) 
     ram_full_i_i_6
       (.I0(O2[2]),
        .I1(Q[2]),
        .I2(O2[4]),
        .I3(Q[4]),
        .O(n_0_ram_full_i_i_6));
LUT4 #(
    .INIT(16'h6FF6)) 
     ram_full_i_i_7
       (.I0(O2[0]),
        .I1(Q[0]),
        .I2(O2[1]),
        .I3(Q[1]),
        .O(n_0_ram_full_i_i_7));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module axi_dwidth_converter_0_rd_bin_cntr__parameterized0_33
   (O2,
    ram_full_i,
    O1,
    O3,
    wr_en,
    p_1_out,
    I3,
    E,
    srst,
    Q,
    clk);
  output [4:0]O2;
  output ram_full_i;
  output O1;
  output [4:0]O3;
  input wr_en;
  input p_1_out;
  input [4:0]I3;
  input [0:0]E;
  input srst;
  input [4:0]Q;
  input clk;

  wire [0:0]E;
  wire [4:0]I3;
  wire O1;
  wire [4:0]O2;
  wire [4:0]O3;
  wire [4:0]Q;
  wire clk;
  wire n_0_ram_full_i_i_2;
  wire n_0_ram_full_i_i_4;
  wire n_0_ram_full_i_i_5;
  wire n_0_ram_full_i_i_6;
  wire n_0_ram_full_i_i_7;
  wire p_1_out;
  wire [4:0]plusOp;
  wire ram_full_i;
  wire srst;
  wire wr_en;

LUT1 #(
    .INIT(2'h1)) 
     \gc0.count[0]_i_1 
       (.I0(O3[0]),
        .O(plusOp[0]));
(* SOFT_HLUTNM = "soft_lutpair33" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \gc0.count[1]_i_1 
       (.I0(O3[0]),
        .I1(O3[1]),
        .O(plusOp[1]));
(* SOFT_HLUTNM = "soft_lutpair33" *) 
   LUT3 #(
    .INIT(8'h6A)) 
     \gc0.count[2]_i_1 
       (.I0(O3[2]),
        .I1(O3[1]),
        .I2(O3[0]),
        .O(plusOp[2]));
(* SOFT_HLUTNM = "soft_lutpair32" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \gc0.count[3]_i_1 
       (.I0(O3[3]),
        .I1(O3[0]),
        .I2(O3[1]),
        .I3(O3[2]),
        .O(plusOp[3]));
(* SOFT_HLUTNM = "soft_lutpair32" *) 
   LUT5 #(
    .INIT(32'h6AAAAAAA)) 
     \gc0.count[4]_i_1 
       (.I0(O3[4]),
        .I1(O3[2]),
        .I2(O3[1]),
        .I3(O3[0]),
        .I4(O3[3]),
        .O(plusOp[4]));
FDRE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[0] 
       (.C(clk),
        .CE(E),
        .D(O3[0]),
        .Q(O2[0]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[1] 
       (.C(clk),
        .CE(E),
        .D(O3[1]),
        .Q(O2[1]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[2] 
       (.C(clk),
        .CE(E),
        .D(O3[2]),
        .Q(O2[2]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[3] 
       (.C(clk),
        .CE(E),
        .D(O3[3]),
        .Q(O2[3]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[4] 
       (.C(clk),
        .CE(E),
        .D(O3[4]),
        .Q(O2[4]),
        .R(srst));
FDSE #(
    .INIT(1'b1)) 
     \gc0.count_reg[0] 
       (.C(clk),
        .CE(E),
        .D(plusOp[0]),
        .Q(O3[0]),
        .S(srst));
FDRE #(
    .INIT(1'b0)) 
     \gc0.count_reg[1] 
       (.C(clk),
        .CE(E),
        .D(plusOp[1]),
        .Q(O3[1]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gc0.count_reg[2] 
       (.C(clk),
        .CE(E),
        .D(plusOp[2]),
        .Q(O3[2]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gc0.count_reg[3] 
       (.C(clk),
        .CE(E),
        .D(plusOp[3]),
        .Q(O3[3]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gc0.count_reg[4] 
       (.C(clk),
        .CE(E),
        .D(plusOp[4]),
        .Q(O3[4]),
        .R(srst));
LUT5 #(
    .INIT(32'h0000F111)) 
     ram_full_i_i_1
       (.I0(E),
        .I1(n_0_ram_full_i_i_2),
        .I2(O1),
        .I3(p_1_out),
        .I4(srst),
        .O(ram_full_i));
LUT6 #(
    .INIT(64'h00EF00FF00FF00EF)) 
     ram_full_i_i_2
       (.I0(n_0_ram_full_i_i_4),
        .I1(n_0_ram_full_i_i_5),
        .I2(wr_en),
        .I3(p_1_out),
        .I4(I3[3]),
        .I5(O2[3]),
        .O(n_0_ram_full_i_i_2));
LUT4 #(
    .INIT(16'hFFF6)) 
     ram_full_i_i_3
       (.I0(O2[3]),
        .I1(Q[3]),
        .I2(n_0_ram_full_i_i_6),
        .I3(n_0_ram_full_i_i_7),
        .O(O1));
LUT4 #(
    .INIT(16'h6FF6)) 
     ram_full_i_i_4
       (.I0(O2[4]),
        .I1(I3[4]),
        .I2(O2[2]),
        .I3(I3[2]),
        .O(n_0_ram_full_i_i_4));
LUT4 #(
    .INIT(16'h6FF6)) 
     ram_full_i_i_5
       (.I0(O2[1]),
        .I1(I3[1]),
        .I2(O2[0]),
        .I3(I3[0]),
        .O(n_0_ram_full_i_i_5));
LUT4 #(
    .INIT(16'h6FF6)) 
     ram_full_i_i_6
       (.I0(O2[2]),
        .I1(Q[2]),
        .I2(O2[4]),
        .I3(Q[4]),
        .O(n_0_ram_full_i_i_6));
LUT4 #(
    .INIT(16'h6FF6)) 
     ram_full_i_i_7
       (.I0(O2[0]),
        .I1(Q[0]),
        .I2(O2[1]),
        .I3(Q[1]),
        .O(n_0_ram_full_i_i_7));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module axi_dwidth_converter_0_rd_bin_cntr__parameterized1
   (O1,
    Q,
    v1_reg,
    O3,
    WR_PNTR_RD,
    E,
    rd_clk,
    I1);
  output O1;
  output [7:0]Q;
  output [3:0]v1_reg;
  output [8:0]O3;
  input [8:0]WR_PNTR_RD;
  input [0:0]E;
  input rd_clk;
  input [0:0]I1;

  wire [0:0]E;
  wire [0:0]I1;
  wire O1;
  wire [8:0]O3;
  wire [7:0]Q;
  wire [8:0]WR_PNTR_RD;
  wire \n_0_gc0.count[8]_i_2 ;
  wire [8:0]plusOp;
  wire rd_clk;
  wire [8:8]rd_pntr_plus1;
  wire [3:0]v1_reg;

LUT1 #(
    .INIT(2'h1)) 
     \gc0.count[0]_i_1 
       (.I0(Q[0]),
        .O(plusOp[0]));
LUT2 #(
    .INIT(4'h6)) 
     \gc0.count[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp[1]));
(* SOFT_HLUTNM = "soft_lutpair62" *) 
   LUT3 #(
    .INIT(8'h6A)) 
     \gc0.count[2]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(plusOp[2]));
(* SOFT_HLUTNM = "soft_lutpair60" *) 
   LUT4 #(
    .INIT(16'h7F80)) 
     \gc0.count[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(plusOp[3]));
(* SOFT_HLUTNM = "soft_lutpair60" *) 
   LUT5 #(
    .INIT(32'h6AAAAAAA)) 
     \gc0.count[4]_i_1 
       (.I0(Q[4]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[3]),
        .O(plusOp[4]));
LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
     \gc0.count[5]_i_1 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(Q[4]),
        .O(plusOp[5]));
(* SOFT_HLUTNM = "soft_lutpair61" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \gc0.count[6]_i_1 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\n_0_gc0.count[8]_i_2 ),
        .I3(Q[5]),
        .O(plusOp[6]));
(* SOFT_HLUTNM = "soft_lutpair61" *) 
   LUT5 #(
    .INIT(32'h6AAAAAAA)) 
     \gc0.count[7]_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\n_0_gc0.count[8]_i_2 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .O(plusOp[7]));
LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
     \gc0.count[8]_i_1 
       (.I0(rd_pntr_plus1),
        .I1(Q[6]),
        .I2(Q[4]),
        .I3(\n_0_gc0.count[8]_i_2 ),
        .I4(Q[5]),
        .I5(Q[7]),
        .O(plusOp[8]));
(* SOFT_HLUTNM = "soft_lutpair62" *) 
   LUT4 #(
    .INIT(16'h8000)) 
     \gc0.count[8]_i_2 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(\n_0_gc0.count[8]_i_2 ));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I1),
        .D(Q[0]),
        .Q(O3[0]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I1),
        .D(Q[1]),
        .Q(O3[1]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I1),
        .D(Q[2]),
        .Q(O3[2]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I1),
        .D(Q[3]),
        .Q(O3[3]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I1),
        .D(Q[4]),
        .Q(O3[4]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I1),
        .D(Q[5]),
        .Q(O3[5]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I1),
        .D(Q[6]),
        .Q(O3[6]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I1),
        .D(Q[7]),
        .Q(O3[7]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_d1_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I1),
        .D(rd_pntr_plus1),
        .Q(O3[8]));
FDPE #(
    .INIT(1'b1)) 
     \gc0.count_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp[0]),
        .PRE(I1),
        .Q(Q[0]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I1),
        .D(plusOp[1]),
        .Q(Q[1]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I1),
        .D(plusOp[2]),
        .Q(Q[2]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I1),
        .D(plusOp[3]),
        .Q(Q[3]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I1),
        .D(plusOp[4]),
        .Q(Q[4]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I1),
        .D(plusOp[5]),
        .Q(Q[5]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I1),
        .D(plusOp[6]),
        .Q(Q[6]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I1),
        .D(plusOp[7]),
        .Q(Q[7]));
FDCE #(
    .INIT(1'b0)) 
     \gc0.count_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .CLR(I1),
        .D(plusOp[8]),
        .Q(rd_pntr_plus1));
LUT4 #(
    .INIT(16'h9009)) 
     \gmux.gm[0].gm1.m1_i_1 
       (.I0(O3[1]),
        .I1(WR_PNTR_RD[1]),
        .I2(O3[0]),
        .I3(WR_PNTR_RD[0]),
        .O(v1_reg[0]));
LUT4 #(
    .INIT(16'h9009)) 
     \gmux.gm[1].gms.ms_i_1 
       (.I0(O3[3]),
        .I1(WR_PNTR_RD[3]),
        .I2(O3[2]),
        .I3(WR_PNTR_RD[2]),
        .O(v1_reg[1]));
LUT4 #(
    .INIT(16'h9009)) 
     \gmux.gm[2].gms.ms_i_1 
       (.I0(O3[5]),
        .I1(WR_PNTR_RD[5]),
        .I2(O3[4]),
        .I3(WR_PNTR_RD[4]),
        .O(v1_reg[2]));
LUT4 #(
    .INIT(16'h9009)) 
     \gmux.gm[3].gms.ms_i_1 
       (.I0(O3[7]),
        .I1(WR_PNTR_RD[7]),
        .I2(O3[6]),
        .I3(WR_PNTR_RD[6]),
        .O(v1_reg[3]));
LUT2 #(
    .INIT(4'h9)) 
     \gmux.gm[4].gms.ms_i_1__1 
       (.I0(rd_pntr_plus1),
        .I1(WR_PNTR_RD[8]),
        .O(O1));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module axi_dwidth_converter_0_rd_fwft
   (empty,
    O1,
    O2,
    E,
    O4,
    rd_clk,
    Q,
    I1,
    O3,
    p_18_out,
    rd_en,
    p_0_out,
    p_0_out_0);
  output empty;
  output O1;
  output [1:0]O2;
  output [0:0]E;
  output O4;
  input rd_clk;
  input [0:0]Q;
  input [0:0]I1;
  input [0:0]O3;
  input p_18_out;
  input rd_en;
  input p_0_out;
  input p_0_out_0;

  wire [0:0]E;
  wire [0:0]I1;
  wire O1;
  wire [1:0]O2;
  wire [0:0]O3;
  wire O4;
  wire [0:0]Q;
  wire empty;
  wire empty_fwft_fb;
  wire empty_fwft_i0;
  wire [1:0]next_fwft_state;
  wire p_0_out;
  wire p_0_out_0;
  wire p_18_out;
  wire rd_clk;
  wire rd_en;

(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     empty_fwft_fb_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q),
        .Q(empty_fwft_fb));
(* SOFT_HLUTNM = "soft_lutpair118" *) 
   LUT4 #(
    .INIT(16'hC0EC)) 
     empty_fwft_i_i_1
       (.I0(rd_en),
        .I1(empty_fwft_fb),
        .I2(O2[0]),
        .I3(O2[1]),
        .O(empty_fwft_i0));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     empty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q),
        .Q(empty));
(* SOFT_HLUTNM = "soft_lutpair119" *) 
   LUT4 #(
    .INIT(16'h00DF)) 
     \gc0.count_d1[4]_i_1 
       (.I0(O2[1]),
        .I1(rd_en),
        .I2(O2[0]),
        .I3(p_18_out),
        .O(E));
LUT6 #(
    .INIT(64'hFFFFAEAA0000A2AA)) 
     \gpr1.dout_i[0]_i_1 
       (.I0(p_0_out),
        .I1(O2[1]),
        .I2(rd_en),
        .I3(O2[0]),
        .I4(p_18_out),
        .I5(p_0_out_0),
        .O(O4));
(* SOFT_HLUTNM = "soft_lutpair118" *) 
   LUT3 #(
    .INIT(8'hAE)) 
     \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(O2[1]),
        .I1(O2[0]),
        .I2(rd_en),
        .O(next_fwft_state[0]));
(* SOFT_HLUTNM = "soft_lutpair119" *) 
   LUT4 #(
    .INIT(16'h20FF)) 
     \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(O2[1]),
        .I1(rd_en),
        .I2(O2[0]),
        .I3(p_18_out),
        .O(next_fwft_state[1]));
(* equivalent_register_removal = "no" *) 
   FDCE #(
    .INIT(1'b0)) 
     \gpregsm1.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(Q),
        .D(next_fwft_state[0]),
        .Q(O2[0]));
(* equivalent_register_removal = "no" *) 
   FDCE #(
    .INIT(1'b0)) 
     \gpregsm1.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(Q),
        .D(next_fwft_state[1]),
        .Q(O2[1]));
LUT6 #(
    .INIT(64'h0909000909090909)) 
     ram_empty_fb_i_i_3
       (.I0(I1),
        .I1(O3),
        .I2(p_18_out),
        .I3(O2[0]),
        .I4(rd_en),
        .I5(O2[1]),
        .O(O1));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module axi_dwidth_converter_0_rd_fwft_19
   (empty,
    O1,
    E,
    O2,
    O3,
    rd_clk,
    Q,
    rd_en,
    p_18_out,
    comp0,
    comp1);
  output empty;
  output O1;
  output [0:0]E;
  output O2;
  output [0:0]O3;
  input rd_clk;
  input [1:0]Q;
  input rd_en;
  input p_18_out;
  input comp0;
  input comp1;

  wire [0:0]E;
  wire O1;
  wire O2;
  wire [0:0]O3;
  wire [1:0]Q;
  wire comp0;
  wire comp1;
  wire [0:0]curr_fwft_state;
  wire empty;
  wire empty_fwft_fb;
  wire empty_fwft_i0;
  wire \n_0_gpregsm1.curr_fwft_state[0]_i_1 ;
  wire \n_0_gpregsm1.curr_fwft_state[1]_i_1 ;
  wire \n_0_gpregsm1.curr_fwft_state_reg[1] ;
  wire p_18_out;
  wire rd_clk;
  wire rd_en;

(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     empty_fwft_fb_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q[1]),
        .Q(empty_fwft_fb));
(* SOFT_HLUTNM = "soft_lutpair59" *) 
   LUT4 #(
    .INIT(16'hCF08)) 
     empty_fwft_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state),
        .I2(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I3(empty_fwft_fb),
        .O(empty_fwft_i0));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     empty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q[1]),
        .Q(empty));
(* SOFT_HLUTNM = "soft_lutpair57" *) 
   LUT4 #(
    .INIT(16'h5515)) 
     \gc0.count_d1[8]_i_1 
       (.I0(p_18_out),
        .I1(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I2(curr_fwft_state),
        .I3(rd_en),
        .O(E));
(* SOFT_HLUTNM = "soft_lutpair59" *) 
   LUT4 #(
    .INIT(16'h4044)) 
     \goreg_dm.dout_i[3]_i_1 
       (.I0(Q[0]),
        .I1(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I2(rd_en),
        .I3(curr_fwft_state),
        .O(O3));
(* SOFT_HLUTNM = "soft_lutpair57" *) 
   LUT4 #(
    .INIT(16'h5515)) 
     \gpr1.dout_i[3]_i_1 
       (.I0(p_18_out),
        .I1(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I2(curr_fwft_state),
        .I3(rd_en),
        .O(O1));
(* SOFT_HLUTNM = "soft_lutpair58" *) 
   LUT3 #(
    .INIT(8'hBA)) 
     \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I1(rd_en),
        .I2(curr_fwft_state),
        .O(\n_0_gpregsm1.curr_fwft_state[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair58" *) 
   LUT4 #(
    .INIT(16'h08FF)) 
     \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I1(curr_fwft_state),
        .I2(rd_en),
        .I3(p_18_out),
        .O(\n_0_gpregsm1.curr_fwft_state[1]_i_1 ));
(* equivalent_register_removal = "no" *) 
   FDCE #(
    .INIT(1'b0)) 
     \gpregsm1.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(Q[1]),
        .D(\n_0_gpregsm1.curr_fwft_state[0]_i_1 ),
        .Q(curr_fwft_state));
(* equivalent_register_removal = "no" *) 
   FDCE #(
    .INIT(1'b0)) 
     \gpregsm1.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(Q[1]),
        .D(\n_0_gpregsm1.curr_fwft_state[1]_i_1 ),
        .Q(\n_0_gpregsm1.curr_fwft_state_reg[1] ));
LUT6 #(
    .INIT(64'hBBBBABBBAAAAAAAA)) 
     ram_empty_fb_i_i_1
       (.I0(comp0),
        .I1(p_18_out),
        .I2(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I3(curr_fwft_state),
        .I4(rd_en),
        .I5(comp1),
        .O(O2));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module axi_dwidth_converter_0_rd_fwft_38
   (O1,
    E,
    ram_rd_en_i,
    O2,
    m_axi_arvalid,
    m_aclk,
    Q,
    I1,
    I2,
    p_18_out,
    m_axi_arready);
  output O1;
  output [0:0]E;
  output ram_rd_en_i;
  output [0:0]O2;
  output m_axi_arvalid;
  input m_aclk;
  input [1:0]Q;
  input [0:0]I1;
  input [0:0]I2;
  input p_18_out;
  input m_axi_arready;

  wire [0:0]E;
  wire [0:0]I1;
  wire [0:0]I2;
  wire O1;
  wire [0:0]O2;
  wire [1:0]Q;
  wire [0:0]curr_fwft_state;
  wire empty_fwft_fb;
  wire empty_fwft_i;
  wire empty_fwft_i0;
  wire m_aclk;
  wire m_axi_arready;
  wire m_axi_arvalid;
  wire \n_0_gpregsm1.curr_fwft_state_reg[1] ;
  wire [1:0]next_fwft_state;
  wire p_18_out;
  wire ram_rd_en_i;

(* SOFT_HLUTNM = "soft_lutpair22" *) 
   LUT4 #(
    .INIT(16'hF540)) 
     empty_fwft_fb_i_1
       (.I0(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I1(m_axi_arready),
        .I2(curr_fwft_state),
        .I3(empty_fwft_fb),
        .O(empty_fwft_i0));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     empty_fwft_fb_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q[1]),
        .Q(empty_fwft_fb));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     empty_fwft_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q[1]),
        .Q(empty_fwft_i));
(* SOFT_HLUTNM = "soft_lutpair21" *) 
   LUT4 #(
    .INIT(16'h00DF)) 
     \gc0.count_d1[4]_i_1 
       (.I0(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I1(m_axi_arready),
        .I2(curr_fwft_state),
        .I3(p_18_out),
        .O(E));
(* SOFT_HLUTNM = "soft_lutpair22" *) 
   LUT4 #(
    .INIT(16'h4404)) 
     \goreg_dm.dout_i[60]_i_1 
       (.I0(Q[0]),
        .I1(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I2(curr_fwft_state),
        .I3(m_axi_arready),
        .O(O2));
(* SOFT_HLUTNM = "soft_lutpair20" *) 
   LUT4 #(
    .INIT(16'h00DF)) 
     \gpr1.dout_i[60]_i_1 
       (.I0(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I1(m_axi_arready),
        .I2(curr_fwft_state),
        .I3(p_18_out),
        .O(ram_rd_en_i));
(* SOFT_HLUTNM = "soft_lutpair21" *) 
   LUT3 #(
    .INIT(8'hAE)) 
     \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I1(curr_fwft_state),
        .I2(m_axi_arready),
        .O(next_fwft_state[0]));
(* SOFT_HLUTNM = "soft_lutpair20" *) 
   LUT4 #(
    .INIT(16'h20FF)) 
     \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I1(m_axi_arready),
        .I2(curr_fwft_state),
        .I3(p_18_out),
        .O(next_fwft_state[1]));
(* equivalent_register_removal = "no" *) 
   FDCE #(
    .INIT(1'b0)) 
     \gpregsm1.curr_fwft_state_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(Q[1]),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state));
(* equivalent_register_removal = "no" *) 
   FDCE #(
    .INIT(1'b0)) 
     \gpregsm1.curr_fwft_state_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(Q[1]),
        .D(next_fwft_state[1]),
        .Q(\n_0_gpregsm1.curr_fwft_state_reg[1] ));
LUT1 #(
    .INIT(2'h1)) 
     m_axi_arvalid_INST_0
       (.I0(empty_fwft_i),
        .O(m_axi_arvalid));
LUT6 #(
    .INIT(64'h0909000909090909)) 
     ram_empty_fb_i_i_3
       (.I0(I1),
        .I1(I2),
        .I2(p_18_out),
        .I3(curr_fwft_state),
        .I4(m_axi_arready),
        .I5(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .O(O1));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module axi_dwidth_converter_0_rd_fwft_52
   (O1,
    O2,
    E,
    ram_rd_en_i,
    s_axi_bvalid,
    s_aclk,
    Q,
    I1,
    I2,
    p_18_out,
    s_axi_bready);
  output O1;
  output [1:0]O2;
  output [0:0]E;
  output ram_rd_en_i;
  output s_axi_bvalid;
  input s_aclk;
  input [0:0]Q;
  input [0:0]I1;
  input [0:0]I2;
  input p_18_out;
  input s_axi_bready;

  wire [0:0]E;
  wire [0:0]I1;
  wire [0:0]I2;
  wire O1;
  wire [1:0]O2;
  wire [0:0]Q;
  wire empty_fwft_fb;
  wire empty_fwft_i;
  wire empty_fwft_i0;
  wire [1:0]next_fwft_state;
  wire p_18_out;
  wire ram_rd_en_i;
  wire s_aclk;
  wire s_axi_bready;
  wire s_axi_bvalid;

LUT4 #(
    .INIT(16'hF540)) 
     empty_fwft_fb_i_1
       (.I0(O2[1]),
        .I1(s_axi_bready),
        .I2(O2[0]),
        .I3(empty_fwft_fb),
        .O(empty_fwft_i0));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     empty_fwft_fb_reg
       (.C(s_aclk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q),
        .Q(empty_fwft_fb));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     empty_fwft_i_reg
       (.C(s_aclk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q),
        .Q(empty_fwft_i));
(* SOFT_HLUTNM = "soft_lutpair6" *) 
   LUT4 #(
    .INIT(16'h00DF)) 
     \gc0.count_d1[4]_i_1 
       (.I0(O2[1]),
        .I1(s_axi_bready),
        .I2(O2[0]),
        .I3(p_18_out),
        .O(E));
(* SOFT_HLUTNM = "soft_lutpair7" *) 
   LUT4 #(
    .INIT(16'h00DF)) 
     \gpr1.dout_i[2]_i_1 
       (.I0(O2[1]),
        .I1(s_axi_bready),
        .I2(O2[0]),
        .I3(p_18_out),
        .O(ram_rd_en_i));
(* SOFT_HLUTNM = "soft_lutpair7" *) 
   LUT3 #(
    .INIT(8'hAE)) 
     \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(O2[1]),
        .I1(O2[0]),
        .I2(s_axi_bready),
        .O(next_fwft_state[0]));
(* SOFT_HLUTNM = "soft_lutpair6" *) 
   LUT4 #(
    .INIT(16'h20FF)) 
     \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(O2[1]),
        .I1(s_axi_bready),
        .I2(O2[0]),
        .I3(p_18_out),
        .O(next_fwft_state[1]));
(* equivalent_register_removal = "no" *) 
   FDCE #(
    .INIT(1'b0)) 
     \gpregsm1.curr_fwft_state_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(Q),
        .D(next_fwft_state[0]),
        .Q(O2[0]));
(* equivalent_register_removal = "no" *) 
   FDCE #(
    .INIT(1'b0)) 
     \gpregsm1.curr_fwft_state_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(Q),
        .D(next_fwft_state[1]),
        .Q(O2[1]));
LUT6 #(
    .INIT(64'h0909000909090909)) 
     ram_empty_fb_i_i_3
       (.I0(I1),
        .I1(I2),
        .I2(p_18_out),
        .I3(O2[0]),
        .I4(s_axi_bready),
        .I5(O2[1]),
        .O(O1));
LUT1 #(
    .INIT(2'h1)) 
     s_axi_bvalid_INST_0
       (.I0(empty_fwft_i),
        .O(s_axi_bvalid));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module axi_dwidth_converter_0_rd_fwft_8
   (O1,
    E,
    ram_rd_en_i,
    O2,
    m_axi_awvalid,
    m_aclk,
    Q,
    I1,
    I2,
    p_18_out,
    m_axi_awready);
  output O1;
  output [0:0]E;
  output ram_rd_en_i;
  output [0:0]O2;
  output m_axi_awvalid;
  input m_aclk;
  input [1:0]Q;
  input [0:0]I1;
  input [0:0]I2;
  input p_18_out;
  input m_axi_awready;

  wire [0:0]E;
  wire [0:0]I1;
  wire [0:0]I2;
  wire O1;
  wire [0:0]O2;
  wire [1:0]Q;
  wire [0:0]curr_fwft_state;
  wire empty_fwft_fb;
  wire empty_fwft_i;
  wire empty_fwft_i0;
  wire m_aclk;
  wire m_axi_awready;
  wire m_axi_awvalid;
  wire \n_0_gpregsm1.curr_fwft_state_reg[1] ;
  wire [1:0]next_fwft_state;
  wire p_18_out;
  wire ram_rd_en_i;

(* SOFT_HLUTNM = "soft_lutpair105" *) 
   LUT4 #(
    .INIT(16'hF540)) 
     empty_fwft_fb_i_1
       (.I0(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I1(m_axi_awready),
        .I2(curr_fwft_state),
        .I3(empty_fwft_fb),
        .O(empty_fwft_i0));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     empty_fwft_fb_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q[1]),
        .Q(empty_fwft_fb));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     empty_fwft_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q[1]),
        .Q(empty_fwft_i));
(* SOFT_HLUTNM = "soft_lutpair104" *) 
   LUT4 #(
    .INIT(16'h00DF)) 
     \gc0.count_d1[4]_i_1 
       (.I0(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I1(m_axi_awready),
        .I2(curr_fwft_state),
        .I3(p_18_out),
        .O(E));
(* SOFT_HLUTNM = "soft_lutpair105" *) 
   LUT4 #(
    .INIT(16'h4404)) 
     \goreg_dm.dout_i[66]_i_1 
       (.I0(Q[0]),
        .I1(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I2(curr_fwft_state),
        .I3(m_axi_awready),
        .O(O2));
(* SOFT_HLUTNM = "soft_lutpair103" *) 
   LUT4 #(
    .INIT(16'h00DF)) 
     \gpr1.dout_i[66]_i_1 
       (.I0(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I1(m_axi_awready),
        .I2(curr_fwft_state),
        .I3(p_18_out),
        .O(ram_rd_en_i));
(* SOFT_HLUTNM = "soft_lutpair104" *) 
   LUT3 #(
    .INIT(8'hAE)) 
     \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I1(curr_fwft_state),
        .I2(m_axi_awready),
        .O(next_fwft_state[0]));
(* SOFT_HLUTNM = "soft_lutpair103" *) 
   LUT4 #(
    .INIT(16'h20FF)) 
     \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I1(m_axi_awready),
        .I2(curr_fwft_state),
        .I3(p_18_out),
        .O(next_fwft_state[1]));
(* equivalent_register_removal = "no" *) 
   FDCE #(
    .INIT(1'b0)) 
     \gpregsm1.curr_fwft_state_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(Q[1]),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state));
(* equivalent_register_removal = "no" *) 
   FDCE #(
    .INIT(1'b0)) 
     \gpregsm1.curr_fwft_state_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(Q[1]),
        .D(next_fwft_state[1]),
        .Q(\n_0_gpregsm1.curr_fwft_state_reg[1] ));
LUT1 #(
    .INIT(2'h1)) 
     m_axi_awvalid_INST_0
       (.I0(empty_fwft_i),
        .O(m_axi_awvalid));
LUT6 #(
    .INIT(64'h0909000909090909)) 
     ram_empty_fb_i_i_3
       (.I0(I1),
        .I1(I2),
        .I2(p_18_out),
        .I3(curr_fwft_state),
        .I4(m_axi_awready),
        .I5(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .O(O1));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module axi_dwidth_converter_0_rd_fwft__parameterized0
   (empty,
    E,
    dm_rd_en,
    O1,
    srst,
    clk,
    rd_en,
    p_18_out);
  output empty;
  output [0:0]E;
  output dm_rd_en;
  output [0:0]O1;
  input srst;
  input clk;
  input rd_en;
  input p_18_out;

  wire [0:0]E;
  wire [0:0]O1;
  wire clk;
  wire [0:0]curr_fwft_state;
  wire dm_rd_en;
  wire empty;
  wire n_0_empty_fwft_fb_reg;
  wire n_0_empty_fwft_i_i_1;
  wire \n_0_gpregsm1.curr_fwft_state[0]_i_1 ;
  wire \n_0_gpregsm1.curr_fwft_state[1]_i_1 ;
  wire \n_0_gpregsm1.curr_fwft_state_reg[1] ;
  wire p_18_out;
  wire rd_en;
  wire srst;

(* equivalent_register_removal = "no" *) 
   FDSE #(
    .INIT(1'b1)) 
     empty_fwft_fb_reg
       (.C(clk),
        .CE(1'b1),
        .D(n_0_empty_fwft_i_i_1),
        .Q(n_0_empty_fwft_fb_reg),
        .S(srst));
(* SOFT_HLUTNM = "soft_lutpair38" *) 
   LUT4 #(
    .INIT(16'hDC44)) 
     empty_fwft_i_i_1
       (.I0(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I1(n_0_empty_fwft_fb_reg),
        .I2(rd_en),
        .I3(curr_fwft_state),
        .O(n_0_empty_fwft_i_i_1));
(* equivalent_register_removal = "no" *) 
   FDSE #(
    .INIT(1'b1)) 
     empty_fwft_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(n_0_empty_fwft_i_i_1),
        .Q(empty),
        .S(srst));
(* SOFT_HLUTNM = "soft_lutpair37" *) 
   LUT4 #(
    .INIT(16'h5515)) 
     \gc0.count_d1[4]_i_1 
       (.I0(p_18_out),
        .I1(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I2(curr_fwft_state),
        .I3(rd_en),
        .O(E));
(* SOFT_HLUTNM = "soft_lutpair38" *) 
   LUT4 #(
    .INIT(16'h4044)) 
     \goreg_dm.dout_i[22]_i_1 
       (.I0(srst),
        .I1(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I2(rd_en),
        .I3(curr_fwft_state),
        .O(O1));
(* SOFT_HLUTNM = "soft_lutpair36" *) 
   LUT5 #(
    .INIT(32'h000000BF)) 
     \gpr1.dout_i[22]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state),
        .I2(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I3(p_18_out),
        .I4(srst),
        .O(dm_rd_en));
(* SOFT_HLUTNM = "soft_lutpair37" *) 
   LUT3 #(
    .INIT(8'hBA)) 
     \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I1(rd_en),
        .I2(curr_fwft_state),
        .O(\n_0_gpregsm1.curr_fwft_state[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair36" *) 
   LUT4 #(
    .INIT(16'h08FF)) 
     \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I1(curr_fwft_state),
        .I2(rd_en),
        .I3(p_18_out),
        .O(\n_0_gpregsm1.curr_fwft_state[1]_i_1 ));
(* equivalent_register_removal = "no" *) 
   FDRE #(
    .INIT(1'b0)) 
     \gpregsm1.curr_fwft_state_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\n_0_gpregsm1.curr_fwft_state[0]_i_1 ),
        .Q(curr_fwft_state),
        .R(srst));
(* equivalent_register_removal = "no" *) 
   FDRE #(
    .INIT(1'b0)) 
     \gpregsm1.curr_fwft_state_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\n_0_gpregsm1.curr_fwft_state[1]_i_1 ),
        .Q(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .R(srst));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module axi_dwidth_converter_0_rd_fwft__parameterized0_31
   (empty,
    E,
    dm_rd_en,
    O1,
    srst,
    clk,
    rd_en,
    p_18_out);
  output empty;
  output [0:0]E;
  output dm_rd_en;
  output [0:0]O1;
  input srst;
  input clk;
  input rd_en;
  input p_18_out;

  wire [0:0]E;
  wire [0:0]O1;
  wire clk;
  wire [0:0]curr_fwft_state;
  wire dm_rd_en;
  wire empty;
  wire n_0_empty_fwft_fb_reg;
  wire n_0_empty_fwft_i_i_1;
  wire \n_0_gpregsm1.curr_fwft_state[0]_i_1 ;
  wire \n_0_gpregsm1.curr_fwft_state[1]_i_1 ;
  wire \n_0_gpregsm1.curr_fwft_state_reg[1] ;
  wire p_18_out;
  wire rd_en;
  wire srst;

(* equivalent_register_removal = "no" *) 
   FDSE #(
    .INIT(1'b1)) 
     empty_fwft_fb_reg
       (.C(clk),
        .CE(1'b1),
        .D(n_0_empty_fwft_i_i_1),
        .Q(n_0_empty_fwft_fb_reg),
        .S(srst));
(* SOFT_HLUTNM = "soft_lutpair31" *) 
   LUT4 #(
    .INIT(16'hDC44)) 
     empty_fwft_i_i_1
       (.I0(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I1(n_0_empty_fwft_fb_reg),
        .I2(rd_en),
        .I3(curr_fwft_state),
        .O(n_0_empty_fwft_i_i_1));
(* equivalent_register_removal = "no" *) 
   FDSE #(
    .INIT(1'b1)) 
     empty_fwft_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(n_0_empty_fwft_i_i_1),
        .Q(empty),
        .S(srst));
(* SOFT_HLUTNM = "soft_lutpair30" *) 
   LUT4 #(
    .INIT(16'h5515)) 
     \gc0.count_d1[4]_i_1 
       (.I0(p_18_out),
        .I1(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I2(curr_fwft_state),
        .I3(rd_en),
        .O(E));
(* SOFT_HLUTNM = "soft_lutpair31" *) 
   LUT4 #(
    .INIT(16'h4044)) 
     \goreg_dm.dout_i[30]_i_1 
       (.I0(srst),
        .I1(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I2(rd_en),
        .I3(curr_fwft_state),
        .O(O1));
(* SOFT_HLUTNM = "soft_lutpair29" *) 
   LUT5 #(
    .INIT(32'h000000BF)) 
     \gpr1.dout_i[30]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state),
        .I2(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I3(p_18_out),
        .I4(srst),
        .O(dm_rd_en));
(* SOFT_HLUTNM = "soft_lutpair30" *) 
   LUT3 #(
    .INIT(8'hBA)) 
     \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I1(rd_en),
        .I2(curr_fwft_state),
        .O(\n_0_gpregsm1.curr_fwft_state[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair29" *) 
   LUT4 #(
    .INIT(16'h08FF)) 
     \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .I1(curr_fwft_state),
        .I2(rd_en),
        .I3(p_18_out),
        .O(\n_0_gpregsm1.curr_fwft_state[1]_i_1 ));
(* equivalent_register_removal = "no" *) 
   FDRE #(
    .INIT(1'b0)) 
     \gpregsm1.curr_fwft_state_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\n_0_gpregsm1.curr_fwft_state[0]_i_1 ),
        .Q(curr_fwft_state),
        .R(srst));
(* equivalent_register_removal = "no" *) 
   FDRE #(
    .INIT(1'b0)) 
     \gpregsm1.curr_fwft_state_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\n_0_gpregsm1.curr_fwft_state[1]_i_1 ),
        .Q(\n_0_gpregsm1.curr_fwft_state_reg[1] ),
        .R(srst));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module axi_dwidth_converter_0_rd_logic
   (ram_rd_en_i,
    E,
    D,
    O1,
    m_axi_awvalid,
    m_aclk,
    Q,
    I1,
    m_axi_awready,
    I2);
  output ram_rd_en_i;
  output [0:0]E;
  output [3:0]D;
  output [4:0]O1;
  output m_axi_awvalid;
  input m_aclk;
  input [1:0]Q;
  input [4:0]I1;
  input m_axi_awready;
  input I2;

  wire [3:0]D;
  wire [0:0]E;
  wire [4:0]I1;
  wire I2;
  wire [4:0]O1;
  wire [1:0]Q;
  wire m_aclk;
  wire m_axi_awready;
  wire m_axi_awvalid;
  wire \n_0_gr1.rfwft ;
  wire n_1_rpntr;
  wire p_14_out;
  wire p_18_out;
  wire ram_rd_en_i;
  wire [0:0]rd_pntr_plus1;

axi_dwidth_converter_0_rd_fwft_8 \gr1.rfwft 
       (.E(p_14_out),
        .I1(rd_pntr_plus1),
        .I2(I1[0]),
        .O1(\n_0_gr1.rfwft ),
        .O2(E),
        .Q(Q),
        .m_aclk(m_aclk),
        .m_axi_awready(m_axi_awready),
        .m_axi_awvalid(m_axi_awvalid),
        .p_18_out(p_18_out),
        .ram_rd_en_i(ram_rd_en_i));
axi_dwidth_converter_0_rd_status_flags_as_9 \gras.rsts 
       (.I1(n_1_rpntr),
        .Q(Q[1]),
        .m_aclk(m_aclk),
        .p_18_out(p_18_out));
axi_dwidth_converter_0_rd_bin_cntr_10 rpntr
       (.D(D),
        .E(p_14_out),
        .I1(I1[4:1]),
        .I2(\n_0_gr1.rfwft ),
        .I3(I2),
        .I4(Q[1]),
        .O1(n_1_rpntr),
        .O2(O1),
        .Q(rd_pntr_plus1),
        .m_aclk(m_aclk));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module axi_dwidth_converter_0_rd_logic__parameterized0
   (empty,
    O1,
    D,
    O2,
    O4,
    rd_clk,
    Q,
    O3,
    rd_en,
    I1,
    p_0_out,
    p_0_out_0);
  output empty;
  output [1:0]O1;
  output [3:0]D;
  output [4:0]O2;
  output O4;
  input rd_clk;
  input [0:0]Q;
  input [4:0]O3;
  input rd_en;
  input I1;
  input p_0_out;
  input p_0_out_0;

  wire [3:0]D;
  wire I1;
  wire [1:0]O1;
  wire [4:0]O2;
  wire [4:0]O3;
  wire O4;
  wire [0:0]Q;
  wire empty;
  wire \n_1_gr1.rfwft ;
  wire n_1_rpntr;
  wire p_0_out;
  wire p_0_out_0;
  wire p_14_out;
  wire p_18_out;
  wire rd_clk;
  wire rd_en;
  wire [0:0]rd_pntr_plus1;

axi_dwidth_converter_0_rd_fwft \gr1.rfwft 
       (.E(p_14_out),
        .I1(rd_pntr_plus1),
        .O1(\n_1_gr1.rfwft ),
        .O2(O1),
        .O3(O3[0]),
        .O4(O4),
        .Q(Q),
        .empty(empty),
        .p_0_out(p_0_out),
        .p_0_out_0(p_0_out_0),
        .p_18_out(p_18_out),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
axi_dwidth_converter_0_rd_status_flags_as \gras.rsts 
       (.I1(n_1_rpntr),
        .Q(Q),
        .p_18_out(p_18_out),
        .rd_clk(rd_clk));
axi_dwidth_converter_0_rd_bin_cntr rpntr
       (.D(D),
        .E(p_14_out),
        .I1(\n_1_gr1.rfwft ),
        .I2(I1),
        .I3(Q),
        .O1(n_1_rpntr),
        .O2(O2),
        .O3(O3[4:1]),
        .Q(rd_pntr_plus1),
        .rd_clk(rd_clk));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module axi_dwidth_converter_0_rd_logic__parameterized1
   (O1,
    ram_rd_en_i,
    D,
    O2,
    s_axi_bvalid,
    s_aclk,
    Q,
    I1,
    s_axi_bready,
    I2);
  output [1:0]O1;
  output ram_rd_en_i;
  output [3:0]D;
  output [4:0]O2;
  output s_axi_bvalid;
  input s_aclk;
  input [0:0]Q;
  input [4:0]I1;
  input s_axi_bready;
  input I2;

  wire [3:0]D;
  wire [4:0]I1;
  wire I2;
  wire [1:0]O1;
  wire [4:0]O2;
  wire [0:0]Q;
  wire \n_0_gr1.rfwft ;
  wire n_1_rpntr;
  wire p_14_out;
  wire p_18_out;
  wire ram_rd_en_i;
  wire [0:0]rd_pntr_plus1;
  wire s_aclk;
  wire s_axi_bready;
  wire s_axi_bvalid;

axi_dwidth_converter_0_rd_fwft_52 \gr1.rfwft 
       (.E(p_14_out),
        .I1(rd_pntr_plus1),
        .I2(I1[0]),
        .O1(\n_0_gr1.rfwft ),
        .O2(O1),
        .Q(Q),
        .p_18_out(p_18_out),
        .ram_rd_en_i(ram_rd_en_i),
        .s_aclk(s_aclk),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid(s_axi_bvalid));
axi_dwidth_converter_0_rd_status_flags_as_53 \gras.rsts 
       (.I1(n_1_rpntr),
        .Q(Q),
        .p_18_out(p_18_out),
        .s_aclk(s_aclk));
axi_dwidth_converter_0_rd_bin_cntr_54 rpntr
       (.D(D),
        .E(p_14_out),
        .I1(I1[4:1]),
        .I2(\n_0_gr1.rfwft ),
        .I3(I2),
        .I4(Q),
        .O1(n_1_rpntr),
        .O2(O2),
        .Q(rd_pntr_plus1),
        .s_aclk(s_aclk));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module axi_dwidth_converter_0_rd_logic__parameterized2
   (ram_rd_en_i,
    E,
    D,
    O1,
    m_axi_arvalid,
    m_aclk,
    Q,
    I1,
    m_axi_arready,
    I2);
  output ram_rd_en_i;
  output [0:0]E;
  output [3:0]D;
  output [4:0]O1;
  output m_axi_arvalid;
  input m_aclk;
  input [1:0]Q;
  input [4:0]I1;
  input m_axi_arready;
  input I2;

  wire [3:0]D;
  wire [0:0]E;
  wire [4:0]I1;
  wire I2;
  wire [4:0]O1;
  wire [1:0]Q;
  wire m_aclk;
  wire m_axi_arready;
  wire m_axi_arvalid;
  wire \n_0_gr1.rfwft ;
  wire n_1_rpntr;
  wire p_14_out;
  wire p_18_out;
  wire ram_rd_en_i;
  wire [0:0]rd_pntr_plus1;

axi_dwidth_converter_0_rd_fwft_38 \gr1.rfwft 
       (.E(p_14_out),
        .I1(rd_pntr_plus1),
        .I2(I1[0]),
        .O1(\n_0_gr1.rfwft ),
        .O2(E),
        .Q(Q),
        .m_aclk(m_aclk),
        .m_axi_arready(m_axi_arready),
        .m_axi_arvalid(m_axi_arvalid),
        .p_18_out(p_18_out),
        .ram_rd_en_i(ram_rd_en_i));
axi_dwidth_converter_0_rd_status_flags_as_39 \gras.rsts 
       (.I1(n_1_rpntr),
        .Q(Q[1]),
        .m_aclk(m_aclk),
        .p_18_out(p_18_out));
axi_dwidth_converter_0_rd_bin_cntr_40 rpntr
       (.D(D),
        .E(p_14_out),
        .I1(I1[4:1]),
        .I2(\n_0_gr1.rfwft ),
        .I3(I2),
        .I4(Q[1]),
        .O1(n_1_rpntr),
        .O2(O1),
        .Q(rd_pntr_plus1),
        .m_aclk(m_aclk));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module axi_dwidth_converter_0_rd_logic__parameterized3
   (empty,
    O1,
    O2,
    dm_rd_en,
    ram_full_i,
    E,
    clk,
    srst,
    rd_en,
    I1,
    I2,
    Q,
    wr_en,
    p_1_out,
    I3);
  output empty;
  output [3:0]O1;
  output [4:0]O2;
  output dm_rd_en;
  output ram_full_i;
  output [0:0]E;
  input clk;
  input srst;
  input rd_en;
  input I1;
  input I2;
  input [4:0]Q;
  input wr_en;
  input p_1_out;
  input [4:0]I3;

  wire [0:0]E;
  wire I1;
  wire I2;
  wire [4:0]I3;
  wire [3:0]O1;
  wire [4:0]O2;
  wire [4:0]Q;
  wire clk;
  wire dm_rd_en;
  wire empty;
  wire \n_1_gr1.rfwft ;
  wire n_6_rpntr;
  wire p_18_out;
  wire p_1_out;
  wire ram_full_i;
  wire rd_en;
  wire [3:3]rd_pntr_plus1;
  wire srst;
  wire wr_en;

axi_dwidth_converter_0_rd_fwft__parameterized0 \gr1.rfwft 
       (.E(\n_1_gr1.rfwft ),
        .O1(E),
        .clk(clk),
        .dm_rd_en(dm_rd_en),
        .empty(empty),
        .p_18_out(p_18_out),
        .rd_en(rd_en),
        .srst(srst));
axi_dwidth_converter_0_rd_status_flags_ss \grss.rsts 
       (.E(\n_1_gr1.rfwft ),
        .I1(I1),
        .I2(I2),
        .I3(rd_pntr_plus1),
        .I4(n_6_rpntr),
        .Q(Q[3]),
        .clk(clk),
        .p_18_out(p_18_out),
        .p_1_out(p_1_out),
        .srst(srst),
        .wr_en(wr_en));
axi_dwidth_converter_0_rd_bin_cntr__parameterized0 rpntr
       (.E(\n_1_gr1.rfwft ),
        .I3(I3),
        .O1(n_6_rpntr),
        .O2(O2),
        .O3({O1[3],rd_pntr_plus1,O1[2:0]}),
        .Q(Q),
        .clk(clk),
        .p_1_out(p_1_out),
        .ram_full_i(ram_full_i),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module axi_dwidth_converter_0_rd_logic__parameterized3_27
   (empty,
    O1,
    O2,
    dm_rd_en,
    ram_full_i,
    E,
    clk,
    srst,
    rd_en,
    I1,
    I2,
    Q,
    wr_en,
    p_1_out,
    I3);
  output empty;
  output [3:0]O1;
  output [4:0]O2;
  output dm_rd_en;
  output ram_full_i;
  output [0:0]E;
  input clk;
  input srst;
  input rd_en;
  input I1;
  input I2;
  input [4:0]Q;
  input wr_en;
  input p_1_out;
  input [4:0]I3;

  wire [0:0]E;
  wire I1;
  wire I2;
  wire [4:0]I3;
  wire [3:0]O1;
  wire [4:0]O2;
  wire [4:0]Q;
  wire clk;
  wire dm_rd_en;
  wire empty;
  wire \n_1_gr1.rfwft ;
  wire n_6_rpntr;
  wire p_18_out;
  wire p_1_out;
  wire ram_full_i;
  wire rd_en;
  wire [3:3]rd_pntr_plus1;
  wire srst;
  wire wr_en;

axi_dwidth_converter_0_rd_fwft__parameterized0_31 \gr1.rfwft 
       (.E(\n_1_gr1.rfwft ),
        .O1(E),
        .clk(clk),
        .dm_rd_en(dm_rd_en),
        .empty(empty),
        .p_18_out(p_18_out),
        .rd_en(rd_en),
        .srst(srst));
axi_dwidth_converter_0_rd_status_flags_ss_32 \grss.rsts 
       (.E(\n_1_gr1.rfwft ),
        .I1(I1),
        .I2(I2),
        .I3(rd_pntr_plus1),
        .I4(n_6_rpntr),
        .Q(Q[3]),
        .clk(clk),
        .p_18_out(p_18_out),
        .p_1_out(p_1_out),
        .srst(srst),
        .wr_en(wr_en));
axi_dwidth_converter_0_rd_bin_cntr__parameterized0_33 rpntr
       (.E(\n_1_gr1.rfwft ),
        .I3(I3),
        .O1(n_6_rpntr),
        .O2(O2),
        .O3({O1[3],rd_pntr_plus1,O1[2:0]}),
        .Q(Q),
        .clk(clk),
        .p_1_out(p_1_out),
        .ram_full_i(ram_full_i),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module axi_dwidth_converter_0_rd_logic__parameterized4
   (empty,
    O1,
    O2,
    E,
    O3,
    I1,
    v1_reg,
    rd_clk,
    Q,
    rd_en,
    WR_PNTR_RD);
  output empty;
  output O1;
  output [7:0]O2;
  output [0:0]E;
  output [8:0]O3;
  input I1;
  input [3:0]v1_reg;
  input rd_clk;
  input [1:0]Q;
  input rd_en;
  input [8:0]WR_PNTR_RD;

  wire [0:0]E;
  wire I1;
  wire O1;
  wire [7:0]O2;
  wire [8:0]O3;
  wire [1:0]Q;
  wire [8:0]WR_PNTR_RD;
  wire [3:0]\c0/v1_reg ;
  wire comp0;
  wire comp1;
  wire empty;
  wire n_0_rpntr;
  wire \n_2_gr1.rfwft ;
  wire \n_3_gr1.rfwft ;
  wire p_18_out;
  wire rd_clk;
  wire rd_en;
  wire [3:0]v1_reg;

axi_dwidth_converter_0_rd_fwft_19 \gr1.rfwft 
       (.E(\n_2_gr1.rfwft ),
        .O1(O1),
        .O2(\n_3_gr1.rfwft ),
        .O3(E),
        .Q(Q),
        .comp0(comp0),
        .comp1(comp1),
        .empty(empty),
        .p_18_out(p_18_out),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
axi_dwidth_converter_0_rd_status_flags_as__parameterized0 \gras.rsts 
       (.I1(I1),
        .I2(n_0_rpntr),
        .I3(\n_3_gr1.rfwft ),
        .Q(Q[1]),
        .comp0(comp0),
        .comp1(comp1),
        .p_18_out(p_18_out),
        .rd_clk(rd_clk),
        .v1_reg(v1_reg),
        .v1_reg_0(\c0/v1_reg ));
axi_dwidth_converter_0_rd_bin_cntr__parameterized1 rpntr
       (.E(\n_2_gr1.rfwft ),
        .I1(Q[1]),
        .O1(n_0_rpntr),
        .O3(O3),
        .Q(O2),
        .WR_PNTR_RD(WR_PNTR_RD),
        .rd_clk(rd_clk),
        .v1_reg(\c0/v1_reg ));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module axi_dwidth_converter_0_rd_status_flags_as
   (p_18_out,
    I1,
    rd_clk,
    Q);
  output p_18_out;
  input I1;
  input rd_clk;
  input [0:0]Q;

  wire I1;
  wire [0:0]Q;
  wire p_18_out;
  wire rd_clk;

(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     ram_empty_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(I1),
        .PRE(Q),
        .Q(p_18_out));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module axi_dwidth_converter_0_rd_status_flags_as_39
   (p_18_out,
    I1,
    m_aclk,
    Q);
  output p_18_out;
  input I1;
  input m_aclk;
  input [0:0]Q;

  wire I1;
  wire [0:0]Q;
  wire m_aclk;
  wire p_18_out;

(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     ram_empty_fb_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(I1),
        .PRE(Q),
        .Q(p_18_out));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module axi_dwidth_converter_0_rd_status_flags_as_53
   (p_18_out,
    I1,
    s_aclk,
    Q);
  output p_18_out;
  input I1;
  input s_aclk;
  input [0:0]Q;

  wire I1;
  wire [0:0]Q;
  wire p_18_out;
  wire s_aclk;

(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     ram_empty_fb_i_reg
       (.C(s_aclk),
        .CE(1'b1),
        .D(I1),
        .PRE(Q),
        .Q(p_18_out));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module axi_dwidth_converter_0_rd_status_flags_as_9
   (p_18_out,
    I1,
    m_aclk,
    Q);
  output p_18_out;
  input I1;
  input m_aclk;
  input [0:0]Q;

  wire I1;
  wire [0:0]Q;
  wire m_aclk;
  wire p_18_out;

(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     ram_empty_fb_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(I1),
        .PRE(Q),
        .Q(p_18_out));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module axi_dwidth_converter_0_rd_status_flags_as__parameterized0
   (comp0,
    comp1,
    p_18_out,
    v1_reg_0,
    I1,
    v1_reg,
    I2,
    I3,
    rd_clk,
    Q);
  output comp0;
  output comp1;
  output p_18_out;
  input [3:0]v1_reg_0;
  input I1;
  input [3:0]v1_reg;
  input I2;
  input I3;
  input rd_clk;
  input [0:0]Q;

  wire I1;
  wire I2;
  wire I3;
  wire [0:0]Q;
  wire comp0;
  wire comp1;
  wire p_18_out;
  wire rd_clk;
  wire [3:0]v1_reg;
  wire [3:0]v1_reg_0;

axi_dwidth_converter_0_compare__parameterized0_20 c0
       (.I1(I1),
        .comp0(comp0),
        .v1_reg_0(v1_reg_0));
axi_dwidth_converter_0_compare__parameterized0_21 c1
       (.I2(I2),
        .comp1(comp1),
        .v1_reg(v1_reg));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     ram_empty_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(I3),
        .PRE(Q),
        .Q(p_18_out));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_ss" *) 
module axi_dwidth_converter_0_rd_status_flags_ss
   (p_18_out,
    clk,
    I1,
    I2,
    Q,
    I3,
    E,
    wr_en,
    p_1_out,
    I4,
    srst);
  output p_18_out;
  input clk;
  input I1;
  input I2;
  input [0:0]Q;
  input [0:0]I3;
  input [0:0]E;
  input wr_en;
  input p_1_out;
  input I4;
  input srst;

  wire [0:0]E;
  wire I1;
  wire I2;
  wire [0:0]I3;
  wire I4;
  wire [0:0]Q;
  wire clk;
  wire n_0_ram_empty_fb_i_i_2;
  wire p_18_out;
  wire p_1_out;
  wire ram_empty_fb_i;
  wire srst;
  wire wr_en;

LUT6 #(
    .INIT(64'hFFFFFFFFFF515151)) 
     ram_empty_fb_i_i_1
       (.I0(n_0_ram_empty_fb_i_i_2),
        .I1(wr_en),
        .I2(p_1_out),
        .I3(I4),
        .I4(p_18_out),
        .I5(srst),
        .O(ram_empty_fb_i));
LUT6 #(
    .INIT(64'h5455555455555555)) 
     ram_empty_fb_i_i_2
       (.I0(p_18_out),
        .I1(I1),
        .I2(I2),
        .I3(Q),
        .I4(I3),
        .I5(E),
        .O(n_0_ram_empty_fb_i_i_2));
(* equivalent_register_removal = "no" *) 
   FDRE #(
    .INIT(1'b1)) 
     ram_empty_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_empty_fb_i),
        .Q(p_18_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_ss" *) 
module axi_dwidth_converter_0_rd_status_flags_ss_32
   (p_18_out,
    clk,
    I1,
    I2,
    Q,
    I3,
    E,
    wr_en,
    p_1_out,
    I4,
    srst);
  output p_18_out;
  input clk;
  input I1;
  input I2;
  input [0:0]Q;
  input [0:0]I3;
  input [0:0]E;
  input wr_en;
  input p_1_out;
  input I4;
  input srst;

  wire [0:0]E;
  wire I1;
  wire I2;
  wire [0:0]I3;
  wire I4;
  wire [0:0]Q;
  wire clk;
  wire n_0_ram_empty_fb_i_i_2;
  wire p_18_out;
  wire p_1_out;
  wire ram_empty_fb_i;
  wire srst;
  wire wr_en;

LUT6 #(
    .INIT(64'hFFFFFFFFFF515151)) 
     ram_empty_fb_i_i_1
       (.I0(n_0_ram_empty_fb_i_i_2),
        .I1(wr_en),
        .I2(p_1_out),
        .I3(I4),
        .I4(p_18_out),
        .I5(srst),
        .O(ram_empty_fb_i));
LUT6 #(
    .INIT(64'h5455555455555555)) 
     ram_empty_fb_i_i_2
       (.I0(p_18_out),
        .I1(I1),
        .I2(I2),
        .I3(Q),
        .I4(I3),
        .I5(E),
        .O(n_0_ram_empty_fb_i_i_2));
(* equivalent_register_removal = "no" *) 
   FDRE #(
    .INIT(1'b1)) 
     ram_empty_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_empty_fb_i),
        .Q(p_18_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module axi_dwidth_converter_0_reset_blk_ramfifo
   (rst_d2,
    rst_full_gen_i,
    Q,
    O1,
    s_aclk,
    m_aclk,
    s_aresetn);
  output rst_d2;
  output rst_full_gen_i;
  output [2:0]Q;
  output [1:0]O1;
  input s_aclk;
  input m_aclk;
  input s_aresetn;

  wire [1:0]O1;
  wire [2:0]Q;
  wire inverted_reset;
  wire m_aclk;
  wire \n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ;
  wire \n_0_ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 ;
  wire rd_rst_asreg;
  wire rd_rst_asreg_d1;
  wire rd_rst_asreg_d2;
  wire rst_d1;
  wire rst_d2;
  wire rst_d3;
  wire rst_full_gen_i;
  wire s_aclk;
  wire s_aresetn;
  wire wr_rst_asreg;
  wire wr_rst_asreg_d1;
  wire wr_rst_asreg_d2;

FDCE #(
    .INIT(1'b0)) 
     \grstd1.grst_full.grst_f.RST_FULL_GEN_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(inverted_reset),
        .D(rst_d3),
        .Q(rst_full_gen_i));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDPE #(
    .INIT(1'b1)) 
     \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(inverted_reset),
        .Q(rst_d1));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDPE #(
    .INIT(1'b1)) 
     \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(inverted_reset),
        .Q(rst_d2));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDPE #(
    .INIT(1'b1)) 
     \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(rst_d2),
        .PRE(inverted_reset),
        .Q(rst_d3));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDRE #(
    .INIT(1'b0)) 
     \ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(rd_rst_asreg),
        .Q(rd_rst_asreg_d1),
        .R(1'b0));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDRE #(
    .INIT(1'b0)) 
     \ngwrdrst.grst.g7serrst.rd_rst_asreg_d2_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(rd_rst_asreg_d1),
        .Q(rd_rst_asreg_d2),
        .R(1'b0));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDPE \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg 
       (.C(m_aclk),
        .CE(rd_rst_asreg_d1),
        .D(1'b0),
        .PRE(inverted_reset),
        .Q(rd_rst_asreg));
LUT2 #(
    .INIT(4'h2)) 
     \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 
       (.I0(rd_rst_asreg),
        .I1(rd_rst_asreg_d2),
        .O(\n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ),
        .Q(Q[0]));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ),
        .Q(Q[1]));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDRE #(
    .INIT(1'b0)) 
     \ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(wr_rst_asreg),
        .Q(wr_rst_asreg_d1),
        .R(1'b0));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDRE #(
    .INIT(1'b0)) 
     \ngwrdrst.grst.g7serrst.wr_rst_asreg_d2_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(wr_rst_asreg_d1),
        .Q(wr_rst_asreg_d2),
        .R(1'b0));
LUT1 #(
    .INIT(2'h1)) 
     \ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1 
       (.I0(s_aresetn),
        .O(inverted_reset));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDPE \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg 
       (.C(s_aclk),
        .CE(wr_rst_asreg_d1),
        .D(1'b0),
        .PRE(inverted_reset),
        .Q(wr_rst_asreg));
LUT2 #(
    .INIT(4'h2)) 
     \ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 
       (.I0(wr_rst_asreg),
        .I1(wr_rst_asreg_d2),
        .O(\n_0_ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 ));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 ),
        .Q(O1[0]));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 ),
        .Q(O1[1]));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module axi_dwidth_converter_0_reset_blk_ramfifo_35
   (rst_d2,
    rst_full_gen_i,
    Q,
    O1,
    s_aclk,
    m_aclk,
    s_aresetn);
  output rst_d2;
  output rst_full_gen_i;
  output [2:0]Q;
  output [1:0]O1;
  input s_aclk;
  input m_aclk;
  input s_aresetn;

  wire [1:0]O1;
  wire [2:0]Q;
  wire inverted_reset;
  wire m_aclk;
  wire \n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ;
  wire \n_0_ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 ;
  wire rd_rst_asreg;
  wire rd_rst_asreg_d1;
  wire rd_rst_asreg_d2;
  wire rst_d1;
  wire rst_d2;
  wire rst_d3;
  wire rst_full_gen_i;
  wire s_aclk;
  wire s_aresetn;
  wire wr_rst_asreg;
  wire wr_rst_asreg_d1;
  wire wr_rst_asreg_d2;

FDCE #(
    .INIT(1'b0)) 
     \grstd1.grst_full.grst_f.RST_FULL_GEN_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(inverted_reset),
        .D(rst_d3),
        .Q(rst_full_gen_i));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDPE #(
    .INIT(1'b1)) 
     \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(inverted_reset),
        .Q(rst_d1));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDPE #(
    .INIT(1'b1)) 
     \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(inverted_reset),
        .Q(rst_d2));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDPE #(
    .INIT(1'b1)) 
     \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(rst_d2),
        .PRE(inverted_reset),
        .Q(rst_d3));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDRE #(
    .INIT(1'b0)) 
     \ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(rd_rst_asreg),
        .Q(rd_rst_asreg_d1),
        .R(1'b0));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDRE #(
    .INIT(1'b0)) 
     \ngwrdrst.grst.g7serrst.rd_rst_asreg_d2_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(rd_rst_asreg_d1),
        .Q(rd_rst_asreg_d2),
        .R(1'b0));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDPE \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg 
       (.C(m_aclk),
        .CE(rd_rst_asreg_d1),
        .D(1'b0),
        .PRE(inverted_reset),
        .Q(rd_rst_asreg));
LUT2 #(
    .INIT(4'h2)) 
     \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 
       (.I0(rd_rst_asreg),
        .I1(rd_rst_asreg_d2),
        .O(\n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ),
        .Q(Q[0]));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ),
        .Q(Q[1]));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDRE #(
    .INIT(1'b0)) 
     \ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(wr_rst_asreg),
        .Q(wr_rst_asreg_d1),
        .R(1'b0));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDRE #(
    .INIT(1'b0)) 
     \ngwrdrst.grst.g7serrst.wr_rst_asreg_d2_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(wr_rst_asreg_d1),
        .Q(wr_rst_asreg_d2),
        .R(1'b0));
LUT1 #(
    .INIT(2'h1)) 
     \ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1 
       (.I0(s_aresetn),
        .O(inverted_reset));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDPE \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg 
       (.C(s_aclk),
        .CE(wr_rst_asreg_d1),
        .D(1'b0),
        .PRE(inverted_reset),
        .Q(wr_rst_asreg));
LUT2 #(
    .INIT(4'h2)) 
     \ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 
       (.I0(wr_rst_asreg),
        .I1(wr_rst_asreg_d2),
        .O(\n_0_ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 ));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 ),
        .Q(O1[0]));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 ),
        .Q(O1[1]));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module axi_dwidth_converter_0_reset_blk_ramfifo_49
   (rst_d2,
    rst_full_gen_i,
    Q,
    O1,
    m_aclk,
    s_aclk,
    s_aresetn);
  output rst_d2;
  output rst_full_gen_i;
  output [2:0]Q;
  output [1:0]O1;
  input m_aclk;
  input s_aclk;
  input s_aresetn;

  wire [1:0]O1;
  wire [2:0]Q;
  wire inverted_reset;
  wire m_aclk;
  wire \n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ;
  wire \n_0_ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 ;
  wire rd_rst_asreg;
  wire rd_rst_asreg_d1;
  wire rd_rst_asreg_d2;
  wire rst_d1;
  wire rst_d2;
  wire rst_d3;
  wire rst_full_gen_i;
  wire s_aclk;
  wire s_aresetn;
  wire wr_rst_asreg;
  wire wr_rst_asreg_d1;
  wire wr_rst_asreg_d2;

FDCE #(
    .INIT(1'b0)) 
     \grstd1.grst_full.grst_f.RST_FULL_GEN_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(inverted_reset),
        .D(rst_d3),
        .Q(rst_full_gen_i));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDPE #(
    .INIT(1'b1)) 
     \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(inverted_reset),
        .Q(rst_d1));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDPE #(
    .INIT(1'b1)) 
     \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(inverted_reset),
        .Q(rst_d2));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDPE #(
    .INIT(1'b1)) 
     \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(rst_d2),
        .PRE(inverted_reset),
        .Q(rst_d3));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDRE #(
    .INIT(1'b0)) 
     \ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(rd_rst_asreg),
        .Q(rd_rst_asreg_d1),
        .R(1'b0));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDRE #(
    .INIT(1'b0)) 
     \ngwrdrst.grst.g7serrst.rd_rst_asreg_d2_reg 
       (.C(s_aclk),
        .CE(1'b1),
        .D(rd_rst_asreg_d1),
        .Q(rd_rst_asreg_d2),
        .R(1'b0));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDPE \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg 
       (.C(s_aclk),
        .CE(rd_rst_asreg_d1),
        .D(1'b0),
        .PRE(inverted_reset),
        .Q(rd_rst_asreg));
LUT2 #(
    .INIT(4'h2)) 
     \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 
       (.I0(rd_rst_asreg),
        .I1(rd_rst_asreg_d2),
        .O(\n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ),
        .Q(Q[0]));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ),
        .Q(Q[1]));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] 
       (.C(s_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDRE #(
    .INIT(1'b0)) 
     \ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(wr_rst_asreg),
        .Q(wr_rst_asreg_d1),
        .R(1'b0));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDRE #(
    .INIT(1'b0)) 
     \ngwrdrst.grst.g7serrst.wr_rst_asreg_d2_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(wr_rst_asreg_d1),
        .Q(wr_rst_asreg_d2),
        .R(1'b0));
LUT1 #(
    .INIT(2'h1)) 
     \ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1 
       (.I0(s_aresetn),
        .O(inverted_reset));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDPE \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg 
       (.C(m_aclk),
        .CE(wr_rst_asreg_d1),
        .D(1'b0),
        .PRE(inverted_reset),
        .Q(wr_rst_asreg));
LUT2 #(
    .INIT(4'h2)) 
     \ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 
       (.I0(wr_rst_asreg),
        .I1(wr_rst_asreg_d2),
        .O(\n_0_ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 ));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 ),
        .Q(O1[0]));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 ),
        .Q(O1[1]));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module axi_dwidth_converter_0_reset_blk_ramfifo__parameterized0
   (Q,
    O1,
    wr_clk,
    rst,
    rd_clk);
  output [2:0]Q;
  output [1:0]O1;
  input wr_clk;
  input rst;
  input rd_clk;

  wire [1:0]O1;
  wire [2:0]Q;
  wire \n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ;
  wire \n_0_ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 ;
  wire rd_clk;
  wire rd_rst_asreg;
  wire rd_rst_asreg_d1;
  wire rd_rst_asreg_d2;
  wire rst;
  wire wr_clk;
  wire wr_rst_asreg;
  wire wr_rst_asreg_d1;
  wire wr_rst_asreg_d2;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDRE #(
    .INIT(1'b0)) 
     \ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(rd_rst_asreg),
        .Q(rd_rst_asreg_d1),
        .R(1'b0));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDRE #(
    .INIT(1'b0)) 
     \ngwrdrst.grst.g7serrst.rd_rst_asreg_d2_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(rd_rst_asreg_d1),
        .Q(rd_rst_asreg_d2),
        .R(1'b0));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDPE \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg 
       (.C(rd_clk),
        .CE(rd_rst_asreg_d1),
        .D(1'b0),
        .PRE(rst),
        .Q(rd_rst_asreg));
LUT2 #(
    .INIT(4'h2)) 
     \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 
       (.I0(rd_rst_asreg),
        .I1(rd_rst_asreg_d2),
        .O(\n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ),
        .Q(Q[0]));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ),
        .Q(Q[1]));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDRE #(
    .INIT(1'b0)) 
     \ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_rst_asreg),
        .Q(wr_rst_asreg_d1),
        .R(1'b0));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDRE #(
    .INIT(1'b0)) 
     \ngwrdrst.grst.g7serrst.wr_rst_asreg_d2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_rst_asreg_d1),
        .Q(wr_rst_asreg_d2),
        .R(1'b0));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDPE \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg 
       (.C(wr_clk),
        .CE(wr_rst_asreg_d1),
        .D(1'b0),
        .PRE(rst),
        .Q(wr_rst_asreg));
LUT2 #(
    .INIT(4'h2)) 
     \ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 
       (.I0(wr_rst_asreg),
        .I1(wr_rst_asreg_d2),
        .O(\n_0_ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 ));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 ),
        .Q(O1[0]));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 ),
        .Q(O1[1]));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module axi_dwidth_converter_0_reset_blk_ramfifo__parameterized0_17
   (Q,
    O1,
    wr_clk,
    rst,
    rd_clk);
  output [1:0]Q;
  output [2:0]O1;
  input wr_clk;
  input rst;
  input rd_clk;

  wire [2:0]O1;
  wire [1:0]Q;
  wire \n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ;
  wire \n_0_ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 ;
  wire rd_clk;
  wire rd_rst_asreg;
  wire rd_rst_asreg_d1;
  wire rd_rst_asreg_d2;
  wire rst;
  wire wr_clk;
  wire wr_rst_asreg;
  wire wr_rst_asreg_d1;
  wire wr_rst_asreg_d2;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDRE #(
    .INIT(1'b0)) 
     \ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(rd_rst_asreg),
        .Q(rd_rst_asreg_d1),
        .R(1'b0));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDRE #(
    .INIT(1'b0)) 
     \ngwrdrst.grst.g7serrst.rd_rst_asreg_d2_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(rd_rst_asreg_d1),
        .Q(rd_rst_asreg_d2),
        .R(1'b0));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDPE \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg 
       (.C(rd_clk),
        .CE(rd_rst_asreg_d1),
        .D(1'b0),
        .PRE(rst),
        .Q(rd_rst_asreg));
LUT2 #(
    .INIT(4'h2)) 
     \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 
       (.I0(rd_rst_asreg),
        .I1(rd_rst_asreg_d2),
        .O(\n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ),
        .Q(O1[0]));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ),
        .Q(O1[1]));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 ),
        .Q(O1[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDRE #(
    .INIT(1'b0)) 
     \ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_rst_asreg),
        .Q(wr_rst_asreg_d1),
        .R(1'b0));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDRE #(
    .INIT(1'b0)) 
     \ngwrdrst.grst.g7serrst.wr_rst_asreg_d2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_rst_asreg_d1),
        .Q(wr_rst_asreg_d2),
        .R(1'b0));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDPE \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg 
       (.C(wr_clk),
        .CE(wr_rst_asreg_d1),
        .D(1'b0),
        .PRE(rst),
        .Q(wr_rst_asreg));
LUT2 #(
    .INIT(4'h2)) 
     \ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 
       (.I0(wr_rst_asreg),
        .I1(wr_rst_asreg_d2),
        .O(\n_0_ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 ));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 ),
        .Q(Q[0]));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\n_0_ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 ),
        .Q(Q[1]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff
   (Q,
    I1,
    rd_clk,
    I8);
  output [4:0]Q;
  input [4:0]I1;
  input rd_clk;
  input [0:0]I8;

  wire [4:0]I1;
  wire [0:0]I8;
  wire [4:0]Q;
  wire rd_clk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(I1[0]),
        .Q(Q[0]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(I1[1]),
        .Q(Q[1]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(I1[2]),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(I1[3]),
        .Q(Q[3]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(I1[4]),
        .Q(Q[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff_1
   (Q,
    I1,
    wr_clk,
    I7);
  output [4:0]Q;
  input [4:0]I1;
  input wr_clk;
  input [0:0]I7;

  wire [4:0]I1;
  wire [0:0]I7;
  wire [4:0]Q;
  wire wr_clk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(I1[0]),
        .Q(Q[0]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(I1[1]),
        .Q(Q[1]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(I1[2]),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(I1[3]),
        .Q(Q[3]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(I1[4]),
        .Q(Q[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff_11
   (Q,
    I1,
    m_aclk,
    I6);
  output [4:0]Q;
  input [4:0]I1;
  input m_aclk;
  input [0:0]I6;

  wire [4:0]I1;
  wire [0:0]I6;
  wire [4:0]Q;
  wire m_aclk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(I1[0]),
        .Q(Q[0]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(I1[1]),
        .Q(Q[1]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(I1[2]),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(I1[3]),
        .Q(Q[3]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(I1[4]),
        .Q(Q[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff_12
   (Q,
    I1,
    s_aclk,
    I5);
  output [4:0]Q;
  input [4:0]I1;
  input s_aclk;
  input [0:0]I5;

  wire [4:0]I1;
  wire [0:0]I5;
  wire [4:0]Q;
  wire s_aclk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[0]),
        .Q(Q[0]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[1]),
        .Q(Q[1]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[2]),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[3]),
        .Q(Q[3]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[4]),
        .Q(Q[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff_13
   (Q,
    D,
    m_aclk,
    I6);
  output [4:0]Q;
  input [4:0]D;
  input m_aclk;
  input [0:0]I6;

  wire [4:0]D;
  wire [0:0]I6;
  wire [4:0]Q;
  wire m_aclk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[0]),
        .Q(Q[0]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[1]),
        .Q(Q[1]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[2]),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[3]),
        .Q(Q[3]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[4]),
        .Q(Q[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff_14
   (Q,
    D,
    s_aclk,
    I5);
  output [4:0]Q;
  input [4:0]D;
  input s_aclk;
  input [0:0]I5;

  wire [4:0]D;
  wire [0:0]I5;
  wire [4:0]Q;
  wire s_aclk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[0]),
        .Q(Q[0]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[1]),
        .Q(Q[1]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[2]),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[3]),
        .Q(Q[3]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[4]),
        .Q(Q[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff_15
   (p_0_in,
    D,
    m_aclk,
    I6);
  output [4:0]p_0_in;
  input [4:0]D;
  input m_aclk;
  input [0:0]I6;

  wire [4:0]D;
  wire [0:0]I6;
  wire m_aclk;
  wire \n_0_Q_reg_reg[0] ;
  wire \n_0_Q_reg_reg[1] ;
  wire \n_0_Q_reg_reg[2] ;
  wire \n_0_Q_reg_reg[3] ;
  wire [4:0]p_0_in;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[0]),
        .Q(\n_0_Q_reg_reg[0] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[1]),
        .Q(\n_0_Q_reg_reg[1] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[2]),
        .Q(\n_0_Q_reg_reg[2] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[3]),
        .Q(\n_0_Q_reg_reg[3] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[4]),
        .Q(p_0_in[4]));
(* SOFT_HLUTNM = "soft_lutpair97" *) 
   LUT5 #(
    .INIT(32'h96696996)) 
     \wr_pntr_bin[0]_i_1 
       (.I0(\n_0_Q_reg_reg[2] ),
        .I1(\n_0_Q_reg_reg[0] ),
        .I2(\n_0_Q_reg_reg[1] ),
        .I3(p_0_in[4]),
        .I4(\n_0_Q_reg_reg[3] ),
        .O(p_0_in[0]));
(* SOFT_HLUTNM = "soft_lutpair97" *) 
   LUT4 #(
    .INIT(16'h6996)) 
     \wr_pntr_bin[1]_i_1 
       (.I0(\n_0_Q_reg_reg[2] ),
        .I1(\n_0_Q_reg_reg[1] ),
        .I2(p_0_in[4]),
        .I3(\n_0_Q_reg_reg[3] ),
        .O(p_0_in[1]));
(* SOFT_HLUTNM = "soft_lutpair98" *) 
   LUT3 #(
    .INIT(8'h96)) 
     \wr_pntr_bin[2]_i_1 
       (.I0(\n_0_Q_reg_reg[3] ),
        .I1(\n_0_Q_reg_reg[2] ),
        .I2(p_0_in[4]),
        .O(p_0_in[2]));
(* SOFT_HLUTNM = "soft_lutpair98" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_bin[3]_i_1 
       (.I0(\n_0_Q_reg_reg[3] ),
        .I1(p_0_in[4]),
        .O(p_0_in[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff_16
   (Q,
    O1,
    D,
    s_aclk,
    I5);
  output [0:0]Q;
  output [3:0]O1;
  input [4:0]D;
  input s_aclk;
  input [0:0]I5;

  wire [4:0]D;
  wire [0:0]I5;
  wire [3:0]O1;
  wire [0:0]Q;
  wire \n_0_Q_reg_reg[0] ;
  wire \n_0_Q_reg_reg[1] ;
  wire \n_0_Q_reg_reg[2] ;
  wire \n_0_Q_reg_reg[3] ;
  wire s_aclk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[0]),
        .Q(\n_0_Q_reg_reg[0] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[1]),
        .Q(\n_0_Q_reg_reg[1] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[2]),
        .Q(\n_0_Q_reg_reg[2] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[3]),
        .Q(\n_0_Q_reg_reg[3] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[4]),
        .Q(Q));
(* SOFT_HLUTNM = "soft_lutpair99" *) 
   LUT5 #(
    .INIT(32'h96696996)) 
     \rd_pntr_bin[0]_i_1 
       (.I0(\n_0_Q_reg_reg[2] ),
        .I1(\n_0_Q_reg_reg[0] ),
        .I2(\n_0_Q_reg_reg[1] ),
        .I3(Q),
        .I4(\n_0_Q_reg_reg[3] ),
        .O(O1[0]));
(* SOFT_HLUTNM = "soft_lutpair99" *) 
   LUT4 #(
    .INIT(16'h6996)) 
     \rd_pntr_bin[1]_i_1 
       (.I0(\n_0_Q_reg_reg[2] ),
        .I1(\n_0_Q_reg_reg[1] ),
        .I2(Q),
        .I3(\n_0_Q_reg_reg[3] ),
        .O(O1[1]));
(* SOFT_HLUTNM = "soft_lutpair100" *) 
   LUT3 #(
    .INIT(8'h96)) 
     \rd_pntr_bin[2]_i_1 
       (.I0(\n_0_Q_reg_reg[3] ),
        .I1(\n_0_Q_reg_reg[2] ),
        .I2(Q),
        .O(O1[2]));
(* SOFT_HLUTNM = "soft_lutpair100" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_bin[3]_i_1 
       (.I0(\n_0_Q_reg_reg[3] ),
        .I1(Q),
        .O(O1[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff_2
   (Q,
    D,
    rd_clk,
    I8);
  output [4:0]Q;
  input [4:0]D;
  input rd_clk;
  input [0:0]I8;

  wire [4:0]D;
  wire [0:0]I8;
  wire [4:0]Q;
  wire rd_clk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(D[0]),
        .Q(Q[0]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(D[1]),
        .Q(Q[1]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(D[2]),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(D[3]),
        .Q(Q[3]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(D[4]),
        .Q(Q[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff_3
   (Q,
    D,
    wr_clk,
    I7);
  output [4:0]Q;
  input [4:0]D;
  input wr_clk;
  input [0:0]I7;

  wire [4:0]D;
  wire [0:0]I7;
  wire [4:0]Q;
  wire wr_clk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(D[0]),
        .Q(Q[0]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(D[1]),
        .Q(Q[1]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(D[2]),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(D[3]),
        .Q(Q[3]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(D[4]),
        .Q(Q[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff_4
   (p_0_in,
    D,
    rd_clk,
    I8);
  output [4:0]p_0_in;
  input [4:0]D;
  input rd_clk;
  input [0:0]I8;

  wire [4:0]D;
  wire [0:0]I8;
  wire \n_0_Q_reg_reg[0] ;
  wire \n_0_Q_reg_reg[1] ;
  wire \n_0_Q_reg_reg[2] ;
  wire \n_0_Q_reg_reg[3] ;
  wire [4:0]p_0_in;
  wire rd_clk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(D[0]),
        .Q(\n_0_Q_reg_reg[0] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(D[1]),
        .Q(\n_0_Q_reg_reg[1] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(D[2]),
        .Q(\n_0_Q_reg_reg[2] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(D[3]),
        .Q(\n_0_Q_reg_reg[3] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I8),
        .D(D[4]),
        .Q(p_0_in[4]));
(* SOFT_HLUTNM = "soft_lutpair112" *) 
   LUT5 #(
    .INIT(32'h96696996)) 
     \wr_pntr_bin[0]_i_1 
       (.I0(\n_0_Q_reg_reg[2] ),
        .I1(\n_0_Q_reg_reg[0] ),
        .I2(\n_0_Q_reg_reg[1] ),
        .I3(p_0_in[4]),
        .I4(\n_0_Q_reg_reg[3] ),
        .O(p_0_in[0]));
(* SOFT_HLUTNM = "soft_lutpair112" *) 
   LUT4 #(
    .INIT(16'h6996)) 
     \wr_pntr_bin[1]_i_1 
       (.I0(\n_0_Q_reg_reg[2] ),
        .I1(\n_0_Q_reg_reg[1] ),
        .I2(p_0_in[4]),
        .I3(\n_0_Q_reg_reg[3] ),
        .O(p_0_in[1]));
(* SOFT_HLUTNM = "soft_lutpair113" *) 
   LUT3 #(
    .INIT(8'h96)) 
     \wr_pntr_bin[2]_i_1 
       (.I0(\n_0_Q_reg_reg[3] ),
        .I1(\n_0_Q_reg_reg[2] ),
        .I2(p_0_in[4]),
        .O(p_0_in[2]));
(* SOFT_HLUTNM = "soft_lutpair113" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_bin[3]_i_1 
       (.I0(\n_0_Q_reg_reg[3] ),
        .I1(p_0_in[4]),
        .O(p_0_in[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff_41
   (Q,
    I1,
    m_aclk,
    I6);
  output [4:0]Q;
  input [4:0]I1;
  input m_aclk;
  input [0:0]I6;

  wire [4:0]I1;
  wire [0:0]I6;
  wire [4:0]Q;
  wire m_aclk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(I1[0]),
        .Q(Q[0]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(I1[1]),
        .Q(Q[1]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(I1[2]),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(I1[3]),
        .Q(Q[3]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(I1[4]),
        .Q(Q[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff_42
   (Q,
    I1,
    s_aclk,
    I5);
  output [4:0]Q;
  input [4:0]I1;
  input s_aclk;
  input [0:0]I5;

  wire [4:0]I1;
  wire [0:0]I5;
  wire [4:0]Q;
  wire s_aclk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[0]),
        .Q(Q[0]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[1]),
        .Q(Q[1]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[2]),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[3]),
        .Q(Q[3]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[4]),
        .Q(Q[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff_43
   (Q,
    D,
    m_aclk,
    I6);
  output [4:0]Q;
  input [4:0]D;
  input m_aclk;
  input [0:0]I6;

  wire [4:0]D;
  wire [0:0]I6;
  wire [4:0]Q;
  wire m_aclk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[0]),
        .Q(Q[0]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[1]),
        .Q(Q[1]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[2]),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[3]),
        .Q(Q[3]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[4]),
        .Q(Q[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff_44
   (Q,
    D,
    s_aclk,
    I5);
  output [4:0]Q;
  input [4:0]D;
  input s_aclk;
  input [0:0]I5;

  wire [4:0]D;
  wire [0:0]I5;
  wire [4:0]Q;
  wire s_aclk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[0]),
        .Q(Q[0]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[1]),
        .Q(Q[1]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[2]),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[3]),
        .Q(Q[3]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[4]),
        .Q(Q[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff_45
   (p_0_in,
    D,
    m_aclk,
    I6);
  output [4:0]p_0_in;
  input [4:0]D;
  input m_aclk;
  input [0:0]I6;

  wire [4:0]D;
  wire [0:0]I6;
  wire m_aclk;
  wire \n_0_Q_reg_reg[0] ;
  wire \n_0_Q_reg_reg[1] ;
  wire \n_0_Q_reg_reg[2] ;
  wire \n_0_Q_reg_reg[3] ;
  wire [4:0]p_0_in;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[0]),
        .Q(\n_0_Q_reg_reg[0] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[1]),
        .Q(\n_0_Q_reg_reg[1] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[2]),
        .Q(\n_0_Q_reg_reg[2] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[3]),
        .Q(\n_0_Q_reg_reg[3] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[4]),
        .Q(p_0_in[4]));
(* SOFT_HLUTNM = "soft_lutpair14" *) 
   LUT5 #(
    .INIT(32'h96696996)) 
     \wr_pntr_bin[0]_i_1 
       (.I0(\n_0_Q_reg_reg[2] ),
        .I1(\n_0_Q_reg_reg[0] ),
        .I2(\n_0_Q_reg_reg[1] ),
        .I3(p_0_in[4]),
        .I4(\n_0_Q_reg_reg[3] ),
        .O(p_0_in[0]));
(* SOFT_HLUTNM = "soft_lutpair14" *) 
   LUT4 #(
    .INIT(16'h6996)) 
     \wr_pntr_bin[1]_i_1 
       (.I0(\n_0_Q_reg_reg[2] ),
        .I1(\n_0_Q_reg_reg[1] ),
        .I2(p_0_in[4]),
        .I3(\n_0_Q_reg_reg[3] ),
        .O(p_0_in[1]));
(* SOFT_HLUTNM = "soft_lutpair15" *) 
   LUT3 #(
    .INIT(8'h96)) 
     \wr_pntr_bin[2]_i_1 
       (.I0(\n_0_Q_reg_reg[3] ),
        .I1(\n_0_Q_reg_reg[2] ),
        .I2(p_0_in[4]),
        .O(p_0_in[2]));
(* SOFT_HLUTNM = "soft_lutpair15" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_bin[3]_i_1 
       (.I0(\n_0_Q_reg_reg[3] ),
        .I1(p_0_in[4]),
        .O(p_0_in[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff_46
   (Q,
    O1,
    D,
    s_aclk,
    I5);
  output [0:0]Q;
  output [3:0]O1;
  input [4:0]D;
  input s_aclk;
  input [0:0]I5;

  wire [4:0]D;
  wire [0:0]I5;
  wire [3:0]O1;
  wire [0:0]Q;
  wire \n_0_Q_reg_reg[0] ;
  wire \n_0_Q_reg_reg[1] ;
  wire \n_0_Q_reg_reg[2] ;
  wire \n_0_Q_reg_reg[3] ;
  wire s_aclk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[0]),
        .Q(\n_0_Q_reg_reg[0] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[1]),
        .Q(\n_0_Q_reg_reg[1] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[2]),
        .Q(\n_0_Q_reg_reg[2] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[3]),
        .Q(\n_0_Q_reg_reg[3] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[4]),
        .Q(Q));
(* SOFT_HLUTNM = "soft_lutpair16" *) 
   LUT5 #(
    .INIT(32'h96696996)) 
     \rd_pntr_bin[0]_i_1 
       (.I0(\n_0_Q_reg_reg[2] ),
        .I1(\n_0_Q_reg_reg[0] ),
        .I2(\n_0_Q_reg_reg[1] ),
        .I3(Q),
        .I4(\n_0_Q_reg_reg[3] ),
        .O(O1[0]));
(* SOFT_HLUTNM = "soft_lutpair16" *) 
   LUT4 #(
    .INIT(16'h6996)) 
     \rd_pntr_bin[1]_i_1 
       (.I0(\n_0_Q_reg_reg[2] ),
        .I1(\n_0_Q_reg_reg[1] ),
        .I2(Q),
        .I3(\n_0_Q_reg_reg[3] ),
        .O(O1[1]));
(* SOFT_HLUTNM = "soft_lutpair17" *) 
   LUT3 #(
    .INIT(8'h96)) 
     \rd_pntr_bin[2]_i_1 
       (.I0(\n_0_Q_reg_reg[3] ),
        .I1(\n_0_Q_reg_reg[2] ),
        .I2(Q),
        .O(O1[2]));
(* SOFT_HLUTNM = "soft_lutpair17" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_bin[3]_i_1 
       (.I0(\n_0_Q_reg_reg[3] ),
        .I1(Q),
        .O(O1[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff_5
   (Q,
    O1,
    D,
    wr_clk,
    I7);
  output [0:0]Q;
  output [3:0]O1;
  input [4:0]D;
  input wr_clk;
  input [0:0]I7;

  wire [4:0]D;
  wire [0:0]I7;
  wire [3:0]O1;
  wire [0:0]Q;
  wire \n_0_Q_reg_reg[0] ;
  wire \n_0_Q_reg_reg[1] ;
  wire \n_0_Q_reg_reg[2] ;
  wire \n_0_Q_reg_reg[3] ;
  wire wr_clk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(D[0]),
        .Q(\n_0_Q_reg_reg[0] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(D[1]),
        .Q(\n_0_Q_reg_reg[1] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(D[2]),
        .Q(\n_0_Q_reg_reg[2] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(D[3]),
        .Q(\n_0_Q_reg_reg[3] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I7),
        .D(D[4]),
        .Q(Q));
(* SOFT_HLUTNM = "soft_lutpair114" *) 
   LUT5 #(
    .INIT(32'h96696996)) 
     \rd_pntr_bin[0]_i_1 
       (.I0(\n_0_Q_reg_reg[2] ),
        .I1(\n_0_Q_reg_reg[0] ),
        .I2(\n_0_Q_reg_reg[1] ),
        .I3(Q),
        .I4(\n_0_Q_reg_reg[3] ),
        .O(O1[0]));
(* SOFT_HLUTNM = "soft_lutpair114" *) 
   LUT4 #(
    .INIT(16'h6996)) 
     \rd_pntr_bin[1]_i_1 
       (.I0(\n_0_Q_reg_reg[2] ),
        .I1(\n_0_Q_reg_reg[1] ),
        .I2(Q),
        .I3(\n_0_Q_reg_reg[3] ),
        .O(O1[1]));
(* SOFT_HLUTNM = "soft_lutpair115" *) 
   LUT3 #(
    .INIT(8'h96)) 
     \rd_pntr_bin[2]_i_1 
       (.I0(\n_0_Q_reg_reg[3] ),
        .I1(\n_0_Q_reg_reg[2] ),
        .I2(Q),
        .O(O1[2]));
(* SOFT_HLUTNM = "soft_lutpair115" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_bin[3]_i_1 
       (.I0(\n_0_Q_reg_reg[3] ),
        .I1(Q),
        .O(O1[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff_55
   (Q,
    I1,
    s_aclk,
    I6);
  output [4:0]Q;
  input [4:0]I1;
  input s_aclk;
  input [0:0]I6;

  wire [4:0]I1;
  wire [0:0]I6;
  wire [4:0]Q;
  wire s_aclk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(I1[0]),
        .Q(Q[0]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(I1[1]),
        .Q(Q[1]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(I1[2]),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(I1[3]),
        .Q(Q[3]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(I1[4]),
        .Q(Q[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff_56
   (Q,
    I1,
    m_aclk,
    I5);
  output [4:0]Q;
  input [4:0]I1;
  input m_aclk;
  input [0:0]I5;

  wire [4:0]I1;
  wire [0:0]I5;
  wire [4:0]Q;
  wire m_aclk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[0]),
        .Q(Q[0]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[1]),
        .Q(Q[1]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[2]),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[3]),
        .Q(Q[3]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[4]),
        .Q(Q[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff_57
   (Q,
    D,
    s_aclk,
    I6);
  output [4:0]Q;
  input [4:0]D;
  input s_aclk;
  input [0:0]I6;

  wire [4:0]D;
  wire [0:0]I6;
  wire [4:0]Q;
  wire s_aclk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[0]),
        .Q(Q[0]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[1]),
        .Q(Q[1]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[2]),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[3]),
        .Q(Q[3]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[4]),
        .Q(Q[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff_58
   (Q,
    D,
    m_aclk,
    I5);
  output [4:0]Q;
  input [4:0]D;
  input m_aclk;
  input [0:0]I5;

  wire [4:0]D;
  wire [0:0]I5;
  wire [4:0]Q;
  wire m_aclk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[0]),
        .Q(Q[0]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[1]),
        .Q(Q[1]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[2]),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[3]),
        .Q(Q[3]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[4]),
        .Q(Q[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff_59
   (p_0_in,
    D,
    s_aclk,
    I6);
  output [4:0]p_0_in;
  input [4:0]D;
  input s_aclk;
  input [0:0]I6;

  wire [4:0]D;
  wire [0:0]I6;
  wire \n_0_Q_reg_reg[0] ;
  wire \n_0_Q_reg_reg[1] ;
  wire \n_0_Q_reg_reg[2] ;
  wire \n_0_Q_reg_reg[3] ;
  wire [4:0]p_0_in;
  wire s_aclk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[0]),
        .Q(\n_0_Q_reg_reg[0] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[1]),
        .Q(\n_0_Q_reg_reg[1] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[2]),
        .Q(\n_0_Q_reg_reg[2] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[3]),
        .Q(\n_0_Q_reg_reg[3] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(s_aclk),
        .CE(1'b1),
        .CLR(I6),
        .D(D[4]),
        .Q(p_0_in[4]));
(* SOFT_HLUTNM = "soft_lutpair0" *) 
   LUT5 #(
    .INIT(32'h96696996)) 
     \wr_pntr_bin[0]_i_1 
       (.I0(\n_0_Q_reg_reg[2] ),
        .I1(\n_0_Q_reg_reg[0] ),
        .I2(\n_0_Q_reg_reg[1] ),
        .I3(p_0_in[4]),
        .I4(\n_0_Q_reg_reg[3] ),
        .O(p_0_in[0]));
(* SOFT_HLUTNM = "soft_lutpair0" *) 
   LUT4 #(
    .INIT(16'h6996)) 
     \wr_pntr_bin[1]_i_1 
       (.I0(\n_0_Q_reg_reg[2] ),
        .I1(\n_0_Q_reg_reg[1] ),
        .I2(p_0_in[4]),
        .I3(\n_0_Q_reg_reg[3] ),
        .O(p_0_in[1]));
(* SOFT_HLUTNM = "soft_lutpair1" *) 
   LUT3 #(
    .INIT(8'h96)) 
     \wr_pntr_bin[2]_i_1 
       (.I0(\n_0_Q_reg_reg[3] ),
        .I1(\n_0_Q_reg_reg[2] ),
        .I2(p_0_in[4]),
        .O(p_0_in[2]));
(* SOFT_HLUTNM = "soft_lutpair1" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_bin[3]_i_1 
       (.I0(\n_0_Q_reg_reg[3] ),
        .I1(p_0_in[4]),
        .O(p_0_in[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff_60
   (Q,
    O1,
    D,
    m_aclk,
    I5);
  output [0:0]Q;
  output [3:0]O1;
  input [4:0]D;
  input m_aclk;
  input [0:0]I5;

  wire [4:0]D;
  wire [0:0]I5;
  wire [3:0]O1;
  wire [0:0]Q;
  wire m_aclk;
  wire \n_0_Q_reg_reg[0] ;
  wire \n_0_Q_reg_reg[1] ;
  wire \n_0_Q_reg_reg[2] ;
  wire \n_0_Q_reg_reg[3] ;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[0]),
        .Q(\n_0_Q_reg_reg[0] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[1]),
        .Q(\n_0_Q_reg_reg[1] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[2]),
        .Q(\n_0_Q_reg_reg[2] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[3]),
        .Q(\n_0_Q_reg_reg[3] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[4]),
        .Q(Q));
(* SOFT_HLUTNM = "soft_lutpair2" *) 
   LUT5 #(
    .INIT(32'h96696996)) 
     \rd_pntr_bin[0]_i_1 
       (.I0(\n_0_Q_reg_reg[2] ),
        .I1(\n_0_Q_reg_reg[0] ),
        .I2(\n_0_Q_reg_reg[1] ),
        .I3(Q),
        .I4(\n_0_Q_reg_reg[3] ),
        .O(O1[0]));
(* SOFT_HLUTNM = "soft_lutpair2" *) 
   LUT4 #(
    .INIT(16'h6996)) 
     \rd_pntr_bin[1]_i_1 
       (.I0(\n_0_Q_reg_reg[2] ),
        .I1(\n_0_Q_reg_reg[1] ),
        .I2(Q),
        .I3(\n_0_Q_reg_reg[3] ),
        .O(O1[1]));
(* SOFT_HLUTNM = "soft_lutpair3" *) 
   LUT3 #(
    .INIT(8'h96)) 
     \rd_pntr_bin[2]_i_1 
       (.I0(\n_0_Q_reg_reg[3] ),
        .I1(\n_0_Q_reg_reg[2] ),
        .I2(Q),
        .O(O1[2]));
(* SOFT_HLUTNM = "soft_lutpair3" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_bin[3]_i_1 
       (.I0(\n_0_Q_reg_reg[3] ),
        .I1(Q),
        .O(O1[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff__parameterized0
   (Q,
    I1,
    rd_clk,
    I5);
  output [8:0]Q;
  input [8:0]I1;
  input rd_clk;
  input [0:0]I5;

  wire [8:0]I1;
  wire [0:0]I5;
  wire [8:0]Q;
  wire rd_clk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[0]),
        .Q(Q[0]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[1]),
        .Q(Q[1]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[2]),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[3]),
        .Q(Q[3]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[4]),
        .Q(Q[4]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[5]),
        .Q(Q[5]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[6]),
        .Q(Q[6]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[7]),
        .Q(Q[7]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(I1[8]),
        .Q(Q[8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff__parameterized0_22
   (Q,
    I1,
    wr_clk,
    I4);
  output [8:0]Q;
  input [8:0]I1;
  input wr_clk;
  input [0:0]I4;

  wire [8:0]I1;
  wire [0:0]I4;
  wire [8:0]Q;
  wire wr_clk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(I1[0]),
        .Q(Q[0]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(I1[1]),
        .Q(Q[1]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(I1[2]),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(I1[3]),
        .Q(Q[3]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(I1[4]),
        .Q(Q[4]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(I1[5]),
        .Q(Q[5]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(I1[6]),
        .Q(Q[6]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(I1[7]),
        .Q(Q[7]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(I1[8]),
        .Q(Q[8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff__parameterized0_23
   (Q,
    D,
    rd_clk,
    I5);
  output [8:0]Q;
  input [8:0]D;
  input rd_clk;
  input [0:0]I5;

  wire [8:0]D;
  wire [0:0]I5;
  wire [8:0]Q;
  wire rd_clk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[0]),
        .Q(Q[0]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[1]),
        .Q(Q[1]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[2]),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[3]),
        .Q(Q[3]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[4]),
        .Q(Q[4]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[5]),
        .Q(Q[5]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[6]),
        .Q(Q[6]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[7]),
        .Q(Q[7]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[8]),
        .Q(Q[8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff__parameterized0_24
   (Q,
    D,
    wr_clk,
    I4);
  output [8:0]Q;
  input [8:0]D;
  input wr_clk;
  input [0:0]I4;

  wire [8:0]D;
  wire [0:0]I4;
  wire [8:0]Q;
  wire wr_clk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(D[0]),
        .Q(Q[0]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(D[1]),
        .Q(Q[1]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(D[2]),
        .Q(Q[2]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(D[3]),
        .Q(Q[3]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(D[4]),
        .Q(Q[4]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(D[5]),
        .Q(Q[5]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(D[6]),
        .Q(Q[6]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(D[7]),
        .Q(Q[7]));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(D[8]),
        .Q(Q[8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff__parameterized0_25
   (p_0_in,
    D,
    rd_clk,
    I5);
  output [8:0]p_0_in;
  input [8:0]D;
  input rd_clk;
  input [0:0]I5;

  wire [8:0]D;
  wire [0:0]I5;
  wire \n_0_Q_reg_reg[0] ;
  wire \n_0_Q_reg_reg[1] ;
  wire \n_0_Q_reg_reg[2] ;
  wire \n_0_Q_reg_reg[3] ;
  wire \n_0_Q_reg_reg[4] ;
  wire \n_0_Q_reg_reg[5] ;
  wire \n_0_Q_reg_reg[6] ;
  wire \n_0_Q_reg_reg[7] ;
  wire [8:0]p_0_in;
  wire rd_clk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[0]),
        .Q(\n_0_Q_reg_reg[0] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[1]),
        .Q(\n_0_Q_reg_reg[1] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[2]),
        .Q(\n_0_Q_reg_reg[2] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[3]),
        .Q(\n_0_Q_reg_reg[3] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[4]),
        .Q(\n_0_Q_reg_reg[4] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[5]),
        .Q(\n_0_Q_reg_reg[5] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[6]),
        .Q(\n_0_Q_reg_reg[6] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[7]),
        .Q(\n_0_Q_reg_reg[7] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(I5),
        .D(D[8]),
        .Q(p_0_in[8]));
(* SOFT_HLUTNM = "soft_lutpair44" *) 
   LUT4 #(
    .INIT(16'h6996)) 
     \wr_pntr_bin[0]_i_1 
       (.I0(\n_0_Q_reg_reg[2] ),
        .I1(\n_0_Q_reg_reg[1] ),
        .I2(\n_0_Q_reg_reg[0] ),
        .I3(p_0_in[3]),
        .O(p_0_in[0]));
(* SOFT_HLUTNM = "soft_lutpair44" *) 
   LUT3 #(
    .INIT(8'h96)) 
     \wr_pntr_bin[1]_i_1 
       (.I0(\n_0_Q_reg_reg[2] ),
        .I1(\n_0_Q_reg_reg[1] ),
        .I2(p_0_in[3]),
        .O(p_0_in[1]));
LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_bin[2]_i_1 
       (.I0(p_0_in[3]),
        .I1(\n_0_Q_reg_reg[2] ),
        .O(p_0_in[2]));
LUT6 #(
    .INIT(64'h6996966996696996)) 
     \wr_pntr_bin[3]_i_1 
       (.I0(\n_0_Q_reg_reg[4] ),
        .I1(p_0_in[8]),
        .I2(\n_0_Q_reg_reg[6] ),
        .I3(\n_0_Q_reg_reg[7] ),
        .I4(\n_0_Q_reg_reg[5] ),
        .I5(\n_0_Q_reg_reg[3] ),
        .O(p_0_in[3]));
(* SOFT_HLUTNM = "soft_lutpair43" *) 
   LUT5 #(
    .INIT(32'h96696996)) 
     \wr_pntr_bin[4]_i_1 
       (.I0(\n_0_Q_reg_reg[5] ),
        .I1(\n_0_Q_reg_reg[7] ),
        .I2(\n_0_Q_reg_reg[6] ),
        .I3(p_0_in[8]),
        .I4(\n_0_Q_reg_reg[4] ),
        .O(p_0_in[4]));
(* SOFT_HLUTNM = "soft_lutpair43" *) 
   LUT4 #(
    .INIT(16'h6996)) 
     \wr_pntr_bin[5]_i_1 
       (.I0(p_0_in[8]),
        .I1(\n_0_Q_reg_reg[6] ),
        .I2(\n_0_Q_reg_reg[7] ),
        .I3(\n_0_Q_reg_reg[5] ),
        .O(p_0_in[5]));
(* SOFT_HLUTNM = "soft_lutpair45" *) 
   LUT3 #(
    .INIT(8'h96)) 
     \wr_pntr_bin[6]_i_1 
       (.I0(\n_0_Q_reg_reg[7] ),
        .I1(\n_0_Q_reg_reg[6] ),
        .I2(p_0_in[8]),
        .O(p_0_in[6]));
(* SOFT_HLUTNM = "soft_lutpair45" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \wr_pntr_bin[7]_i_1 
       (.I0(\n_0_Q_reg_reg[7] ),
        .I1(p_0_in[8]),
        .O(p_0_in[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module axi_dwidth_converter_0_synchronizer_ff__parameterized0_26
   (Q,
    O1,
    D,
    wr_clk,
    I4);
  output [0:0]Q;
  output [7:0]O1;
  input [8:0]D;
  input wr_clk;
  input [0:0]I4;

  wire [8:0]D;
  wire [0:0]I4;
  wire [7:0]O1;
  wire [0:0]Q;
  wire \n_0_Q_reg_reg[0] ;
  wire \n_0_Q_reg_reg[1] ;
  wire \n_0_Q_reg_reg[2] ;
  wire \n_0_Q_reg_reg[3] ;
  wire \n_0_Q_reg_reg[4] ;
  wire \n_0_Q_reg_reg[5] ;
  wire \n_0_Q_reg_reg[6] ;
  wire \n_0_Q_reg_reg[7] ;
  wire wr_clk;

(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(D[0]),
        .Q(\n_0_Q_reg_reg[0] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(D[1]),
        .Q(\n_0_Q_reg_reg[1] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(D[2]),
        .Q(\n_0_Q_reg_reg[2] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(D[3]),
        .Q(\n_0_Q_reg_reg[3] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(D[4]),
        .Q(\n_0_Q_reg_reg[4] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(D[5]),
        .Q(\n_0_Q_reg_reg[5] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(D[6]),
        .Q(\n_0_Q_reg_reg[6] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(D[7]),
        .Q(\n_0_Q_reg_reg[7] ));
(* ASYNC_REG *) 
   (* msgon = "true" *) 
   FDCE #(
    .INIT(1'b0)) 
     \Q_reg_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(I4),
        .D(D[8]),
        .Q(Q));
(* SOFT_HLUTNM = "soft_lutpair47" *) 
   LUT4 #(
    .INIT(16'h6996)) 
     \rd_pntr_bin[0]_i_1 
       (.I0(\n_0_Q_reg_reg[2] ),
        .I1(\n_0_Q_reg_reg[1] ),
        .I2(\n_0_Q_reg_reg[0] ),
        .I3(O1[3]),
        .O(O1[0]));
(* SOFT_HLUTNM = "soft_lutpair47" *) 
   LUT3 #(
    .INIT(8'h96)) 
     \rd_pntr_bin[1]_i_1 
       (.I0(\n_0_Q_reg_reg[2] ),
        .I1(\n_0_Q_reg_reg[1] ),
        .I2(O1[3]),
        .O(O1[1]));
LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_bin[2]_i_1 
       (.I0(O1[3]),
        .I1(\n_0_Q_reg_reg[2] ),
        .O(O1[2]));
LUT6 #(
    .INIT(64'h6996966996696996)) 
     \rd_pntr_bin[3]_i_1 
       (.I0(\n_0_Q_reg_reg[4] ),
        .I1(Q),
        .I2(\n_0_Q_reg_reg[6] ),
        .I3(\n_0_Q_reg_reg[7] ),
        .I4(\n_0_Q_reg_reg[5] ),
        .I5(\n_0_Q_reg_reg[3] ),
        .O(O1[3]));
(* SOFT_HLUTNM = "soft_lutpair46" *) 
   LUT5 #(
    .INIT(32'h96696996)) 
     \rd_pntr_bin[4]_i_1 
       (.I0(\n_0_Q_reg_reg[5] ),
        .I1(\n_0_Q_reg_reg[7] ),
        .I2(\n_0_Q_reg_reg[6] ),
        .I3(Q),
        .I4(\n_0_Q_reg_reg[4] ),
        .O(O1[4]));
(* SOFT_HLUTNM = "soft_lutpair46" *) 
   LUT4 #(
    .INIT(16'h6996)) 
     \rd_pntr_bin[5]_i_1 
       (.I0(Q),
        .I1(\n_0_Q_reg_reg[6] ),
        .I2(\n_0_Q_reg_reg[7] ),
        .I3(\n_0_Q_reg_reg[5] ),
        .O(O1[5]));
(* SOFT_HLUTNM = "soft_lutpair48" *) 
   LUT3 #(
    .INIT(8'h96)) 
     \rd_pntr_bin[6]_i_1 
       (.I0(\n_0_Q_reg_reg[7] ),
        .I1(\n_0_Q_reg_reg[6] ),
        .I2(Q),
        .O(O1[6]));
(* SOFT_HLUTNM = "soft_lutpair48" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \rd_pntr_bin[7]_i_1 
       (.I0(\n_0_Q_reg_reg[7] ),
        .I1(Q),
        .O(O1[7]));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module axi_dwidth_converter_0_wr_bin_cntr
   (O1,
    O3,
    Q,
    O5,
    O6,
    O4,
    p_0_out,
    wr_en,
    E,
    wr_clk,
    I1);
  output O1;
  output O3;
  output [3:0]Q;
  output [3:0]O5;
  output [4:0]O6;
  input [0:0]O4;
  input p_0_out;
  input wr_en;
  input [0:0]E;
  input wr_clk;
  input [0:0]I1;

  wire [0:0]E;
  wire [0:0]I1;
  wire O1;
  wire O3;
  wire [0:0]O4;
  wire [3:0]O5;
  wire [4:0]O6;
  wire [3:0]Q;
  wire p_0_out;
  wire [3:3]p_8_out;
  wire [4:0]plusOp__0;
  wire wr_clk;
  wire wr_en;
  wire [3:3]wr_pntr_plus2;

(* SOFT_HLUTNM = "soft_lutpair126" *) 
   LUT1 #(
    .INIT(2'h1)) 
     \gic0.gc0.count[0]_i_1 
       (.I0(Q[0]),
        .O(plusOp__0[0]));
LUT2 #(
    .INIT(4'h6)) 
     \gic0.gc0.count[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp__0[1]));
(* SOFT_HLUTNM = "soft_lutpair126" *) 
   LUT3 #(
    .INIT(8'h6A)) 
     \gic0.gc0.count[2]_i_1 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(plusOp__0[2]));
(* SOFT_HLUTNM = "soft_lutpair124" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \gic0.gc0.count[3]_i_1 
       (.I0(wr_pntr_plus2),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .O(plusOp__0[3]));
(* SOFT_HLUTNM = "soft_lutpair124" *) 
   LUT5 #(
    .INIT(32'h6AAAAAAA)) 
     \gic0.gc0.count[4]_i_1 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(wr_pntr_plus2),
        .O(plusOp__0[4]));
FDPE #(
    .INIT(1'b1)) 
     \gic0.gc0.count_d1_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(Q[0]),
        .PRE(I1),
        .Q(O5[0]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(Q[1]),
        .Q(O5[1]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(Q[2]),
        .Q(O5[2]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(wr_pntr_plus2),
        .Q(p_8_out));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(Q[3]),
        .Q(O5[3]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(O5[0]),
        .Q(O6[0]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(O5[1]),
        .Q(O6[1]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(O5[2]),
        .Q(O6[2]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(p_8_out),
        .Q(O6[3]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(O5[3]),
        .Q(O6[4]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(plusOp__0[0]),
        .Q(Q[0]));
FDPE #(
    .INIT(1'b1)) 
     \gic0.gc0.count_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[1]),
        .PRE(I1),
        .Q(Q[1]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(plusOp__0[2]),
        .Q(Q[2]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(plusOp__0[3]),
        .Q(wr_pntr_plus2));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(plusOp__0[4]),
        .Q(Q[3]));
(* SOFT_HLUTNM = "soft_lutpair125" *) 
   LUT4 #(
    .INIT(16'hF6FF)) 
     ram_full_i_i_4
       (.I0(O4),
        .I1(wr_pntr_plus2),
        .I2(p_0_out),
        .I3(wr_en),
        .O(O1));
(* SOFT_HLUTNM = "soft_lutpair125" *) 
   LUT2 #(
    .INIT(4'h6)) 
     ram_full_i_i_7
       (.I0(p_8_out),
        .I1(O4),
        .O(O3));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module axi_dwidth_converter_0_wr_bin_cntr_37
   (Q,
    ram_full_i,
    O1,
    O2,
    O3,
    I1,
    s_axi_arvalid,
    p_0_out,
    I2,
    rst_full_gen_i,
    E,
    s_aclk,
    I3);
  output [1:0]Q;
  output ram_full_i;
  output [3:0]O1;
  output [4:0]O2;
  input [2:0]O3;
  input I1;
  input s_axi_arvalid;
  input p_0_out;
  input I2;
  input rst_full_gen_i;
  input [0:0]E;
  input s_aclk;
  input [0:0]I3;

  wire [0:0]E;
  wire I1;
  wire I2;
  wire [0:0]I3;
  wire [3:0]O1;
  wire [4:0]O2;
  wire [2:0]O3;
  wire [1:0]Q;
  wire n_0_ram_full_fb_i_i_2;
  wire n_0_ram_full_fb_i_i_4;
  wire p_0_out;
  wire [3:3]p_8_out;
  wire [4:0]plusOp__0;
  wire ram_full_i;
  wire rst_full_gen_i;
  wire s_aclk;
  wire s_axi_arvalid;
  wire [4:2]wr_pntr_plus2;

(* SOFT_HLUTNM = "soft_lutpair28" *) 
   LUT1 #(
    .INIT(2'h1)) 
     \gic0.gc0.count[0]_i_1 
       (.I0(Q[0]),
        .O(plusOp__0[0]));
LUT2 #(
    .INIT(4'h6)) 
     \gic0.gc0.count[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp__0[1]));
(* SOFT_HLUTNM = "soft_lutpair28" *) 
   LUT3 #(
    .INIT(8'h78)) 
     \gic0.gc0.count[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(wr_pntr_plus2[2]),
        .O(plusOp__0[2]));
(* SOFT_HLUTNM = "soft_lutpair27" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \gic0.gc0.count[3]_i_1 
       (.I0(wr_pntr_plus2[3]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(wr_pntr_plus2[2]),
        .O(plusOp__0[3]));
(* SOFT_HLUTNM = "soft_lutpair27" *) 
   LUT5 #(
    .INIT(32'h6AAAAAAA)) 
     \gic0.gc0.count[4]_i_1 
       (.I0(wr_pntr_plus2[4]),
        .I1(wr_pntr_plus2[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(wr_pntr_plus2[3]),
        .O(plusOp__0[4]));
FDPE #(
    .INIT(1'b1)) 
     \gic0.gc0.count_d1_reg[0] 
       (.C(s_aclk),
        .CE(E),
        .D(Q[0]),
        .PRE(I3),
        .Q(O1[0]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[1] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(Q[1]),
        .Q(O1[1]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[2] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(wr_pntr_plus2[2]),
        .Q(O1[2]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[3] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(wr_pntr_plus2[3]),
        .Q(p_8_out));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[4] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(wr_pntr_plus2[4]),
        .Q(O1[3]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[0] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(O1[0]),
        .Q(O2[0]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[1] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(O1[1]),
        .Q(O2[1]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[2] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(O1[2]),
        .Q(O2[2]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[3] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(p_8_out),
        .Q(O2[3]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[4] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(O1[3]),
        .Q(O2[4]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[0] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(plusOp__0[0]),
        .Q(Q[0]));
FDPE #(
    .INIT(1'b1)) 
     \gic0.gc0.count_reg[1] 
       (.C(s_aclk),
        .CE(E),
        .D(plusOp__0[1]),
        .PRE(I3),
        .Q(Q[1]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[2] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(plusOp__0[2]),
        .Q(wr_pntr_plus2[2]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[3] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(plusOp__0[3]),
        .Q(wr_pntr_plus2[3]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[4] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(plusOp__0[4]),
        .Q(wr_pntr_plus2[4]));
LUT5 #(
    .INIT(32'h0000D55D)) 
     ram_full_fb_i_i_1
       (.I0(n_0_ram_full_fb_i_i_2),
        .I1(I2),
        .I2(O3[1]),
        .I3(p_8_out),
        .I4(rst_full_gen_i),
        .O(ram_full_i));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF6FF6)) 
     ram_full_fb_i_i_2
       (.I0(wr_pntr_plus2[4]),
        .I1(O3[2]),
        .I2(wr_pntr_plus2[2]),
        .I3(O3[0]),
        .I4(n_0_ram_full_fb_i_i_4),
        .I5(I1),
        .O(n_0_ram_full_fb_i_i_2));
LUT4 #(
    .INIT(16'hFF6F)) 
     ram_full_fb_i_i_4
       (.I0(O3[1]),
        .I1(wr_pntr_plus2[3]),
        .I2(s_axi_arvalid),
        .I3(p_0_out),
        .O(n_0_ram_full_fb_i_i_4));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module axi_dwidth_converter_0_wr_bin_cntr_51
   (Q,
    ram_full_i,
    O1,
    O2,
    O3,
    I1,
    m_axi_bvalid,
    p_0_out,
    I2,
    rst_full_gen_i,
    E,
    m_aclk,
    I3);
  output [1:0]Q;
  output ram_full_i;
  output [3:0]O1;
  output [4:0]O2;
  input [2:0]O3;
  input I1;
  input m_axi_bvalid;
  input p_0_out;
  input I2;
  input rst_full_gen_i;
  input [0:0]E;
  input m_aclk;
  input [0:0]I3;

  wire [0:0]E;
  wire I1;
  wire I2;
  wire [0:0]I3;
  wire [3:0]O1;
  wire [4:0]O2;
  wire [2:0]O3;
  wire [1:0]Q;
  wire m_aclk;
  wire m_axi_bvalid;
  wire n_0_ram_full_fb_i_i_2;
  wire n_0_ram_full_fb_i_i_4;
  wire p_0_out;
  wire [3:3]p_8_out;
  wire [4:0]plusOp__0;
  wire ram_full_i;
  wire rst_full_gen_i;
  wire [4:2]wr_pntr_plus2;

(* SOFT_HLUTNM = "soft_lutpair13" *) 
   LUT1 #(
    .INIT(2'h1)) 
     \gic0.gc0.count[0]_i_1 
       (.I0(Q[0]),
        .O(plusOp__0[0]));
LUT2 #(
    .INIT(4'h6)) 
     \gic0.gc0.count[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp__0[1]));
(* SOFT_HLUTNM = "soft_lutpair13" *) 
   LUT3 #(
    .INIT(8'h78)) 
     \gic0.gc0.count[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(wr_pntr_plus2[2]),
        .O(plusOp__0[2]));
(* SOFT_HLUTNM = "soft_lutpair12" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \gic0.gc0.count[3]_i_1 
       (.I0(wr_pntr_plus2[3]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(wr_pntr_plus2[2]),
        .O(plusOp__0[3]));
(* SOFT_HLUTNM = "soft_lutpair12" *) 
   LUT5 #(
    .INIT(32'h6AAAAAAA)) 
     \gic0.gc0.count[4]_i_1 
       (.I0(wr_pntr_plus2[4]),
        .I1(wr_pntr_plus2[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(wr_pntr_plus2[3]),
        .O(plusOp__0[4]));
FDPE #(
    .INIT(1'b1)) 
     \gic0.gc0.count_d1_reg[0] 
       (.C(m_aclk),
        .CE(E),
        .D(Q[0]),
        .PRE(I3),
        .Q(O1[0]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[1] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I3),
        .D(Q[1]),
        .Q(O1[1]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[2] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I3),
        .D(wr_pntr_plus2[2]),
        .Q(O1[2]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[3] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I3),
        .D(wr_pntr_plus2[3]),
        .Q(p_8_out));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[4] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I3),
        .D(wr_pntr_plus2[4]),
        .Q(O1[3]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[0] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I3),
        .D(O1[0]),
        .Q(O2[0]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[1] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I3),
        .D(O1[1]),
        .Q(O2[1]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[2] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I3),
        .D(O1[2]),
        .Q(O2[2]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[3] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I3),
        .D(p_8_out),
        .Q(O2[3]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[4] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I3),
        .D(O1[3]),
        .Q(O2[4]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[0] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I3),
        .D(plusOp__0[0]),
        .Q(Q[0]));
FDPE #(
    .INIT(1'b1)) 
     \gic0.gc0.count_reg[1] 
       (.C(m_aclk),
        .CE(E),
        .D(plusOp__0[1]),
        .PRE(I3),
        .Q(Q[1]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[2] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I3),
        .D(plusOp__0[2]),
        .Q(wr_pntr_plus2[2]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[3] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I3),
        .D(plusOp__0[3]),
        .Q(wr_pntr_plus2[3]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[4] 
       (.C(m_aclk),
        .CE(E),
        .CLR(I3),
        .D(plusOp__0[4]),
        .Q(wr_pntr_plus2[4]));
LUT5 #(
    .INIT(32'h0000D55D)) 
     ram_full_fb_i_i_1
       (.I0(n_0_ram_full_fb_i_i_2),
        .I1(I2),
        .I2(O3[1]),
        .I3(p_8_out),
        .I4(rst_full_gen_i),
        .O(ram_full_i));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF6FF6)) 
     ram_full_fb_i_i_2
       (.I0(wr_pntr_plus2[4]),
        .I1(O3[2]),
        .I2(wr_pntr_plus2[2]),
        .I3(O3[0]),
        .I4(n_0_ram_full_fb_i_i_4),
        .I5(I1),
        .O(n_0_ram_full_fb_i_i_2));
LUT4 #(
    .INIT(16'hFF6F)) 
     ram_full_fb_i_i_4
       (.I0(O3[1]),
        .I1(wr_pntr_plus2[3]),
        .I2(m_axi_bvalid),
        .I3(p_0_out),
        .O(n_0_ram_full_fb_i_i_4));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module axi_dwidth_converter_0_wr_bin_cntr_7
   (Q,
    ram_full_i,
    O1,
    O2,
    O3,
    I1,
    s_axi_awvalid,
    p_0_out,
    I2,
    rst_full_gen_i,
    E,
    s_aclk,
    I3);
  output [1:0]Q;
  output ram_full_i;
  output [3:0]O1;
  output [4:0]O2;
  input [2:0]O3;
  input I1;
  input s_axi_awvalid;
  input p_0_out;
  input I2;
  input rst_full_gen_i;
  input [0:0]E;
  input s_aclk;
  input [0:0]I3;

  wire [0:0]E;
  wire I1;
  wire I2;
  wire [0:0]I3;
  wire [3:0]O1;
  wire [4:0]O2;
  wire [2:0]O3;
  wire [1:0]Q;
  wire n_0_ram_full_fb_i_i_2;
  wire n_0_ram_full_fb_i_i_4;
  wire p_0_out;
  wire [3:3]p_8_out;
  wire [4:0]plusOp__0;
  wire ram_full_i;
  wire rst_full_gen_i;
  wire s_aclk;
  wire s_axi_awvalid;
  wire [4:2]wr_pntr_plus2;

(* SOFT_HLUTNM = "soft_lutpair111" *) 
   LUT1 #(
    .INIT(2'h1)) 
     \gic0.gc0.count[0]_i_1 
       (.I0(Q[0]),
        .O(plusOp__0[0]));
LUT2 #(
    .INIT(4'h6)) 
     \gic0.gc0.count[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp__0[1]));
(* SOFT_HLUTNM = "soft_lutpair111" *) 
   LUT3 #(
    .INIT(8'h78)) 
     \gic0.gc0.count[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(wr_pntr_plus2[2]),
        .O(plusOp__0[2]));
(* SOFT_HLUTNM = "soft_lutpair110" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \gic0.gc0.count[3]_i_1 
       (.I0(wr_pntr_plus2[3]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(wr_pntr_plus2[2]),
        .O(plusOp__0[3]));
(* SOFT_HLUTNM = "soft_lutpair110" *) 
   LUT5 #(
    .INIT(32'h6AAAAAAA)) 
     \gic0.gc0.count[4]_i_1 
       (.I0(wr_pntr_plus2[4]),
        .I1(wr_pntr_plus2[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(wr_pntr_plus2[3]),
        .O(plusOp__0[4]));
FDPE #(
    .INIT(1'b1)) 
     \gic0.gc0.count_d1_reg[0] 
       (.C(s_aclk),
        .CE(E),
        .D(Q[0]),
        .PRE(I3),
        .Q(O1[0]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[1] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(Q[1]),
        .Q(O1[1]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[2] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(wr_pntr_plus2[2]),
        .Q(O1[2]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[3] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(wr_pntr_plus2[3]),
        .Q(p_8_out));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[4] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(wr_pntr_plus2[4]),
        .Q(O1[3]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[0] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(O1[0]),
        .Q(O2[0]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[1] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(O1[1]),
        .Q(O2[1]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[2] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(O1[2]),
        .Q(O2[2]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[3] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(p_8_out),
        .Q(O2[3]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[4] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(O1[3]),
        .Q(O2[4]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[0] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(plusOp__0[0]),
        .Q(Q[0]));
FDPE #(
    .INIT(1'b1)) 
     \gic0.gc0.count_reg[1] 
       (.C(s_aclk),
        .CE(E),
        .D(plusOp__0[1]),
        .PRE(I3),
        .Q(Q[1]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[2] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(plusOp__0[2]),
        .Q(wr_pntr_plus2[2]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[3] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(plusOp__0[3]),
        .Q(wr_pntr_plus2[3]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[4] 
       (.C(s_aclk),
        .CE(E),
        .CLR(I3),
        .D(plusOp__0[4]),
        .Q(wr_pntr_plus2[4]));
LUT5 #(
    .INIT(32'h0000D55D)) 
     ram_full_fb_i_i_1
       (.I0(n_0_ram_full_fb_i_i_2),
        .I1(I2),
        .I2(O3[1]),
        .I3(p_8_out),
        .I4(rst_full_gen_i),
        .O(ram_full_i));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF6FF6)) 
     ram_full_fb_i_i_2
       (.I0(wr_pntr_plus2[4]),
        .I1(O3[2]),
        .I2(wr_pntr_plus2[2]),
        .I3(O3[0]),
        .I4(n_0_ram_full_fb_i_i_4),
        .I5(I1),
        .O(n_0_ram_full_fb_i_i_2));
LUT4 #(
    .INIT(16'hFF6F)) 
     ram_full_fb_i_i_4
       (.I0(O3[1]),
        .I1(wr_pntr_plus2[3]),
        .I2(s_axi_awvalid),
        .I3(p_0_out),
        .O(n_0_ram_full_fb_i_i_4));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module axi_dwidth_converter_0_wr_bin_cntr__parameterized0
   (O1,
    Q,
    O2,
    O3,
    I1,
    srst,
    E,
    clk);
  output O1;
  output [4:0]Q;
  output O2;
  output [4:0]O3;
  input [3:0]I1;
  input srst;
  input [0:0]E;
  input clk;

  wire [0:0]E;
  wire [3:0]I1;
  wire O1;
  wire O2;
  wire [4:0]O3;
  wire [4:0]Q;
  wire clk;
  wire [4:0]plusOp__0;
  wire srst;

LUT1 #(
    .INIT(2'h1)) 
     \gcc0.gc0.count[0]_i_1 
       (.I0(O3[0]),
        .O(plusOp__0[0]));
(* SOFT_HLUTNM = "soft_lutpair42" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \gcc0.gc0.count[1]_i_1 
       (.I0(O3[0]),
        .I1(O3[1]),
        .O(plusOp__0[1]));
(* SOFT_HLUTNM = "soft_lutpair42" *) 
   LUT3 #(
    .INIT(8'h6A)) 
     \gcc0.gc0.count[2]_i_1 
       (.I0(O3[2]),
        .I1(O3[1]),
        .I2(O3[0]),
        .O(plusOp__0[2]));
(* SOFT_HLUTNM = "soft_lutpair41" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \gcc0.gc0.count[3]_i_1 
       (.I0(O3[3]),
        .I1(O3[0]),
        .I2(O3[1]),
        .I3(O3[2]),
        .O(plusOp__0[3]));
(* SOFT_HLUTNM = "soft_lutpair41" *) 
   LUT5 #(
    .INIT(32'h6AAAAAAA)) 
     \gcc0.gc0.count[4]_i_1 
       (.I0(O3[4]),
        .I1(O3[2]),
        .I2(O3[1]),
        .I3(O3[0]),
        .I4(O3[3]),
        .O(plusOp__0[4]));
FDRE #(
    .INIT(1'b0)) 
     \gcc0.gc0.count_d1_reg[0] 
       (.C(clk),
        .CE(E),
        .D(O3[0]),
        .Q(Q[0]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gcc0.gc0.count_d1_reg[1] 
       (.C(clk),
        .CE(E),
        .D(O3[1]),
        .Q(Q[1]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gcc0.gc0.count_d1_reg[2] 
       (.C(clk),
        .CE(E),
        .D(O3[2]),
        .Q(Q[2]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gcc0.gc0.count_d1_reg[3] 
       (.C(clk),
        .CE(E),
        .D(O3[3]),
        .Q(Q[3]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gcc0.gc0.count_d1_reg[4] 
       (.C(clk),
        .CE(E),
        .D(O3[4]),
        .Q(Q[4]),
        .R(srst));
FDSE #(
    .INIT(1'b1)) 
     \gcc0.gc0.count_reg[0] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[0]),
        .Q(O3[0]),
        .S(srst));
FDRE #(
    .INIT(1'b0)) 
     \gcc0.gc0.count_reg[1] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[1]),
        .Q(O3[1]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gcc0.gc0.count_reg[2] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[2]),
        .Q(O3[2]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gcc0.gc0.count_reg[3] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[3]),
        .Q(O3[3]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gcc0.gc0.count_reg[4] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[4]),
        .Q(O3[4]),
        .R(srst));
LUT4 #(
    .INIT(16'h6FF6)) 
     ram_empty_fb_i_i_3
       (.I0(Q[4]),
        .I1(I1[3]),
        .I2(Q[2]),
        .I3(I1[2]),
        .O(O1));
LUT4 #(
    .INIT(16'h6FF6)) 
     ram_empty_fb_i_i_4
       (.I0(Q[1]),
        .I1(I1[1]),
        .I2(Q[0]),
        .I3(I1[0]),
        .O(O2));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module axi_dwidth_converter_0_wr_bin_cntr__parameterized0_30
   (O1,
    Q,
    O2,
    O3,
    I1,
    srst,
    E,
    clk);
  output O1;
  output [4:0]Q;
  output O2;
  output [4:0]O3;
  input [3:0]I1;
  input srst;
  input [0:0]E;
  input clk;

  wire [0:0]E;
  wire [3:0]I1;
  wire O1;
  wire O2;
  wire [4:0]O3;
  wire [4:0]Q;
  wire clk;
  wire [4:0]plusOp__0;
  wire srst;

LUT1 #(
    .INIT(2'h1)) 
     \gcc0.gc0.count[0]_i_1 
       (.I0(O3[0]),
        .O(plusOp__0[0]));
(* SOFT_HLUTNM = "soft_lutpair35" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \gcc0.gc0.count[1]_i_1 
       (.I0(O3[0]),
        .I1(O3[1]),
        .O(plusOp__0[1]));
(* SOFT_HLUTNM = "soft_lutpair35" *) 
   LUT3 #(
    .INIT(8'h6A)) 
     \gcc0.gc0.count[2]_i_1 
       (.I0(O3[2]),
        .I1(O3[1]),
        .I2(O3[0]),
        .O(plusOp__0[2]));
(* SOFT_HLUTNM = "soft_lutpair34" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \gcc0.gc0.count[3]_i_1 
       (.I0(O3[3]),
        .I1(O3[0]),
        .I2(O3[1]),
        .I3(O3[2]),
        .O(plusOp__0[3]));
(* SOFT_HLUTNM = "soft_lutpair34" *) 
   LUT5 #(
    .INIT(32'h6AAAAAAA)) 
     \gcc0.gc0.count[4]_i_1 
       (.I0(O3[4]),
        .I1(O3[2]),
        .I2(O3[1]),
        .I3(O3[0]),
        .I4(O3[3]),
        .O(plusOp__0[4]));
FDRE #(
    .INIT(1'b0)) 
     \gcc0.gc0.count_d1_reg[0] 
       (.C(clk),
        .CE(E),
        .D(O3[0]),
        .Q(Q[0]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gcc0.gc0.count_d1_reg[1] 
       (.C(clk),
        .CE(E),
        .D(O3[1]),
        .Q(Q[1]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gcc0.gc0.count_d1_reg[2] 
       (.C(clk),
        .CE(E),
        .D(O3[2]),
        .Q(Q[2]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gcc0.gc0.count_d1_reg[3] 
       (.C(clk),
        .CE(E),
        .D(O3[3]),
        .Q(Q[3]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gcc0.gc0.count_d1_reg[4] 
       (.C(clk),
        .CE(E),
        .D(O3[4]),
        .Q(Q[4]),
        .R(srst));
FDSE #(
    .INIT(1'b1)) 
     \gcc0.gc0.count_reg[0] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[0]),
        .Q(O3[0]),
        .S(srst));
FDRE #(
    .INIT(1'b0)) 
     \gcc0.gc0.count_reg[1] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[1]),
        .Q(O3[1]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gcc0.gc0.count_reg[2] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[2]),
        .Q(O3[2]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gcc0.gc0.count_reg[3] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[3]),
        .Q(O3[3]),
        .R(srst));
FDRE #(
    .INIT(1'b0)) 
     \gcc0.gc0.count_reg[4] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[4]),
        .Q(O3[4]),
        .R(srst));
LUT4 #(
    .INIT(16'h6FF6)) 
     ram_empty_fb_i_i_3
       (.I0(Q[4]),
        .I1(I1[3]),
        .I2(Q[2]),
        .I3(I1[2]),
        .O(O1));
LUT4 #(
    .INIT(16'h6FF6)) 
     ram_empty_fb_i_i_4
       (.I0(Q[1]),
        .I1(I1[1]),
        .I2(Q[0]),
        .I3(I1[0]),
        .O(O2));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module axi_dwidth_converter_0_wr_bin_cntr__parameterized1
   (O1,
    O2,
    Q,
    O3,
    O4,
    O5,
    O6,
    O7,
    O8,
    O9,
    O10,
    O11,
    O12,
    O13,
    O14,
    O15,
    O16,
    O17,
    O18,
    v1_reg,
    v1_reg_0,
    comp1,
    wr_en,
    p_0_out,
    comp2,
    RD_PNTR_WR,
    E,
    wr_clk,
    I1);
  output O1;
  output O2;
  output [8:0]Q;
  output O3;
  output O4;
  output O5;
  output O6;
  output O7;
  output O8;
  output O9;
  output O10;
  output O11;
  output O12;
  output O13;
  output O14;
  output O15;
  output O16;
  output O17;
  output [0:0]O18;
  output [4:0]v1_reg;
  output [3:0]v1_reg_0;
  input comp1;
  input wr_en;
  input p_0_out;
  input comp2;
  input [8:0]RD_PNTR_WR;
  input [0:0]E;
  input wr_clk;
  input [0:0]I1;

  wire [0:0]E;
  wire [0:0]I1;
  wire O1;
  wire O10;
  wire O11;
  wire O12;
  wire O13;
  wire O14;
  wire O15;
  wire O16;
  wire O17;
  wire [0:0]O18;
  wire O2;
  wire O3;
  wire O4;
  wire O5;
  wire O6;
  wire O7;
  wire O8;
  wire O9;
  wire [8:0]Q;
  wire [8:0]RD_PNTR_WR;
  wire comp1;
  wire comp2;
  wire \n_0_gic0.gc0.count[8]_i_2 ;
  wire p_0_out;
  wire [8:0]p_8_out;
  wire [8:0]plusOp__0;
  wire [4:0]v1_reg;
  wire [3:0]v1_reg_0;
  wire wr_clk;
  wire wr_en;
  wire [7:0]wr_pntr_plus2;

LUT5 #(
    .INIT(32'h00000100)) 
     RAM_reg_0_63_0_2_i_1
       (.I0(Q[7]),
        .I1(Q[6]),
        .I2(Q[8]),
        .I3(wr_en),
        .I4(p_0_out),
        .O(O9));
LUT5 #(
    .INIT(32'h00000100)) 
     RAM_reg_0_63_3_3_i_1
       (.I0(Q[7]),
        .I1(Q[6]),
        .I2(Q[8]),
        .I3(wr_en),
        .I4(p_0_out),
        .O(O5));
LUT5 #(
    .INIT(32'h00040000)) 
     RAM_reg_128_191_0_2_i_1
       (.I0(Q[8]),
        .I1(wr_en),
        .I2(p_0_out),
        .I3(Q[6]),
        .I4(Q[7]),
        .O(O7));
LUT5 #(
    .INIT(32'h00040000)) 
     RAM_reg_128_191_3_3_i_1
       (.I0(Q[8]),
        .I1(wr_en),
        .I2(p_0_out),
        .I3(Q[6]),
        .I4(Q[7]),
        .O(O3));
LUT5 #(
    .INIT(32'h04000000)) 
     RAM_reg_192_255_0_2_i_1
       (.I0(Q[8]),
        .I1(wr_en),
        .I2(p_0_out),
        .I3(Q[7]),
        .I4(Q[6]),
        .O(O6));
LUT5 #(
    .INIT(32'h04000000)) 
     RAM_reg_192_255_3_3_i_1
       (.I0(Q[8]),
        .I1(wr_en),
        .I2(p_0_out),
        .I3(Q[7]),
        .I4(Q[6]),
        .O(O2));
LUT5 #(
    .INIT(32'h00100000)) 
     RAM_reg_256_319_0_2_i_1
       (.I0(Q[7]),
        .I1(Q[6]),
        .I2(wr_en),
        .I3(p_0_out),
        .I4(Q[8]),
        .O(O11));
LUT5 #(
    .INIT(32'h00100000)) 
     RAM_reg_256_319_3_3_i_1
       (.I0(Q[7]),
        .I1(Q[6]),
        .I2(wr_en),
        .I3(p_0_out),
        .I4(Q[8]),
        .O(O10));
LUT5 #(
    .INIT(32'h00400000)) 
     RAM_reg_320_383_0_2_i_1
       (.I0(Q[7]),
        .I1(Q[6]),
        .I2(wr_en),
        .I3(p_0_out),
        .I4(Q[8]),
        .O(O13));
LUT5 #(
    .INIT(32'h00400000)) 
     RAM_reg_320_383_3_3_i_1
       (.I0(Q[7]),
        .I1(Q[6]),
        .I2(wr_en),
        .I3(p_0_out),
        .I4(Q[8]),
        .O(O12));
LUT5 #(
    .INIT(32'h00400000)) 
     RAM_reg_384_447_0_2_i_1
       (.I0(Q[6]),
        .I1(Q[7]),
        .I2(wr_en),
        .I3(p_0_out),
        .I4(Q[8]),
        .O(O15));
LUT5 #(
    .INIT(32'h00400000)) 
     RAM_reg_384_447_3_3_i_1
       (.I0(Q[6]),
        .I1(Q[7]),
        .I2(wr_en),
        .I3(p_0_out),
        .I4(Q[8]),
        .O(O14));
LUT5 #(
    .INIT(32'h00800000)) 
     RAM_reg_448_511_0_2_i_1
       (.I0(Q[7]),
        .I1(Q[6]),
        .I2(wr_en),
        .I3(p_0_out),
        .I4(Q[8]),
        .O(O17));
LUT5 #(
    .INIT(32'h00800000)) 
     RAM_reg_448_511_3_3_i_1
       (.I0(Q[7]),
        .I1(Q[6]),
        .I2(wr_en),
        .I3(p_0_out),
        .I4(Q[8]),
        .O(O16));
LUT5 #(
    .INIT(32'h00040000)) 
     RAM_reg_64_127_0_2_i_1
       (.I0(Q[8]),
        .I1(wr_en),
        .I2(p_0_out),
        .I3(Q[7]),
        .I4(Q[6]),
        .O(O8));
LUT5 #(
    .INIT(32'h00040000)) 
     RAM_reg_64_127_3_3_i_1
       (.I0(Q[8]),
        .I1(wr_en),
        .I2(p_0_out),
        .I3(Q[7]),
        .I4(Q[6]),
        .O(O4));
(* SOFT_HLUTNM = "soft_lutpair65" *) 
   LUT1 #(
    .INIT(2'h1)) 
     \gic0.gc0.count[0]_i_1 
       (.I0(wr_pntr_plus2[0]),
        .O(plusOp__0[0]));
LUT2 #(
    .INIT(4'h6)) 
     \gic0.gc0.count[1]_i_1 
       (.I0(wr_pntr_plus2[0]),
        .I1(wr_pntr_plus2[1]),
        .O(plusOp__0[1]));
(* SOFT_HLUTNM = "soft_lutpair65" *) 
   LUT3 #(
    .INIT(8'h78)) 
     \gic0.gc0.count[2]_i_1 
       (.I0(wr_pntr_plus2[0]),
        .I1(wr_pntr_plus2[1]),
        .I2(wr_pntr_plus2[2]),
        .O(plusOp__0[2]));
(* SOFT_HLUTNM = "soft_lutpair63" *) 
   LUT4 #(
    .INIT(16'h7F80)) 
     \gic0.gc0.count[3]_i_1 
       (.I0(wr_pntr_plus2[1]),
        .I1(wr_pntr_plus2[0]),
        .I2(wr_pntr_plus2[2]),
        .I3(wr_pntr_plus2[3]),
        .O(plusOp__0[3]));
(* SOFT_HLUTNM = "soft_lutpair63" *) 
   LUT5 #(
    .INIT(32'h7FFF8000)) 
     \gic0.gc0.count[4]_i_1 
       (.I0(wr_pntr_plus2[2]),
        .I1(wr_pntr_plus2[0]),
        .I2(wr_pntr_plus2[1]),
        .I3(wr_pntr_plus2[3]),
        .I4(wr_pntr_plus2[4]),
        .O(plusOp__0[4]));
LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
     \gic0.gc0.count[5]_i_1 
       (.I0(wr_pntr_plus2[3]),
        .I1(wr_pntr_plus2[1]),
        .I2(wr_pntr_plus2[0]),
        .I3(wr_pntr_plus2[2]),
        .I4(wr_pntr_plus2[4]),
        .I5(wr_pntr_plus2[5]),
        .O(plusOp__0[5]));
LUT2 #(
    .INIT(4'h6)) 
     \gic0.gc0.count[6]_i_1 
       (.I0(\n_0_gic0.gc0.count[8]_i_2 ),
        .I1(wr_pntr_plus2[6]),
        .O(plusOp__0[6]));
(* SOFT_HLUTNM = "soft_lutpair64" *) 
   LUT3 #(
    .INIT(8'h78)) 
     \gic0.gc0.count[7]_i_1 
       (.I0(\n_0_gic0.gc0.count[8]_i_2 ),
        .I1(wr_pntr_plus2[6]),
        .I2(wr_pntr_plus2[7]),
        .O(plusOp__0[7]));
(* SOFT_HLUTNM = "soft_lutpair64" *) 
   LUT4 #(
    .INIT(16'h7F80)) 
     \gic0.gc0.count[8]_i_1 
       (.I0(wr_pntr_plus2[6]),
        .I1(\n_0_gic0.gc0.count[8]_i_2 ),
        .I2(wr_pntr_plus2[7]),
        .I3(O18),
        .O(plusOp__0[8]));
LUT6 #(
    .INIT(64'h8000000000000000)) 
     \gic0.gc0.count[8]_i_2 
       (.I0(wr_pntr_plus2[5]),
        .I1(wr_pntr_plus2[3]),
        .I2(wr_pntr_plus2[1]),
        .I3(wr_pntr_plus2[0]),
        .I4(wr_pntr_plus2[2]),
        .I5(wr_pntr_plus2[4]),
        .O(\n_0_gic0.gc0.count[8]_i_2 ));
FDPE #(
    .INIT(1'b1)) 
     \gic0.gc0.count_d1_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(wr_pntr_plus2[0]),
        .PRE(I1),
        .Q(p_8_out[0]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(wr_pntr_plus2[1]),
        .Q(p_8_out[1]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(wr_pntr_plus2[2]),
        .Q(p_8_out[2]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(wr_pntr_plus2[3]),
        .Q(p_8_out[3]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(wr_pntr_plus2[4]),
        .Q(p_8_out[4]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(wr_pntr_plus2[5]),
        .Q(p_8_out[5]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(wr_pntr_plus2[6]),
        .Q(p_8_out[6]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(wr_pntr_plus2[7]),
        .Q(p_8_out[7]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d1_reg[8] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(O18),
        .Q(p_8_out[8]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(p_8_out[0]),
        .Q(Q[0]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(p_8_out[1]),
        .Q(Q[1]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(p_8_out[2]),
        .Q(Q[2]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(p_8_out[3]),
        .Q(Q[3]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(p_8_out[4]),
        .Q(Q[4]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(p_8_out[5]),
        .Q(Q[5]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(p_8_out[6]),
        .Q(Q[6]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(p_8_out[7]),
        .Q(Q[7]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_d2_reg[8] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(p_8_out[8]),
        .Q(Q[8]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(plusOp__0[0]),
        .Q(wr_pntr_plus2[0]));
FDPE #(
    .INIT(1'b1)) 
     \gic0.gc0.count_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[1]),
        .PRE(I1),
        .Q(wr_pntr_plus2[1]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(plusOp__0[2]),
        .Q(wr_pntr_plus2[2]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(plusOp__0[3]),
        .Q(wr_pntr_plus2[3]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(plusOp__0[4]),
        .Q(wr_pntr_plus2[4]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(plusOp__0[5]),
        .Q(wr_pntr_plus2[5]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(plusOp__0[6]),
        .Q(wr_pntr_plus2[6]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(plusOp__0[7]),
        .Q(wr_pntr_plus2[7]));
FDCE #(
    .INIT(1'b0)) 
     \gic0.gc0.count_reg[8] 
       (.C(wr_clk),
        .CE(E),
        .CLR(I1),
        .D(plusOp__0[8]),
        .Q(O18));
LUT4 #(
    .INIT(16'h9009)) 
     \gmux.gm[0].gm1.m1_i_1__1 
       (.I0(p_8_out[0]),
        .I1(RD_PNTR_WR[0]),
        .I2(p_8_out[1]),
        .I3(RD_PNTR_WR[1]),
        .O(v1_reg[0]));
LUT4 #(
    .INIT(16'h9009)) 
     \gmux.gm[0].gm1.m1_i_1__2 
       (.I0(wr_pntr_plus2[0]),
        .I1(RD_PNTR_WR[0]),
        .I2(wr_pntr_plus2[1]),
        .I3(RD_PNTR_WR[1]),
        .O(v1_reg_0[0]));
LUT4 #(
    .INIT(16'h9009)) 
     \gmux.gm[1].gms.ms_i_1__1 
       (.I0(p_8_out[2]),
        .I1(RD_PNTR_WR[2]),
        .I2(p_8_out[3]),
        .I3(RD_PNTR_WR[3]),
        .O(v1_reg[1]));
LUT4 #(
    .INIT(16'h9009)) 
     \gmux.gm[1].gms.ms_i_1__2 
       (.I0(wr_pntr_plus2[2]),
        .I1(RD_PNTR_WR[2]),
        .I2(wr_pntr_plus2[3]),
        .I3(RD_PNTR_WR[3]),
        .O(v1_reg_0[1]));
LUT4 #(
    .INIT(16'h9009)) 
     \gmux.gm[2].gms.ms_i_1__1 
       (.I0(p_8_out[4]),
        .I1(RD_PNTR_WR[4]),
        .I2(p_8_out[5]),
        .I3(RD_PNTR_WR[5]),
        .O(v1_reg[2]));
LUT4 #(
    .INIT(16'h9009)) 
     \gmux.gm[2].gms.ms_i_1__2 
       (.I0(wr_pntr_plus2[4]),
        .I1(RD_PNTR_WR[4]),
        .I2(wr_pntr_plus2[5]),
        .I3(RD_PNTR_WR[5]),
        .O(v1_reg_0[2]));
LUT4 #(
    .INIT(16'h9009)) 
     \gmux.gm[3].gms.ms_i_1__1 
       (.I0(p_8_out[6]),
        .I1(RD_PNTR_WR[6]),
        .I2(p_8_out[7]),
        .I3(RD_PNTR_WR[7]),
        .O(v1_reg[3]));
LUT4 #(
    .INIT(16'h9009)) 
     \gmux.gm[3].gms.ms_i_1__2 
       (.I0(wr_pntr_plus2[6]),
        .I1(RD_PNTR_WR[6]),
        .I2(wr_pntr_plus2[7]),
        .I3(RD_PNTR_WR[7]),
        .O(v1_reg_0[3]));
LUT2 #(
    .INIT(4'h9)) 
     \gmux.gm[4].gms.ms_i_1 
       (.I0(p_8_out[8]),
        .I1(RD_PNTR_WR[8]),
        .O(v1_reg[4]));
LUT4 #(
    .INIT(16'hAEAA)) 
     ram_full_i_i_1
       (.I0(comp1),
        .I1(wr_en),
        .I2(p_0_out),
        .I3(comp2),
        .O(O1));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module axi_dwidth_converter_0_wr_logic
   (Q,
    O1,
    E,
    s_axi_awready,
    O2,
    s_aclk,
    rst_d2,
    O3,
    I1,
    s_axi_awvalid,
    I2,
    rst_full_gen_i,
    I3);
  output [1:0]Q;
  output [3:0]O1;
  output [0:0]E;
  output s_axi_awready;
  output [4:0]O2;
  input s_aclk;
  input rst_d2;
  input [2:0]O3;
  input I1;
  input s_axi_awvalid;
  input I2;
  input rst_full_gen_i;
  input [0:0]I3;

  wire [0:0]E;
  wire I1;
  wire I2;
  wire [0:0]I3;
  wire [3:0]O1;
  wire [4:0]O2;
  wire [2:0]O3;
  wire [1:0]Q;
  wire p_0_out;
  wire ram_full_i;
  wire rst_d2;
  wire rst_full_gen_i;
  wire s_aclk;
  wire s_axi_awready;
  wire s_axi_awvalid;

axi_dwidth_converter_0_wr_status_flags_as \gwas.wsts 
       (.E(E),
        .p_0_out(p_0_out),
        .ram_full_i(ram_full_i),
        .rst_d2(rst_d2),
        .s_aclk(s_aclk),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid));
axi_dwidth_converter_0_wr_bin_cntr_7 wpntr
       (.E(E),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .O1(O1),
        .O2(O2),
        .O3(O3),
        .Q(Q),
        .p_0_out(p_0_out),
        .ram_full_i(ram_full_i),
        .rst_full_gen_i(rst_full_gen_i),
        .s_aclk(s_aclk),
        .s_axi_awvalid(s_axi_awvalid));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module axi_dwidth_converter_0_wr_logic_48
   (Q,
    O1,
    E,
    m_axi_bready,
    O2,
    m_aclk,
    rst_d2,
    O3,
    I1,
    m_axi_bvalid,
    I2,
    rst_full_gen_i,
    I3);
  output [1:0]Q;
  output [3:0]O1;
  output [0:0]E;
  output m_axi_bready;
  output [4:0]O2;
  input m_aclk;
  input rst_d2;
  input [2:0]O3;
  input I1;
  input m_axi_bvalid;
  input I2;
  input rst_full_gen_i;
  input [0:0]I3;

  wire [0:0]E;
  wire I1;
  wire I2;
  wire [0:0]I3;
  wire [3:0]O1;
  wire [4:0]O2;
  wire [2:0]O3;
  wire [1:0]Q;
  wire m_aclk;
  wire m_axi_bready;
  wire m_axi_bvalid;
  wire p_0_out;
  wire ram_full_i;
  wire rst_d2;
  wire rst_full_gen_i;

axi_dwidth_converter_0_wr_status_flags_as_50 \gwas.wsts 
       (.E(E),
        .m_aclk(m_aclk),
        .m_axi_bready(m_axi_bready),
        .m_axi_bvalid(m_axi_bvalid),
        .p_0_out(p_0_out),
        .ram_full_i(ram_full_i),
        .rst_d2(rst_d2));
axi_dwidth_converter_0_wr_bin_cntr_51 wpntr
       (.E(E),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .O1(O1),
        .O2(O2),
        .O3(O3),
        .Q(Q),
        .m_aclk(m_aclk),
        .m_axi_bvalid(m_axi_bvalid),
        .p_0_out(p_0_out),
        .ram_full_i(ram_full_i),
        .rst_full_gen_i(rst_full_gen_i));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module axi_dwidth_converter_0_wr_logic__parameterized0
   (full,
    O1,
    O2,
    E,
    O3,
    O5,
    O6,
    I1,
    wr_clk,
    Q,
    O4,
    wr_en);
  output full;
  output O1;
  output [3:0]O2;
  output [0:0]E;
  output O3;
  output [3:0]O5;
  output [4:0]O6;
  input I1;
  input wr_clk;
  input [1:0]Q;
  input [0:0]O4;
  input wr_en;

  wire [0:0]E;
  wire I1;
  wire O1;
  wire [3:0]O2;
  wire O3;
  wire [0:0]O4;
  wire [3:0]O5;
  wire [4:0]O6;
  wire [1:0]Q;
  wire full;
  wire p_0_out;
  wire wr_clk;
  wire wr_en;

axi_dwidth_converter_0_wr_status_flags_as__parameterized0 \gwas.wsts 
       (.E(E),
        .I1(I1),
        .Q(Q[0]),
        .full(full),
        .p_0_out(p_0_out),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
axi_dwidth_converter_0_wr_bin_cntr wpntr
       (.E(E),
        .I1(Q[1]),
        .O1(O1),
        .O3(O3),
        .O4(O4),
        .O5(O5),
        .O6(O6),
        .Q(O2),
        .p_0_out(p_0_out),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module axi_dwidth_converter_0_wr_logic__parameterized1
   (Q,
    O1,
    E,
    s_axi_arready,
    O2,
    s_aclk,
    rst_d2,
    O3,
    I1,
    s_axi_arvalid,
    I2,
    rst_full_gen_i,
    I3);
  output [1:0]Q;
  output [3:0]O1;
  output [0:0]E;
  output s_axi_arready;
  output [4:0]O2;
  input s_aclk;
  input rst_d2;
  input [2:0]O3;
  input I1;
  input s_axi_arvalid;
  input I2;
  input rst_full_gen_i;
  input [0:0]I3;

  wire [0:0]E;
  wire I1;
  wire I2;
  wire [0:0]I3;
  wire [3:0]O1;
  wire [4:0]O2;
  wire [2:0]O3;
  wire [1:0]Q;
  wire p_0_out;
  wire ram_full_i;
  wire rst_d2;
  wire rst_full_gen_i;
  wire s_aclk;
  wire s_axi_arready;
  wire s_axi_arvalid;

axi_dwidth_converter_0_wr_status_flags_as_36 \gwas.wsts 
       (.E(E),
        .p_0_out(p_0_out),
        .ram_full_i(ram_full_i),
        .rst_d2(rst_d2),
        .s_aclk(s_aclk),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid));
axi_dwidth_converter_0_wr_bin_cntr_37 wpntr
       (.E(E),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .O1(O1),
        .O2(O2),
        .O3(O3),
        .Q(Q),
        .p_0_out(p_0_out),
        .ram_full_i(ram_full_i),
        .rst_full_gen_i(rst_full_gen_i),
        .s_aclk(s_aclk),
        .s_axi_arvalid(s_axi_arvalid));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module axi_dwidth_converter_0_wr_logic__parameterized2
   (p_1_out,
    full,
    O1,
    Q,
    O2,
    E,
    O3,
    ram_full_i,
    clk,
    I1,
    wr_en,
    srst);
  output p_1_out;
  output full;
  output O1;
  output [4:0]Q;
  output O2;
  output [0:0]E;
  output [4:0]O3;
  input ram_full_i;
  input clk;
  input [3:0]I1;
  input wr_en;
  input srst;

  wire [0:0]E;
  wire [3:0]I1;
  wire O1;
  wire O2;
  wire [4:0]O3;
  wire [4:0]Q;
  wire clk;
  wire full;
  wire p_1_out;
  wire ram_full_i;
  wire srst;
  wire wr_en;

axi_dwidth_converter_0_wr_status_flags_ss \gwss.wsts 
       (.E(E),
        .clk(clk),
        .full(full),
        .p_1_out(p_1_out),
        .ram_full_i(ram_full_i),
        .wr_en(wr_en));
axi_dwidth_converter_0_wr_bin_cntr__parameterized0 wpntr
       (.E(E),
        .I1(I1),
        .O1(O1),
        .O2(O2),
        .O3(O3),
        .Q(Q),
        .clk(clk),
        .srst(srst));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module axi_dwidth_converter_0_wr_logic__parameterized2_28
   (p_1_out,
    full,
    O1,
    Q,
    O2,
    E,
    O3,
    ram_full_i,
    clk,
    I1,
    wr_en,
    srst);
  output p_1_out;
  output full;
  output O1;
  output [4:0]Q;
  output O2;
  output [0:0]E;
  output [4:0]O3;
  input ram_full_i;
  input clk;
  input [3:0]I1;
  input wr_en;
  input srst;

  wire [0:0]E;
  wire [3:0]I1;
  wire O1;
  wire O2;
  wire [4:0]O3;
  wire [4:0]Q;
  wire clk;
  wire full;
  wire p_1_out;
  wire ram_full_i;
  wire srst;
  wire wr_en;

axi_dwidth_converter_0_wr_status_flags_ss_29 \gwss.wsts 
       (.E(E),
        .clk(clk),
        .full(full),
        .p_1_out(p_1_out),
        .ram_full_i(ram_full_i),
        .wr_en(wr_en));
axi_dwidth_converter_0_wr_bin_cntr__parameterized0_30 wpntr
       (.E(E),
        .I1(I1),
        .O1(O1),
        .O2(O2),
        .O3(O3),
        .Q(Q),
        .clk(clk),
        .srst(srst));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module axi_dwidth_converter_0_wr_logic__parameterized3
   (full,
    O1,
    O2,
    O3,
    O4,
    O5,
    O6,
    O7,
    O8,
    O9,
    O10,
    O11,
    O12,
    O13,
    O14,
    O15,
    O16,
    O17,
    O18,
    I1,
    wr_clk,
    Q,
    wr_en,
    RD_PNTR_WR);
  output full;
  output O1;
  output [8:0]O2;
  output O3;
  output O4;
  output O5;
  output O6;
  output O7;
  output O8;
  output O9;
  output O10;
  output O11;
  output O12;
  output O13;
  output O14;
  output O15;
  output O16;
  output O17;
  output [0:0]O18;
  input [0:0]I1;
  input wr_clk;
  input [1:0]Q;
  input wr_en;
  input [8:0]RD_PNTR_WR;

  wire [0:0]I1;
  wire O1;
  wire O10;
  wire O11;
  wire O12;
  wire O13;
  wire O14;
  wire O15;
  wire O16;
  wire O17;
  wire [0:0]O18;
  wire [8:0]O2;
  wire O3;
  wire O4;
  wire O5;
  wire O6;
  wire O7;
  wire O8;
  wire O9;
  wire [1:0]Q;
  wire [8:0]RD_PNTR_WR;
  wire [4:0]\c1/v1_reg ;
  wire [3:0]\c2/v1_reg ;
  wire comp1;
  wire comp2;
  wire full;
  wire n_0_wpntr;
  wire \n_4_gwas.wsts ;
  wire p_0_out;
  wire wr_clk;
  wire wr_en;

axi_dwidth_converter_0_wr_status_flags_as__parameterized1 \gwas.wsts 
       (.E(\n_4_gwas.wsts ),
        .I1(I1),
        .I2(n_0_wpntr),
        .Q(Q[0]),
        .comp1(comp1),
        .comp2(comp2),
        .full(full),
        .p_0_out(p_0_out),
        .v1_reg(\c1/v1_reg ),
        .v1_reg_0(\c2/v1_reg ),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
axi_dwidth_converter_0_wr_bin_cntr__parameterized1 wpntr
       (.E(\n_4_gwas.wsts ),
        .I1(Q[1]),
        .O1(n_0_wpntr),
        .O10(O10),
        .O11(O11),
        .O12(O12),
        .O13(O13),
        .O14(O14),
        .O15(O15),
        .O16(O16),
        .O17(O17),
        .O18(O18),
        .O2(O1),
        .O3(O3),
        .O4(O4),
        .O5(O5),
        .O6(O6),
        .O7(O7),
        .O8(O8),
        .O9(O9),
        .Q(O2),
        .RD_PNTR_WR(RD_PNTR_WR),
        .comp1(comp1),
        .comp2(comp2),
        .p_0_out(p_0_out),
        .v1_reg(\c1/v1_reg ),
        .v1_reg_0(\c2/v1_reg ),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module axi_dwidth_converter_0_wr_status_flags_as
   (p_0_out,
    E,
    s_axi_awready,
    ram_full_i,
    s_aclk,
    rst_d2,
    s_axi_awvalid);
  output p_0_out;
  output [0:0]E;
  output s_axi_awready;
  input ram_full_i;
  input s_aclk;
  input rst_d2;
  input s_axi_awvalid;

  wire [0:0]E;
  wire p_0_out;
  wire ram_full_i;
  wire ram_full_i__0;
  wire rst_d2;
  wire s_aclk;
  wire s_axi_awready;
  wire s_axi_awvalid;

LUT2 #(
    .INIT(4'h2)) 
     \gic0.gc0.count_d1[4]_i_1 
       (.I0(s_axi_awvalid),
        .I1(p_0_out),
        .O(E));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     ram_full_fb_i_reg
       (.C(s_aclk),
        .CE(1'b1),
        .D(ram_full_i),
        .PRE(rst_d2),
        .Q(p_0_out));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     ram_full_i_reg
       (.C(s_aclk),
        .CE(1'b1),
        .D(ram_full_i),
        .PRE(rst_d2),
        .Q(ram_full_i__0));
LUT1 #(
    .INIT(2'h1)) 
     s_axi_awready_INST_0
       (.I0(ram_full_i__0),
        .O(s_axi_awready));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module axi_dwidth_converter_0_wr_status_flags_as_36
   (p_0_out,
    E,
    s_axi_arready,
    ram_full_i,
    s_aclk,
    rst_d2,
    s_axi_arvalid);
  output p_0_out;
  output [0:0]E;
  output s_axi_arready;
  input ram_full_i;
  input s_aclk;
  input rst_d2;
  input s_axi_arvalid;

  wire [0:0]E;
  wire p_0_out;
  wire ram_full_i;
  wire ram_full_i__0;
  wire rst_d2;
  wire s_aclk;
  wire s_axi_arready;
  wire s_axi_arvalid;

LUT2 #(
    .INIT(4'h2)) 
     \gic0.gc0.count_d1[4]_i_1 
       (.I0(s_axi_arvalid),
        .I1(p_0_out),
        .O(E));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     ram_full_fb_i_reg
       (.C(s_aclk),
        .CE(1'b1),
        .D(ram_full_i),
        .PRE(rst_d2),
        .Q(p_0_out));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     ram_full_i_reg
       (.C(s_aclk),
        .CE(1'b1),
        .D(ram_full_i),
        .PRE(rst_d2),
        .Q(ram_full_i__0));
LUT1 #(
    .INIT(2'h1)) 
     s_axi_arready_INST_0
       (.I0(ram_full_i__0),
        .O(s_axi_arready));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module axi_dwidth_converter_0_wr_status_flags_as_50
   (p_0_out,
    E,
    m_axi_bready,
    ram_full_i,
    m_aclk,
    rst_d2,
    m_axi_bvalid);
  output p_0_out;
  output [0:0]E;
  output m_axi_bready;
  input ram_full_i;
  input m_aclk;
  input rst_d2;
  input m_axi_bvalid;

  wire [0:0]E;
  wire m_aclk;
  wire m_axi_bready;
  wire m_axi_bvalid;
  wire p_0_out;
  wire ram_full_i;
  wire ram_full_i__0;
  wire rst_d2;

LUT2 #(
    .INIT(4'h2)) 
     \gic0.gc0.count_d1[4]_i_1 
       (.I0(m_axi_bvalid),
        .I1(p_0_out),
        .O(E));
LUT1 #(
    .INIT(2'h1)) 
     m_axi_bready_INST_0
       (.I0(ram_full_i__0),
        .O(m_axi_bready));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     ram_full_fb_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(ram_full_i),
        .PRE(rst_d2),
        .Q(p_0_out));
(* equivalent_register_removal = "no" *) 
   FDPE #(
    .INIT(1'b1)) 
     ram_full_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(ram_full_i),
        .PRE(rst_d2),
        .Q(ram_full_i__0));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module axi_dwidth_converter_0_wr_status_flags_as__parameterized0
   (full,
    p_0_out,
    E,
    I1,
    wr_clk,
    Q,
    wr_en);
  output full;
  output p_0_out;
  output [0:0]E;
  input I1;
  input wr_clk;
  input [0:0]Q;
  input wr_en;

  wire [0:0]E;
  wire I1;
  wire [0:0]Q;
  wire full;
  wire p_0_out;
  wire wr_clk;
  wire wr_en;

LUT2 #(
    .INIT(4'h2)) 
     \gic0.gc0.count_d1[4]_i_1 
       (.I0(wr_en),
        .I1(p_0_out),
        .O(E));
(* equivalent_register_removal = "no" *) 
   FDCE #(
    .INIT(1'b0)) 
     ram_full_fb_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(Q),
        .D(I1),
        .Q(p_0_out));
(* equivalent_register_removal = "no" *) 
   FDCE #(
    .INIT(1'b0)) 
     ram_full_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(Q),
        .D(I1),
        .Q(full));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module axi_dwidth_converter_0_wr_status_flags_as__parameterized1
   (comp1,
    comp2,
    full,
    p_0_out,
    E,
    v1_reg,
    v1_reg_0,
    I1,
    I2,
    wr_clk,
    Q,
    wr_en);
  output comp1;
  output comp2;
  output full;
  output p_0_out;
  output [0:0]E;
  input [4:0]v1_reg;
  input [3:0]v1_reg_0;
  input [0:0]I1;
  input I2;
  input wr_clk;
  input [0:0]Q;
  input wr_en;

  wire [0:0]E;
  wire [0:0]I1;
  wire I2;
  wire [0:0]Q;
  wire comp1;
  wire comp2;
  wire full;
  wire p_0_out;
  wire [4:0]v1_reg;
  wire [3:0]v1_reg_0;
  wire wr_clk;
  wire wr_en;

axi_dwidth_converter_0_compare__parameterized0 c1
       (.comp1(comp1),
        .v1_reg(v1_reg));
axi_dwidth_converter_0_compare__parameterized0_18 c2
       (.I1(I1),
        .comp2(comp2),
        .v1_reg_0(v1_reg_0));
LUT2 #(
    .INIT(4'h2)) 
     \gic0.gc0.count_d1[8]_i_1 
       (.I0(wr_en),
        .I1(p_0_out),
        .O(E));
(* equivalent_register_removal = "no" *) 
   FDCE #(
    .INIT(1'b0)) 
     ram_full_fb_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(Q),
        .D(I2),
        .Q(p_0_out));
(* equivalent_register_removal = "no" *) 
   FDCE #(
    .INIT(1'b0)) 
     ram_full_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(Q),
        .D(I2),
        .Q(full));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_ss" *) 
module axi_dwidth_converter_0_wr_status_flags_ss
   (p_1_out,
    full,
    E,
    ram_full_i,
    clk,
    wr_en);
  output p_1_out;
  output full;
  output [0:0]E;
  input ram_full_i;
  input clk;
  input wr_en;

  wire [0:0]E;
  wire clk;
  wire full;
  wire p_1_out;
  wire ram_full_i;
  wire wr_en;

LUT2 #(
    .INIT(4'h2)) 
     \gcc0.gc0.count_d1[4]_i_1 
       (.I0(wr_en),
        .I1(p_1_out),
        .O(E));
(* equivalent_register_removal = "no" *) 
   FDRE #(
    .INIT(1'b0)) 
     ram_full_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_full_i),
        .Q(p_1_out),
        .R(1'b0));
(* equivalent_register_removal = "no" *) 
   FDRE #(
    .INIT(1'b0)) 
     ram_full_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_full_i),
        .Q(full),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_ss" *) 
module axi_dwidth_converter_0_wr_status_flags_ss_29
   (p_1_out,
    full,
    E,
    ram_full_i,
    clk,
    wr_en);
  output p_1_out;
  output full;
  output [0:0]E;
  input ram_full_i;
  input clk;
  input wr_en;

  wire [0:0]E;
  wire clk;
  wire full;
  wire p_1_out;
  wire ram_full_i;
  wire wr_en;

LUT2 #(
    .INIT(4'h2)) 
     \gcc0.gc0.count_d1[4]_i_1 
       (.I0(wr_en),
        .I1(p_1_out),
        .O(E));
(* equivalent_register_removal = "no" *) 
   FDRE #(
    .INIT(1'b0)) 
     ram_full_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_full_i),
        .Q(p_1_out),
        .R(1'b0));
(* equivalent_register_removal = "no" *) 
   FDRE #(
    .INIT(1'b0)) 
     ram_full_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_full_i),
        .Q(full),
        .R(1'b0));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (weak1, weak0) GSR = GSR_int;
    assign (weak1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
